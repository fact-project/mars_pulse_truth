//
// File generated by rootcint at Mon Nov 28 11:07:44 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME JobsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JobsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MSequence_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSequence(void *p = 0);
   static void *newArray_MSequence(Long_t size, void *p);
   static void delete_MSequence(void *p);
   static void deleteArray_MSequence(void *p);
   static void destruct_MSequence(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSequence*)
   {
      ::MSequence *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSequence >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSequence", ::MSequence::Class_Version(), "./MSequence.h", 15,
                  typeid(::MSequence), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSequence::Dictionary, isa_proxy, 4,
                  sizeof(::MSequence) );
      instance.SetNew(&new_MSequence);
      instance.SetNewArray(&newArray_MSequence);
      instance.SetDelete(&delete_MSequence);
      instance.SetDeleteArray(&deleteArray_MSequence);
      instance.SetDestructor(&destruct_MSequence);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSequence*)
   {
      return GenerateInitInstanceLocal((::MSequence*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSequence*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSequenceSQL_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MSequenceSQL(void *p);
   static void deleteArray_MSequenceSQL(void *p);
   static void destruct_MSequenceSQL(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSequenceSQL*)
   {
      ::MSequenceSQL *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSequenceSQL >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSequenceSQL", ::MSequenceSQL::Class_Version(), "./MSequenceSQL.h", 14,
                  typeid(::MSequenceSQL), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSequenceSQL::Dictionary, isa_proxy, 4,
                  sizeof(::MSequenceSQL) );
      instance.SetDelete(&delete_MSequenceSQL);
      instance.SetDeleteArray(&deleteArray_MSequenceSQL);
      instance.SetDestructor(&destruct_MSequenceSQL);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSequenceSQL*)
   {
      return GenerateInitInstanceLocal((::MSequenceSQL*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSequenceSQL*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataSet(void *p = 0);
   static void *newArray_MDataSet(Long_t size, void *p);
   static void delete_MDataSet(void *p);
   static void deleteArray_MDataSet(void *p);
   static void destruct_MDataSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataSet*)
   {
      ::MDataSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataSet", ::MDataSet::Class_Version(), "./MDataSet.h", 20,
                  typeid(::MDataSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataSet::Dictionary, isa_proxy, 4,
                  sizeof(::MDataSet) );
      instance.SetNew(&new_MDataSet);
      instance.SetNewArray(&newArray_MDataSet);
      instance.SetDelete(&delete_MDataSet);
      instance.SetDeleteArray(&deleteArray_MDataSet);
      instance.SetDestructor(&destruct_MDataSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataSet*)
   {
      return GenerateInitInstanceLocal((::MDataSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJob_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJob(void *p = 0);
   static void *newArray_MJob(Long_t size, void *p);
   static void delete_MJob(void *p);
   static void deleteArray_MJob(void *p);
   static void destruct_MJob(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJob*)
   {
      ::MJob *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJob >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJob", ::MJob::Class_Version(), "./MJob.h", 12,
                  typeid(::MJob), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJob::Dictionary, isa_proxy, 4,
                  sizeof(::MJob) );
      instance.SetNew(&new_MJob);
      instance.SetNewArray(&newArray_MJob);
      instance.SetDelete(&delete_MJob);
      instance.SetDeleteArray(&deleteArray_MJob);
      instance.SetDestructor(&destruct_MJob);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJob*)
   {
      return GenerateInitInstanceLocal((::MJob*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJob*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJSimulation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJSimulation(void *p = 0);
   static void *newArray_MJSimulation(Long_t size, void *p);
   static void delete_MJSimulation(void *p);
   static void deleteArray_MJSimulation(void *p);
   static void destruct_MJSimulation(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJSimulation*)
   {
      ::MJSimulation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJSimulation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJSimulation", ::MJSimulation::Class_Version(), "./MJSimulation.h", 17,
                  typeid(::MJSimulation), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJSimulation::Dictionary, isa_proxy, 4,
                  sizeof(::MJSimulation) );
      instance.SetNew(&new_MJSimulation);
      instance.SetNewArray(&newArray_MJSimulation);
      instance.SetDelete(&delete_MJSimulation);
      instance.SetDeleteArray(&deleteArray_MJSimulation);
      instance.SetDestructor(&destruct_MJSimulation);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJSimulation*)
   {
      return GenerateInitInstanceLocal((::MJSimulation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJSimulation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJSimReflector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJSimReflector(void *p = 0);
   static void *newArray_MJSimReflector(Long_t size, void *p);
   static void delete_MJSimReflector(void *p);
   static void deleteArray_MJSimReflector(void *p);
   static void destruct_MJSimReflector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJSimReflector*)
   {
      ::MJSimReflector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJSimReflector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJSimReflector", ::MJSimReflector::Class_Version(), "./MJSimReflector.h", 17,
                  typeid(::MJSimReflector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJSimReflector::Dictionary, isa_proxy, 4,
                  sizeof(::MJSimReflector) );
      instance.SetNew(&new_MJSimReflector);
      instance.SetNewArray(&newArray_MJSimReflector);
      instance.SetDelete(&delete_MJSimReflector);
      instance.SetDeleteArray(&deleteArray_MJSimReflector);
      instance.SetDestructor(&destruct_MJSimReflector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJSimReflector*)
   {
      return GenerateInitInstanceLocal((::MJSimReflector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJSimReflector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJCalib(void *p = 0);
   static void *newArray_MJCalib(Long_t size, void *p);
   static void delete_MJCalib(void *p);
   static void deleteArray_MJCalib(void *p);
   static void destruct_MJCalib(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJCalib*)
   {
      ::MJCalib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJCalib >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJCalib", ::MJCalib::Class_Version(), "./MJCalib.h", 11,
                  typeid(::MJCalib), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJCalib::Dictionary, isa_proxy, 4,
                  sizeof(::MJCalib) );
      instance.SetNew(&new_MJCalib);
      instance.SetNewArray(&newArray_MJCalib);
      instance.SetDelete(&delete_MJCalib);
      instance.SetDeleteArray(&deleteArray_MJCalib);
      instance.SetDestructor(&destruct_MJCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJCalib*)
   {
      return GenerateInitInstanceLocal((::MJCalib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJCalib*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJPedestal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJPedestal(void *p = 0);
   static void *newArray_MJPedestal(Long_t size, void *p);
   static void delete_MJPedestal(void *p);
   static void deleteArray_MJPedestal(void *p);
   static void destruct_MJPedestal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJPedestal*)
   {
      ::MJPedestal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJPedestal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJPedestal", ::MJPedestal::Class_Version(), "./MJPedestal.h", 26,
                  typeid(::MJPedestal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJPedestal::Dictionary, isa_proxy, 4,
                  sizeof(::MJPedestal) );
      instance.SetNew(&new_MJPedestal);
      instance.SetNewArray(&newArray_MJPedestal);
      instance.SetDelete(&delete_MJPedestal);
      instance.SetDeleteArray(&deleteArray_MJPedestal);
      instance.SetDestructor(&destruct_MJPedestal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJPedestal*)
   {
      return GenerateInitInstanceLocal((::MJPedestal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJPedestal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJCalibration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJCalibration(void *p = 0);
   static void *newArray_MJCalibration(Long_t size, void *p);
   static void delete_MJCalibration(void *p);
   static void deleteArray_MJCalibration(void *p);
   static void destruct_MJCalibration(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJCalibration*)
   {
      ::MJCalibration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJCalibration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJCalibration", ::MJCalibration::Class_Version(), "./MJCalibration.h", 43,
                  typeid(::MJCalibration), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJCalibration::Dictionary, isa_proxy, 4,
                  sizeof(::MJCalibration) );
      instance.SetNew(&new_MJCalibration);
      instance.SetNewArray(&newArray_MJCalibration);
      instance.SetDelete(&delete_MJCalibration);
      instance.SetDeleteArray(&deleteArray_MJCalibration);
      instance.SetDestructor(&destruct_MJCalibration);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJCalibration*)
   {
      return GenerateInitInstanceLocal((::MJCalibration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJCalibration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJCalibrateSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJCalibrateSignal(void *p = 0);
   static void *newArray_MJCalibrateSignal(Long_t size, void *p);
   static void delete_MJCalibrateSignal(void *p);
   static void deleteArray_MJCalibrateSignal(void *p);
   static void destruct_MJCalibrateSignal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJCalibrateSignal*)
   {
      ::MJCalibrateSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJCalibrateSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJCalibrateSignal", ::MJCalibrateSignal::Class_Version(), "./MJCalibrateSignal.h", 20,
                  typeid(::MJCalibrateSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJCalibrateSignal::Dictionary, isa_proxy, 4,
                  sizeof(::MJCalibrateSignal) );
      instance.SetNew(&new_MJCalibrateSignal);
      instance.SetNewArray(&newArray_MJCalibrateSignal);
      instance.SetDelete(&delete_MJCalibrateSignal);
      instance.SetDeleteArray(&deleteArray_MJCalibrateSignal);
      instance.SetDestructor(&destruct_MJCalibrateSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJCalibrateSignal*)
   {
      return GenerateInitInstanceLocal((::MJCalibrateSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJCalibrateSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJMerpp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJMerpp(void *p = 0);
   static void *newArray_MJMerpp(Long_t size, void *p);
   static void delete_MJMerpp(void *p);
   static void deleteArray_MJMerpp(void *p);
   static void destruct_MJMerpp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJMerpp*)
   {
      ::MJMerpp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJMerpp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJMerpp", ::MJMerpp::Class_Version(), "./MJMerpp.h", 14,
                  typeid(::MJMerpp), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJMerpp::Dictionary, isa_proxy, 4,
                  sizeof(::MJMerpp) );
      instance.SetNew(&new_MJMerpp);
      instance.SetNewArray(&newArray_MJMerpp);
      instance.SetDelete(&delete_MJMerpp);
      instance.SetDeleteArray(&deleteArray_MJMerpp);
      instance.SetDestructor(&destruct_MJMerpp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJMerpp*)
   {
      return GenerateInitInstanceLocal((::MJMerpp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJMerpp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJStar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJStar(void *p = 0);
   static void *newArray_MJStar(Long_t size, void *p);
   static void delete_MJStar(void *p);
   static void deleteArray_MJStar(void *p);
   static void destruct_MJStar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJStar*)
   {
      ::MJStar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJStar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJStar", ::MJStar::Class_Version(), "./MJStar.h", 9,
                  typeid(::MJStar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJStar::Dictionary, isa_proxy, 4,
                  sizeof(::MJStar) );
      instance.SetNew(&new_MJStar);
      instance.SetNewArray(&newArray_MJStar);
      instance.SetDelete(&delete_MJStar);
      instance.SetDeleteArray(&deleteArray_MJStar);
      instance.SetDestructor(&destruct_MJStar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJStar*)
   {
      return GenerateInitInstanceLocal((::MJStar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJStar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJCut(void *p = 0);
   static void *newArray_MJCut(Long_t size, void *p);
   static void delete_MJCut(void *p);
   static void deleteArray_MJCut(void *p);
   static void destruct_MJCut(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJCut*)
   {
      ::MJCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJCut", ::MJCut::Class_Version(), "./MJCut.h", 18,
                  typeid(::MJCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJCut::Dictionary, isa_proxy, 4,
                  sizeof(::MJCut) );
      instance.SetNew(&new_MJCut);
      instance.SetNewArray(&newArray_MJCut);
      instance.SetDelete(&delete_MJCut);
      instance.SetDeleteArray(&deleteArray_MJCut);
      instance.SetDestructor(&destruct_MJCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJCut*)
   {
      return GenerateInitInstanceLocal((::MJCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MJSpectrum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MJSpectrum(void *p = 0);
   static void *newArray_MJSpectrum(Long_t size, void *p);
   static void delete_MJSpectrum(void *p);
   static void deleteArray_MJSpectrum(void *p);
   static void destruct_MJSpectrum(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MJSpectrum*)
   {
      ::MJSpectrum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MJSpectrum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MJSpectrum", ::MJSpectrum::Class_Version(), "./MJSpectrum.h", 26,
                  typeid(::MJSpectrum), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MJSpectrum::Dictionary, isa_proxy, 4,
                  sizeof(::MJSpectrum) );
      instance.SetNew(&new_MJSpectrum);
      instance.SetNewArray(&newArray_MJSpectrum);
      instance.SetDelete(&delete_MJSpectrum);
      instance.SetDeleteArray(&deleteArray_MJSpectrum);
      instance.SetDestructor(&destruct_MJSpectrum);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MJSpectrum*)
   {
      return GenerateInitInstanceLocal((::MJSpectrum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MJSpectrum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MSequence::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSequence::Class_Name()
{
   return "MSequence";
}

//______________________________________________________________________________
const char *MSequence::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSequence*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSequence::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSequence*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSequence::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSequence*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSequence::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSequence*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSequenceSQL::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSequenceSQL::Class_Name()
{
   return "MSequenceSQL";
}

//______________________________________________________________________________
const char *MSequenceSQL::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSequenceSQL*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSequenceSQL::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSequenceSQL*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSequenceSQL::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSequenceSQL*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSequenceSQL::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSequenceSQL*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataSet::Class_Name()
{
   return "MDataSet";
}

//______________________________________________________________________________
const char *MDataSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJob::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJob::Class_Name()
{
   return "MJob";
}

//______________________________________________________________________________
const char *MJob::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJob*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJob::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJob*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJob::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJob*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJob::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJob*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJSimulation::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJSimulation::Class_Name()
{
   return "MJSimulation";
}

//______________________________________________________________________________
const char *MJSimulation::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimulation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJSimulation::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimulation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJSimulation::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimulation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJSimulation::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimulation*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJSimReflector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJSimReflector::Class_Name()
{
   return "MJSimReflector";
}

//______________________________________________________________________________
const char *MJSimReflector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimReflector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJSimReflector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimReflector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJSimReflector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimReflector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJSimReflector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSimReflector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJCalib::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJCalib::Class_Name()
{
   return "MJCalib";
}

//______________________________________________________________________________
const char *MJCalib::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalib*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJCalib::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalib*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJCalib::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalib*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJCalib::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalib*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJPedestal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJPedestal::Class_Name()
{
   return "MJPedestal";
}

//______________________________________________________________________________
const char *MJPedestal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJPedestal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJPedestal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJPedestal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJPedestal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJPedestal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJPedestal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJPedestal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJCalibration::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJCalibration::Class_Name()
{
   return "MJCalibration";
}

//______________________________________________________________________________
const char *MJCalibration::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJCalibration::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJCalibration::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJCalibration::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibration*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJCalibrateSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJCalibrateSignal::Class_Name()
{
   return "MJCalibrateSignal";
}

//______________________________________________________________________________
const char *MJCalibrateSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibrateSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJCalibrateSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibrateSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJCalibrateSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibrateSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJCalibrateSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCalibrateSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJMerpp::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJMerpp::Class_Name()
{
   return "MJMerpp";
}

//______________________________________________________________________________
const char *MJMerpp::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJMerpp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJMerpp::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJMerpp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJMerpp::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJMerpp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJMerpp::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJMerpp*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJStar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJStar::Class_Name()
{
   return "MJStar";
}

//______________________________________________________________________________
const char *MJStar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJStar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJStar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJStar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJStar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJStar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJStar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJStar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJCut::Class_Name()
{
   return "MJCut";
}

//______________________________________________________________________________
const char *MJCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MJSpectrum::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MJSpectrum::Class_Name()
{
   return "MJSpectrum";
}

//______________________________________________________________________________
const char *MJSpectrum::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSpectrum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MJSpectrum::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MJSpectrum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MJSpectrum::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSpectrum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MJSpectrum::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MJSpectrum*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MSequence::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSequence.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSequence::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSequence::Class(),this);
   }
}

//______________________________________________________________________________
void MSequence::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSequence.
      TClass *R__cl = ::MSequence::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataPath", &fDataPath);
      R__insp.InspectMember(fDataPath, "fDataPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelescope", &fTelescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSequence", &fSequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.InspectMember(fStart, "fStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastRun", &fLastRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvents", &fNumEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPeriod", &fPeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNight", &fNight);
      R__insp.InspectMember(fNight, "fNight.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrsSequence", &fDrsSequence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLightCondition", &fLightCondition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProject", &fProject);
      R__insp.InspectMember(fProject, "fProject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &fSource);
      R__insp.InspectMember(fSource, "fSource.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerTable", &fTriggerTable);
      R__insp.InspectMember(fTriggerTable, "fTriggerTable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHvSettings", &fHvSettings);
      R__insp.InspectMember(fHvSettings, "fHvSettings.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment", &fComment);
      R__insp.InspectMember(fComment, "fComment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRuns", &fRuns);
      R__insp.InspectMember(fRuns, "fRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunsSub", &fRunsSub);
      R__insp.InspectMember(fRunsSub, "fRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalRuns", &fCalRuns);
      R__insp.InspectMember(fCalRuns, "fCalRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalRunsSub", &fCalRunsSub);
      R__insp.InspectMember(fCalRunsSub, "fCalRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedRuns", &fPedRuns);
      R__insp.InspectMember(fPedRuns, "fPedRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedRunsSub", &fPedRunsSub);
      R__insp.InspectMember(fPedRunsSub, "fPedRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatRuns", &fDatRuns);
      R__insp.InspectMember(fDatRuns, "fDatRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDatRunsSub", &fDatRunsSub);
      R__insp.InspectMember(fDatRunsSub, "fDatRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrsRuns", &fDrsRuns);
      R__insp.InspectMember(fDrsRuns, "fDrsRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrsRunsSub", &fDrsRunsSub);
      R__insp.InspectMember(fDrsRunsSub, "fDrsRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrsFiles", &fDrsFiles);
      R__insp.InspectMember(fDrsFiles, "fDrsFiles.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrsFilesSub", &fDrsFilesSub);
      R__insp.InspectMember(fDrsFilesSub, "fDrsFilesSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExclRuns", &fExclRuns);
      R__insp.InspectMember(fExclRuns, "fExclRuns.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExclRunsSub", &fExclRunsSub);
      R__insp.InspectMember(fExclRunsSub, "fExclRunsSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMonteCarlo", &fMonteCarlo);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSequence(void *p) {
      return  p ? new(p) ::MSequence : new ::MSequence;
   }
   static void *newArray_MSequence(Long_t nElements, void *p) {
      return p ? new(p) ::MSequence[nElements] : new ::MSequence[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSequence(void *p) {
      delete ((::MSequence*)p);
   }
   static void deleteArray_MSequence(void *p) {
      delete [] ((::MSequence*)p);
   }
   static void destruct_MSequence(void *p) {
      typedef ::MSequence current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSequence

//______________________________________________________________________________
void MSequenceSQL::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSequenceSQL.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSequenceSQL::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSequenceSQL::Class(),this);
   }
}

//______________________________________________________________________________
void MSequenceSQL::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSequenceSQL.
      TClass *R__cl = ::MSequenceSQL::IsA();
      if (R__cl || R__insp.IsA()) { }
      MSequence::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MSequenceSQL(void *p) {
      delete ((::MSequenceSQL*)p);
   }
   static void deleteArray_MSequenceSQL(void *p) {
      delete [] ((::MSequenceSQL*)p);
   }
   static void destruct_MSequenceSQL(void *p) {
      typedef ::MSequenceSQL current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSequenceSQL

//______________________________________________________________________________
void MDataSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataSet::Class(),this);
   }
}

//______________________________________________________________________________
void MDataSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataSet.
      TClass *R__cl = ::MDataSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSet", &fDataSet);
      R__insp.InspectMember(fDataSet, "fDataSet.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumAnalysis", &fNumAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPathSequences", &fPathSequences);
      R__insp.InspectMember(fPathSequences, "fPathSequences.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPathDataFiles", &fPathDataFiles);
      R__insp.InspectMember(fPathDataFiles, "fPathDataFiles.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSequencesOn", &fNumSequencesOn);
      R__insp.InspectMember(fNumSequencesOn, "fNumSequencesOn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSequencesOff", &fNumSequencesOff);
      R__insp.InspectMember(fNumSequencesOff, "fNumSequencesOff.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSequencesOn", &fSequencesOn);
      R__insp.InspectMember(fSequencesOn, "fSequencesOn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSequencesOff", &fSequencesOff);
      R__insp.InspectMember(fSequencesOff, "fSequencesOff.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSource", &fNameSource);
      R__insp.InspectMember(fNameSource, "fNameSource.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCatalog", &fCatalog);
      R__insp.InspectMember(fCatalog, "fCatalog.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment", &fComment);
      R__insp.InspectMember(fComment, "fComment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWobbleMode", &fWobbleMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMonteCarlo", &fMonteCarlo);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataSet(void *p) {
      return  p ? new(p) ::MDataSet : new ::MDataSet;
   }
   static void *newArray_MDataSet(Long_t nElements, void *p) {
      return p ? new(p) ::MDataSet[nElements] : new ::MDataSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataSet(void *p) {
      delete ((::MDataSet*)p);
   }
   static void deleteArray_MDataSet(void *p) {
      delete [] ((::MDataSet*)p);
   }
   static void destruct_MDataSet(void *p) {
      typedef ::MDataSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataSet

//______________________________________________________________________________
void MJob::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJob.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJob::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJob::Class(),this);
   }
}

//______________________________________________________________________________
void MJob::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJob.
      TClass *R__cl = ::MJob::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnv", &fEnv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvPrefix", &fEnvPrefix);
      R__insp.InspectMember(fEnvPrefix, "fEnvPrefix.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvDebug", &fEnvDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPathOut", &fPathOut);
      R__insp.InspectMember(fPathOut, "fPathOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPathIn", &fPathIn);
      R__insp.InspectMember(fPathIn, "fPathIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOverwrite", &fOverwrite);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxEvents", &fMaxEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNullOut", &fNullOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSequence", &fSequence);
      R__insp.InspectMember(fSequence, "fSequence.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCommandLine", &fCommandLine);
      R__insp.InspectMember(fCommandLine, "fCommandLine.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJob(void *p) {
      return  p ? new(p) ::MJob : new ::MJob;
   }
   static void *newArray_MJob(Long_t nElements, void *p) {
      return p ? new(p) ::MJob[nElements] : new ::MJob[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJob(void *p) {
      delete ((::MJob*)p);
   }
   static void deleteArray_MJob(void *p) {
      delete [] ((::MJob*)p);
   }
   static void destruct_MJob(void *p) {
      typedef ::MJob current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJob

//______________________________________________________________________________
void MJCalib::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJCalib.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJCalib::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJCalib::Class(),this);
   }
}

//______________________________________________________________________________
void MJCalib::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJCalib.
      TClass *R__cl = ::MJCalib::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStorage", &fStorage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDevices", &fDevices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPixelCheck", &fIsPixelCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckedPixId", &fCheckedPixId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPulsePosCheck", &fIsPulsePosCheck);
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJCalib(void *p) {
      return  p ? new(p) ::MJCalib : new ::MJCalib;
   }
   static void *newArray_MJCalib(Long_t nElements, void *p) {
      return p ? new(p) ::MJCalib[nElements] : new ::MJCalib[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJCalib(void *p) {
      delete ((::MJCalib*)p);
   }
   static void deleteArray_MJCalib(void *p) {
      delete [] ((::MJCalib*)p);
   }
   static void destruct_MJCalib(void *p) {
      typedef ::MJCalib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJCalib

//______________________________________________________________________________
void MJCalibration::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJCalibration.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJCalibration::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJCalibration::Class(),this);
   }
}

//______________________________________________________________________________
void MJCalibration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJCalibration.
      TClass *R__cl = ::MJCalibration::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConvFADC2PheMin", &fConvFADC2PheMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConvFADC2PheMax", &fConvFADC2PheMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConvFADC2PhotMin", &fConvFADC2PhotMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConvFADC2PhotMax", &fConvFADC2PhotMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQEMin", &fQEMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQEMax", &fQEMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArrivalTimeMin", &fArrivalTimeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArrivalTimeMax", &fArrivalTimeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffsetMin", &fTimeOffsetMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffsetMax", &fTimeOffsetMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeResolutionMin", &fTimeResolutionMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeResolutionMax", &fTimeResolutionMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefFADC2PheInner", &fRefFADC2PheInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefFADC2PheOuter", &fRefFADC2PheOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefConvFADC2PhotInner", &fRefConvFADC2PhotInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefConvFADC2PhotOuter", &fRefConvFADC2PhotOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefConvFADC2PheInner", &fRefConvFADC2PheInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefConvFADC2PheOuter", &fRefConvFADC2PheOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefQEInner", &fRefQEInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefQEOuter", &fRefQEOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefArrivalTimeInner", &fRefArrivalTimeInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefArrivalTimeOuter", &fRefArrivalTimeOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefArrivalTimeRmsInner", &fRefArrivalTimeRmsInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefArrivalTimeRmsOuter", &fRefArrivalTimeRmsOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefTimeOffsetOuter", &fRefTimeOffsetOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefTimeResolutionInner", &fRefTimeResolutionInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefTimeResolutionOuter", &fRefTimeResolutionOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReferenceFile", &fReferenceFile);
      R__insp.InspectMember(fReferenceFile, "fReferenceFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiLoCalibFile", &fHiLoCalibFile);
      R__insp.InspectMember(fHiLoCalibFile, "fHiLoCalibFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractor", &fExtractor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeExtractor", &fTimeExtractor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBadPixels", &fBadPixels);
      R__insp.InspectMember(fBadPixels, "fBadPixels.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibrationCam", &fCalibrationCam);
      R__insp.InspectMember(fCalibrationCam, "fCalibrationCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibrationBlindCam", &fCalibrationBlindCam);
      R__insp.InspectMember(fCalibrationBlindCam, "fCalibrationBlindCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibrationPINDiode", &fCalibrationPINDiode);
      R__insp.InspectMember(fCalibrationPINDiode, "fCalibrationPINDiode.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQECam", &fQECam);
      R__insp.InspectMember(fQECam, "fQECam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRelTimeCam", &fRelTimeCam);
      R__insp.InspectMember(fRelTimeCam, "fRelTimeCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractorCam", &fExtractorCam);
      R__insp.InspectMember(fExtractorCam, "fExtractorCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColor", &fColor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayType", &fDisplayType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlags", &fFlags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinEvents", &fMinEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeometry", &fGeometry);
      R__insp.InspectMember(fGeometry, "fGeometry.");
      MJCalib::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJCalibration(void *p) {
      return  p ? new(p) ::MJCalibration : new ::MJCalibration;
   }
   static void *newArray_MJCalibration(Long_t nElements, void *p) {
      return p ? new(p) ::MJCalibration[nElements] : new ::MJCalibration[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJCalibration(void *p) {
      delete ((::MJCalibration*)p);
   }
   static void deleteArray_MJCalibration(void *p) {
      delete [] ((::MJCalibration*)p);
   }
   static void destruct_MJCalibration(void *p) {
      typedef ::MJCalibration current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJCalibration

//______________________________________________________________________________
void MJCalibrateSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJCalibrateSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJCalibrateSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJCalibrateSignal::Class(),this);
   }
}

//______________________________________________________________________________
void MJCalibrateSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJCalibrateSignal.
      TClass *R__cl = ::MJCalibrateSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractor", &fExtractor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsInterlaced", &fIsInterlaced);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRelTimesUpdate", &fIsRelTimesUpdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMovieMode", &fIsMovieMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTestMode", &fIsTestMode);
      MJCalib::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJCalibrateSignal(void *p) {
      return  p ? new(p) ::MJCalibrateSignal : new ::MJCalibrateSignal;
   }
   static void *newArray_MJCalibrateSignal(Long_t nElements, void *p) {
      return p ? new(p) ::MJCalibrateSignal[nElements] : new ::MJCalibrateSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJCalibrateSignal(void *p) {
      delete ((::MJCalibrateSignal*)p);
   }
   static void deleteArray_MJCalibrateSignal(void *p) {
      delete [] ((::MJCalibrateSignal*)p);
   }
   static void destruct_MJCalibrateSignal(void *p) {
      typedef ::MJCalibrateSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJCalibrateSignal

//______________________________________________________________________________
void MJSimulation::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJSimulation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJSimulation::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJSimulation::Class(),this);
   }
}

//______________________________________________________________________________
void MJSimulation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJSimulation.
      TClass *R__cl = ::MJSimulation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceMode", &fForceMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCamera", &fCamera);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceTrigger", &fForceTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteFitsFile", &fWriteFitsFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOperationMode", &fOperationMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileOut", &fFileOut);
      R__insp.InspectMember(fFileOut, "fFileOut.");
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJSimulation(void *p) {
      return  p ? new(p) ::MJSimulation : new ::MJSimulation;
   }
   static void *newArray_MJSimulation(Long_t nElements, void *p) {
      return p ? new(p) ::MJSimulation[nElements] : new ::MJSimulation[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJSimulation(void *p) {
      delete ((::MJSimulation*)p);
   }
   static void deleteArray_MJSimulation(void *p) {
      delete [] ((::MJSimulation*)p);
   }
   static void destruct_MJSimulation(void *p) {
      typedef ::MJSimulation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJSimulation

//______________________________________________________________________________
void MJSimReflector::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJSimReflector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJSimReflector::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJSimReflector::Class(),this);
   }
}

//______________________________________________________________________________
void MJSimReflector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJSimReflector.
      TClass *R__cl = ::MJSimReflector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceMode", &fForceMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOperationMode", &fOperationMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileOut", &fFileOut);
      R__insp.InspectMember(fFileOut, "fFileOut.");
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJSimReflector(void *p) {
      return  p ? new(p) ::MJSimReflector : new ::MJSimReflector;
   }
   static void *newArray_MJSimReflector(Long_t nElements, void *p) {
      return p ? new(p) ::MJSimReflector[nElements] : new ::MJSimReflector[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJSimReflector(void *p) {
      delete ((::MJSimReflector*)p);
   }
   static void deleteArray_MJSimReflector(void *p) {
      delete [] ((::MJSimReflector*)p);
   }
   static void destruct_MJSimReflector(void *p) {
      typedef ::MJSimReflector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJSimReflector

//______________________________________________________________________________
void MJPedestal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJPedestal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJPedestal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJPedestal::Class(),this);
   }
}

//______________________________________________________________________________
void MJPedestal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJPedestal.
      TClass *R__cl = ::MJPedestal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalMin", &fPedestalMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalMax", &fPedestalMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedRmsMin", &fPedRmsMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedRmsMax", &fPedRmsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedClosedLids", &fRefPedClosedLids);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedExtraGalactic", &fRefPedExtraGalactic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedGalactic", &fRefPedGalactic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsClosedLidsInner", &fRefPedRmsClosedLidsInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsExtraGalacticInner", &fRefPedRmsExtraGalacticInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsGalacticInner", &fRefPedRmsGalacticInner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsClosedLidsOuter", &fRefPedRmsClosedLidsOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsExtraGalacticOuter", &fRefPedRmsExtraGalacticOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefPedRmsGalacticOuter", &fRefPedRmsGalacticOuter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractWinLeft", &fExtractWinLeft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractWinRight", &fExtractWinRight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReferenceFile", &fReferenceFile);
      R__insp.InspectMember(fReferenceFile, "fReferenceFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBadPixelsFile", &fBadPixelsFile);
      R__insp.InspectMember(fBadPixelsFile, "fBadPixelsFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractor", &fExtractor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalCamIn", &fPedestalCamIn);
      R__insp.InspectMember(fPedestalCamIn, "fPedestalCamIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalCamOut", &fPedestalCamOut);
      R__insp.InspectMember(fPedestalCamOut, "fPedestalCamOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBadPixels", &fBadPixels);
      R__insp.InspectMember(fBadPixels, "fBadPixels.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayType", &fDisplayType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractType", &fExtractType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractionType", &fExtractionType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeadPixelCheck", &fDeadPixelCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinEvents", &fMinEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinPedestals", &fMinPedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPedestals", &fMaxPedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinCosmics", &fMinCosmics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCosmics", &fMaxCosmics);
      MJCalib::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJPedestal(void *p) {
      return  p ? new(p) ::MJPedestal : new ::MJPedestal;
   }
   static void *newArray_MJPedestal(Long_t nElements, void *p) {
      return p ? new(p) ::MJPedestal[nElements] : new ::MJPedestal[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJPedestal(void *p) {
      delete ((::MJPedestal*)p);
   }
   static void deleteArray_MJPedestal(void *p) {
      delete [] ((::MJPedestal*)p);
   }
   static void destruct_MJPedestal(void *p) {
      typedef ::MJPedestal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJPedestal

//______________________________________________________________________________
void MJStar::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJStar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJStar::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJStar::Class(),this);
   }
}

//______________________________________________________________________________
void MJStar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJStar.
      TClass *R__cl = ::MJStar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMuonAnalysis", &fMuonAnalysis);
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJStar(void *p) {
      return  p ? new(p) ::MJStar : new ::MJStar;
   }
   static void *newArray_MJStar(Long_t nElements, void *p) {
      return p ? new(p) ::MJStar[nElements] : new ::MJStar[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJStar(void *p) {
      delete ((::MJStar*)p);
   }
   static void deleteArray_MJStar(void *p) {
      delete [] ((::MJStar*)p);
   }
   static void destruct_MJStar(void *p) {
      typedef ::MJStar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJStar

//______________________________________________________________________________
void MJCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJCut::Class(),this);
   }
}

//______________________________________________________________________________
void MJCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJCut.
      TClass *R__cl = ::MJCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStoreSummary", &fStoreSummary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStoreResult", &fStoreResult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteOnly", &fWriteOnly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFullDisplay", &fFullDisplay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRndmSrcPos", &fRndmSrcPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumOffSourcePos", &fNumOffSourcePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSummary", &fNameSummary);
      R__insp.InspectMember(fNameSummary, "fNameSummary.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameResult", &fNameResult);
      R__insp.InspectMember(fNameResult, "fNameResult.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameOutput", &fNameOutput);
      R__insp.InspectMember(fNameOutput, "fNameOutput.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameHist", &fNameHist);
      R__insp.InspectMember(fNameHist, "fNameHist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameHistFS", &fNameHistFS);
      R__insp.InspectMember(fNameHistFS, "fNameHistFS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalcHadronness", &fCalcHadronness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalcDisp", &fCalcDisp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEstimateEnergy", &fEstimateEnergy);
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJCut(void *p) {
      return  p ? new(p) ::MJCut : new ::MJCut;
   }
   static void *newArray_MJCut(Long_t nElements, void *p) {
      return p ? new(p) ::MJCut[nElements] : new ::MJCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJCut(void *p) {
      delete ((::MJCut*)p);
   }
   static void deleteArray_MJCut(void *p) {
      delete [] ((::MJCut*)p);
   }
   static void destruct_MJCut(void *p) {
      typedef ::MJCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJCut

//______________________________________________________________________________
void MJSpectrum::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJSpectrum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJSpectrum::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJSpectrum::Class(),this);
   }
}

//______________________________________________________________________________
void MJSpectrum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJSpectrum.
      TClass *R__cl = ::MJSpectrum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutQ", &fCutQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCut0", &fCut0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCut1", &fCut1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCut2", &fCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCut3", &fCut3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutS", &fCutS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEstimateEnergy", &fEstimateEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalcHadronness", &fCalcHadronness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalcDisp", &fCalcDisp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceTheta", &fForceTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceRunTime", &fForceRunTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceOnTimeFit", &fForceOnTimeFit);
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJSpectrum(void *p) {
      return  p ? new(p) ::MJSpectrum : new ::MJSpectrum;
   }
   static void *newArray_MJSpectrum(Long_t nElements, void *p) {
      return p ? new(p) ::MJSpectrum[nElements] : new ::MJSpectrum[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJSpectrum(void *p) {
      delete ((::MJSpectrum*)p);
   }
   static void deleteArray_MJSpectrum(void *p) {
      delete [] ((::MJSpectrum*)p);
   }
   static void destruct_MJSpectrum(void *p) {
      typedef ::MJSpectrum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJSpectrum

//______________________________________________________________________________
void MJMerpp::Streamer(TBuffer &R__b)
{
   // Stream an object of class MJMerpp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MJMerpp::Class(),this);
   } else {
      R__b.WriteClassBuffer(MJMerpp::Class(),this);
   }
}

//______________________________________________________________________________
void MJMerpp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MJMerpp.
      TClass *R__cl = ::MJMerpp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompression", &fCompression);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpdate", &fUpdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInterleave", &fInterleave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceProcessing", &fForceProcessing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTelescope", &fTelescope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeaderRun", &fHeaderRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeaderFile", &fHeaderFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReportRun", &fReportRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReportFile", &fReportFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOnly", &fOnly);
      R__insp.InspectMember(fOnly, "fOnly.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStart", &fTimeStart);
      R__insp.InspectMember(fTimeStart, "fTimeStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStop", &fTimeStop);
      R__insp.InspectMember(fTimeStop, "fTimeStop.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAutoStartTime", &fAutoStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAutoStopTime", &fAutoStopTime);
      MJob::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MJMerpp(void *p) {
      return  p ? new(p) ::MJMerpp : new ::MJMerpp;
   }
   static void *newArray_MJMerpp(Long_t nElements, void *p) {
      return p ? new(p) ::MJMerpp[nElements] : new ::MJMerpp[nElements];
   }
   // Wrapper around operator delete
   static void delete_MJMerpp(void *p) {
      delete ((::MJMerpp*)p);
   }
   static void deleteArray_MJMerpp(void *p) {
      delete [] ((::MJMerpp*)p);
   }
   static void destruct_MJMerpp(void *p) {
      typedef ::MJMerpp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MJMerpp

/********************************************************
* JobsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJobsCint();

extern "C" void G__set_cpp_environmentJobsCint() {
  G__cpp_reset_tagtableJobsCint();
}
#include <new>
extern "C" int G__cpp_dllrevJobsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MSequence */
static int G__JobsCint_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequence* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequence(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSequence(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequence((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSequence((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequence((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSequence((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSequence[n];
       } else {
         p = new((void*) gvp) MSequence[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSequence;
       } else {
         p = new((void*) gvp) MSequence;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequence));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequence* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequence(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSequence(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequence((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSequence((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequence));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequence* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MSequence(*(MSequence*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MSequence(*(MSequence*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequence));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsCompatible(*(MSequence*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsIdentical(*(MSequence*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->operator==(*(MSequence*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->ReadDatabase(*((TString*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->ReadDatabase(*((TString*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->ReadDatabase(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->SetDataPath((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MSequence*) G__getstructoffset())->SetDataPath());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSequence*) G__getstructoffset())->SetDrsSequence((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSequence*) G__getstructoffset())->SetDrsSequence();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MSequence*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref, (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MSequence*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsMonteCarlo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsExcluded((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->IsContained((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSequence*) G__getstructoffset())->SetNight((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MSequence*) G__getstructoffset())->AddRun((UInt_t) G__int(libp->para[0]), (MSequence::RunType_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MSequence*) G__getstructoffset())->AddRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MSequence*) G__getstructoffset())->AddRuns((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (MSequence::RunType_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MSequence*) G__getstructoffset())->AddRuns((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MSequence*) G__getstructoffset())->AddFile((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (MSequence::RunType_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MSequence*) G__getstructoffset())->AddFile((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MSequence*) G__getstructoffset())->AddFiles((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (MSequence::RunType_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MSequence*) G__getstructoffset())->AddFiles((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MSequence*) G__getstructoffset())->ExcludeFile((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MSequence*) G__getstructoffset())->ExcludeFile((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSequence*) G__getstructoffset())->ExcludeRuns(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSequence*) G__getstructoffset())->SetMonteCarlo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSequence*) G__getstructoffset())->SetMonteCarlo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetNumExclRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const MSequence*) G__getstructoffset())->GetTelescope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetSequence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetLastRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetPeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetDrsSequence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetDrsFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSequence*) G__getstructoffset())->HasMoon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MSequence*) G__getstructoffset())->GetFile((UInt_t) G__int(libp->para[0]), (MSequence::RunType_t) G__int(libp->para[1])
, *(UInt_t*) G__UIntref(&libp->para[2]), *(UInt_t*) G__UIntref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MSequence*) G__getstructoffset())->GetLightCondition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MTime& obj = ((const MSequence*) G__getstructoffset())->GetStart();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MTime& obj = ((const MSequence*) G__getstructoffset())->GetNight();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MSequence*) G__getstructoffset())->GetSource();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MSequence*) G__getstructoffset())->GetExcludedRuns();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetRuns(*(MDirIter*) libp->para[0].ref, (MSequence::FileType_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetRuns(*(MDirIter*) libp->para[0].ref, (MSequence::FileType_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MSequence*) G__getstructoffset())->GetFileRegexp((UInt_t) G__int(libp->para[0]), (MSequence::FileType_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const TString* pobj;
         const TString xobj = ((const MSequence*) G__getstructoffset())->GetFileName((UInt_t) G__int(libp->para[0]), (MSequence::FileType_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const TString* pobj;
         const TString xobj = ((const MSequence*) G__getstructoffset())->GetFileName((UInt_t) G__int(libp->para[0]), (MSequence::FileType_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetNumEntries((MSequence::RunType_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 104, (long) ((const MSequence*) G__getstructoffset())->GetNumEntries());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MSequence*) G__getstructoffset())->GetBaseName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MSequence*) G__getstructoffset())->GetFilePath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MSequence*) G__getstructoffset())->GetFileName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MSequence*) G__getstructoffset())->GetDataPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MSequence*) G__getstructoffset())->GetStandardPath();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MSequence::GetStandardPath((Bool_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) MSequence::InflateSeq(*(TString*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) MSequence::InflateSeq(*(TString*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFileName(*(MTime*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFileName(*(MTime*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFileName(*(MTime*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFileName(*(MTime*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = MSequence::InflateFilePath(*(MTime*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSequence::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequence::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSequence::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSequence::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSequence*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequence::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSequence::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequence::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_178_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSequence::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSequence G__TMSequence;
static int G__JobsCint_178_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSequence*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSequence*) (soff+(sizeof(MSequence)*i)))->~G__TMSequence();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSequence*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSequence*) (soff))->~G__TMSequence();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JobsCint_178_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequence* dest = (MSequence*) G__getstructoffset();
   *dest = *(MSequence*) libp->para[0].ref;
   const MSequence& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSequenceSQL */
static int G__JobsCint_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequenceSQL* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL(
*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSequenceSQL(
*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL(*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSequenceSQL(*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequenceSQL* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSequenceSQL(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSequenceSQL((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequenceSQL* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSequenceSQL((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSequenceSQL((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSequenceSQL((UInt_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase(*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase(*(MSQLMagic*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase(*(MSQLMagic*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MSequenceSQL*) G__getstructoffset())->GetFromDatabase());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSequenceSQL::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequenceSQL::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSequenceSQL::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSequenceSQL::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSequenceSQL*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequenceSQL::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSequenceSQL::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSequenceSQL::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_179_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSequenceSQL::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_179_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MSequenceSQL* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MSequenceSQL(*(MSequenceSQL*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSequenceSQL G__TMSequenceSQL;
static int G__JobsCint_179_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSequenceSQL*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSequenceSQL*) (soff+(sizeof(MSequenceSQL)*i)))->~G__TMSequenceSQL();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSequenceSQL*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSequenceSQL*) (soff))->~G__TMSequenceSQL();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JobsCint_179_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSequenceSQL* dest = (MSequenceSQL*) G__getstructoffset();
   *dest = *(MSequenceSQL*) libp->para[0].ref;
   const MSequenceSQL& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataSet */
static int G__JobsCint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet[n];
     } else {
       p = new((void*) gvp) MDataSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet;
     } else {
       p = new((void*) gvp) MDataSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MDataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet(
(const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) MDataSet(
(const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet((const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) MDataSet((const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataSet((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MDataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) MDataSet(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) MDataSet(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataSet((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataSet((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MDataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MDataSet*) G__getstructoffset())->GetBaseName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MDataSet*) G__getstructoffset())->GetFilePath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MDataSet*) G__getstructoffset())->GetFileName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MDataSet*) G__getstructoffset())->GetDataSet();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MDataSet*) G__getstructoffset())->GetNumSequencesOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MDataSet*) G__getstructoffset())->GetNumSequencesOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->HasOffSequences());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->HasOffSequence((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->HasOnSequence((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->HasSequence((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MDataSet*) G__getstructoffset())->GetNumAnalysis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataSet*) G__getstructoffset())->SetNumAnalysis((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->HasSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->GetSourcePos(*(MPointingPos*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->IsWobbleMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->IsMonteCarlo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MDataSet*) G__getstructoffset())->GetDefPathDataFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MDataSet*) G__getstructoffset())->GetDefPathSequences());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MDataSet*) G__getstructoffset())->SetMonteCarlo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MDataSet*) G__getstructoffset())->SetMonteCarlo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MDataSet*) G__getstructoffset())->SetWobbleMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MDataSet*) G__getstructoffset())->SetWobbleMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) MDataSet::AddSequencesFromList(*(TList*) libp->para[0].ref, *(MDirIter*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataSet::AddFilesToChain(*(MDirIter*) libp->para[0].ref, *(TChain*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TList& obj = ((const MDataSet*) G__getstructoffset())->GetSequencesOn();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TList& obj = ((const MDataSet*) G__getstructoffset())->GetSequencesOff();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayI& obj = ((const MDataSet*) G__getstructoffset())->GetSequencesNumOn();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayI& obj = ((const MDataSet*) G__getstructoffset())->GetSequencesNumOff();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFiles(*(MRead*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOn(*(MRead*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOff(*(MRead*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFiles(*(TChain*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOn(*(TChain*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOff(*(TChain*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFiles(*(MDirIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOn(*(MDirIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataSet*) G__getstructoffset())->AddFilesOff(*(MDirIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataSet*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataSet*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataSet*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref, (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataSet*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_191_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataSet G__TMDataSet;
static int G__JobsCint_191_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataSet*) (soff+(sizeof(MDataSet)*i)))->~G__TMDataSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataSet*) (soff))->~G__TMDataSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJob */
static int G__JobsCint_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJob* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJob((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJob((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJob((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJob((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJob[n];
       } else {
         p = new((void*) gvp) MJob[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJob;
       } else {
         p = new((void*) gvp) MJob;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJob));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJob*) G__getstructoffset())->SetPathOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJob*) G__getstructoffset())->SetPathOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJob*) G__getstructoffset())->SetPathIn((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJob*) G__getstructoffset())->SetPathIn();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJob*) G__getstructoffset())->SetOverwrite((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJob*) G__getstructoffset())->SetOverwrite();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MJob*) G__getstructoffset())->SetEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MJob*) G__getstructoffset())->SetEnv((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MJob*) G__getstructoffset())->SetEnv((MEnv*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MJob*) G__getstructoffset())->SetEnv((MEnv*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJob*) G__getstructoffset())->SetEnvDebug((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJob*) G__getstructoffset())->SetEnvDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJob*) G__getstructoffset())->SetMaxEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJob*) G__getstructoffset())->SetSequence(*(MSequence*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJob*) G__getstructoffset())->SetNullOut((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJob*) G__getstructoffset())->SetNullOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJob*) G__getstructoffset())->SetCommandLine(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MJob*) G__getstructoffset())->GetPathOut();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MJob*) G__getstructoffset())->GetPathIn();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MJob*) G__getstructoffset())->HasWritePermission(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MJob*) G__getstructoffset())->HasNullOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MJob*) G__getstructoffset())->GetDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MJob::ExpandPath(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJob::SortArray(*(TArrayI*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MJob::Esc(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJob::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJob::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJob::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJob::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJob*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJob::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJob::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJob::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_194_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJob::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_194_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJob* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJob(*(MJob*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJob));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJob G__TMJob;
static int G__JobsCint_194_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJob*) (soff+(sizeof(MJob)*i)))->~G__TMJob();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJob*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJob*) (soff))->~G__TMJob();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJSimulation */
static int G__JobsCint_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJSimulation* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSimulation((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJSimulation((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSimulation((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJSimulation((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSimulation[n];
       } else {
         p = new((void*) gvp) MJSimulation[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSimulation;
       } else {
         p = new((void*) gvp) MJSimulation;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSimulation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimulation*) G__getstructoffset())->SetForceMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimulation*) G__getstructoffset())->SetForceMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSimulation*) G__getstructoffset())->SetMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSimulation*) G__getstructoffset())->SetWriteFitsFile((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimulation*) G__getstructoffset())->SetFileOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimulation*) G__getstructoffset())->SetFileOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimulation*) G__getstructoffset())->SetRunNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimulation*) G__getstructoffset())->SetRunNumber();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJSimulation*) G__getstructoffset())->Process(*(MArgs*) libp->para[0].ref, *(MSequence*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJSimulation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimulation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJSimulation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJSimulation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSimulation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimulation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSimulation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimulation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_202_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSimulation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_202_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJSimulation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJSimulation(*(MJSimulation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSimulation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJSimulation G__TMJSimulation;
static int G__JobsCint_202_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJSimulation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJSimulation*) (soff+(sizeof(MJSimulation)*i)))->~G__TMJSimulation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJSimulation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJSimulation*) (soff))->~G__TMJSimulation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJSimReflector */
static int G__JobsCint_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJSimReflector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSimReflector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJSimReflector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSimReflector((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJSimReflector((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSimReflector[n];
       } else {
         p = new((void*) gvp) MJSimReflector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSimReflector;
       } else {
         p = new((void*) gvp) MJSimReflector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimReflector*) G__getstructoffset())->SetFileOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimReflector*) G__getstructoffset())->SetFileOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimReflector*) G__getstructoffset())->SetForceMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimReflector*) G__getstructoffset())->SetForceMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSimReflector*) G__getstructoffset())->SetMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSimReflector*) G__getstructoffset())->SetRunNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSimReflector*) G__getstructoffset())->SetRunNumber();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MJSimReflector*) G__getstructoffset())->SetupHeaderOperationMode(*(MRawRunHeader*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJSimReflector*) G__getstructoffset())->Process(*(MArgs*) libp->para[0].ref, *(MSequence*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJSimReflector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimReflector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJSimReflector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJSimReflector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSimReflector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimReflector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSimReflector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSimReflector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSimReflector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJSimReflector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJSimReflector(*(MJSimReflector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJSimReflector G__TMJSimReflector;
static int G__JobsCint_204_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJSimReflector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJSimReflector*) (soff+(sizeof(MJSimReflector)*i)))->~G__TMJSimReflector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJSimReflector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJSimReflector*) (soff))->~G__TMJSimReflector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJCalib */
static int G__JobsCint_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJCalib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalib[n];
     } else {
       p = new((void*) gvp) MJCalib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalib;
     } else {
       p = new((void*) gvp) MJCalib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MJCalib*) G__getstructoffset())->IsUseBlindPixel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MJCalib*) G__getstructoffset())->IsUsePINDiode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetCheckedPixId((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetCheckedPixId();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetNoStorage((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetNoStorage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetHistsStorage((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetHistsStorage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetPixelCheck((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetPixelCheck();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetPulsePosCheck((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetPulsePosCheck();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetUseBlindPixel((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetUseBlindPixel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalib*) G__getstructoffset())->SetUsePINDiode((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalib*) G__getstructoffset())->SetUsePINDiode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJCalib::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalib::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJCalib::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJCalib::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalib*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalib::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalib::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalib::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_207_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalib::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_207_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJCalib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJCalib(*(MJCalib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJCalib G__TMJCalib;
static int G__JobsCint_207_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJCalib*) (soff+(sizeof(MJCalib)*i)))->~G__TMJCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJCalib*) (soff))->~G__TMJCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJPedestal */
static int G__JobsCint_284_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJPedestal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJPedestal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJPedestal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJPedestal((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJPedestal((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJPedestal[n];
       } else {
         p = new((void*) gvp) MJPedestal[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJPedestal;
       } else {
         p = new((void*) gvp) MJPedestal;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJPedestal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalCam& obj = ((MJPedestal*) G__getstructoffset())->GetPedestalCam();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MBadPixelsCam& obj = ((const MJPedestal*) G__getstructoffset())->GetBadPixels();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MJPedestal*) G__getstructoffset())->IsUseData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MJPedestal*) G__getstructoffset())->Process());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetBadPixels(*(MBadPixelsCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetPedestals(*(MPedestalCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetExtractor((MExtractor*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetUseData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJPedestal*) G__getstructoffset())->SetDeadPixelCheck((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJPedestal*) G__getstructoffset())->SetDeadPixelCheck();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetUsePedRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetDataCheckDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetNormalDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetNoDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetExtractionFundamental();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetExtractionWithExtractorRndm();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->SetExtractionWithExtractor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJPedestal*) G__getstructoffset())->SetReferenceFile(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MJPedestal*) G__getstructoffset())->SetReferenceFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJPedestal*) G__getstructoffset())->SetBadPixelsFile(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MJPedestal*) G__getstructoffset())->SetBadPixelsFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJPedestal*) G__getstructoffset())->SetExtractWinLeft((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJPedestal*) G__getstructoffset())->SetExtractWinLeft();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJPedestal*) G__getstructoffset())->SetExtractWinRight((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJPedestal*) G__getstructoffset())->SetExtractWinRight();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MJPedestal*) G__getstructoffset())->GetExtractor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJPedestal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJPedestal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJPedestal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJPedestal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJPedestal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJPedestal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJPedestal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJPedestal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_284_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJPedestal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_284_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJPedestal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJPedestal(*(MJPedestal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJPedestal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJPedestal G__TMJPedestal;
static int G__JobsCint_284_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJPedestal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJPedestal*) (soff+(sizeof(MJPedestal)*i)))->~G__TMJPedestal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJPedestal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJPedestal*) (soff))->~G__TMJPedestal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJCalibration */
static int G__JobsCint_303_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJCalibration* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalibration((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJCalibration((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalibration((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJCalibration((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCalibration[n];
       } else {
         p = new((void*) gvp) MJCalibration[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCalibration;
       } else {
         p = new((void*) gvp) MJCalibration;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MCalibrationChargeCam& obj = ((const MJCalibration*) G__getstructoffset())->GetCalibrationCam();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MCalibrationRelTimeCam& obj = ((const MJCalibration*) G__getstructoffset())->GetRelTimeCam();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MCalibrationQECam& obj = ((const MJCalibration*) G__getstructoffset())->GetQECam();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MBadPixelsCam& obj = ((const MJCalibration*) G__getstructoffset())->GetBadPixels();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetBadPixels(*(MBadPixelsCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetColor((const MCalibrationCam::PulserColor_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetExtractor((MExtractor*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetExtractorCam(*(MPedestalCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetQECam(*(MCalibrationQECam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetTimeExtractor((MExtractTime*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetFullDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetDataCheckDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetNormalDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->SetGeometry((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibration*) G__getstructoffset())->SetRelTimeCalibration((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibration*) G__getstructoffset())->SetRelTimeCalibration();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibration*) G__getstructoffset())->SetDebug((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibration*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibration*) G__getstructoffset())->SetReferenceFile(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibration*) G__getstructoffset())->SetReferenceFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibration*) G__getstructoffset())->SetHiLoCalibFile(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibration*) G__getstructoffset())->SetHiLoCalibFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJCalibration*) G__getstructoffset())->Process(*(MPedestalCam*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJCalibration::DisplayDoubleProject(*(MHCamera*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MJCalibration::FixDataCheckHist(*(TH1D*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MJCalibration::FixDataCheckHist(*(TH1D*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      MJCalibration::FixDataCheckHist(*(TH1D*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJCalibration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJCalibration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJCalibration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalibration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_303_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalibration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_303_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJCalibration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJCalibration(*(MJCalibration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJCalibration G__TMJCalibration;
static int G__JobsCint_303_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJCalibration*) (soff+(sizeof(MJCalibration)*i)))->~G__TMJCalibration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJCalibration*) (soff))->~G__TMJCalibration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJCalibrateSignal */
static int G__JobsCint_306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJCalibrateSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalibrateSignal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJCalibrateSignal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCalibrateSignal((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJCalibrateSignal((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCalibrateSignal[n];
       } else {
         p = new((void*) gvp) MJCalibrateSignal[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCalibrateSignal;
       } else {
         p = new((void*) gvp) MJCalibrateSignal;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJCalibrateSignal*) G__getstructoffset())->Process(*(MPedestalCam*) libp->para[0].ref, *(MPedestalCam*) libp->para[1].ref
, *(MPedestalCam*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibrateSignal*) G__getstructoffset())->SetInterlaced((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibrateSignal*) G__getstructoffset())->SetInterlaced();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibrateSignal*) G__getstructoffset())->SetRelTimesUpdate((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibrateSignal*) G__getstructoffset())->SetRelTimesUpdate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibrateSignal*) G__getstructoffset())->SetMovieMode((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibrateSignal*) G__getstructoffset())->SetMovieMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibrateSignal*) G__getstructoffset())->SetTestMode((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibrateSignal*) G__getstructoffset())->SetTestMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCalibrateSignal*) G__getstructoffset())->SetExtractor((MExtractor*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCalibrateSignal*) G__getstructoffset())->SetExtractor();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJCalibrateSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibrateSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJCalibrateSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJCalibrateSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCalibrateSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibrateSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalibrateSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCalibrateSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_306_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCalibrateSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_306_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJCalibrateSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJCalibrateSignal(*(MJCalibrateSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJCalibrateSignal G__TMJCalibrateSignal;
static int G__JobsCint_306_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJCalibrateSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJCalibrateSignal*) (soff+(sizeof(MJCalibrateSignal)*i)))->~G__TMJCalibrateSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJCalibrateSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJCalibrateSignal*) (soff))->~G__TMJCalibrateSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJMerpp */
static int G__JobsCint_310_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJMerpp* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJMerpp((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJMerpp((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJMerpp((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJMerpp((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJMerpp[n];
       } else {
         p = new((void*) gvp) MJMerpp[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJMerpp;
       } else {
         p = new((void*) gvp) MJMerpp;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJMerpp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetCompression((Byte_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetUpdate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetInterleave((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetForceProcessing((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetOnly((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetConstrainHeader((Short_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetConstrainRunRep((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetTime(*(MTime*) libp->para[0].ref, *(MTime*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->SetAutoTime((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MJMerpp*) G__getstructoffset())->Process());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MJMerpp*) G__getstructoffset())->ProcessSeq(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJMerpp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJMerpp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJMerpp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJMerpp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJMerpp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJMerpp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJMerpp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJMerpp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_310_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJMerpp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_310_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJMerpp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJMerpp(*(MJMerpp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJMerpp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJMerpp G__TMJMerpp;
static int G__JobsCint_310_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJMerpp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJMerpp*) (soff+(sizeof(MJMerpp)*i)))->~G__TMJMerpp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJMerpp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJMerpp*) (soff))->~G__TMJMerpp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJStar */
static int G__JobsCint_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJStar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJStar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJStar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJStar((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJStar((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJStar[n];
       } else {
         p = new((void*) gvp) MJStar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJStar;
       } else {
         p = new((void*) gvp) MJStar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJStar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJStar*) G__getstructoffset())->DisableMuonAnalysis((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJStar*) G__getstructoffset())->DisableMuonAnalysis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJStar*) G__getstructoffset())->Process());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJStar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJStar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJStar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJStar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJStar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJStar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJStar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJStar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_311_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJStar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_311_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJStar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJStar(*(MJStar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJStar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJStar G__TMJStar;
static int G__JobsCint_311_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJStar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJStar*) (soff+(sizeof(MJStar)*i)))->~G__TMJStar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJStar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJStar*) (soff))->~G__TMJStar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJCut */
static int G__JobsCint_314_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJCut((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCut[n];
       } else {
         p = new((void*) gvp) MJCut[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJCut;
       } else {
         p = new((void*) gvp) MJCut;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MJCut*) G__getstructoffset())->Process(*(MDataSet*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->EnableStorageOfSummary((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->EnableStorageOfSummary();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->EnableStorageOfResult((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->EnableStorageOfResult();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->EnableWriteOnly((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->EnableWriteOnly();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->EnableFullDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->EnableFullDisplay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->EnableRandomSrcPos((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->EnableRandomSrcPos();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetNameSummaryFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetNameSummaryFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetNameResultFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetNameResultFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetNameOutFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetNameOutFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCut*) G__getstructoffset())->SetNameHist((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCut*) G__getstructoffset())->SetNameHistFS((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetEnergyEstimator((MTask*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetEnergyEstimator();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetHadronnessCalculator((MTask*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetHadronnessCalculator();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJCut*) G__getstructoffset())->SetDispCalculator((MTask*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJCut*) G__getstructoffset())->SetDispCalculator();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_314_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_314_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJCut(*(MJCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJCut G__TMJCut;
static int G__JobsCint_314_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJCut*) (soff+(sizeof(MJCut)*i)))->~G__TMJCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJCut*) (soff))->~G__TMJCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MJSpectrum */
static int G__JobsCint_321_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MJSpectrum* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSpectrum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MJSpectrum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MJSpectrum((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MJSpectrum((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSpectrum[n];
       } else {
         p = new((void*) gvp) MJSpectrum[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MJSpectrum;
       } else {
         p = new((void*) gvp) MJSpectrum;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MJSpectrum*) G__getstructoffset())->Process(*(MDataSet*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSpectrum*) G__getstructoffset())->ForceTheta((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSpectrum*) G__getstructoffset())->ForceTheta();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSpectrum*) G__getstructoffset())->ForceRunTime((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSpectrum*) G__getstructoffset())->ForceRunTime();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MJSpectrum*) G__getstructoffset())->ForceOnTimeFit((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MJSpectrum*) G__getstructoffset())->ForceOnTimeFit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSpectrum*) G__getstructoffset())->SetEnergyEstimator((MTask*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MJSpectrum::FormFloat((Double_t) G__double(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MJSpectrum::FormFlux(*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = MJSpectrum::FormString(*(TF1*) libp->para[0].ref, (Byte_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = MJSpectrum::FormString(*(TF1*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MJSpectrum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSpectrum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MJSpectrum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MJSpectrum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MJSpectrum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSpectrum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSpectrum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MJSpectrum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JobsCint_321_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MJSpectrum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JobsCint_321_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MJSpectrum* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MJSpectrum(*(MJSpectrum*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MJSpectrum G__TMJSpectrum;
static int G__JobsCint_321_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MJSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MJSpectrum*) (soff+(sizeof(MJSpectrum)*i)))->~G__TMJSpectrum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MJSpectrum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MJSpectrum*) (soff))->~G__TMJSpectrum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MSequence */

/* MSequenceSQL */

/* MDataSet */

/* MJob */

/* MJSimulation */

/* MJSimReflector */

/* MJCalib */

/* MJPedestal */

/* MJCalibration */

/* MJCalibrateSignal */

/* MJMerpp */

/* MJStar */

/* MJCut */

/* MJSpectrum */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJobsCint {
 public:
  G__Sizep2memfuncJobsCint(): p(&G__Sizep2memfuncJobsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJobsCint::*p)();
};

size_t G__get_sizep2memfuncJobsCint()
{
  G__Sizep2memfuncJobsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJobsCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MSequence))) {
     MSequence *G__Lderived;
     G__Lderived=(MSequence*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequence),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequence),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL))) {
     MSequenceSQL *G__Lderived;
     G__Lderived=(MSequenceSQL*)0x1000;
     {
       MSequence *G__Lpbase=(MSequence*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL),G__get_linked_tagnum(&G__JobsCintLN_MSequence),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MDataSet))) {
     MDataSet *G__Lderived;
     G__Lderived=(MDataSet*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MDataSet),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MDataSet),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJob))) {
     MJob *G__Lderived;
     G__Lderived=(MJob*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJob),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJob),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation))) {
     MJSimulation *G__Lderived;
     G__Lderived=(MJSimulation*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector))) {
     MJSimReflector *G__Lderived;
     G__Lderived=(MJSimReflector*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJCalib))) {
     MJCalib *G__Lderived;
     G__Lderived=(MJCalib*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalib),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalib),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalib),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal))) {
     MJPedestal *G__Lderived;
     G__Lderived=(MJPedestal*)0x1000;
     {
       MJCalib *G__Lpbase=(MJCalib*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal),G__get_linked_tagnum(&G__JobsCintLN_MJCalib),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration))) {
     MJCalibration *G__Lderived;
     G__Lderived=(MJCalibration*)0x1000;
     {
       MJCalib *G__Lpbase=(MJCalib*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration),G__get_linked_tagnum(&G__JobsCintLN_MJCalib),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal))) {
     MJCalibrateSignal *G__Lderived;
     G__Lderived=(MJCalibrateSignal*)0x1000;
     {
       MJCalib *G__Lpbase=(MJCalib*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal),G__get_linked_tagnum(&G__JobsCintLN_MJCalib),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp))) {
     MJMerpp *G__Lderived;
     G__Lderived=(MJMerpp*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJStar))) {
     MJStar *G__Lderived;
     G__Lderived=(MJStar*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJStar),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJStar),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJStar),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJCut))) {
     MJCut *G__Lderived;
     G__Lderived=(MJCut*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCut),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCut),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCut),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum))) {
     MJSpectrum *G__Lderived;
     G__Lderived=(MJSpectrum*)0x1000;
     {
       MJob *G__Lpbase=(MJob*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum),G__get_linked_tagnum(&G__JobsCintLN_MJob),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum),G__get_linked_tagnum(&G__JobsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum),G__get_linked_tagnum(&G__JobsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJobsCint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JobsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JobsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JobsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JobsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__JobsCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__JobsCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__JobsCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__JobsCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MSequence */
static void G__setup_memvarMSequence(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequence));
   { MSequence *p; p=(MSequence*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-2,1,G__FastAllocString(2048).Format("kNA=%lldLL",(long long)MSequence::kNA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-2,1,G__FastAllocString(2048).Format("kNoMoon=%lldLL",(long long)MSequence::kNoMoon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-2,1,G__FastAllocString(2048).Format("kTwilight=%lldLL",(long long)MSequence::kTwilight).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-2,1,G__FastAllocString(2048).Format("kMoon=%lldLL",(long long)MSequence::kMoon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-2,1,G__FastAllocString(2048).Format("kDay=%lldLL",(long long)MSequence::kDay).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kRaw=%lldLL",(long long)MSequence::kRaw).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kRoot=%lldLL",(long long)MSequence::kRoot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kReport=%lldLL",(long long)MSequence::kReport).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kCer=%lldLL",(long long)MSequence::kCer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kFits=%lldLL",(long long)MSequence::kFits).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kDrs=%lldLL",(long long)MSequence::kDrs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileExt_t),-1,-2,1,G__FastAllocString(2048).Format("kFact=%lldLL",(long long)MSequence::kFact).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kPed=%lldLL",(long long)MSequence::kPed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kCal=%lldLL",(long long)MSequence::kCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kDat=%lldLL",(long long)MSequence::kDat).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kExcl=%lldLL",(long long)MSequence::kExcl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kAll=%lldLL",(long long)MSequence::kAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kImage=%lldLL",(long long)MSequence::kImage).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kCalib=%lldLL",(long long)MSequence::kCalib).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kDrsRun=%lldLL",(long long)MSequence::kDrsRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLRunType_t),-1,-2,1,G__FastAllocString(2048).Format("kDrsFile=%lldLL",(long long)MSequence::kDrsFile).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kRunType=%lldLL",(long long)MSequence::kRunType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFileType=%lldLL",(long long)MSequence::kFileType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFilePaths=%lldLL",(long long)MSequence::kFilePaths).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRawDat=%lldLL",(long long)MSequence::kRawDat).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRawPed=%lldLL",(long long)MSequence::kRawPed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRawCal=%lldLL",(long long)MSequence::kRawCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFitsPed=%lldLL",(long long)MSequence::kFitsPed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFitsCal=%lldLL",(long long)MSequence::kFitsCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFitsDat=%lldLL",(long long)MSequence::kFitsDat).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFitsDrs=%lldLL",(long long)MSequence::kFitsDrs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFitsDrsRuns=%lldLL",(long long)MSequence::kFitsDrsRuns).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFactCal=%lldLL",(long long)MSequence::kFactCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kFactImg=%lldLL",(long long)MSequence::kFactImg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRawDrs=%lldLL",(long long)MSequence::kRawDrs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRawAll=%lldLL",(long long)MSequence::kRawAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRootDat=%lldLL",(long long)MSequence::kRootDat).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRootPed=%lldLL",(long long)MSequence::kRootPed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRootCal=%lldLL",(long long)MSequence::kRootCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kRootAll=%lldLL",(long long)MSequence::kRootAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kReportPed=%lldLL",(long long)MSequence::kReportPed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kReportCal=%lldLL",(long long)MSequence::kReportCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kReportDat=%lldLL",(long long)MSequence::kReportDat).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kReportAll=%lldLL",(long long)MSequence::kReportAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kCalibrated=%lldLL",(long long)MSequence::kCalibrated).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kImages=%lldLL",(long long)MSequence::kImages).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLFileType_t),-1,-2,1,G__FastAllocString(2048).Format("kCorsika=%lldLL",(long long)MSequence::kCorsika).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fFileName=",0,"Expanded file name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fDataPath=",0,"Path to data files");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fTelescope=",0,"Telescope number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fSequence=",0,"Sequence number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTime),-1,-1,4,"fStart=",0,"Start time of sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fLastRun=",0,"Last run in sequence (necessary?)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEvents=",0,"Number of events in sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fPeriod=",0,"Observation period of the sequence");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTime),-1,-1,4,"fNight=",0,"Night (day of sunrise) of the sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fDrsSequence=",0,"Corresponding DRS sequence");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t),-1,-1,4,"fLightCondition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fProject=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fTriggerTable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fHvSettings=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fComment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fRuns=",0,"Run numbers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fRunsSub=",0,"Sub runs (files)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fCalRuns=",0,"Numbers of calibration runs/files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fCalRunsSub=",0,"Sub runs (files) of calibration runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fPedRuns=",0,"Numbers of pedestal runs/files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fPedRunsSub=",0,"Sub runs (files) of pedestal runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDatRuns=",0,"Numbers of data runs/files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDatRunsSub=",0,"Sub runs (files) of data runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDrsRuns=",0,"Numbers of drs pedestal runs/files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDrsRunsSub=",0,"Sub runs (files) of drs pedestal runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDrsFiles=",0,"Runs for which DRS files exist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fDrsFilesSub=",0,"Sub runs (files) of DRS files runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fExclRuns=",0,"Numbers of excluded runs/files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fExclRunsSub=",0,"Sub runs (files) of excluded runs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMonteCarlo=",0,"Flag for Monte Carlo sequences");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSequenceSQL */
static void G__setup_memvarMSequenceSQL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   { MSequenceSQL *p; p=(MSequenceSQL*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataSet */
static void G__setup_memvarMDataSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MDataSet));
   { MDataSet *p; p=(MDataSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-2,4,"fgCatalog=",0,"! Default Catalog path");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fFileName=",0,"File name to original file (MParContainer::fName is not streamed)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fDataSet=",0,"Name of the dataset given by the user");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumAnalysis=",0,"Analysis number (artificial)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fPathSequences=",0,"Default path to the sequence files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fPathDataFiles=",0,"Default path to the data files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fNumSequencesOn=",0,"numbers of on-sequences");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TArrayI),-1,-1,4,"fNumSequencesOff=",0,"numbers of off-sequences");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TList),-1,-1,4,"fSequencesOn=",0,"list of names and paths of on-sequences");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TList),-1,-1,4,"fSequencesOff=",0,"list of names and paths of off-sequences");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameSource=",0,"Name of source from catalog");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fCatalog=",0,"edb catalog (magic_favourites.edb)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fComment=",0,"Comment from DS file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWobbleMode=",0,"Wobble Mode for this dataset?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMonteCarlo=",0,"For default paths use MC or data path");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJob */
static void G__setup_memvarMJob(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJob));
   { MJob *p; p=(MJob*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJobcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__JobsCintLN_MEnv),-1,-1,4,"fEnv=",0,"Resource file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fEnvPrefix=",0,"Prefix for resources");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEnvDebug=",0,"Debug setup of resources");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,2,"fPathOut=",0,"Directory to write output file to (eg. calib*.root)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,2,"fPathIn=",0,"Directory to read output from (eg. calib*.root)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOverwrite=",0,"Allow overwriting output files");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxEvents=",0,"Maximum number of events");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNullOut=",0,"Suppress output files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MSequence),-1,-1,2,"fSequence=",0,"Sequence");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,2,"fCommandLine=",0,"Command line for possible storage");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJSimulation */
static void G__setup_memvarMJSimulation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation));
   { MJSimulation *p; p=(MJSimulation*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimulationcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModeData=%lldLL",(long long)MJSimulation::kModeData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimulationcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModePed=%lldLL",(long long)MJSimulation::kModePed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimulationcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModeCal=%lldLL",(long long)MJSimulation::kModeCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimulationcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModePointRun=%lldLL",(long long)MJSimulation::kModePointRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceMode=",0,"Force execution even if RUNE-section was not foundm");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCamera=",0,"Switch on/off camera (for fast reflector processing)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceTrigger=",0,"Force the use of the trigger \"electronics\"");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWriteFitsFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOperationMode=",0,"Operation mode (data, ped, cal, pointrun)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,"8 digits run number to be used for the file names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fFileOut=",0,"Output file name if all runs should be combines");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJSimReflector */
static void G__setup_memvarMJSimReflector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector));
   { MJSimReflector *p; p=(MJSimReflector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflectorcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModeData=%lldLL",(long long)MJSimReflector::kModeData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflectorcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModePed=%lldLL",(long long)MJSimReflector::kModePed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflectorcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModeCal=%lldLL",(long long)MJSimReflector::kModeCal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJSimReflectorcLcLMode_t),-1,-2,1,G__FastAllocString(2048).Format("kModePointRun=%lldLL",(long long)MJSimReflector::kModePointRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceMode=",0,"Force execution even if RUNE-section was not foundm");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOperationMode=",0,"Operation mode (data, ped, cal, pointrun)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,"8 digits run number to be used for the file names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fFileOut=",0,"Output file name if all runs should be combines");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJCalib */
static void G__setup_memvarMJCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalib));
   { MJCalib *p; p=(MJCalib*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgCheckedPixId=0LL",0,"! Default for fCheckedPixId");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibcLcLStorage_t),-1,-2,4,"kNoStorage=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibcLcLStorage_t),-1,-2,4,"kHistsStorage=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fStorage=",0,"Bit-field for chosen storage type");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibcLcLDevice_t),-1,-2,4,"kUseBlindPixel=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibcLcLDevice_t),-1,-2,4,"kUsePINDiode=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fDevices=",0,"Bit-field for used devices for calibration");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPixelCheck=",0,"Check a test pixel?");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCheckedPixId=",0,"ID of checked pixel");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsPulsePosCheck=",0,"Check pulse position?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJPedestal */
static void G__setup_memvarMJPedestal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal));
   { MJPedestal *p; p=(MJPedestal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-2,4,"fgReferenceFile=",0,"! default for fReferenceFile (\"pedestalref.rc\")");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-2,4,"fgBadPixelsFile=",0,"! default for fBadPixelsFile (\"badpixels_0_559.rc\")");
   G__memvar_setup((void*)0,102,0,1,-1,G__defined_typename("Float_t"),-2,4,"fgExtractWinLeft=",0,"! default for fExtractWinLeft  (now set to: 2.5)");
   G__memvar_setup((void*)0,102,0,1,-1,G__defined_typename("Float_t"),-2,4,"fgExtractWinRight=",0,"! default for fExtractWinRight (now set to: 6.0)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Axis_t"),-1,4,"fPedestalMin=",0,"! Minimum Axis value for pedestal datacheck display");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Axis_t"),-1,4,"fPedestalMax=",0,"! Maximum Axis value for pedestal datacheck display");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Axis_t"),-1,4,"fPedRmsMin=",0,"! Minimum Axis value for ped. RMS datacheck display");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Axis_t"),-1,4,"fPedRmsMax=",0,"! Maximum Axis value for ped. RMS datacheck display");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedClosedLids=",0,"! Reference line pedestal for closed lids run");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedExtraGalactic=",0,"! Reference line pedestal for extragalactic source");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedGalactic=",0,"! Reference line pedestal for galactic source");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsClosedLidsInner=",0,"! Ref. line ped. RMS for closed lids run - inner pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsExtraGalacticInner=",0,"! Ref. line ped. RMS for extragalactic source - inner pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsGalacticInner=",0,"! Ref. line ped. RMS for galactic source - inner pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsClosedLidsOuter=",0,"! Ref. line ped. RMS for closed lids run - outer pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsExtraGalacticOuter=",0,"! Ref. line ped. RMS for extragalactic source - outer pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefPedRmsGalacticOuter=",0,"! Ref. line ped. RMS for galactic source - outer pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fExtractWinLeft=",0,"Number of FADC slices to extract leftward from mean pulse pos.  ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fExtractWinRight=",0,"Number of FADC slices to extract rightward from mean pulse pos.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fReferenceFile=",0,"File name containing the reference values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fBadPixelsFile=",0,"File name containing the bad pixels excluded beforehand ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MExtractor),-1,-1,4,"fExtractor=",0,"Signal extractor, used to find the nr. of used FADC slices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MPedestalCam),-1,-1,4,"fPedestalCamIn=",0,"Handed over pedestal results");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MPedestalCam),-1,-1,4,"fPedestalCamOut=",0,"Created pedestal results");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"Bad Pixels");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLDisplay_t),-1,-2,4,"kDisplayNone=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLDisplay_t),-1,-2,4,"kDisplayNormal=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLDisplay_t),-1,-2,4,"kDisplayDataCheck=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLDisplay_t),-1,-1,4,"fDisplayType=",0,"Chosen Display type");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtract_t),-1,-2,4,"kUseData=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtract_t),-1,-2,4,"kUsePedRun=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtract_t),-1,-1,4,"fExtractType=",0,"Chosen extractor type");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtraction),-1,-2,4,"kFundamental=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtraction),-1,-2,4,"kWithExtractorRndm=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJPedestalcLcLExtraction),-1,-2,4,"kWithExtractor=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExtractionType=",0,"Flag if the extractor is used to calculate the pedestals");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDeadPixelCheck=",0,"Should the dead pixel check be done?");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinEvents=",0,"Minimum number of events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinPedestals=",0,"Minimum number of events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxPedestals=",0,"Maximum number of events for pedestal extraction");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinCosmics=",0,"Minimum number of events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxCosmics=",0,"Maximum number of events for pulse    extraction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJCalibration */
static void G__setup_memvarMJCalibration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration));
   { MJCalibration *p; p=(MJCalibration*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"gkIFAEBoxInaugurationRun=0LL",0,"! Run number of first IFAE box calibration");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"gkSecondBlindPixelInstallation=0LL",0,"! Run number upon which second blind pixel was installed");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"gkSpecialPixelsContInstallation=0LL",0,"! Run number upon which third blind pixel was installed");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"gkThirdBlindPixelInstallation=0LL",0,"! Run number upon which third blind pixel was installed  ");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-2,4,"fgReferenceFile=",0,"! default for fReferenceFile (\"mjobs/calibrationref.rc\")");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-2,4,"fgHiLoCalibFile=",0,"! default for fHiLoCalibFile (\"mjobs/hilocalib.root\")  ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConvFADC2PheMin=",0,"! Histogram minimum for conversion factor to phes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConvFADC2PheMax=",0,"! Histogram maximum for conversion factor to phes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConvFADC2PhotMin=",0,"! Histogram minimum for conversion factor to phs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConvFADC2PhotMax=",0,"! Histogram maixmum for conversion factor to phs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQEMin=",0,"! Histogram minimum for quantum efficiency");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQEMax=",0,"! Histogram maximum for quantum efficiency");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fArrivalTimeMin=",0,"! Histogram minimum for arrival times ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fArrivalTimeMax=",0,"! Histogram maximum for arrival times");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeOffsetMin=",0,"! Histogram minimum for time offsets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeOffsetMax=",0,"! Histogram maximum for time offsets");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeResolutionMin=",0,"! Histogram minimum for time resolutions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeResolutionMax=",0,"! Histogram maximum for time resolutions");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefFADC2PheInner=",0,"! Reference value for the ratio phes/charge - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefFADC2PheOuter=",0,"! Reference value for the ratio phes/charge - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefConvFADC2PhotInner=",0,"! Reference value for the conversion factor to phs - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefConvFADC2PhotOuter=",0,"! Reference value for the conversion factor to phs - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefConvFADC2PheInner=",0,"! Reference value for the conversion factor to phs - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefConvFADC2PheOuter=",0,"! Reference value for the conversion factor to phs - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefQEInner=",0,"! Reference value for the quantum eff. cascades - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefQEOuter=",0,"! Reference value for the quantum eff. cascades - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefArrivalTimeInner=",0,"! Reference value for the arrival time - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefArrivalTimeOuter=",0,"! Reference value for the arrival time - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefArrivalTimeRmsInner=",0,"! Reference value for the arrival time - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefArrivalTimeRmsOuter=",0,"! Reference value for the arrival time - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefTimeOffsetOuter=",0,"! Reference value for the time offset - outer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefTimeResolutionInner=",0,"! Reference value for the time resolution - inner");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRefTimeResolutionOuter=",0,"! Reference value for the time resolution - outer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fReferenceFile=",0,"File name containing the reference values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fHiLoCalibFile=",0,"File name containing the hi-lo calib. constants");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MExtractor),-1,-1,4,"fExtractor=",0,"Signal extractor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MExtractTime),-1,-1,4,"fTimeExtractor=",0,"Arrival Time extractor");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"Bad Pixels cam, can be set from previous runs  ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationChargeCam),-1,-1,4,"fCalibrationCam=",0,"Calibration conversion factors FADC2Phe  ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationBlindCam),-1,-1,4,"fCalibrationBlindCam=",0,"Calibration from Blind Pixel(s)  ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationChargePINDiode),-1,-1,4,"fCalibrationPINDiode=",0,"Calibration from PIN Diode");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationQECam),-1,-1,4,"fQECam=",0,"Quantum efficiency, can be set from previous runs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationRelTimeCam),-1,-1,4,"fRelTimeCam=",0,"Calibration constants rel. times");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MPedestalCam),-1,-1,4,"fExtractorCam=",0,"Pedestal Cam with extractor resolution");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__JobsCintLN_MCalibrationCamcLcLPulserColor_t),-1,-1,4,"fColor=",0,"Colour of the pulsed LEDs");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLDisplay_t),-1,-2,4,"kFullDisplay=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLDisplay_t),-1,-2,4,"kDataCheckDisplay=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLDisplay_t),-1,-2,4,"kNormalDisplay=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLDisplay_t),-1,-1,4,"fDisplayType=",0,"Chosen Display type");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLdA),-1,-2,4,"kRelTimes=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JobsCintLN_MJCalibrationcLcLdA),-1,-2,4,"kDebug=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fFlags=",0,"Bit-field for the flags");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinEvents=",0,"Minimum number of events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fGeometry=",0,"Class name geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJCalibrateSignal */
static void G__setup_memvarMJCalibrateSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal));
   { MJCalibrateSignal *p; p=(MJCalibrateSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MExtractor),-1,-1,4,"fExtractor=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsInterlaced=",0,"Distinguish interlaced from other calibration");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsRelTimesUpdate=",0,"Choose to update relative times from interlaced");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsMovieMode=",0,"Choose to encode a movie");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsTestMode=",0,"Testmode to calibrate the cal run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJMerpp */
static void G__setup_memvarMJMerpp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp));
   { MJMerpp *p; p=(MJMerpp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fCompression=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInterleave=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceProcessing=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fTelescope=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fHeaderRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fHeaderFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fReportRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fReportFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fOnly=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTime),-1,-1,4,"fTimeStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTime),-1,-1,4,"fTimeStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAutoStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAutoStopTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJStar */
static void G__setup_memvarMJStar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJStar));
   { MJStar *p; p=(MJStar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMuonAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJCut */
static void G__setup_memvarMJCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCut));
   { MJCut *p; p=(MJCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStoreSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStoreResult=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWriteOnly=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFullDisplay=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRndmSrcPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumOffSourcePos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameSummary=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameResult=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JobsCintLN_TString),-1,-1,4,"fNameHistFS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCalcHadronness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCalcDisp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fEstimateEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MJSpectrum */
static void G__setup_memvarMJSpectrum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum));
   { MJSpectrum *p; p=(MJSpectrum*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCutQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCut0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCut1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCut2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCut3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCutS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fEstimateEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCalcHadronness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_MTask),-1,-1,4,"fCalcDisp=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceRunTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceOnTimeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JobsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJobsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMSequence(void) {
   /* MSequence */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequence));
   G__memfunc_setup("AddEntry",795,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"i - 'Int_t' 0 - run i - 'Int_t' 0 - file "
"u 'TArrayI' - 1 - data u 'TArrayI' - 1 - sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalEntry",922,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 8, 
"U 'TEnv' - 10 - env u 'TString' - 11 - prefix "
"u 'TString' - 11 - num u 'TArrayI' - 1 - data "
"u 'TArrayI' - 1 - sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Split",524,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 8, 
"u 'TString' - 1 - runs u 'TArrayI' - 1 - data "
"u 'TArrayI' - 1 - sub U 'TEnv' - 10 '0' env "
"u 'TString' - 10 '\"\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Split",524,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"C - - 10 - name u 'TArrayI' - 1 - data "
"u 'TArrayI' - 1 - sub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLightCondition",1727,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t), -1, 0, 1, 1, 4, 8, "u 'TString' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrays",914,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"U 'TArrayI' - 11 - r U 'TArrayI' - 11 - f "
"i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPath",782,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'TString' - 1 - path i 'MSequence::FileType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPath",782,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 1, 4, 8, 
"i 'MSequence::FileType_t' - 0 - type u 'TString' - 0 '\"\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFile",769,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 1, 4, 8, 
"u 'TString' - 11 - d u 'TString' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathName",1070,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 1, 4, 8, 
"u 'TString' - 0 - d i 'MSequence::FileType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileRegexp",1291,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 4, 1, 4, 8, 
"h - 'UInt_t' 0 - num u 'TArrayI' - 11 - arr "
"u 'TArrayI' - 11 - sub i 'MSequence::FileType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 5, 1, 4, 8, 
"h - 'UInt_t' 0 - i u 'TArrayI' - 11 - arr "
"u 'TArrayI' - 11 - sub i 'MSequence::FileType_t' - 0 - type "
"C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 5, 1, 4, 8, 
"u 'MDirIter' - 1 - iter u 'TArrayI' - 11 - arr "
"u 'TArrayI' - 11 - file i 'MSequence::FileType_t' - 0 - type "
"u 'TString' - 0 '\"\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSequence",1417,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 3, 1, 4, 8, 
"i - 'Int_t' 0 - pos i - 'Int_t' 0 - n "
"u 'TArrayI' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSequence",1417,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 3, 1, 4, 8, 
"i - 'Int_t' 1 - pos u 'TArrayI' - 11 - n "
"u 'TArrayI' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRunsClassic",1655,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - pre "
"C - - 10 - name u 'TArrayI' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRuns",949,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 5, 1, 4, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - pre "
"C - - 10 - name u 'TArrayI' - 11 - r "
"u 'TArrayI' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSubRuns",1006,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsContained",1105,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 8, 
"u 'TArrayI' - 11 - arr u 'TArrayI' - 11 - sub "
"h - 'UInt_t' 0 - num h - 'UInt_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortArraySub",1233,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 4, 0, 
"i - 'Int_t' 0 - p i - 'Int_t' 0 - n "
"I - 'Int_t' 0 - arr1 I - 'Int_t' 0 - arr2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortArrays",1050,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 4, 0, 
"u 'TArrayI' - 1 - arr1 u 'TArrayI' - 1 - arr2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubArray",1097,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 4, 0, 
"i - 'Int_t' 0 - p i - 'Int_t' 0 - n "
"I - 'Int_t' 0 - arr1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequence",902,G__JobsCint_178_0_23, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequence), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' fname C - - 10 '0' path "
"h - 'UInt_t' 0 '(UInt_t)-1' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequence",902,G__JobsCint_178_0_24, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequence), -1, 0, 3, 1, 1, 0, 
"C - - 10 - fname h - 'UInt_t' 0 - seq "
"r - 'UShort_t' 0 '0' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequence",902,G__JobsCint_178_0_25, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequence), -1, 0, 1, 1, 1, 0, "u 'MSequence' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCompatible",1212,G__JobsCint_178_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MSequence' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdentical",1097,G__JobsCint_178_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MSequence' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__JobsCint_178_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MSequence' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,G__JobsCint_178_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'TString' - 0 - sql h - 'UInt_t' 0 '0' seq "
"r - 'UShort_t' 0 '0' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__JobsCint_178_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filename h - 'UInt_t' 0 '(UInt_t)-1' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__JobsCint_178_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"C - - 10 - filename C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__JobsCint_178_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - filename", "*MENU *ARGS={filename=>fBaseName}", (void*) NULL, 0);
   G__memfunc_setup("SetDataPath",1075,G__JobsCint_178_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '\"\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrsSequence",1422,G__JobsCint_178_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__JobsCint_178_0_36, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__JobsCint_178_0_38, 121, -1, -1, 0, 0, 1, 1, 8, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__JobsCint_178_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMonteCarlo",1200,G__JobsCint_178_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsExcluded",1002,G__JobsCint_178_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - run h - 'UInt_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsContained",1105,G__JobsCint_178_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - run h - 'UInt_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNight",806,G__JobsCint_178_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - night", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRun",574,G__JobsCint_178_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - run i 'MSequence::RunType_t' - 0 'kAll' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRuns",689,G__JobsCint_178_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - run1 h - 'UInt_t' 0 - run2 "
"i 'MSequence::RunType_t' - 0 'kAll' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,G__JobsCint_178_0_46, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - run h - 'UInt_t' 0 - file "
"i 'MSequence::RunType_t' - 0 'kAll' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__JobsCint_178_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - run h - 'UInt_t' 0 - f1 "
"h - 'UInt_t' 0 - f2 i 'MSequence::RunType_t' - 0 'kAll' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExcludeFile",1098,G__JobsCint_178_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - run h - 'UInt_t' 0 '0' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExcludeRuns",1138,G__JobsCint_178_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - runs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonteCarlo",1312,G__JobsCint_178_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' ismc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumExclRuns",1412,G__JobsCint_178_0_51, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTelescope",1220,G__JobsCint_178_0_52, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSequence",1113,G__JobsCint_178_0_53, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastRun",1001,G__JobsCint_178_0_54, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeriod",899,G__JobsCint_178_0_55, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDrsSequence",1410,G__JobsCint_178_0_56, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDrsFile",969,G__JobsCint_178_0_57, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasMoon",693,G__JobsCint_178_0_58, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFile",672,G__JobsCint_178_0_59, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"h - 'UInt_t' 0 - i i 'MSequence::RunType_t' - 0 - type "
"h - 'UInt_t' 1 - run h - 'UInt_t' 1 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLightCondition",1727,G__JobsCint_178_0_60, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequencecLcLLightCondition_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStart",814,G__JobsCint_178_0_61, 117, G__get_linked_tagnum(&G__JobsCintLN_MTime), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNight",794,G__JobsCint_178_0_62, 117, G__get_linked_tagnum(&G__JobsCintLN_MTime), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__JobsCint_178_0_63, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExcludedRuns",1526,G__JobsCint_178_0_64, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRuns",712,G__JobsCint_178_0_65, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 1, 8, 
"u 'MDirIter' - 1 - iter i 'MSequence::FileType_t' - 0 - type "
"C - - 10 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileRegexp",1291,G__JobsCint_178_0_66, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - num i 'MSequence::FileType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__JobsCint_178_0_67, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - i i 'MSequence::FileType_t' - 0 - type "
"C - - 10 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEntries",1322,G__JobsCint_178_0_68, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "i 'MSequence::RunType_t' - 0 'kAll' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseName",1052,G__JobsCint_178_0_69, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilePath",1069,G__JobsCint_178_0_70, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__JobsCint_178_0_71, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataPath",1063,G__JobsCint_178_0_72, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStandardPath",1502,G__JobsCint_178_0_73, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStandardPath",1502,G__JobsCint_178_0_74, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 - mc", (char*)NULL, (void*) G__func2void( (TString (*)(Bool_t))(&MSequence::GetStandardPath) ), 0);
   G__memfunc_setup("InflateSeq",1004,G__JobsCint_178_0_75, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TString' - 1 - seq g - 'Bool_t' 0 'kFALSE' ismc", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString&, Bool_t))(&MSequence::InflateSeq) ), 0);
   G__memfunc_setup("InflateFileName",1476,G__JobsCint_178_0_76, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 5, 3, 1, 0, 
"u 'MTime' - 11 - night r - 'UShort_t' 0 - tel "
"i - 'Int_t' 0 - run i - 'Int_t' 0 - file "
"i - 'Int_t' 0 'kRawAll' type", (char*)NULL, (void*) G__func2void( (TString (*)(const MTime&, UShort_t, Int_t, Int_t, Int_t))(&MSequence::InflateFileName) ), 0);
   G__memfunc_setup("InflateFileName",1476,G__JobsCint_178_0_77, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 3, 3, 1, 0, 
"u 'MTime' - 11 - night i - 'Int_t' 0 - run "
"i - 'Int_t' 0 'kRawAll' type", (char*)NULL, (void*) G__func2void( (TString (*)(const MTime&, Int_t, Int_t))(&MSequence::InflateFileName) ), 0);
   G__memfunc_setup("InflateFilePath",1488,G__JobsCint_178_0_78, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 5, 3, 1, 0, 
"u 'MTime' - 11 - night r - 'UShort_t' 0 - tel "
"i - 'Int_t' 0 - run i - 'Int_t' 0 '0' file "
"i - 'Int_t' 0 'kRawAll' type", (char*)NULL, (void*) G__func2void( (TString (*)(const MTime&, UShort_t, Int_t, Int_t, Int_t))(&MSequence::InflateFilePath) ), 0);
   G__memfunc_setup("InflateFilePath",1488,G__JobsCint_178_0_79, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 3, 3, 1, 0, 
"u 'MTime' - 11 - night i - 'Int_t' 0 - run "
"i - 'Int_t' 0 'kRawAll' type", (char*)NULL, (void*) G__func2void( (TString (*)(const MTime&, Int_t, Int_t))(&MSequence::InflateFilePath) ), 0);
   G__memfunc_setup("InflateFilePath",1488,G__JobsCint_178_0_80, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 3, 1, 0, 
"u 'MTime' - 11 - night g - 'Bool_t' 0 'kFALSE' mc", (char*)NULL, (void*) G__func2void( (TString (*)(const MTime&, Bool_t))(&MSequence::InflateFilePath) ), 0);
   G__memfunc_setup("Class",502,G__JobsCint_178_0_81, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSequence::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_178_0_82, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequence::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_178_0_83, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSequence::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_178_0_84, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSequence::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_178_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_178_0_89, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequence::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_178_0_90, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSequence::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_178_0_91, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequence::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_178_0_92, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSequence::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSequence", 1028, G__JobsCint_178_0_93, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JobsCint_178_0_94, (int) ('u'), G__get_linked_tagnum(&G__JobsCintLN_MSequence), -1, 1, 1, 1, 1, 0, "u 'MSequence' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSequenceSQL(void) {
   /* MSequenceSQL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL));
   G__memfunc_setup("GetRuns",712,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"u 'MSQLMagic' - 1 - serv u 'TString' - 0 - query "
"i 'MSequence::RunType_t' - 0 - type h - 'UInt_t' 0 '(UInt_t)-1' nevts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeFromDatabase",1880,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 1, 4, 0, 
"u 'MSQLMagic' - 1 - serv u 'TString' - 11 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromDatabase",1481,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'MSQLMagic' - 1 - serv u 'TSQLResult' - 1 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromDatabase",1481,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'MSQLMagic' - 1 - serv u 'TSQLRow' - 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequenceSQL",1142,G__JobsCint_179_0_5, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL), -1, 0, 3, 1, 1, 0, 
"u 'MSQLMagic' - 1 - serv h - 'UInt_t' 0 - seqno "
"i - 'Int_t' 0 '0' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequenceSQL",1142,G__JobsCint_179_0_6, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL), -1, 0, 3, 1, 1, 0, 
"C - - 10 - rc h - 'UInt_t' 0 - seqno "
"i - 'Int_t' 0 '0' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSequenceSQL",1142,G__JobsCint_179_0_7, 105, G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - seqno i - 'Int_t' 0 '0' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromDatabase",1481,G__JobsCint_179_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MSQLMagic' - 1 - serv h - 'UInt_t' 0 '(UInt_t)-1' seqno "
"i - 'Int_t' 0 '-1' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromDatabase",1481,G__JobsCint_179_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - rc h - 'UInt_t' 0 '(UInt_t)-1' seqno "
"i - 'Int_t' 0 '-1' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFromDatabase",1481,G__JobsCint_179_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 '(UInt_t)-1' seqno i - 'Int_t' 0 '-1' tel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_179_0_11, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSequenceSQL::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_179_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequenceSQL::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_179_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSequenceSQL::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_179_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSequenceSQL::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_179_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_179_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequenceSQL::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_179_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSequenceSQL::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_179_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSequenceSQL::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_179_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSequenceSQL::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MSequenceSQL", 1142, G__JobsCint_179_0_23, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL), -1, 0, 1, 1, 1, 0, "u 'MSequenceSQL' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MSequenceSQL", 1268, G__JobsCint_179_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JobsCint_179_0_25, (int) ('u'), G__get_linked_tagnum(&G__JobsCintLN_MSequenceSQL), -1, 1, 1, 1, 1, 0, "u 'MSequenceSQL' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataSet(void) {
   /* MDataSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MDataSet));
   G__memfunc_setup("Split",524,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TString' - 1 - runs u 'TArrayI' - 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResolveSequences",1676,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"u 'TArrayI' - 11 - num u 'TList' - 1 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWobbleMode",1280,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintFile",909,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 4, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'MSequence' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSeq",822,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'MSequence' - 11 - seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupDefaultPath",1635,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TString' - 1 - path u 'TString' - 11 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSequence",1109,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"h - 'UInt_t' 0 - num u 'TArrayI' - 11 - seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"C - - 10 - fname h - 'UInt_t' 10 - num "
"u 'TString' - 0 - sequences u 'TString' - 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataSet",755,G__JobsCint_191_0_9, 105, G__get_linked_tagnum(&G__JobsCintLN_MDataSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataSet",755,G__JobsCint_191_0_10, 105, G__get_linked_tagnum(&G__JobsCintLN_MDataSet), -1, 0, 3, 1, 1, 0, 
"C - - 10 - fname u 'TString' - 0 '\"\"' sequences "
"u 'TString' - 0 '\"\"' data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataSet",755,G__JobsCint_191_0_11, 105, G__get_linked_tagnum(&G__JobsCintLN_MDataSet), -1, 0, 4, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 - num "
"u 'TString' - 0 '\"\"' sequences u 'TString' - 0 '\"\"' data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseName",1052,G__JobsCint_191_0_12, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilePath",1069,G__JobsCint_191_0_13, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__JobsCint_191_0_14, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSet",966,G__JobsCint_191_0_15, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,G__JobsCint_191_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSequencesOn",1721,G__JobsCint_191_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSequencesOff",1815,G__JobsCint_191_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOffSequences",1507,G__JobsCint_191_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOffSequence",1392,G__JobsCint_191_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOnSequence",1298,G__JobsCint_191_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSequence",1109,G__JobsCint_191_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumAnalysis",1428,G__JobsCint_191_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumAnalysis",1440,G__JobsCint_191_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSource",909,G__JobsCint_191_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourcePos",1219,G__JobsCint_191_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MPointingPos' - 1 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWobbleMode",1180,G__JobsCint_191_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMonteCarlo",1200,G__JobsCint_191_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefPathDataFiles",1833,G__JobsCint_191_0_30, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefPathSequences",1896,G__JobsCint_191_0_31, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonteCarlo",1312,G__JobsCint_191_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' ismc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWobbleMode",1292,G__JobsCint_191_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' wobm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSequencesFromList",2021,G__JobsCint_191_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TList' - 11 - list u 'MDirIter' - 1 - files", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TList&, MDirIter&))(&MDataSet::AddSequencesFromList) ), 0);
   G__memfunc_setup("AddFilesToChain",1442,G__JobsCint_191_0_35, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"u 'MDirIter' - 1 - files u 'TChain' - 1 - chain", (char*)NULL, (void*) G__func2void( (Int_t (*)(MDirIter&, TChain&))(&MDataSet::AddFilesToChain) ), 0);
   G__memfunc_setup("GetSequencesOn",1417,G__JobsCint_191_0_36, 117, G__get_linked_tagnum(&G__JobsCintLN_TList), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSequencesOff",1511,G__JobsCint_191_0_37, 117, G__get_linked_tagnum(&G__JobsCintLN_TList), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSequencesNumOn",1721,G__JobsCint_191_0_38, 117, G__get_linked_tagnum(&G__JobsCintLN_TArrayI), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSequencesNumOff",1815,G__JobsCint_191_0_39, 117, G__get_linked_tagnum(&G__JobsCintLN_TArrayI), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__JobsCint_191_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MRead' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOn",953,G__JobsCint_191_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MRead' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOff",1047,G__JobsCint_191_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MRead' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__JobsCint_191_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TChain' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOn",953,G__JobsCint_191_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TChain' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOff",1047,G__JobsCint_191_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TChain' - 1 - read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__JobsCint_191_0_46, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MDirIter' - 1 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOn",953,G__JobsCint_191_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MDirIter' - 1 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilesOff",1047,G__JobsCint_191_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MDirIter' - 1 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__JobsCint_191_0_49, 121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 - filename C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__JobsCint_191_0_50, 121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - filename", "*MENU *ARGS={filename=>fBaseName}", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__JobsCint_191_0_51, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__JobsCint_191_0_53, 121, -1, -1, 0, 0, 1, 1, 8, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_191_0_54, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_191_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_191_0_56, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_191_0_57, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_191_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_191_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_191_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_191_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_191_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataSet", 881, G__JobsCint_191_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJob(void) {
   /* MJob */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJob));
   G__memfunc_setup("CombinePath",1098,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 3, 4, 0, 
"u 'TString' - 0 - path u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixPath",692,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "u 'TString' - 1 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrefix",922,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEnv",784,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_TEnv), -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMEnv",662,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MEnv), -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvPrefix",1207,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 1, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvDebug",1072,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 8, 
"C - - 10 - name i - 'Int_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 8, 
"C - - 10 - name d - 'Double_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnv",585,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 2, 1, 2, 9, 
"C - - 10 - name C - - 10 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasEnv",581,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRandomNumberGenerator",2565,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupEnv",826,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'MEvtLoop' - 1 - loop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnv",775,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnv",775,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'MParContainer' - 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintUntouchedEnv",1765,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteContainer",1454,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TCollection' - 1 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadContainer",1311,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TCollection' - 1 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteContainer",1454,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 2, 8, 
"u 'TCollection' - 1 - cont C - - 10 - name "
"C - - 10 '\"RECREATE\"' option i - - 10 '2' compr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteDisplay",1249,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 8, 
"C - - 10 - name C - - 10 '\"RECREATE\"' option "
"i - - 10 '2' comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJob",360,G__JobsCint_194_0_23, 105, G__get_linked_tagnum(&G__JobsCintLN_MJob), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPathOut",1009,G__JobsCint_194_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\".\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPathIn",880,G__JobsCint_194_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\".\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOverwrite",1267,G__JobsCint_194_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnv",597,G__JobsCint_194_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - env C - - 10 '0' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnv",597,G__JobsCint_194_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MEnv' - 0 - env C - - 10 '0' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnvDebug",1084,G__JobsCint_194_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '2' d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxEvents",1223,G__JobsCint_194_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSequence",1125,G__JobsCint_194_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MSequence' - 11 - seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNullOut",1023,G__JobsCint_194_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCommandLine",1395,G__JobsCint_194_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathOut",997,G__JobsCint_194_0_34, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPathIn",868,G__JobsCint_194_0_35, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasWritePermission",1872,G__JobsCint_194_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasNullOut",1007,G__JobsCint_194_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDisplay",1014,G__JobsCint_194_0_38, 85, G__get_linked_tagnum(&G__JobsCintLN_MStatusDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpandPath",1005,G__JobsCint_194_0_39, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 1, 3, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) G__func2void( (TString (*)(TString))(&MJob::ExpandPath) ), 0);
   G__memfunc_setup("SortArray",935,G__JobsCint_194_0_40, 121, -1, -1, 0, 1, 3, 1, 0, "u 'TArrayI' - 1 - arr", (char*)NULL, (void*) G__func2void( (void (*)(TArrayI&))(&MJob::SortArray) ), 0);
   G__memfunc_setup("Esc",283,G__JobsCint_194_0_41, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 1, 3, 1, 0, "u 'TString' - 0 - esc", (char*)NULL, (void*) G__func2void( (TString (*)(TString))(&MJob::Esc) ), 0);
   G__memfunc_setup("Class",502,G__JobsCint_194_0_42, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJob::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_194_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJob::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_194_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJob::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_194_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJob::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_194_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_194_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJob::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_194_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJob::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_194_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJob::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_194_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJob::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJob", 360, G__JobsCint_194_0_54, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJob), -1, 0, 1, 1, 1, 0, "u 'MJob' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJob", 486, G__JobsCint_194_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJSimulation(void) {
   /* MJSimulation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimulation));
   G__memfunc_setup("WriteResult",1162,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"u 'MParList' - 11 - plist u 'MSequence' - 11 - seq "
"i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupHist",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MHn' - 1 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHeaderKeys",1526,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MWriteFitsFile' - 1 - write u 'MRawRunHeader' - 1 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupVetoColumns",1680,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MWriteFitsFile' - 1 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHeaderOperationMode",2448,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MRawRunHeader' - 1 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateBinningObjects",2019,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJSimulation",1212,G__JobsCint_202_0_8, 105, G__get_linked_tagnum(&G__JobsCintLN_MJSimulation), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceMode",1184,G__JobsCint_202_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMode",689,G__JobsCint_202_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWriteFitsFile",1613,G__JobsCint_202_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileOut",996,G__JobsCint_202_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__JobsCint_202_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_202_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'MArgs' - 11 - args u 'MSequence' - 11 - seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_202_0_15, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJSimulation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_202_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimulation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_202_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJSimulation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_202_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJSimulation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_202_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_202_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimulation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_202_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSimulation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_202_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimulation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_202_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSimulation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJSimulation", 1212, G__JobsCint_202_0_27, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJSimulation), -1, 0, 1, 1, 1, 0, "u 'MJSimulation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJSimulation", 1338, G__JobsCint_202_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJSimReflector(void) {
   /* MJSimReflector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector));
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MJSimReflector",1382,G__JobsCint_204_0_2, 105, G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileOut",996,G__JobsCint_204_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceMode",1184,G__JobsCint_204_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMode",689,G__JobsCint_204_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__JobsCint_204_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHeaderOperationMode",2448,G__JobsCint_204_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "u 'MRawRunHeader' - 1 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_204_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'MArgs' - 11 - args u 'MSequence' - 11 - seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_204_0_9, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJSimReflector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_204_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimReflector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_204_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJSimReflector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_204_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJSimReflector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_204_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_204_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimReflector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_204_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSimReflector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_204_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSimReflector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_204_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSimReflector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJSimReflector", 1382, G__JobsCint_204_0_21, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJSimReflector), -1, 0, 1, 1, 1, 0, "u 'MJSimReflector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJSimReflector", 1508, G__JobsCint_204_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJCalib(void) {
   /* MJCalib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalib));
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsNoStorage",1102,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHistsStorage",1436,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJCalib",626,G__JobsCint_207_0_4, 105, G__get_linked_tagnum(&G__JobsCintLN_MJCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUseBlindPixel",1492,G__JobsCint_207_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUsePINDiode",1205,G__JobsCint_207_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCheckedPixId",1457,G__JobsCint_207_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 'fgCheckedPixId' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoStorage",1214,G__JobsCint_207_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistsStorage",1548,G__JobsCint_207_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPixelCheck",1292,G__JobsCint_207_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulsePosCheck",1605,G__JobsCint_207_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseBlindPixel",1604,G__JobsCint_207_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUsePINDiode",1317,G__JobsCint_207_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_207_0_14, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJCalib::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_207_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalib::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_207_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJCalib::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_207_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJCalib::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_207_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_207_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalib::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_207_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalib::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_207_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalib::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_207_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalib::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJCalib", 626, G__JobsCint_207_0_26, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJCalib), -1, 0, 1, 1, 1, 0, "u 'MJCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJCalib", 752, G__JobsCint_207_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJPedestal(void) {
   /* MJPedestal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJPedestal));
   G__memfunc_setup("ReadCalibration",1508,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MExtractor), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPedestalCam",1471,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WritePulsePos",1350,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayResult",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'MParList' - 11 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayReferenceLines",2144,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MHCamera' - 11 - hist i - 'Int_t' 10 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixDataCheckHist",1559,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TH1D' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PulsePosCheck",1305,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "u 'MParList' - 11 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputFileName",1714,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadReferenceFile",1675,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteExtractor",1479,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJPedestal",969,G__JobsCint_284_0_12, 105, G__get_linked_tagnum(&G__JobsCintLN_MJPedestal), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestalCam",1379,G__JobsCint_284_0_13, 117, G__get_linked_tagnum(&G__JobsCintLN_MPedestalCam), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadPixels",1180,G__JobsCint_284_0_14, 117, G__get_linked_tagnum(&G__JobsCintLN_MBadPixelsCam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUseData",867,G__JobsCint_284_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_284_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBadPixels",1192,G__JobsCint_284_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MBadPixelsCam' - 11 - bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestals",1233,G__JobsCint_284_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MPedestalCam' - 11 - ped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractor",1256,G__JobsCint_284_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MExtractor' - 0 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseData",979,G__JobsCint_284_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeadPixelCheck",1658,G__JobsCint_284_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUsePedRun",1191,G__JobsCint_284_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataCheckDisplay",1882,G__JobsCint_284_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormalDisplay",1643,G__JobsCint_284_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoDisplay",1215,G__JobsCint_284_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractionFundamental",2492,G__JobsCint_284_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractionWithExtractorRndm",3126,G__JobsCint_284_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractionWithExtractor",2725,G__JobsCint_284_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceFile",1595,G__JobsCint_284_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 'fgReferenceFile' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBadPixelsFile",1576,G__JobsCint_284_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 'fgBadPixelsFile' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractWinLeft",1728,G__JobsCint_284_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 'fgExtractWinLeft' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractWinRight",1843,G__JobsCint_284_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 'fgExtractWinRight' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtractor",1244,G__JobsCint_284_0_33, 85, G__get_linked_tagnum(&G__JobsCintLN_MExtractor), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_284_0_34, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJPedestal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_284_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJPedestal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_284_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJPedestal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_284_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJPedestal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_284_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_284_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJPedestal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_284_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJPedestal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_284_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJPedestal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_284_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJPedestal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJPedestal", 969, G__JobsCint_284_0_46, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJPedestal), -1, 0, 1, 1, 1, 0, "u 'MJPedestal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJPedestal", 1095, G__JobsCint_284_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJCalibration(void) {
   /* MJCalibration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibration));
   G__memfunc_setup("IsRelTimes",993,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDebug",675,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawBadPixelPad",1452,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MHCamera), -1, 0, 2, 1, 4, 8, 
"u 'MHCamera' - 11 - h g - 'Bool_t' 0 - unsuit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTab",677,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"u 'MParList' - 1 - plist C - - 10 - cont "
"C - - 10 - name C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayResult",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayReferenceLines",2144,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MHCamera' - 11 - hist i - 'Int_t' 10 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteResult",1162,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTasks",1041,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"U 'MTask' - 0 - t1 U 'MTask' - 0 - t2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitBlindPixel",1407,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'MExtractBlindPixel' - 1 - blindext u 'MHCalibrationChargeBlindCam' - 1 - blindcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFileName",1714,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadReferenceFile",1675,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHiLoCalibFile",1603,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJCalibration",1279,G__JobsCint_303_0_14, 105, G__get_linked_tagnum(&G__JobsCintLN_MJCalibration), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibrationCam",1689,G__JobsCint_303_0_15, 117, G__get_linked_tagnum(&G__JobsCintLN_MCalibrationChargeCam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelTimeCam",1251,G__JobsCint_303_0_16, 117, G__get_linked_tagnum(&G__JobsCintLN_MCalibrationRelTimeCam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQECam",711,G__JobsCint_303_0_17, 117, G__get_linked_tagnum(&G__JobsCintLN_MCalibrationQECam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadPixels",1180,G__JobsCint_303_0_18, 117, G__get_linked_tagnum(&G__JobsCintLN_MBadPixelsCam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBadPixels",1192,G__JobsCint_303_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MBadPixelsCam' - 11 - bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__JobsCint_303_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MCalibrationCam::PulserColor_t' - 10 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractor",1256,G__JobsCint_303_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MExtractor' - 0 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractorCam",1529,G__JobsCint_303_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MPedestalCam' - 11 - ped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQECam",723,G__JobsCint_303_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MCalibrationQECam' - 11 - qe", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeExtractor",1655,G__JobsCint_303_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MExtractTime' - 0 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFullDisplay",1429,G__JobsCint_303_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataCheckDisplay",1882,G__JobsCint_303_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormalDisplay",1643,G__JobsCint_303_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__JobsCint_303_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelTimeCalibration",2118,G__JobsCint_303_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__JobsCint_303_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceFile",1595,G__JobsCint_303_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 'fgReferenceFile' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiLoCalibFile",1523,G__JobsCint_303_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 'fgHiLoCalibFile' ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_303_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'MPedestalCam' - 1 - pedcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayDoubleProject",2056,G__JobsCint_303_0_34, 121, -1, -1, 0, 1, 3, 1, 0, "u 'MHCamera' - 11 - cam", (char*)NULL, (void*) G__func2void( (void (*)(const MHCamera&))(&MJCalibration::DisplayDoubleProject) ), 0);
   G__memfunc_setup("FixDataCheckHist",1559,G__JobsCint_303_0_35, 121, -1, -1, 0, 3, 3, 1, 0, 
"u 'TH1D' - 1 - hist d - 'Double_t' 0 '-1111' min "
"d - 'Double_t' 0 '-1111' max", (char*)NULL, (void*) G__func2void( (void (*)(TH1D&, Double_t, Double_t))(&MJCalibration::FixDataCheckHist) ), 0);
   G__memfunc_setup("Class",502,G__JobsCint_303_0_36, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJCalibration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_303_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_303_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJCalibration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_303_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJCalibration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_303_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_303_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_303_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalibration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_303_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_303_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalibration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJCalibration", 1279, G__JobsCint_303_0_48, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJCalibration), -1, 0, 1, 1, 1, 0, "u 'MJCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJCalibration", 1405, G__JobsCint_303_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJCalibrateSignal(void) {
   /* MJCalibrateSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal));
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisplayResult",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteResult",1162,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCalibration",1508,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 4, 8, 
"u 'TObjArray' - 1 - o u 'MBadPixelsCam' - 1 - bpix "
"U 'MExtractor' - 1 - ext1 U 'MExtractor' - 1 - ext2 "
"u 'TString' - 1 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadExtractorCosmics",2057,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'MExtractor' - 1 - ext1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputFile",1200,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJCalibrateSignal",1660,G__JobsCint_306_0_7, 105, G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_306_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MPedestalCam' - 1 - camab u 'MPedestalCam' - 1 - cam1 "
"u 'MPedestalCam' - 1 - cam2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInterlaced",1319,G__JobsCint_306_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelTimesUpdate",1716,G__JobsCint_306_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMovieMode",1201,G__JobsCint_306_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTestMode",1105,G__JobsCint_306_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractor",1256,G__JobsCint_306_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MExtractor' - 10 '0' ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_306_0_14, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJCalibrateSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_306_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibrateSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_306_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJCalibrateSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_306_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJCalibrateSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_306_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_306_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibrateSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_306_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalibrateSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_306_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCalibrateSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_306_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCalibrateSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJCalibrateSignal", 1660, G__JobsCint_306_0_26, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJCalibrateSignal), -1, 0, 1, 1, 1, 0, "u 'MJCalibrateSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJCalibrateSignal", 1786, G__JobsCint_306_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJMerpp(void) {
   /* MJMerpp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJMerpp));
   G__memfunc_setup("AddTree",665,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"u 'MReportFileReadCC' - 1 - read u 'TString' - 11 - rep "
"u 'TString' - 11 - only", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupCurrents",1383,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MReportFileReadCC' - 1 - read U 'MWriteRootFile' - 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupReports",1280,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MFilter), -1, 0, 2, 1, 4, 8, 
"u 'MReportFileReadCC' - 1 - read U 'MWriteRootFile' - 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupRaw",827,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MRawFileRead' - 1 - read U 'MWriteRootFile' - 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeFromFile",1475,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFilePermissions",2042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJMerpp",667,G__JobsCint_310_0_7, 105, G__get_linked_tagnum(&G__JobsCintLN_MJMerpp), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCompression",1470,G__JobsCint_310_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpdate",911,G__JobsCint_310_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - upd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInterleave",1339,G__JobsCint_310_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceProcessing",1848,G__JobsCint_310_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOnly",718,G__JobsCint_310_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConstrainHeader",1830,G__JobsCint_310_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"s - 'Short_t' 0 - tel i - 'Int_t' 0 - run "
"i - 'Int_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConstrainRunRep",1849,G__JobsCint_310_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - run i - 'Int_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__JobsCint_310_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MTime' - 11 - start u 'MTime' - 11 - stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAutoTime",1108,G__JobsCint_310_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - start g - 'Bool_t' 0 - stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_310_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessSeq",1032,G__JobsCint_310_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_310_0_19, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJMerpp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_310_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJMerpp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_310_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJMerpp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_310_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJMerpp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_310_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_310_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJMerpp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_310_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJMerpp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_310_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJMerpp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_310_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJMerpp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJMerpp", 667, G__JobsCint_310_0_31, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJMerpp), -1, 0, 1, 1, 1, 0, "u 'MJMerpp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJMerpp", 793, G__JobsCint_310_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJStar(void) {
   /* MJStar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJStar));
   G__memfunc_setup("WriteResult",1162,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MJStar",561,G__JobsCint_311_0_3, 105, G__get_linked_tagnum(&G__JobsCintLN_MJStar), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableMuonAnalysis",1943,G__JobsCint_311_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_311_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_311_0_6, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJStar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_311_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJStar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_311_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJStar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_311_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJStar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_311_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_311_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJStar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_311_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJStar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_311_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJStar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_311_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJStar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJStar", 561, G__JobsCint_311_0_18, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJStar), -1, 0, 1, 1, 1, 0, "u 'MJStar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJStar", 687, G__JobsCint_311_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJCut(void) {
   /* MJCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJCut));
   G__memfunc_setup("GetOutputFile",1329,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 1, 1, 4, 8, "h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEnvLocal",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupWriter",1166,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"U 'MWriteRootFile' - 0 - write C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTasks",1041,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"h - 'UInt_t' 0 - num u 'TObjArray' - 1 - cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteResult",1162,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'MParList' - 11 - plist u 'MDataSet' - 11 - set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateNewHist",1302,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MHAlpha), -1, 0, 2, 1, 4, 8, 
"u 'MParList' - 1 - plist C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateNewHistFS",1455,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__JobsCintLN_MH), -1, 0, 2, 1, 4, 8, 
"u 'MParList' - 1 - plist C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanStoreSummary",1549,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanStoreResult",1438,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSrcPosCam",1266,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"u 'MDataSet' - 11 - set u 'MPointingPos' - 1 - source "
"u 'MHSrcPosCam' - 1 - srcpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJCut",451,G__JobsCint_314_0_11, 105, G__get_linked_tagnum(&G__JobsCintLN_MJCut), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_314_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'MDataSet' - 11 - set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableStorageOfSummary",2239,G__JobsCint_314_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "See SetNameSummary", (void*) NULL, 0);
   G__memfunc_setup("EnableStorageOfResult",2128,G__JobsCint_314_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "See SetNameResult", (void*) NULL, 0);
   G__memfunc_setup("EnableWriteOnly",1524,G__JobsCint_314_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableFullDisplay",1712,G__JobsCint_314_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableRandomSrcPos",1794,G__JobsCint_314_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameSummaryFile",1819,G__JobsCint_314_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameResultFile",1708,G__JobsCint_314_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameOutFile",1381,G__JobsCint_314_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameHist",1093,G__JobsCint_314_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameHistFS",1246,G__JobsCint_314_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyEstimator",1870,G__JobsCint_314_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTask' - 10 '0' task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHadronnessCalculator",2379,G__JobsCint_314_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTask' - 10 '0' task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDispCalculator",1734,G__JobsCint_314_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTask' - 10 '0' task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JobsCint_314_0_26, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_314_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_314_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_314_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_314_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_314_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_314_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_314_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_314_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJCut", 451, G__JobsCint_314_0_38, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJCut), -1, 0, 1, 1, 1, 0, "u 'MJCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJCut", 577, G__JobsCint_314_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMJSpectrum(void) {
   /* MJSpectrum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum));
   G__memfunc_setup("SetupHistEvtDist",1644,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MHn' - 1 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHistEnergyEst",1855,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MHn' - 1 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHistDisp",1337,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MHn' - 1 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupHistEnergyRes",1853,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MHn' - 1 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTask",783,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 8, 
"U 'MTask' - 1 - task C - - 10 - name "
"g - 'Bool_t' 0 'kTRUE' mustexist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadInput",908,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 4, 0, 
"u 'MParList' - 1 - plist u 'TH1D' - 1 - h1 "
"u 'TH1D' - 1 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalyzeMC",868,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 8, 
"u 'MDataSet' - 11 - set f - 'Float_t' 1 - impactmax "
"f - 'Float_t' 1 - emin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadOrigMCDistribution",2205,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 8, 
"u 'MDataSet' - 11 - set u 'TH1' - 1 - h "
"u 'MMcSpectrumWeight' - 1 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaDistribution",2070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TH1D' - 1 - temp1 u 'TH2D' - 1 - temp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHAlpha",846,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Refill",606,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'MParList' - 1 - plist u 'TH1D' - 1 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitWeighting",1338,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'MDataSet' - 11 - set u 'MMcSpectrumWeight' - 1 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupWriter",1166,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'MWriteRootFile' - 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSetup",1054,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MAlphaFitter' - 11 - fit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayResult",1365,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'TH2D' - 11 - mh1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitSpectrum",1142,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TArrayD), -1, 0, 1, 1, 4, 8, "u 'TH1D' - 1 - spectrum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplaySpectrum",1577,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JobsCintLN_TArrayD), -1, 0, 4, 1, 4, 8, 
"u 'MHCollectionArea' - 1 - area u 'TH1D' - 1 - excess "
"u 'MHEnergyEst' - 1 - hest d - 'Double_t' 0 - ontime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplaySize",1137,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'MParList' - 1 - plist d - 'Double_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayCutEfficiency",2039,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MHCollectionArea' - 11 - area0 u 'MHCollectionArea' - 11 - area1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotSame",805,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 4, 8, 
"u 'MStatusArray' - 1 - arr u 'MParList' - 1 - plist "
"C - - 10 - name C - - 10 - tab "
"C - - 10 - plot d - 'Double_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MJSpectrum",1002,G__JobsCint_321_0_21, 105, G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__JobsCint_321_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'MDataSet' - 11 - set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceTheta",997,G__JobsCint_321_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceRunTime",1203,G__JobsCint_321_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceOnTimeFit",1374,G__JobsCint_321_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyEstimator",1870,G__JobsCint_321_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTask' - 10 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FormFloat",906,G__JobsCint_321_0_27, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) G__func2void( (TString (*)(Double_t))(&MJSpectrum::FormFloat) ), 0);
   G__memfunc_setup("FormFlux",819,G__JobsCint_321_0_28, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 3, 1, 0, 
"u 'TF1' - 11 - f C - - 10 - unit", (char*)NULL, (void*) G__func2void( (TString (*)(const TF1&, const char*))(&MJSpectrum::FormFlux) ), 0);
   G__memfunc_setup("FormString",1035,G__JobsCint_321_0_29, 117, G__get_linked_tagnum(&G__JobsCintLN_TString), -1, 0, 2, 3, 1, 0, 
"u 'TF1' - 11 - f b - 'Byte_t' 0 '0' type", (char*)NULL, (void*) G__func2void( (TString (*)(const TF1&, Byte_t))(&MJSpectrum::FormString) ), 0);
   G__memfunc_setup("Class",502,G__JobsCint_321_0_30, 85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MJSpectrum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JobsCint_321_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSpectrum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JobsCint_321_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MJSpectrum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JobsCint_321_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MJSpectrum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JobsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JobsCint_321_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JobsCint_321_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSpectrum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JobsCint_321_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSpectrum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JobsCint_321_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MJSpectrum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JobsCint_321_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MJSpectrum::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MJSpectrum", 1002, G__JobsCint_321_0_42, (int) ('i'), G__get_linked_tagnum(&G__JobsCintLN_MJSpectrum), -1, 0, 1, 1, 1, 0, "u 'MJSpectrum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MJSpectrum", 1128, G__JobsCint_321_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJobsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJobsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJobsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JobsCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__JobsCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MStatusDisplay = { "MStatusDisplay" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MTime = { "MTime" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MDirIter = { "MDirIter" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MSequence = { "MSequence" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MSequenceSQL = { "MSequenceSQL" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MSequencecLcLLightCondition_t = { "MSequence::LightCondition_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MSequencecLcLFileExt_t = { "MSequence::FileExt_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MSequencecLcLRunType_t = { "MSequence::RunType_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MSequencecLcLdA = { "MSequence::$" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MSequencecLcLFileType_t = { "MSequence::FileType_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_TSQLRow = { "TSQLRow" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MSQLMagic = { "MSQLMagic" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MRead = { "MRead" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MPointingPos = { "MPointingPos" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MDataSet = { "MDataSet" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MEnv = { "MEnv" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MEvtLoop = { "MEvtLoop" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJob = { "MJob" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJobcLcLdA = { "MJob::$" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MHn = { "MHn" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MArgs = { "MArgs" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MWriteRootFile = { "MWriteRootFile" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MWriteFitsFile = { "MWriteFitsFile" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MRawRunHeader = { "MRawRunHeader" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJSimulation = { "MJSimulation" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJSimulationcLcLMode_t = { "MJSimulation::Mode_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJSimReflector = { "MJSimReflector" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJSimReflectorcLcLMode_t = { "MJSimReflector::Mode_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalib = { "MJCalib" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibcLcLStorage_t = { "MJCalib::Storage_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibcLcLDevice_t = { "MJCalib::Device_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MBadPixelsCam = { "MBadPixelsCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MPedestalCam = { "MPedestalCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MH = { "MH" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationCam = { "MCalibrationCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationCamcLcLPulserColor_t = { "MCalibrationCam::PulserColor_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MHCamera = { "MHCamera" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MExtractor = { "MExtractor" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJPedestal = { "MJPedestal" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJPedestalcLcLDisplay_t = { "MJPedestal::Display_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJPedestalcLcLExtract_t = { "MJPedestal::Extract_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJPedestalcLcLExtraction = { "MJPedestal::Extraction" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationQECam = { "MCalibrationQECam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationChargeCam = { "MCalibrationChargeCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationBlindCam = { "MCalibrationBlindCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationRelTimeCam = { "MCalibrationRelTimeCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MCalibrationChargePINDiode = { "MCalibrationChargePINDiode" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MExtractTime = { "MExtractTime" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MExtractBlindPixel = { "MExtractBlindPixel" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MHCalibrationChargeBlindCam = { "MHCalibrationChargeBlindCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibration = { "MJCalibration" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibrationcLcLDisplay_t = { "MJCalibration::Display_t" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibrationcLcLdA = { "MJCalibration::$" , 101 , -1 };
G__linked_taginfo G__JobsCintLN_MJCalibrateSignal = { "MJCalibrateSignal" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MReportFileReadCC = { "MReportFileReadCC" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MFilter = { "MFilter" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MRawFileRead = { "MRawFileRead" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJMerpp = { "MJMerpp" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJStar = { "MJStar" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MHAlpha = { "MHAlpha" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MHSrcPosCam = { "MHSrcPosCam" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJCut = { "MJCut" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MHEnergyEst = { "MHEnergyEst" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MAlphaFitter = { "MAlphaFitter" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MStatusArray = { "MStatusArray" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MHCollectionArea = { "MHCollectionArea" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MMcSpectrumWeight = { "MMcSpectrumWeight" , 99 , -1 };
G__linked_taginfo G__JobsCintLN_MJSpectrum = { "MJSpectrum" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJobsCint() {
  G__JobsCintLN_TClass.tagnum = -1 ;
  G__JobsCintLN_TBuffer.tagnum = -1 ;
  G__JobsCintLN_TMemberInspector.tagnum = -1 ;
  G__JobsCintLN_TObject.tagnum = -1 ;
  G__JobsCintLN_TCollection.tagnum = -1 ;
  G__JobsCintLN_TString.tagnum = -1 ;
  G__JobsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JobsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JobsCintLN_TList.tagnum = -1 ;
  G__JobsCintLN_TObjArray.tagnum = -1 ;
  G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JobsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JobsCintLN_TArrayI.tagnum = -1 ;
  G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__JobsCintLN_TEnv.tagnum = -1 ;
  G__JobsCintLN_TArrayD.tagnum = -1 ;
  G__JobsCintLN_MStatusDisplay.tagnum = -1 ;
  G__JobsCintLN_MParContainer.tagnum = -1 ;
  G__JobsCintLN_MTime.tagnum = -1 ;
  G__JobsCintLN_MDirIter.tagnum = -1 ;
  G__JobsCintLN_MSequence.tagnum = -1 ;
  G__JobsCintLN_MSequenceSQL.tagnum = -1 ;
  G__JobsCintLN_MSequencecLcLLightCondition_t.tagnum = -1 ;
  G__JobsCintLN_MSequencecLcLFileExt_t.tagnum = -1 ;
  G__JobsCintLN_MSequencecLcLRunType_t.tagnum = -1 ;
  G__JobsCintLN_MSequencecLcLdA.tagnum = -1 ;
  G__JobsCintLN_MSequencecLcLFileType_t.tagnum = -1 ;
  G__JobsCintLN_TSQLRow.tagnum = -1 ;
  G__JobsCintLN_TSQLResult.tagnum = -1 ;
  G__JobsCintLN_MSQLMagic.tagnum = -1 ;
  G__JobsCintLN_TChain.tagnum = -1 ;
  G__JobsCintLN_MRead.tagnum = -1 ;
  G__JobsCintLN_MPointingPos.tagnum = -1 ;
  G__JobsCintLN_MDataSet.tagnum = -1 ;
  G__JobsCintLN_MEnv.tagnum = -1 ;
  G__JobsCintLN_MEvtLoop.tagnum = -1 ;
  G__JobsCintLN_MJob.tagnum = -1 ;
  G__JobsCintLN_MJobcLcLdA.tagnum = -1 ;
  G__JobsCintLN_MHn.tagnum = -1 ;
  G__JobsCintLN_MArgs.tagnum = -1 ;
  G__JobsCintLN_MParList.tagnum = -1 ;
  G__JobsCintLN_MWriteRootFile.tagnum = -1 ;
  G__JobsCintLN_MWriteFitsFile.tagnum = -1 ;
  G__JobsCintLN_MRawRunHeader.tagnum = -1 ;
  G__JobsCintLN_MJSimulation.tagnum = -1 ;
  G__JobsCintLN_MJSimulationcLcLMode_t.tagnum = -1 ;
  G__JobsCintLN_MJSimReflector.tagnum = -1 ;
  G__JobsCintLN_MJSimReflectorcLcLMode_t.tagnum = -1 ;
  G__JobsCintLN_MJCalib.tagnum = -1 ;
  G__JobsCintLN_MJCalibcLcLStorage_t.tagnum = -1 ;
  G__JobsCintLN_MJCalibcLcLDevice_t.tagnum = -1 ;
  G__JobsCintLN_MBadPixelsCam.tagnum = -1 ;
  G__JobsCintLN_MPedestalCam.tagnum = -1 ;
  G__JobsCintLN_TH1.tagnum = -1 ;
  G__JobsCintLN_TH1D.tagnum = -1 ;
  G__JobsCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__JobsCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__JobsCintLN_TF1.tagnum = -1 ;
  G__JobsCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__JobsCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__JobsCintLN_TH2D.tagnum = -1 ;
  G__JobsCintLN_MH.tagnum = -1 ;
  G__JobsCintLN_MCalibrationCam.tagnum = -1 ;
  G__JobsCintLN_MCalibrationCamcLcLPulserColor_t.tagnum = -1 ;
  G__JobsCintLN_MHCamera.tagnum = -1 ;
  G__JobsCintLN_MExtractor.tagnum = -1 ;
  G__JobsCintLN_MJPedestal.tagnum = -1 ;
  G__JobsCintLN_MJPedestalcLcLDisplay_t.tagnum = -1 ;
  G__JobsCintLN_MJPedestalcLcLExtract_t.tagnum = -1 ;
  G__JobsCintLN_MJPedestalcLcLExtraction.tagnum = -1 ;
  G__JobsCintLN_MCalibrationQECam.tagnum = -1 ;
  G__JobsCintLN_MCalibrationChargeCam.tagnum = -1 ;
  G__JobsCintLN_MCalibrationBlindCam.tagnum = -1 ;
  G__JobsCintLN_MCalibrationRelTimeCam.tagnum = -1 ;
  G__JobsCintLN_MCalibrationChargePINDiode.tagnum = -1 ;
  G__JobsCintLN_MTask.tagnum = -1 ;
  G__JobsCintLN_MExtractTime.tagnum = -1 ;
  G__JobsCintLN_MExtractBlindPixel.tagnum = -1 ;
  G__JobsCintLN_MHCalibrationChargeBlindCam.tagnum = -1 ;
  G__JobsCintLN_MJCalibration.tagnum = -1 ;
  G__JobsCintLN_MJCalibrationcLcLDisplay_t.tagnum = -1 ;
  G__JobsCintLN_MJCalibrationcLcLdA.tagnum = -1 ;
  G__JobsCintLN_MJCalibrateSignal.tagnum = -1 ;
  G__JobsCintLN_MReportFileReadCC.tagnum = -1 ;
  G__JobsCintLN_MFilter.tagnum = -1 ;
  G__JobsCintLN_MRawFileRead.tagnum = -1 ;
  G__JobsCintLN_MJMerpp.tagnum = -1 ;
  G__JobsCintLN_MJStar.tagnum = -1 ;
  G__JobsCintLN_MHAlpha.tagnum = -1 ;
  G__JobsCintLN_MHSrcPosCam.tagnum = -1 ;
  G__JobsCintLN_MJCut.tagnum = -1 ;
  G__JobsCintLN_MHEnergyEst.tagnum = -1 ;
  G__JobsCintLN_MAlphaFitter.tagnum = -1 ;
  G__JobsCintLN_MStatusArray.tagnum = -1 ;
  G__JobsCintLN_MHCollectionArea.tagnum = -1 ;
  G__JobsCintLN_MMcSpectrumWeight.tagnum = -1 ;
  G__JobsCintLN_MJSpectrum.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJobsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TCollection);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TString);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TList);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MStatusDisplay);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MTime);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MDirIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequence),sizeof(MSequence),-1,324352,"Describes a sequences, reads and writes sequence files",G__setup_memvarMSequence,G__setup_memfuncMSequence);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequenceSQL),sizeof(MSequenceSQL),-1,323584,"Extension of MSequence to get a sequence from a database",G__setup_memvarMSequenceSQL,G__setup_memfuncMSequenceSQL);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequencecLcLLightCondition_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequencecLcLFileExt_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequencecLcLRunType_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequencecLcLdA);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSequencecLcLFileType_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TSQLRow);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TSQLResult);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MSQLMagic);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TChain);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MRead);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MPointingPos);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MDataSet),sizeof(MDataSet),-1,323840,(char*)NULL,G__setup_memvarMDataSet,G__setup_memfuncMDataSet);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MEnv);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MEvtLoop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJob),sizeof(MJob),-1,324864,"Bas class for Jobs",G__setup_memvarMJob,G__setup_memfuncMJob);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJobcLcLdA);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHn);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MArgs);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MWriteRootFile);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MWriteFitsFile);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MRawRunHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJSimulation),sizeof(MJSimulation),-1,323840,"Job to run the simulation (ceres)",G__setup_memvarMJSimulation,G__setup_memfuncMJSimulation);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJSimulationcLcLMode_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJSimReflector),sizeof(MJSimReflector),-1,323840,"Job to run the reflector simulation (reflector)",G__setup_memvarMJSimReflector,G__setup_memfuncMJSimReflector);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJSimReflectorcLcLMode_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalib),sizeof(MJCalib),-1,323840,"Base class for calibration jobs",G__setup_memvarMJCalib,G__setup_memfuncMJCalib);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibcLcLStorage_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibcLcLDevice_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MBadPixelsCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MPedestalCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MH);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationCamcLcLPulserColor_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHCamera);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MExtractor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJPedestal),sizeof(MJPedestal),-1,324864,"Tool to create a pedestal file (MPedestalCam)",G__setup_memvarMJPedestal,G__setup_memfuncMJPedestal);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJPedestalcLcLDisplay_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJPedestalcLcLExtract_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJPedestalcLcLExtraction);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationQECam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationChargeCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationBlindCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationRelTimeCam);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MCalibrationChargePINDiode);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MExtractTime);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MExtractBlindPixel);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHCalibrationChargeBlindCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibration),sizeof(MJCalibration),-1,323840,"Tool to run a calibration per pulser colour and intensity",G__setup_memvarMJCalibration,G__setup_memfuncMJCalibration);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibrationcLcLDisplay_t);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibrationcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCalibrateSignal),sizeof(MJCalibrateSignal),-1,324864,"Tool to create a pedestal file (MPedestalCam)",G__setup_memvarMJCalibrateSignal,G__setup_memfuncMJCalibrateSignal);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MReportFileReadCC);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MFilter);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MRawFileRead);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJMerpp),sizeof(MJMerpp),-1,323840,"Merging and preprocessing",G__setup_memvarMJMerpp,G__setup_memfuncMJMerpp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJStar),sizeof(MJStar),-1,323840,"Tool to create a pedestal file (MPedestalCam)",G__setup_memvarMJStar,G__setup_memfuncMJStar);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHAlpha);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHSrcPosCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJCut),sizeof(MJCut),-1,324864,"Standard program to perform g/h-separation cuts",G__setup_memvarMJCut,G__setup_memfuncMJCut);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHEnergyEst);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MAlphaFitter);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MStatusArray);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MHCollectionArea);
   G__get_linked_tagnum_fwd(&G__JobsCintLN_MMcSpectrumWeight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JobsCintLN_MJSpectrum),sizeof(MJSpectrum),-1,324864,"Proh'gram to calculate spectrum",G__setup_memvarMJSpectrum,G__setup_memfuncMJSpectrum);
}
extern "C" void G__cpp_setupJobsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupJobsCint()");
  G__set_cpp_environmentJobsCint();
  G__cpp_setup_tagtableJobsCint();

  G__cpp_setup_inheritanceJobsCint();

  G__cpp_setup_typetableJobsCint();

  G__cpp_setup_memvarJobsCint();

  G__cpp_setup_memfuncJobsCint();
  G__cpp_setup_globalJobsCint();
  G__cpp_setup_funcJobsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJobsCint();
  return;
}
class G__cpp_setup_initJobsCint {
  public:
    G__cpp_setup_initJobsCint() { G__add_setup_func("JobsCint",(G__incsetup)(&G__cpp_setupJobsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJobsCint() { G__remove_setup_func("JobsCint"); }
};
G__cpp_setup_initJobsCint G__cpp_setup_initializerJobsCint;

