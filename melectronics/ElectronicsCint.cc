//
// File generated by rootcint at Mon Nov 28 11:06:33 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ElectronicsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ElectronicsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void APD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_APD(void *p);
   static void deleteArray_APD(void *p);
   static void destruct_APD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::APD*)
   {
      ::APD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::APD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("APD", ::APD::Class_Version(), "./MAvalanchePhotoDiode.h", 13,
                  typeid(::APD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::APD::Dictionary, isa_proxy, 4,
                  sizeof(::APD) );
      instance.SetDelete(&delete_APD);
      instance.SetDeleteArray(&deleteArray_APD);
      instance.SetDestructor(&destruct_APD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::APD*)
   {
      return GenerateInitInstanceLocal((::APD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::APD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Afterpulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Afterpulse(void *p);
   static void deleteArray_Afterpulse(void *p);
   static void destruct_Afterpulse(void *p);
   static void streamer_Afterpulse(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Afterpulse*)
   {
      ::Afterpulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Afterpulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Afterpulse", ::Afterpulse::Class_Version(), "./MAvalanchePhotoDiode.h", 125,
                  typeid(::Afterpulse), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Afterpulse::Dictionary, isa_proxy, 0,
                  sizeof(::Afterpulse) );
      instance.SetDelete(&delete_Afterpulse);
      instance.SetDeleteArray(&deleteArray_Afterpulse);
      instance.SetDestructor(&destruct_Afterpulse);
      instance.SetStreamerFunc(&streamer_Afterpulse);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Afterpulse*)
   {
      return GenerateInitInstanceLocal((::Afterpulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Afterpulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAnalogSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MAnalogSignal(void *p);
   static void deleteArray_MAnalogSignal(void *p);
   static void destruct_MAnalogSignal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAnalogSignal*)
   {
      ::MAnalogSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAnalogSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAnalogSignal", ::MAnalogSignal::Class_Version(), "./MAnalogSignal.h", 12,
                  typeid(::MAnalogSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAnalogSignal::Dictionary, isa_proxy, 4,
                  sizeof(::MAnalogSignal) );
      instance.SetDelete(&delete_MAnalogSignal);
      instance.SetDeleteArray(&deleteArray_MAnalogSignal);
      instance.SetDestructor(&destruct_MAnalogSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAnalogSignal*)
   {
      return GenerateInitInstanceLocal((::MAnalogSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAnalogSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAnalogChannels_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAnalogChannels(void *p = 0);
   static void *newArray_MAnalogChannels(Long_t size, void *p);
   static void delete_MAnalogChannels(void *p);
   static void deleteArray_MAnalogChannels(void *p);
   static void destruct_MAnalogChannels(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAnalogChannels*)
   {
      ::MAnalogChannels *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAnalogChannels >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAnalogChannels", ::MAnalogChannels::Class_Version(), "./MAnalogChannels.h", 12,
                  typeid(::MAnalogChannels), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAnalogChannels::Dictionary, isa_proxy, 4,
                  sizeof(::MAnalogChannels) );
      instance.SetNew(&new_MAnalogChannels);
      instance.SetNewArray(&newArray_MAnalogChannels);
      instance.SetDelete(&delete_MAnalogChannels);
      instance.SetDeleteArray(&deleteArray_MAnalogChannels);
      instance.SetDestructor(&destruct_MAnalogChannels);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAnalogChannels*)
   {
      return GenerateInitInstanceLocal((::MAnalogChannels*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAnalogChannels*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDigitalSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDigitalSignal(void *p = 0);
   static void *newArray_MDigitalSignal(Long_t size, void *p);
   static void delete_MDigitalSignal(void *p);
   static void deleteArray_MDigitalSignal(void *p);
   static void destruct_MDigitalSignal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDigitalSignal*)
   {
      ::MDigitalSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDigitalSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDigitalSignal", ::MDigitalSignal::Class_Version(), "./MDigitalSignal.h", 11,
                  typeid(::MDigitalSignal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDigitalSignal::Dictionary, isa_proxy, 4,
                  sizeof(::MDigitalSignal) );
      instance.SetNew(&new_MDigitalSignal);
      instance.SetNewArray(&newArray_MDigitalSignal);
      instance.SetDelete(&delete_MDigitalSignal);
      instance.SetDeleteArray(&deleteArray_MDigitalSignal);
      instance.SetDestructor(&destruct_MDigitalSignal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDigitalSignal*)
   {
      return GenerateInitInstanceLocal((::MDigitalSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDigitalSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr APD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *APD::Class_Name()
{
   return "APD";
}

//______________________________________________________________________________
const char *APD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::APD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int APD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::APD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void APD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::APD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *APD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::APD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Afterpulse::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Afterpulse::Class_Name()
{
   return "Afterpulse";
}

//______________________________________________________________________________
const char *Afterpulse::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Afterpulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Afterpulse::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Afterpulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Afterpulse::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Afterpulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Afterpulse::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Afterpulse*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAnalogSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAnalogSignal::Class_Name()
{
   return "MAnalogSignal";
}

//______________________________________________________________________________
const char *MAnalogSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAnalogSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAnalogSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAnalogSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAnalogChannels::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAnalogChannels::Class_Name()
{
   return "MAnalogChannels";
}

//______________________________________________________________________________
const char *MAnalogChannels::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogChannels*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAnalogChannels::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogChannels*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAnalogChannels::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogChannels*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAnalogChannels::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAnalogChannels*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDigitalSignal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDigitalSignal::Class_Name()
{
   return "MDigitalSignal";
}

//______________________________________________________________________________
const char *MDigitalSignal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDigitalSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDigitalSignal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDigitalSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDigitalSignal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDigitalSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDigitalSignal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDigitalSignal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void APD::Streamer(TBuffer &R__b)
{
   // Stream an object of class APD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(APD::Class(),this);
   } else {
      R__b.WriteClassBuffer(APD::Class(),this);
   }
}

//______________________________________________________________________________
void APD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class APD.
      TClass *R__cl = ::APD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHist", &fHist);
      R__insp.InspectMember(fHist, "fHist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAfterpulses", &fAfterpulses);
      R__insp.InspectMember(fAfterpulses, "fAfterpulses.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrosstalkProb", &fCrosstalkProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeadTime", &fDeadTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoveryTime", &fRecoveryTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAfterpulseProb[2]", fAfterpulseProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAfterpulseTau[2]", fAfterpulseTau);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_APD(void *p) {
      delete ((::APD*)p);
   }
   static void deleteArray_APD(void *p) {
      delete [] ((::APD*)p);
   }
   static void destruct_APD(void *p) {
      typedef ::APD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::APD

//______________________________________________________________________________
void Afterpulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class Afterpulse.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fCellIndex;
      R__b >> fTime;
      R__b >> fAmplitude;
      R__b.CheckByteCount(R__s, R__c, Afterpulse::IsA());
   } else {
      R__c = R__b.WriteVersion(Afterpulse::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fCellIndex;
      R__b << fTime;
      R__b << fAmplitude;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Afterpulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Afterpulse.
      TClass *R__cl = ::Afterpulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCellIndex", &fCellIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAmplitude", &fAmplitude);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Afterpulse(void *p) {
      delete ((::Afterpulse*)p);
   }
   static void deleteArray_Afterpulse(void *p) {
      delete [] ((::Afterpulse*)p);
   }
   static void destruct_Afterpulse(void *p) {
      typedef ::Afterpulse current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Afterpulse(TBuffer &buf, void *obj) {
      ((::Afterpulse*)obj)->::Afterpulse::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Afterpulse

//______________________________________________________________________________
void MAnalogSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAnalogSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAnalogSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAnalogSignal::Class(),this);
   }
}

//______________________________________________________________________________
void MAnalogSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAnalogSignal.
      TClass *R__cl = ::MAnalogSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDer1", &fDer1);
      R__insp.InspectMember(fDer1, "fDer1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDer2", &fDer2);
      R__insp.InspectMember(fDer2, "fDer2.");
      MArrayF::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MAnalogSignal(void *p) {
      delete ((::MAnalogSignal*)p);
   }
   static void deleteArray_MAnalogSignal(void *p) {
      delete [] ((::MAnalogSignal*)p);
   }
   static void destruct_MAnalogSignal(void *p) {
      typedef ::MAnalogSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAnalogSignal

//______________________________________________________________________________
void MDigitalSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDigitalSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDigitalSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDigitalSignal::Class(),this);
   }
}

//______________________________________________________________________________
void MDigitalSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDigitalSignal.
      TClass *R__cl = ::MDigitalSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDigitalSignal(void *p) {
      return  p ? new(p) ::MDigitalSignal : new ::MDigitalSignal;
   }
   static void *newArray_MDigitalSignal(Long_t nElements, void *p) {
      return p ? new(p) ::MDigitalSignal[nElements] : new ::MDigitalSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDigitalSignal(void *p) {
      delete ((::MDigitalSignal*)p);
   }
   static void deleteArray_MDigitalSignal(void *p) {
      delete [] ((::MDigitalSignal*)p);
   }
   static void destruct_MDigitalSignal(void *p) {
      typedef ::MDigitalSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDigitalSignal

//______________________________________________________________________________
void MAnalogChannels::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAnalogChannels.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAnalogChannels::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAnalogChannels::Class(),this);
   }
}

//______________________________________________________________________________
void MAnalogChannels::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAnalogChannels.
      TClass *R__cl = ::MAnalogChannels::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValidRangeMin", &fValidRangeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValidRangeMax", &fValidRangeMax);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MAnalogChannels(void *p) {
      return  p ? new(p) ::MAnalogChannels : new ::MAnalogChannels;
   }
   static void *newArray_MAnalogChannels(Long_t nElements, void *p) {
      return p ? new(p) ::MAnalogChannels[nElements] : new ::MAnalogChannels[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAnalogChannels(void *p) {
      delete ((::MAnalogChannels*)p);
   }
   static void deleteArray_MAnalogChannels(void *p) {
      delete [] ((::MAnalogChannels*)p);
   }
   static void destruct_MAnalogChannels(void *p) {
      typedef ::MAnalogChannels current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAnalogChannels

/********************************************************
* ElectronicsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableElectronicsCint();

extern "C" void G__set_cpp_environmentElectronicsCint() {
  G__cpp_reset_tagtableElectronicsCint();
}
#include <new>
extern "C" int G__cpp_dllrevElectronicsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* APD */
static int G__ElectronicsCint_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   APD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new APD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) APD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new APD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) APD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new APD((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) APD((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new APD((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) APD((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_APD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->SetAfterpulse1((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->SetAfterpulse2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->SetAfterpulseProb((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetCellContent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const APD*) G__getstructoffset())->GetNumCellsX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetCrosstalkProb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetDeadTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetRecoveryTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetRelaxationTime((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetRelaxationTime());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const APD*) G__getstructoffset())->GetLastHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSortedList& obj = ((APD*) G__getstructoffset())->GetListOfAfterpulses();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const APD*) G__getstructoffset())->CountDeadCells((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const APD*) G__getstructoffset())->CountDeadCells());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const APD*) G__getstructoffset())->CountRecoveringCells((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const APD*) G__getstructoffset())->CountRecoveringCells());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitCell((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitCell((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitRandomCell((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitRandomCell());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((APD*) G__getstructoffset())->FillEmpty((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((APD*) G__getstructoffset())->FillEmpty();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((APD*) G__getstructoffset())->FillRandom((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((APD*) G__getstructoffset())->FillRandom((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->Evolve((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->DeleteAfterpulses();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->Init((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->ShiftTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->ShiftTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitRandomCellRelative((Float_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->HitRandomCellRelative());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->Relax((Double_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((APD*) G__getstructoffset())->Relax((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->IncreaseTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((APD*) G__getstructoffset())->DrawCopy((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((APD*) G__getstructoffset())->DrawCopy();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) APD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) APD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) APD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      APD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((APD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) APD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) APD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) APD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_178_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) APD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef APD G__TAPD;
static int G__ElectronicsCint_178_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (APD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((APD*) (soff+(sizeof(APD)*i)))->~G__TAPD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (APD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((APD*) (soff))->~G__TAPD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Afterpulse */
static int G__ElectronicsCint_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Afterpulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Afterpulse((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) Afterpulse((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Afterpulse*) G__getstructoffset())->GetCellIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Afterpulse*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Afterpulse*) G__getstructoffset())->GetAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Afterpulse*) G__getstructoffset())->Process(*(APD*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Afterpulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Afterpulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Afterpulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Afterpulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Afterpulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Afterpulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Afterpulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Afterpulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_179_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Afterpulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ElectronicsCint_179_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Afterpulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Afterpulse(*(Afterpulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Afterpulse G__TAfterpulse;
static int G__ElectronicsCint_179_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Afterpulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Afterpulse*) (soff+(sizeof(Afterpulse)*i)))->~G__TAfterpulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Afterpulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Afterpulse*) (soff))->~G__TAfterpulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ElectronicsCint_179_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Afterpulse* dest = (Afterpulse*) G__getstructoffset();
   *dest = *(Afterpulse*) libp->para[0].ref;
   const Afterpulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAnalogSignal */
static int G__ElectronicsCint_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAnalogSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAnalogSignal((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MAnalogSignal((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MAnalogSignal*) G__getstructoffset())->AddPulse(*(MSpline3*) libp->para[0].ref, (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MAnalogSignal*) G__getstructoffset())->AddPulse(*(MSpline3*) libp->para[0].ref, (Float_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MAnalogSignal*) G__getstructoffset())->AddPulse(*(TF1*) libp->para[0].ref, (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MAnalogSignal*) G__getstructoffset())->AddPulse(*(TF1*) libp->para[0].ref, (Float_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MAnalogSignal*) G__getstructoffset())->AddSignal(*(MAnalogSignal*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MAnalogSignal*) G__getstructoffset())->AddSignal(*(MAnalogSignal*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MAnalogSignal*) G__getstructoffset())->AddSignal(*(MAnalogSignal*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogSignal*) G__getstructoffset())->AddRandomPulses(*(MSpline3*) libp->para[0].ref, (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MAnalogSignal*) G__getstructoffset())->AddGaussianNoise((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MAnalogSignal*) G__getstructoffset())->AddGaussianNoise((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MAnalogSignal*) G__getstructoffset())->AddGaussianNoise();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((const MAnalogSignal*) G__getstructoffset())->Discriminate((Float_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const MAnalogSignal*) G__getstructoffset())->Discriminate((Float_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MAnalogSignal*) G__getstructoffset())->Discriminate((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MAnalogSignal*) G__getstructoffset())->Discriminate((Float_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAnalogSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAnalogSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAnalogSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAnalogSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_208_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAnalogSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ElectronicsCint_208_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MAnalogSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MAnalogSignal(*(MAnalogSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAnalogSignal G__TMAnalogSignal;
static int G__ElectronicsCint_208_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAnalogSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAnalogSignal*) (soff+(sizeof(MAnalogSignal)*i)))->~G__TMAnalogSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAnalogSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAnalogSignal*) (soff))->~G__TMAnalogSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ElectronicsCint_208_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAnalogSignal* dest = (MAnalogSignal*) G__getstructoffset();
   *dest = *(MAnalogSignal*) libp->para[0].ref;
   const MAnalogSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAnalogChannels */
static int G__ElectronicsCint_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAnalogChannels* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAnalogChannels((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MAnalogChannels((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAnalogChannels((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MAnalogChannels((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MAnalogChannels[n];
       } else {
         p = new((void*) gvp) MAnalogChannels[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MAnalogChannels;
       } else {
         p = new((void*) gvp) MAnalogChannels;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAnalogChannels* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAnalogChannels(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MAnalogChannels(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAnalogChannels(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MAnalogChannels(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAnalogChannels((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MAnalogChannels((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogChannels*) G__getstructoffset())->Init((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogChannels*) G__getstructoffset())->InitNumChannels((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogChannels*) G__getstructoffset())->InitLenChannels((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAnalogSignal& obj = ((MAnalogChannels*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MAnalogChannels*) G__getstructoffset())->operator()((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MAnalogSignal& obj = ((const MAnalogChannels*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAnalogChannels*) G__getstructoffset())->operator()((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MAnalogChannels*) G__getstructoffset())->GetNumChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MAnalogChannels*) G__getstructoffset())->GetNumSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogChannels*) G__getstructoffset())->SetValidRange((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAnalogChannels*) G__getstructoffset())->GetValidRangeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MAnalogChannels*) G__getstructoffset())->GetValidRangeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAnalogChannels::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogChannels::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAnalogChannels::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAnalogChannels::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAnalogChannels*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogChannels::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAnalogChannels::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAnalogChannels::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_218_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAnalogChannels::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ElectronicsCint_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MAnalogChannels* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MAnalogChannels(*(MAnalogChannels*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAnalogChannels G__TMAnalogChannels;
static int G__ElectronicsCint_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAnalogChannels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAnalogChannels*) (soff+(sizeof(MAnalogChannels)*i)))->~G__TMAnalogChannels();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAnalogChannels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAnalogChannels*) (soff))->~G__TMAnalogChannels();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ElectronicsCint_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAnalogChannels* dest = (MAnalogChannels*) G__getstructoffset();
   *dest = *(MAnalogChannels*) libp->para[0].ref;
   const MAnalogChannels& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDigitalSignal */
static int G__ElectronicsCint_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDigitalSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDigitalSignal((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MDigitalSignal((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDigitalSignal((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) MDigitalSignal((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDigitalSignal[n];
       } else {
         p = new((void*) gvp) MDigitalSignal[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDigitalSignal;
       } else {
         p = new((void*) gvp) MDigitalSignal;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDigitalSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDigitalSignal(*(MDigitalSignal*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MDigitalSignal(*(MDigitalSignal*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDigitalSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDigitalSignal(*(MDigitalSignal*) libp->para[0].ref, *(MDigitalSignal*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) MDigitalSignal(*(MDigitalSignal*) libp->para[0].ref, *(MDigitalSignal*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MDigitalSignal*) G__getstructoffset())->SetIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MDigitalSignal*) G__getstructoffset())->SetIndex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDigitalSignal*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MDigitalSignal*) G__getstructoffset())->GetStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MDigitalSignal*) G__getstructoffset())->GetEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MDigitalSignal*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MDigitalSignal*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDigitalSignal*) G__getstructoffset())->IsConnected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDigitalSignal*) G__getstructoffset())->Overlap(*(TObject*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MDigitalSignal*) G__getstructoffset())->Combine(*(TObject*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MDigitalSignal* pobj;
         const MDigitalSignal xobj = ((const MDigitalSignal*) G__getstructoffset())->GetCoincidence(*(MDigitalSignal*) libp->para[0].ref);
         pobj = new MDigitalSignal(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MDigitalSignal* pobj;
         const MDigitalSignal xobj = ((const MDigitalSignal*) G__getstructoffset())->operator&&(*(MDigitalSignal*) libp->para[0].ref);
         pobj = new MDigitalSignal(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MDigitalSignal* pobj;
         const MDigitalSignal xobj = ((const MDigitalSignal*) G__getstructoffset())->operator||(*(MDigitalSignal*) libp->para[0].ref);
         pobj = new MDigitalSignal(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDigitalSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDigitalSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDigitalSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDigitalSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDigitalSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDigitalSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDigitalSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDigitalSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ElectronicsCint_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDigitalSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDigitalSignal G__TMDigitalSignal;
static int G__ElectronicsCint_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDigitalSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDigitalSignal*) (soff+(sizeof(MDigitalSignal)*i)))->~G__TMDigitalSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDigitalSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDigitalSignal*) (soff))->~G__TMDigitalSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ElectronicsCint_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDigitalSignal* dest = (MDigitalSignal*) G__getstructoffset();
   *dest = *(MDigitalSignal*) libp->para[0].ref;
   const MDigitalSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* APD */

/* Afterpulse */

/* MAnalogSignal */

/* MAnalogChannels */

/* MDigitalSignal */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncElectronicsCint {
 public:
  G__Sizep2memfuncElectronicsCint(): p(&G__Sizep2memfuncElectronicsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncElectronicsCint::*p)();
};

size_t G__get_sizep2memfuncElectronicsCint()
{
  G__Sizep2memfuncElectronicsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceElectronicsCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ElectronicsCintLN_APD))) {
     APD *G__Lderived;
     G__Lderived=(APD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_APD),G__get_linked_tagnum(&G__ElectronicsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse))) {
     Afterpulse *G__Lderived;
     G__Lderived=(Afterpulse*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse),G__get_linked_tagnum(&G__ElectronicsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal))) {
     MAnalogSignal *G__Lderived;
     G__Lderived=(MAnalogSignal*)0x1000;
     {
       MArrayF *G__Lpbase=(MArrayF*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal),G__get_linked_tagnum(&G__ElectronicsCintLN_MArrayF),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal),G__get_linked_tagnum(&G__ElectronicsCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal),G__get_linked_tagnum(&G__ElectronicsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels))) {
     MAnalogChannels *G__Lderived;
     G__Lderived=(MAnalogChannels*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels),G__get_linked_tagnum(&G__ElectronicsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels),G__get_linked_tagnum(&G__ElectronicsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal))) {
     MDigitalSignal *G__Lderived;
     G__Lderived=(MDigitalSignal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal),G__get_linked_tagnum(&G__ElectronicsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableElectronicsCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* APD */
static void G__setup_memvarAPD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_APD));
   { APD *p; p=(APD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TH2F),-1,-1,4,"fHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TSortedList),-1,-1,4,"fAfterpulses=",0,"! List of produced afterpulses");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCrosstalkProb=",0,"Probability that a converted photon creates another one in a neighboring cell");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDeadTime=",0,"Deadtime of a single cell after a hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRecoveryTime=",0,"Recoverytime after Deadtime (1-exp(-t/fRecoveryTime)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAfterpulseProb[2]=",0,"Afterpulse probabilities");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAfterpulseTau[2]=",0,"Afterpulse time constants");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"A user settable time of the system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Afterpulse */
static void G__setup_memvarAfterpulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse));
   { Afterpulse *p; p=(Afterpulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCellIndex=",0,"Index of G-APD cell the afterpulse belongs to");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"Time at which the afterpulse avalanch broke through");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAmplitude=",0,"Amplitude (crosstalk!) the pulse produced");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAnalogSignal */
static void G__setup_memvarMAnalogSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal));
   { MAnalogSignal *p; p=(MAnalogSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_MArrayF),-1,-1,4,"fDer1=",0,"! Buffer for the derivatives of the corresponding spline");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_MArrayF),-1,-1,4,"fDer2=",0,"! Buffer for the derivatives of the corresponding spline");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAnalogChannels */
static void G__setup_memvarMAnalogChannels(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels));
   { MAnalogChannels *p; p=(MAnalogChannels*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TObjArray),-1,-1,4,"fArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fValidRangeMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fValidRangeMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDigitalSignal */
static void G__setup_memvarMDigitalSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal));
   { MDigitalSignal *p; p=(MDigitalSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ElectronicsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarElectronicsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAPD(void) {
   /* APD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_APD));
   G__memfunc_setup("HitCellImp",971,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateAfterpulse",1862,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"h - 'UInt_t' 0 - cell i - 'Int_t' 0 - idx "
"d - 'Double_t' 0 - charge d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessAfterpulses",1901,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"f - 'Float_t' 0 - time f - 'Float_t' 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteAfterpulses",1761,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "f - 'Float_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("APD",213,G__ElectronicsCint_178_0_5, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_APD), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n f - 'Float_t' 0 '0' prob "
"f - 'Float_t' 0 '0' dt f - 'Float_t' 0 '0' rt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAfterpulse1",1400,G__ElectronicsCint_178_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p d - 'Double_t' 0 - tau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAfterpulse2",1401,G__ElectronicsCint_178_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p d - 'Double_t' 0 - tau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAfterpulseProb",1754,G__ElectronicsCint_178_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p1 d - 'Double_t' 0 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellContent",1403,G__ElectronicsCint_178_0_9, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumCellsX",1179,G__ElectronicsCint_178_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrosstalkProb",1641,G__ElectronicsCint_178_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeadTime",1053,G__ElectronicsCint_178_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoveryTime",1534,G__ElectronicsCint_178_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__ElectronicsCint_178_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelaxationTime",1734,G__ElectronicsCint_178_0_15, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "f - 'Float_t' 0 '0.001' threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastHit",985,G__ElectronicsCint_178_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfAfterpulses",2047,G__ElectronicsCint_178_0_17, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_TSortedList), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountDeadCells",1386,G__ElectronicsCint_178_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountRecoveringCells",2064,G__ElectronicsCint_178_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitCell",677,G__ElectronicsCint_178_0_20, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitRandomCell",1286,G__ElectronicsCint_178_0_21, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEmpty",918,G__ElectronicsCint_178_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillRandom",1000,G__ElectronicsCint_178_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - rate f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Evolve",625,G__ElectronicsCint_178_0_24, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - freq d - 'Double_t' 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteAfterpulses",1761,G__ElectronicsCint_178_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ElectronicsCint_178_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShiftTime",909,G__ElectronicsCint_178_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShiftTime",909,G__ElectronicsCint_178_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitRandomCellRelative",2114,G__ElectronicsCint_178_0_29, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Relax",508,G__ElectronicsCint_178_0_30, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - freq f - 'Float_t' 0 '0.001' threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncreaseTime",1209,G__ElectronicsCint_178_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCopy",809,G__ElectronicsCint_178_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ElectronicsCint_178_0_34, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&APD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ElectronicsCint_178_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&APD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ElectronicsCint_178_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&APD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ElectronicsCint_178_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&APD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ElectronicsCint_178_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ElectronicsCint_178_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&APD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ElectronicsCint_178_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&APD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ElectronicsCint_178_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&APD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ElectronicsCint_178_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&APD::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~APD", 339, G__ElectronicsCint_178_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAfterpulse(void) {
   /* Afterpulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse));
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Afterpulse",1051,G__ElectronicsCint_179_0_3, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - idx f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellIndex",1176,G__ElectronicsCint_179_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__ElectronicsCint_179_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmplitude",1221,G__ElectronicsCint_179_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__ElectronicsCint_179_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'APD' - 1 - apd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ElectronicsCint_179_0_8, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Afterpulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ElectronicsCint_179_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Afterpulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ElectronicsCint_179_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Afterpulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ElectronicsCint_179_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Afterpulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ElectronicsCint_179_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ElectronicsCint_179_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Afterpulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ElectronicsCint_179_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Afterpulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ElectronicsCint_179_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Afterpulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ElectronicsCint_179_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Afterpulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Afterpulse", 1051, G__ElectronicsCint_179_0_20, (int) ('i'), G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse), -1, 0, 1, 1, 1, 0, "u 'Afterpulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Afterpulse", 1177, G__ElectronicsCint_179_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ElectronicsCint_179_0_22, (int) ('u'), G__get_linked_tagnum(&G__ElectronicsCintLN_Afterpulse), -1, 1, 1, 1, 1, 0, "u 'Afterpulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAnalogSignal(void) {
   /* MAnalogSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal));
   G__memfunc_setup("MAnalogSignal",1277,G__ElectronicsCint_208_0_1, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPulse",786,G__ElectronicsCint_208_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MSpline3' - 11 - spline f - 'Float_t' 0 - t "
"f - 'Float_t' 0 '1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPulse",786,G__ElectronicsCint_208_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'TF1' - 11 - f1 f - 'Float_t' 0 - t "
"f - 'Float_t' 0 '1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSignal",871,G__ElectronicsCint_208_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'MAnalogSignal' - 11 - s i - 'Int_t' 0 '0' delay "
"f - 'Float_t' 0 '1.0' dampingFact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRandomPulses",1510,G__ElectronicsCint_208_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MSpline3' - 11 - spline f - 'Float_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGaussianNoise",1602,G__ElectronicsCint_208_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 '1' amplitude f - 'Float_t' 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Discriminate",1244,G__ElectronicsCint_208_0_8, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TObjArray), -1, 0, 4, 1, 1, 8, 
"f - 'Float_t' 0 - threshold d - 'Double_t' 0 - start "
"d - 'Double_t' 0 - end f - 'Float_t' 0 '-1' len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Discriminate",1244,G__ElectronicsCint_208_0_9, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TObjArray), -1, 0, 2, 1, 1, 8, 
"f - 'Float_t' 0 - threshold f - 'Float_t' 0 '-1' len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ElectronicsCint_208_0_10, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAnalogSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ElectronicsCint_208_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ElectronicsCint_208_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAnalogSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ElectronicsCint_208_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAnalogSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ElectronicsCint_208_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ElectronicsCint_208_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ElectronicsCint_208_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAnalogSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ElectronicsCint_208_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ElectronicsCint_208_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAnalogSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MAnalogSignal", 1277, G__ElectronicsCint_208_0_22, (int) ('i'), G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 0, 1, 1, 1, 0, "u 'MAnalogSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MAnalogSignal", 1403, G__ElectronicsCint_208_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ElectronicsCint_208_0_24, (int) ('u'), G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 1, 1, 1, 1, 0, "u 'MAnalogSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAnalogChannels(void) {
   /* MAnalogChannels */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels));
   G__memfunc_setup("MAnalogChannels",1483,G__ElectronicsCint_218_0_1, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MAnalogChannels",1483,G__ElectronicsCint_218_0_2, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n i - 'Int_t' 0 - len "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__ElectronicsCint_218_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n h - 'UInt_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitNumChannels",1520,G__ElectronicsCint_218_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitLenChannels",1503,G__ElectronicsCint_218_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ElectronicsCint_218_0_7, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__ElectronicsCint_218_0_8, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ElectronicsCint_218_0_9, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__ElectronicsCint_218_0_10, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogSignal), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumChannels",1404,G__ElectronicsCint_218_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSamples",1317,G__ElectronicsCint_218_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidRange",1289,G__ElectronicsCint_218_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - min i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidRangeMin",1569,G__ElectronicsCint_218_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidRangeMax",1571,G__ElectronicsCint_218_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ElectronicsCint_218_0_16, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAnalogChannels::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ElectronicsCint_218_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogChannels::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ElectronicsCint_218_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAnalogChannels::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ElectronicsCint_218_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAnalogChannels::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ElectronicsCint_218_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ElectronicsCint_218_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogChannels::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ElectronicsCint_218_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAnalogChannels::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ElectronicsCint_218_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAnalogChannels::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ElectronicsCint_218_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAnalogChannels::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MAnalogChannels", 1483, G__ElectronicsCint_218_0_28, (int) ('i'), G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels), -1, 0, 1, 1, 1, 0, "u 'MAnalogChannels' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MAnalogChannels", 1609, G__ElectronicsCint_218_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ElectronicsCint_218_0_30, (int) ('u'), G__get_linked_tagnum(&G__ElectronicsCintLN_MAnalogChannels), -1, 1, 1, 1, 1, 0, "u 'MAnalogChannels' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDigitalSignal(void) {
   /* MDigitalSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal));
   G__memfunc_setup("MDigitalSignal",1385,G__ElectronicsCint_219_0_1, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' start d - 'Double_t' 0 '1e12' len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDigitalSignal",1385,G__ElectronicsCint_219_0_2, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 1, 1, 1, 0, "u 'MDigitalSignal' - 11 - ttl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDigitalSignal",1385,G__ElectronicsCint_219_0_3, 105, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 2, 1, 1, 0, 
"u 'MDigitalSignal' - 11 - ttl1 u 'MDigitalSignal' - 11 - ttl2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__ElectronicsCint_219_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__ElectronicsCint_219_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStart",814,G__ElectronicsCint_219_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnd",567,G__ElectronicsCint_219_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__ElectronicsCint_219_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__ElectronicsCint_219_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConnected",1103,G__ElectronicsCint_219_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Overlap",729,G__ElectronicsCint_219_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TObject' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combine",701,G__ElectronicsCint_219_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TObject' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoincidence",1396,G__ElectronicsCint_219_0_16, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 1, 1, 1, 8, "u 'MDigitalSignal' - 11 - ttl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator&&",952,G__ElectronicsCint_219_0_17, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 1, 1, 1, 9, "u 'MDigitalSignal' - 11 - ttl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator||",1124,G__ElectronicsCint_219_0_18, 117, G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 0, 1, 1, 1, 9, "u 'MDigitalSignal' - 11 - ttl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ElectronicsCint_219_0_19, 85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDigitalSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ElectronicsCint_219_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDigitalSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ElectronicsCint_219_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDigitalSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ElectronicsCint_219_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDigitalSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ElectronicsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ElectronicsCint_219_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ElectronicsCint_219_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDigitalSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ElectronicsCint_219_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDigitalSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ElectronicsCint_219_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDigitalSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ElectronicsCint_219_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDigitalSignal::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDigitalSignal", 1511, G__ElectronicsCint_219_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ElectronicsCint_219_0_32, (int) ('u'), G__get_linked_tagnum(&G__ElectronicsCintLN_MDigitalSignal), -1, 1, 1, 1, 1, 0, "u 'MDigitalSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncElectronicsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalElectronicsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcElectronicsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ElectronicsCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ElectronicsCintLN_TSortedList = { "TSortedList" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_APD = { "APD" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_Afterpulse = { "Afterpulse" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MArray = { "MArray" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MArrayF = { "MArrayF" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MSpline3 = { "MSpline3" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MAnalogSignal = { "MAnalogSignal" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MAnalogChannels = { "MAnalogChannels" , 99 , -1 };
G__linked_taginfo G__ElectronicsCintLN_MDigitalSignal = { "MDigitalSignal" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableElectronicsCint() {
  G__ElectronicsCintLN_TClass.tagnum = -1 ;
  G__ElectronicsCintLN_TBuffer.tagnum = -1 ;
  G__ElectronicsCintLN_TMemberInspector.tagnum = -1 ;
  G__ElectronicsCintLN_TObject.tagnum = -1 ;
  G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ElectronicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ElectronicsCintLN_TObjArray.tagnum = -1 ;
  G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ElectronicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ElectronicsCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ElectronicsCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ElectronicsCintLN_TF1.tagnum = -1 ;
  G__ElectronicsCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ElectronicsCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ElectronicsCintLN_TH2F.tagnum = -1 ;
  G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ElectronicsCintLN_TSortedList.tagnum = -1 ;
  G__ElectronicsCintLN_APD.tagnum = -1 ;
  G__ElectronicsCintLN_Afterpulse.tagnum = -1 ;
  G__ElectronicsCintLN_MArray.tagnum = -1 ;
  G__ElectronicsCintLN_MArrayF.tagnum = -1 ;
  G__ElectronicsCintLN_MSpline3.tagnum = -1 ;
  G__ElectronicsCintLN_MAnalogSignal.tagnum = -1 ;
  G__ElectronicsCintLN_MParContainer.tagnum = -1 ;
  G__ElectronicsCintLN_MAnalogChannels.tagnum = -1 ;
  G__ElectronicsCintLN_MDigitalSignal.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableElectronicsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_TSortedList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_APD),sizeof(APD),-1,323584,"An object representing a Geigermode APD",G__setup_memvarAPD,G__setup_memfuncAPD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_Afterpulse),sizeof(Afterpulse),-1,61440,"An Afterpulse object",G__setup_memvarAfterpulse,G__setup_memfuncAfterpulse);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MArray);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MArrayF);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MSpline3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MAnalogSignal),sizeof(MAnalogSignal),-1,323584,"Storage class for an analog signal",G__setup_memvarMAnalogSignal,G__setup_memfuncMAnalogSignal);
   G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MParContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MAnalogChannels),sizeof(MAnalogChannels),-1,324864,"Parameter container for a collection of analog signals",G__setup_memvarMAnalogChannels,G__setup_memfuncMAnalogChannels);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ElectronicsCintLN_MDigitalSignal),sizeof(MDigitalSignal),-1,324352,"A digital signal with a start time and a length",G__setup_memvarMDigitalSignal,G__setup_memfuncMDigitalSignal);
}
extern "C" void G__cpp_setupElectronicsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupElectronicsCint()");
  G__set_cpp_environmentElectronicsCint();
  G__cpp_setup_tagtableElectronicsCint();

  G__cpp_setup_inheritanceElectronicsCint();

  G__cpp_setup_typetableElectronicsCint();

  G__cpp_setup_memvarElectronicsCint();

  G__cpp_setup_memfuncElectronicsCint();
  G__cpp_setup_globalElectronicsCint();
  G__cpp_setup_funcElectronicsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncElectronicsCint();
  return;
}
class G__cpp_setup_initElectronicsCint {
  public:
    G__cpp_setup_initElectronicsCint() { G__add_setup_func("ElectronicsCint",(G__incsetup)(&G__cpp_setupElectronicsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initElectronicsCint() { G__remove_setup_func("ElectronicsCint"); }
};
G__cpp_setup_initElectronicsCint G__cpp_setup_initializerElectronicsCint;

