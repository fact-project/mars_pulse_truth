#!/bin/sh
#
# ========================================================================
#
# *
# * This file is part of MARS, the MAGIC Analysis and Reconstruction
# * Software. It is distributed to you in the hope that it can be a useful
# * and timesaving tool in analysing Data of imaging Cerenkov telescopes.
# * It is distributed WITHOUT ANY WARRANTY.
# *
# * Permission to use, copy, modify and distribute this software and its
# * documentation for any purpose is hereby granted without fee,
# * provided that the above copyright notice appear in all copies and
# * that both that copyright notice and this permission notice appear
# * in supporting documentation. It is provided "as is" without express
# * or implied warranty.
# *
#
#
#   Author(s): Daniela Dorner  08/2004 <mailto:dorner@astro.uni-wuerzburg.de>
#
#   Copyright: MAGIC Software Development, 2000-2007
#
#
# ========================================================================
#
# This script launches the excluding of runs for all days for which 
# this step is needed. 
#
# After checking if the script is already running the todolist is written.
# Then the run are excluded for each date in the todolist using the 
# macro doexclusions.C
# If this was successful, the status is inserted into the database using 
# the function setstatus.
#

source `dirname $0`/sourcefile
printprocesslog "INFO starting $0"
program=doexclusions
column=fExclusionsDone

set -C

# check if the script is already running
lockfile=$lockpath/lock-$program.txt
checklock 

# get todo list
gettodo 

cd $mars

# do exclusions for each date in the todo file
for (( s=0 ; s < $num ; s++ ))
do
   date=${primaries[$s+$s]}
   telnum=${primaries[$s+$s+1]}
   printprocesslog "INFO do exclusions for $date $date"
   year2=`echo $date | cut -c 1-4`
   doexclusionspath=$logpath/$program/$year2
   makedir $doexclusionspath 
   doexclusionslog=$doexclusionspath/doexclusions-$date.log

   setstatus "start" 

   check1=`root -q -b $macrospath/doexclusions.C+\("\"$date\""\,$telnum\,kFALSE\) | tee $doexclusionslog | intgrep`

   case $check1 in
      1)   printprocesslog "INFO exclusions successfully done for $date (check1=$check1)"
           ;;
      0)   printprocesslog "WARN connection to DB failed (check1=$check1)"
           check="no"
           ;;
      *)   printprocesslog "ERROR $program.C failed (check1=$check1)"
           com=$Fdoexcl
           check=$check1
           ;;
   esac
   
   setstatus "stop" 
done

finish 

