//
// File generated by rootcint at Mon Nov 28 11:05:10 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AstroCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AstroCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MVector3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MVector3(void *p = 0);
   static void *newArray_MVector3(Long_t size, void *p);
   static void delete_MVector3(void *p);
   static void deleteArray_MVector3(void *p);
   static void destruct_MVector3(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MVector3*)
   {
      ::MVector3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MVector3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MVector3", ::MVector3::Class_Version(), "./MVector3.h", 9,
                  typeid(::MVector3), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MVector3::Dictionary, isa_proxy, 4,
                  sizeof(::MVector3) );
      instance.SetNew(&new_MVector3);
      instance.SetNewArray(&newArray_MVector3);
      instance.SetDelete(&delete_MVector3);
      instance.SetDeleteArray(&deleteArray_MVector3);
      instance.SetDestructor(&destruct_MVector3);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MVector3*)
   {
      return GenerateInitInstanceLocal((::MVector3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MVector3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAstro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAstro(void *p = 0);
   static void *newArray_MAstro(Long_t size, void *p);
   static void delete_MAstro(void *p);
   static void deleteArray_MAstro(void *p);
   static void destruct_MAstro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAstro*)
   {
      ::MAstro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAstro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAstro", ::MAstro::Class_Version(), "./MAstro.h", 16,
                  typeid(::MAstro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAstro::Dictionary, isa_proxy, 4,
                  sizeof(::MAstro) );
      instance.SetNew(&new_MAstro);
      instance.SetNewArray(&newArray_MAstro);
      instance.SetDelete(&delete_MAstro);
      instance.SetDeleteArray(&deleteArray_MAstro);
      instance.SetDestructor(&destruct_MAstro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAstro*)
   {
      return GenerateInitInstanceLocal((::MAstro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAstro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MObservatory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MObservatory(void *p = 0);
   static void *newArray_MObservatory(Long_t size, void *p);
   static void delete_MObservatory(void *p);
   static void deleteArray_MObservatory(void *p);
   static void destruct_MObservatory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MObservatory*)
   {
      ::MObservatory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MObservatory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MObservatory", ::MObservatory::Class_Version(), "./MObservatory.h", 12,
                  typeid(::MObservatory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MObservatory::Dictionary, isa_proxy, 4,
                  sizeof(::MObservatory) );
      instance.SetNew(&new_MObservatory);
      instance.SetNewArray(&newArray_MObservatory);
      instance.SetDelete(&delete_MObservatory);
      instance.SetDeleteArray(&deleteArray_MObservatory);
      instance.SetDestructor(&destruct_MObservatory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MObservatory*)
   {
      return GenerateInitInstanceLocal((::MObservatory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MObservatory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAstroSky2Local_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MAstroSky2Local(void *p);
   static void deleteArray_MAstroSky2Local(void *p);
   static void destruct_MAstroSky2Local(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAstroSky2Local*)
   {
      ::MAstroSky2Local *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAstroSky2Local >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAstroSky2Local", ::MAstroSky2Local::Class_Version(), "./MAstroSky2Local.h", 12,
                  typeid(::MAstroSky2Local), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAstroSky2Local::Dictionary, isa_proxy, 4,
                  sizeof(::MAstroSky2Local) );
      instance.SetDelete(&delete_MAstroSky2Local);
      instance.SetDeleteArray(&deleteArray_MAstroSky2Local);
      instance.SetDestructor(&destruct_MAstroSky2Local);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAstroSky2Local*)
   {
      return GenerateInitInstanceLocal((::MAstroSky2Local*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAstroSky2Local*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAttLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAttLine(void *p = 0);
   static void *newArray_MAttLine(Long_t size, void *p);
   static void delete_MAttLine(void *p);
   static void deleteArray_MAttLine(void *p);
   static void destruct_MAttLine(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAttLine*)
   {
      ::MAttLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAttLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAttLine", ::MAttLine::Class_Version(), "./MAstroCatalog.h", 27,
                  typeid(::MAttLine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAttLine::Dictionary, isa_proxy, 4,
                  sizeof(::MAttLine) );
      instance.SetNew(&new_MAttLine);
      instance.SetNewArray(&newArray_MAttLine);
      instance.SetDelete(&delete_MAttLine);
      instance.SetDeleteArray(&deleteArray_MAttLine);
      instance.SetDestructor(&destruct_MAttLine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAttLine*)
   {
      return GenerateInitInstanceLocal((::MAttLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAttLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAstroCatalog_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAstroCatalog(void *p = 0);
   static void *newArray_MAstroCatalog(Long_t size, void *p);
   static void delete_MAstroCatalog(void *p);
   static void deleteArray_MAstroCatalog(void *p);
   static void destruct_MAstroCatalog(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAstroCatalog*)
   {
      ::MAstroCatalog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAstroCatalog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAstroCatalog", ::MAstroCatalog::Class_Version(), "./MAstroCatalog.h", 34,
                  typeid(::MAstroCatalog), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAstroCatalog::Dictionary, isa_proxy, 4,
                  sizeof(::MAstroCatalog) );
      instance.SetNew(&new_MAstroCatalog);
      instance.SetNewArray(&newArray_MAstroCatalog);
      instance.SetDelete(&delete_MAstroCatalog);
      instance.SetDeleteArray(&deleteArray_MAstroCatalog);
      instance.SetDestructor(&destruct_MAstroCatalog);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAstroCatalog*)
   {
      return GenerateInitInstanceLocal((::MAstroCatalog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAstroCatalog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MAstroCamera_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MAstroCamera(void *p = 0);
   static void *newArray_MAstroCamera(Long_t size, void *p);
   static void delete_MAstroCamera(void *p);
   static void deleteArray_MAstroCamera(void *p);
   static void destruct_MAstroCamera(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MAstroCamera*)
   {
      ::MAstroCamera *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MAstroCamera >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MAstroCamera", ::MAstroCamera::Class_Version(), "./MAstroCamera.h", 17,
                  typeid(::MAstroCamera), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MAstroCamera::Dictionary, isa_proxy, 4,
                  sizeof(::MAstroCamera) );
      instance.SetNew(&new_MAstroCamera);
      instance.SetNewArray(&newArray_MAstroCamera);
      instance.SetDelete(&delete_MAstroCamera);
      instance.SetDeleteArray(&deleteArray_MAstroCamera);
      instance.SetDestructor(&destruct_MAstroCamera);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MAstroCamera*)
   {
      return GenerateInitInstanceLocal((::MAstroCamera*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MAstroCamera*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MVector3::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MVector3::Class_Name()
{
   return "MVector3";
}

//______________________________________________________________________________
const char *MVector3::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MVector3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MVector3::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MVector3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MVector3::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MVector3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MVector3::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MVector3*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAstro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAstro::Class_Name()
{
   return "MAstro";
}

//______________________________________________________________________________
const char *MAstro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAstro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAstro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAstro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MObservatory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MObservatory::Class_Name()
{
   return "MObservatory";
}

//______________________________________________________________________________
const char *MObservatory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MObservatory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MObservatory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MObservatory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MObservatory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MObservatory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MObservatory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MObservatory*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAstroSky2Local::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAstroSky2Local::Class_Name()
{
   return "MAstroSky2Local";
}

//______________________________________________________________________________
const char *MAstroSky2Local::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroSky2Local*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAstroSky2Local::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroSky2Local*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAstroSky2Local::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroSky2Local*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAstroSky2Local::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroSky2Local*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAttLine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAttLine::Class_Name()
{
   return "MAttLine";
}

//______________________________________________________________________________
const char *MAttLine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAttLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAttLine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAttLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAttLine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAttLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAttLine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAttLine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAstroCatalog::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAstroCatalog::Class_Name()
{
   return "MAstroCatalog";
}

//______________________________________________________________________________
const char *MAstroCatalog::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCatalog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAstroCatalog::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCatalog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAstroCatalog::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCatalog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAstroCatalog::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCatalog*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MAstroCamera::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MAstroCamera::Class_Name()
{
   return "MAstroCamera";
}

//______________________________________________________________________________
const char *MAstroCamera::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCamera*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MAstroCamera::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCamera*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MAstroCamera::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCamera*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MAstroCamera::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MAstroCamera*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MAttLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAttLine.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAttLine::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAttLine::Class(),this);
   }
}

//______________________________________________________________________________
void MAttLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAttLine.
      TClass *R__cl = ::MAttLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
      TAttLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MAttLine(void *p) {
      return  p ? new(p) ::MAttLine : new ::MAttLine;
   }
   static void *newArray_MAttLine(Long_t nElements, void *p) {
      return p ? new(p) ::MAttLine[nElements] : new ::MAttLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAttLine(void *p) {
      delete ((::MAttLine*)p);
   }
   static void deleteArray_MAttLine(void *p) {
      delete [] ((::MAttLine*)p);
   }
   static void destruct_MAttLine(void *p) {
      typedef ::MAttLine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAttLine

//______________________________________________________________________________
void MVector3::Streamer(TBuffer &R__b)
{
   // Stream an object of class MVector3.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MVector3::Class(),this);
   } else {
      R__b.WriteClassBuffer(MVector3::Class(),this);
   }
}

//______________________________________________________________________________
void MVector3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MVector3.
      TClass *R__cl = ::MVector3::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      TVector3::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MVector3(void *p) {
      return  p ? new(p) ::MVector3 : new ::MVector3;
   }
   static void *newArray_MVector3(Long_t nElements, void *p) {
      return p ? new(p) ::MVector3[nElements] : new ::MVector3[nElements];
   }
   // Wrapper around operator delete
   static void delete_MVector3(void *p) {
      delete ((::MVector3*)p);
   }
   static void deleteArray_MVector3(void *p) {
      delete [] ((::MVector3*)p);
   }
   static void destruct_MVector3(void *p) {
      typedef ::MVector3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MVector3

//______________________________________________________________________________
void MAstro::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAstro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAstro::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAstro::Class(),this);
   }
}

//______________________________________________________________________________
void MAstro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAstro.
      TClass *R__cl = ::MAstro::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MAstro(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAstro : new ::MAstro;
   }
   static void *newArray_MAstro(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MAstro[nElements] : new ::MAstro[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAstro(void *p) {
      delete ((::MAstro*)p);
   }
   static void deleteArray_MAstro(void *p) {
      delete [] ((::MAstro*)p);
   }
   static void destruct_MAstro(void *p) {
      typedef ::MAstro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAstro

//______________________________________________________________________________
void MAstroSky2Local::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAstroSky2Local.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAstroSky2Local::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAstroSky2Local::Class(),this);
   }
}

//______________________________________________________________________________
void MAstroSky2Local::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAstroSky2Local.
      TClass *R__cl = ::MAstroSky2Local::IsA();
      if (R__cl || R__insp.IsA()) { }
      TRotation::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MAstroSky2Local(void *p) {
      delete ((::MAstroSky2Local*)p);
   }
   static void deleteArray_MAstroSky2Local(void *p) {
      delete [] ((::MAstroSky2Local*)p);
   }
   static void destruct_MAstroSky2Local(void *p) {
      typedef ::MAstroSky2Local current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAstroSky2Local

//______________________________________________________________________________
void MAstroCatalog::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAstroCatalog.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAstroCatalog::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAstroCatalog::Class(),this);
   }
}

//______________________________________________________________________________
void MAstroCatalog::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAstroCatalog.
      TClass *R__cl = ::MAstroCatalog::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLimMag", &fLimMag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadiusFOV", &fRadiusFOV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fToolTip", &fToolTip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAngle", &fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAttLineSky", &fAttLineSky);
      R__insp.InspectMember(fAttLineSky, "fAttLineSky.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAttLineLocal", &fAttLineLocal);
      R__insp.InspectMember(fAttLineLocal, "fAttLineLocal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapG", &fMapG);
      R__insp.InspectMember(fMapG, "fMapG.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fList", &fList);
      R__insp.InspectMember(fList, "fList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRaDec", &fRaDec);
      R__insp.InspectMember(fRaDec, "fRaDec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObservatory", &fObservatory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      TObject::ShowMembers(R__insp);
      TAttMarker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MAstroCatalog(void *p) {
      return  p ? new(p) ::MAstroCatalog : new ::MAstroCatalog;
   }
   static void *newArray_MAstroCatalog(Long_t nElements, void *p) {
      return p ? new(p) ::MAstroCatalog[nElements] : new ::MAstroCatalog[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAstroCatalog(void *p) {
      delete ((::MAstroCatalog*)p);
   }
   static void deleteArray_MAstroCatalog(void *p) {
      delete [] ((::MAstroCatalog*)p);
   }
   static void destruct_MAstroCatalog(void *p) {
      typedef ::MAstroCatalog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAstroCatalog

//______________________________________________________________________________
void MAstroCamera::Streamer(TBuffer &R__b)
{
   // Stream an object of class MAstroCamera.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MAstroCamera::Class(),this);
   } else {
      R__b.WriteClassBuffer(MAstroCamera::Class(),this);
   }
}

//______________________________________________________________________________
void MAstroCamera::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MAstroCamera.
      TClass *R__cl = ::MAstroCamera::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeom", &fGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMirrors", &fMirrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMirror0", &fMirror0);
      MAstroCatalog::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MAstroCamera(void *p) {
      return  p ? new(p) ::MAstroCamera : new ::MAstroCamera;
   }
   static void *newArray_MAstroCamera(Long_t nElements, void *p) {
      return p ? new(p) ::MAstroCamera[nElements] : new ::MAstroCamera[nElements];
   }
   // Wrapper around operator delete
   static void delete_MAstroCamera(void *p) {
      delete ((::MAstroCamera*)p);
   }
   static void deleteArray_MAstroCamera(void *p) {
      delete [] ((::MAstroCamera*)p);
   }
   static void destruct_MAstroCamera(void *p) {
      typedef ::MAstroCamera current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MAstroCamera

//______________________________________________________________________________
void MObservatory::Streamer(TBuffer &R__b)
{
   // Stream an object of class MObservatory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MObservatory::Class(),this);
   } else {
      R__b.WriteClassBuffer(MObservatory::Class(),this);
   }
}

//______________________________________________________________________________
void MObservatory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MObservatory.
      TClass *R__cl = ::MObservatory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObservatoryKey", &fObservatoryKey);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObservatoryName", &fObservatoryName);
      R__insp.InspectMember(fObservatoryName, "fObservatoryName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLongitude", &fLongitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLatitude", &fLatitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSinLatitude", &fSinLatitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosLatitude", &fCosLatitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeight", &fHeight);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MObservatory(void *p) {
      return  p ? new(p) ::MObservatory : new ::MObservatory;
   }
   static void *newArray_MObservatory(Long_t nElements, void *p) {
      return p ? new(p) ::MObservatory[nElements] : new ::MObservatory[nElements];
   }
   // Wrapper around operator delete
   static void delete_MObservatory(void *p) {
      delete ((::MObservatory*)p);
   }
   static void deleteArray_MObservatory(void *p) {
      delete [] ((::MObservatory*)p);
   }
   static void destruct_MObservatory(void *p) {
      typedef ::MObservatory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MObservatory

/********************************************************
* AstroCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAstroCint();

extern "C" void G__set_cpp_environmentAstroCint() {
  G__cpp_reset_tagtableAstroCint();
}
#include <new>
extern "C" int G__cpp_dllrevAstroCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MVector3 */
static int G__AstroCint_164_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MVector3[n];
     } else {
       p = new((void*) gvp) MVector3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MVector3;
     } else {
       p = new((void*) gvp) MVector3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MVector3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) MVector3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MVector3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MVector3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MVector3(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MVector3(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MVector3*) G__getstructoffset())->Magnitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MVector3*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MVector3*) G__getstructoffset())->SetRaDec((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MVector3*) G__getstructoffset())->SetRaDec((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MVector3*) G__getstructoffset())->SetAltAz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MVector3*) G__getstructoffset())->SetAltAz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MVector3*) G__getstructoffset())->SetZdAz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MVector3*) G__getstructoffset())->SetZdAz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MVector3*) G__getstructoffset())->SetName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MVector3*) G__getstructoffset())->WriteBinary(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MVector3*) G__getstructoffset())->ReadBinary(*(istream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MVector3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MVector3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MVector3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MVector3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MVector3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MVector3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MVector3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MVector3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_164_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MVector3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AstroCint_164_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MVector3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MVector3(*(MVector3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MVector3 G__TMVector3;
static int G__AstroCint_164_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MVector3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MVector3*) (soff+(sizeof(MVector3)*i)))->~G__TMVector3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MVector3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MVector3*) (soff))->~G__TMVector3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AstroCint_164_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MVector3* dest = (MVector3*) G__getstructoffset();
   *dest = *(MVector3*) libp->para[0].ref;
   const MVector3& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAstro */
static int G__AstroCint_200_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::Parsec2Meter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::Parsec2Lighyear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::DegToHor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::HorToDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::RadToHor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::HorToRad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Hms2Sec((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (char) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Hms2Sec((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Dms2Rad((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Dms2Rad((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Hms2Rad((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Hms2Rad((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Dms2Deg((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Dms2Deg((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Hms2Deg((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Hms2Deg((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Dms2Hor((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Dms2Hor((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MAstro::Hms2Hor((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Char_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MAstro::Hms2Hor((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Day2Hms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Rad2Dms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Rad2Hms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Deg2Dms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Deg2Hms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Hor2Dms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Hor2Hms((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3])
, *(UShort_t*) G__UShortref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Day2Hm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Rad2Dm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Rad2Hm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Deg2Dm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Deg2Hm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Hor2Dm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Hor2Hm((Double_t) G__double(libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(UShort_t*) G__UShortref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = MAstro::GetStringDeg((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = MAstro::GetStringDeg((Double_t) G__double(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TString* pobj;
         TString xobj = MAstro::GetStringHor((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = MAstro::GetStringHor((Double_t) G__double(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) MAstro::String2Angle(*(TString*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) MAstro::Coordinate2Angle(*(TString*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MAstro::Angle2Coordinate((Double_t) G__double(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::AngularDistance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Mjd2Ymd((UInt_t) G__int(libp->para[0]), *(UShort_t*) G__UShortref(&libp->para[1])
, *(Byte_t*) G__UCharref(&libp->para[2]), *(Byte_t*) G__UCharref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstro::Ymd2Mjd((UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) MAstro::Mjd2Yymmdd((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) MAstro::Yymmdd2Mjd((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::UT2GMST((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::GetMoonRaDec((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetMoonPhase((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetMoonPeriod((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetMoonPeriodMjd((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstro::GetMagicPeriod((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetMagicPeriodStart((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::EstimateCulminationTime((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetSunRaDec((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetEquationOfTime((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetNoonTime((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetTimeFromNoonToAlt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         TArrayD* pobj;
         TArrayD xobj = MAstro::GetSunRiseSet((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TArrayD* pobj;
         TArrayD xobj = MAstro::GetSunRiseSet((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TVector2* pobj;
         TVector2 xobj = MAstro::GetDistOnPlain(*(TVector3*) libp->para[0].ref, *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TVector2* pobj;
         TVector2 xobj = MAstro::GetDistOnPlain(*(TVector3*) libp->para[0].ref, *((TVector3*) G__int(libp->para[1])));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MAstro::GetDevAbs((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstro::GetEasterOffset((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAstro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAstro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MAstro*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstro*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstro*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_200_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__AstroCint_200_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstro *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstro[n];
     } else {
       p = new((void*) gvp) MAstro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstro;
     } else {
       p = new((void*) gvp) MAstro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AstroCint_200_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MAstro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MAstro(*(MAstro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAstro G__TMAstro;
static int G__AstroCint_200_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAstro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAstro*) (soff+(sizeof(MAstro)*i)))->~G__TMAstro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAstro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAstro*) (soff))->~G__TMAstro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AstroCint_200_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstro* dest = (MAstro*) G__getstructoffset();
   *dest = *(MAstro*) libp->para[0].ref;
   const MAstro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MObservatory */
static int G__AstroCint_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObservatory* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MObservatory((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MObservatory((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MObservatory[n];
       } else {
         p = new((void*) gvp) MObservatory[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MObservatory;
       } else {
         p = new((void*) gvp) MObservatory;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObservatory* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory(
(MObservatory::LocationName_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MObservatory(
(MObservatory::LocationName_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory((MObservatory::LocationName_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MObservatory((MObservatory::LocationName_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory((MObservatory::LocationName_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MObservatory((MObservatory::LocationName_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObservatory* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MObservatory((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObservatory* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) MObservatory(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObservatory*) G__getstructoffset())->SetLocation((MObservatory::LocationName_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MObservatory*) G__getstructoffset())->SetLocation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MObservatory*) G__getstructoffset())->SetLocation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MObservatory*) G__getstructoffset())->SetLocation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MObservatory*) G__getstructoffset())->GetObservatoryName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetLatitudeDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetLongitudeDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetLatitudeRad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetLongitudeRad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetElong());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetSinPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetCosPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TArrayD* pobj;
         const TArrayD xobj = ((const MObservatory*) G__getstructoffset())->GetSunRiseSet((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TArrayD* pobj;
         const TArrayD xobj = ((const MObservatory*) G__getstructoffset())->GetSunRiseSet((Double_t) G__double(libp->para[0]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MObservatory*) G__getstructoffset())->RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MObservatory*) G__getstructoffset())->RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MObservatory*) G__getstructoffset())->GetObservatoryKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MObservatory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObservatory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MObservatory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MObservatory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObservatory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObservatory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MObservatory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObservatory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_203_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MObservatory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AstroCint_203_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MObservatory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MObservatory(*(MObservatory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MObservatory G__TMObservatory;
static int G__AstroCint_203_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MObservatory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MObservatory*) (soff+(sizeof(MObservatory)*i)))->~G__TMObservatory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MObservatory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MObservatory*) (soff))->~G__TMObservatory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AstroCint_203_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObservatory* dest = (MObservatory*) G__getstructoffset();
   *dest = *(MObservatory*) libp->para[0].ref;
   const MObservatory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAstroSky2Local */
static int G__AstroCint_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstroSky2Local* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAstroSky2Local((Double_t) G__double(libp->para[0]), *(MObservatory*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) MAstroSky2Local((Double_t) G__double(libp->para[0]), *(MObservatory*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstroSky2Local* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MAstroSky2Local(*(MTime*) libp->para[0].ref, *(MObservatory*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) MAstroSky2Local(*(MTime*) libp->para[0].ref, *(MObservatory*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const MAstroSky2Local*) G__getstructoffset())->RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const MAstroSky2Local*) G__getstructoffset())->RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MAstroSky2Local*) G__getstructoffset())->RotationAngle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAstroSky2Local::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroSky2Local::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAstroSky2Local::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstroSky2Local::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroSky2Local*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroSky2Local::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroSky2Local::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroSky2Local::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroSky2Local::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AstroCint_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MAstroSky2Local* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MAstroSky2Local(*(MAstroSky2Local*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAstroSky2Local G__TMAstroSky2Local;
static int G__AstroCint_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAstroSky2Local*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAstroSky2Local*) (soff+(sizeof(MAstroSky2Local)*i)))->~G__TMAstroSky2Local();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAstroSky2Local*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAstroSky2Local*) (soff))->~G__TMAstroSky2Local();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AstroCint_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstroSky2Local* dest = (MAstroSky2Local*) G__getstructoffset();
   *dest = *(MAstroSky2Local*) libp->para[0].ref;
   const MAstroSky2Local& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAttLine */
static int G__AstroCint_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAttLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAttLine[n];
     } else {
       p = new((void*) gvp) MAttLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAttLine;
     } else {
       p = new((void*) gvp) MAttLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAttLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAttLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAttLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAttLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAttLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAttLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAttLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAttLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAttLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAttLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AstroCint_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MAttLine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MAttLine(*(MAttLine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAttLine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAttLine G__TMAttLine;
static int G__AstroCint_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAttLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAttLine*) (soff+(sizeof(MAttLine)*i)))->~G__TMAttLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAttLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAttLine*) (soff))->~G__TMAttLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AstroCint_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAttLine* dest = (MAttLine*) G__getstructoffset();
   *dest = *(MAttLine*) libp->para[0].ref;
   const MAttLine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAstroCatalog */
static int G__AstroCint_234_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstroCatalog* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstroCatalog[n];
     } else {
       p = new((void*) gvp) MAstroCatalog[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstroCatalog;
     } else {
       p = new((void*) gvp) MAstroCatalog;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->ForceUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetTime(*(MTime*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetObservatory(*(MObservatory*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetLimMag((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetRadiusFOV((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetRadiusFOV((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetRaDec((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetRaDec(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MAstroCatalog*) G__getstructoffset())->SetGuiActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MAstroCatalog*) G__getstructoffset())->SetGuiActive();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MAstroCatalog*) G__getstructoffset())->SetPlainScreen((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MAstroCatalog*) G__getstructoffset())->SetPlainScreen();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MAstroCatalog*) G__getstructoffset())->IsPlainScreen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MAstroCatalog*) G__getstructoffset())->SetNoToolTips((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MAstroCatalog*) G__getstructoffset())->SetNoToolTips();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MAstroCatalog*) G__getstructoffset())->HasNoToolTips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAstroCatalog*) G__getstructoffset())->GetLimMag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MAstroCatalog*) G__getstructoffset())->GetRadiusFOV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadXephem(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadXephem());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadNGC2000(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadNGC2000());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadBSC(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadBSC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadHeasarcPPM(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadHeasarcPPM(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadHeasarcPPM());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MAstroCatalog*) G__getstructoffset())->ReadCompressed(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((MAstroCatalog*) G__getstructoffset())->AddObject((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 103, (long) ((MAstroCatalog*) G__getstructoffset())->AddObject((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MAstroCatalog*) G__getstructoffset())->GetList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MAstroCatalog*) G__getstructoffset())->GetNumStars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MAstroCatalog*) G__getstructoffset())->MarkObject((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const MAstroCatalog*) G__getstructoffset())->GetVisibilityCurve(*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MAstroCatalog*) G__getstructoffset())->GetVisibilityCurve(*(TGraph*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MAstroCatalog*) G__getstructoffset())->PaintImg((unsigned char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MAstroCatalog*) G__getstructoffset())->PaintImg((unsigned char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MAstroCatalog*) G__getstructoffset())->PaintImg((unsigned char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MAstroCatalog*) G__getstructoffset())->PaintImg((unsigned char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetLineAttributesLocal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->SetLineAttributesSky();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TAttLine& obj = ((MAstroCatalog*) G__getstructoffset())->GetAttLineSky();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TAttLine& obj = ((MAstroCatalog*) G__getstructoffset())->GetAttLineLocal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MAstroCatalog*) G__getstructoffset())->EventInfo((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MAstroCatalog*) G__getstructoffset())->EventInfo((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAstroCatalog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCatalog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAstroCatalog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstroCatalog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCatalog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCatalog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroCatalog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCatalog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_234_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroCatalog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAstroCatalog G__TMAstroCatalog;
static int G__AstroCint_234_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAstroCatalog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAstroCatalog*) (soff+(sizeof(MAstroCatalog)*i)))->~G__TMAstroCatalog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAstroCatalog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAstroCatalog*) (soff))->~G__TMAstroCatalog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MAstroCamera */
static int G__AstroCint_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MAstroCamera* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstroCamera[n];
     } else {
       p = new((void*) gvp) MAstroCamera[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MAstroCamera;
     } else {
       p = new((void*) gvp) MAstroCamera;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCamera*) G__getstructoffset())->SetMirrors(*(TClonesArray*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCamera*) G__getstructoffset())->SetMirrors((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCamera*) G__getstructoffset())->SetGeom(*(MGeomCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCamera*) G__getstructoffset())->GetDiffZdAz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MAstroCamera::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCamera::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MAstroCamera::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MAstroCamera::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MAstroCamera*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCamera::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroCamera::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MAstroCamera::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AstroCint_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MAstroCamera::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MAstroCamera G__TMAstroCamera;
static int G__AstroCint_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MAstroCamera*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MAstroCamera*) (soff+(sizeof(MAstroCamera)*i)))->~G__TMAstroCamera();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MAstroCamera*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MAstroCamera*) (soff))->~G__TMAstroCamera();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MVector3 */

/* MAstro */

/* MObservatory */

/* MAstroSky2Local */

/* MAttLine */

/* MAstroCatalog */

/* MAstroCamera */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAstroCint {
 public:
  G__Sizep2memfuncAstroCint(): p(&G__Sizep2memfuncAstroCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAstroCint::*p)();
};

size_t G__get_sizep2memfuncAstroCint()
{
  G__Sizep2memfuncAstroCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAstroCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MVector3))) {
     MVector3 *G__Lderived;
     G__Lderived=(MVector3*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MVector3),G__get_linked_tagnum(&G__AstroCintLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MVector3),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MObservatory))) {
     MObservatory *G__Lderived;
     G__Lderived=(MObservatory*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MObservatory),G__get_linked_tagnum(&G__AstroCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MObservatory),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local))) {
     MAstroSky2Local *G__Lderived;
     G__Lderived=(MAstroSky2Local*)0x1000;
     {
       TRotation *G__Lpbase=(TRotation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local),G__get_linked_tagnum(&G__AstroCintLN_TRotation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MAttLine))) {
     MAttLine *G__Lderived;
     G__Lderived=(MAttLine*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAttLine),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAttLine),G__get_linked_tagnum(&G__AstroCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog))) {
     MAstroCatalog *G__Lderived;
     G__Lderived=(MAstroCatalog*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog),G__get_linked_tagnum(&G__AstroCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera))) {
     MAstroCamera *G__Lderived;
     G__Lderived=(MAstroCamera*)0x1000;
     {
       MAstroCatalog *G__Lpbase=(MAstroCatalog*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera),G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera),G__get_linked_tagnum(&G__AstroCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AstroCintLN_MParContainer))) {
     MParContainer *G__Lderived;
     G__Lderived=(MParContainer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AstroCintLN_MParContainer),G__get_linked_tagnum(&G__AstroCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAstroCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AstroCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AstroCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AstroCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AstroCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AstroCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MVector3 */
static void G__setup_memvarMVector3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   { MVector3 *p; p=(MVector3*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-2,4,"kIsInvalid=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-2,4,"kIsRaDec=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-2,4,"kIsZdAz=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-2,4,"kIsAltAz=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-2,4,"kIsArbitrary=4LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AstroCintLN_MVector3cLcLVectorType_t),-1,-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAstro */
static void G__setup_memvarMAstro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstro));
   { MAstro *p; p=(MAstro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kSynMonth=",0,"synodic month (new Moon to new Moon)");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kEpoch0=",0,"First full moon after 1980/1/1");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MObservatory */
static void G__setup_memvarMObservatory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   { MObservatory *p; p=(MObservatory*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MObservatorycLcLLocationName_t),-1,-2,1,G__FastAllocString(2048).Format("kMagic1=%lldLL",(long long)MObservatory::kMagic1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MObservatorycLcLLocationName_t),-1,-2,1,G__FastAllocString(2048).Format("kWuerzburgCity=%lldLL",(long long)MObservatory::kWuerzburgCity).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MObservatorycLcLLocationName_t),-1,-2,1,G__FastAllocString(2048).Format("kTuorla=%lldLL",(long long)MObservatory::kTuorla).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AstroCintLN_MObservatorycLcLLocationName_t),-1,-1,4,"fObservatoryKey=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_TString),-1,-1,4,"fObservatoryName=",0,"! Name of the observatory");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLongitude=",0,"! [rad] Longitude of observatory (+ east)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLatitude=",0,"! [rad] Latitude of observatory (+ north)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSinLatitude=",0,"! Sin component for faster access");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosLatitude=",0,"! Cos component for faster access");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHeight=",0,"! [m] height of observatory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAstroSky2Local */
static void G__setup_memvarMAstroSky2Local(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local));
   { MAstroSky2Local *p; p=(MAstroSky2Local*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAttLine */
static void G__setup_memvarMAttLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MAttLine));
   { MAttLine *p; p=(MAttLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAstroCatalog */
static void G__setup_memvarMAstroCatalog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog));
   { MAstroCatalog *p; p=(MAstroCatalog*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__AstroCintLN_TString),-1,-2,4,"kDefaultPath=",0,"! Datacenter default path for catalogs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLimMag=",0,"[1]   Limiting Magnitude");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRadiusFOV=",0,"[deg] Radius of Field of View");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TGToolTip),-1,-1,4,"fToolTip=",0,"! The tooltip currently displayed");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAngle=",0,"! Rotation angle of map");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_MAttLine),-1,-1,4,"fAttLineSky=",0,"Line Style and color for sky coordinates");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_MAttLine),-1,-1,4,"fAttLineLocal=",0,"Line Style and color for local coordinates");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kMark=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kHasChanged=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kGuiActive=65536LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kPlainScreen=131072LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kMirrorX=262144LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kMirrorY=524288LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kNoToolTips=1048576LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalogcLcLdA),-1,-2,2,"kDrawingImage=2097152LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_MGMap),-1,-1,2,"fMapG=",0,"! A map with all gui primitives and tooltips");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_TList),-1,-1,2,"fList=",0,"List of stars loaded");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AstroCintLN_MVector3),-1,-1,2,"fRaDec=",0,"pointing position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_MObservatory),-1,-1,2,"fObservatory=",0,"Possible obervatory location");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_MTime),-1,-1,2,"fTime=",0,"Possible observation time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MAstroCamera */
static void G__setup_memvarMAstroCamera(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera));
   { MAstroCamera *p; p=(MAstroCamera*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_MGeomCam),-1,-1,4,"fGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClonesArray),-1,-1,4,"fMirrors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_MGeomMirror),-1,-1,4,"fMirror0=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AstroCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAstroCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMVector3(void) {
   /* MVector3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MVector3));
   G__memfunc_setup("SetThetaPhiMag",1368,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - mag", "SetMagThetaPhi(TMath::Power(10, -mag/2.5), theta, phi);", (void*) NULL, 0);
   G__memfunc_setup("MVector3",755,G__AstroCint_164_0_2, 105, G__get_linked_tagnum(&G__AstroCintLN_MVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MVector3",755,G__AstroCint_164_0_3, 105, G__get_linked_tagnum(&G__AstroCintLN_MVector3), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 '0' mag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MVector3",755,G__AstroCint_164_0_4, 105, G__get_linked_tagnum(&G__AstroCintLN_MVector3), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - v3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Magnitude",926,G__AstroCint_164_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "{ return -2.5*TMath::Log10(Mag()); }", (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__AstroCint_164_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRaDec",747,G__AstroCint_164_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - ra d - 'Double_t' 0 - dec "
"d - 'Double_t' 0 '0' mag", "SetThetaPhiMag(TMath::Pi()/2-dec, ra, mag);", (void*) NULL, 0);
   G__memfunc_setup("SetAltAz",776,G__AstroCint_164_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - alt d - 'Double_t' 0 - az "
"d - 'Double_t' 0 '0' mag", "SetThetaPhiMag(TMath::Pi()/2-alt, az, mag);", (void*) NULL, 0);
   G__memfunc_setup("SetZdAz",677,G__AstroCint_164_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - zd d - 'Double_t' 0 - az "
"d - 'Double_t' 0 '0' mag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__AstroCint_164_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBinary",1136,G__AstroCint_164_0_12, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBinary",993,G__AstroCint_164_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AstroCint_164_0_14, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MVector3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_164_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MVector3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_164_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MVector3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_164_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MVector3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_164_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_164_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MVector3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_164_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MVector3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_164_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MVector3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_164_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MVector3::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MVector3", 755, G__AstroCint_164_0_26, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MVector3), -1, 0, 1, 1, 1, 0, "u 'MVector3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MVector3", 881, G__AstroCint_164_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AstroCint_164_0_28, (int) ('u'), G__get_linked_tagnum(&G__AstroCintLN_MVector3), -1, 1, 1, 1, 1, 0, "u 'MVector3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAstro(void) {
   /* MAstro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstro));
   G__memfunc_setup("Round",520,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 4, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trunc",524,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 4, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Kepler",611,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 4, 0, 
"d - 'Double_t' 0 - m d - 'Double_t' 0 - ecc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parsec2Meter",1165,G__AstroCint_200_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&MAstro::Parsec2Meter) ), 0);
   G__memfunc_setup("Parsec2Lighyear",1477,G__AstroCint_200_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&MAstro::Parsec2Lighyear) ), 0);
   G__memfunc_setup("DegToHor",764,G__AstroCint_200_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&MAstro::DegToHor) ), 0);
   G__memfunc_setup("HorToDeg",764,G__AstroCint_200_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&MAstro::HorToDeg) ), 0);
   G__memfunc_setup("RadToHor",771,G__AstroCint_200_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", "{ return 24/TMath::TwoPi(); }", (void*) G__func2void( (Double_t (*)())(&MAstro::RadToHor) ), 0);
   G__memfunc_setup("HorToRad",771,G__AstroCint_200_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", "{ return TMath::TwoPi()/24; }", (void*) G__func2void( (Double_t (*)())(&MAstro::HorToRad) ), 0);
   G__memfunc_setup("Hms2Sec",629,G__AstroCint_200_0_10, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - deg h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - - 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, char))(&MAstro::Hms2Sec) ), 0);
   G__memfunc_setup("Dms2Rad",621,G__AstroCint_200_0_11, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - deg h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Dms2Rad) ), 0);
   G__memfunc_setup("Hms2Rad",625,G__AstroCint_200_0_12, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - hor h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Hms2Rad) ), 0);
   G__memfunc_setup("Dms2Deg",614,G__AstroCint_200_0_13, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - deg h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Dms2Deg) ), 0);
   G__memfunc_setup("Hms2Deg",618,G__AstroCint_200_0_14, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - hor h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Hms2Deg) ), 0);
   G__memfunc_setup("Dms2Hor",639,G__AstroCint_200_0_15, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - deg h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Dms2Hor) ), 0);
   G__memfunc_setup("Hms2Hor",643,G__AstroCint_200_0_16, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - hor h - 'UInt_t' 0 - min "
"d - 'Double_t' 0 - sec c - 'Char_t' 0 ''+'' sgn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, UInt_t, Double_t, Char_t))(&MAstro::Hms2Hor) ), 0);
   G__memfunc_setup("Day2Hms",632,G__AstroCint_200_0_17, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - day c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Day2Hms) ), 0);
   G__memfunc_setup("Rad2Dms",621,G__AstroCint_200_0_18, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Rad2Dms) ), 0);
   G__memfunc_setup("Rad2Hms",625,G__AstroCint_200_0_19, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Rad2Hms) ), 0);
   G__memfunc_setup("Deg2Dms",614,G__AstroCint_200_0_20, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - deg c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Deg2Dms) ), 0);
   G__memfunc_setup("Deg2Hms",618,G__AstroCint_200_0_21, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - deg c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Deg2Hms) ), 0);
   G__memfunc_setup("Hor2Dms",639,G__AstroCint_200_0_22, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - hor c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Hor2Dms) ), 0);
   G__memfunc_setup("Hor2Hms",643,G__AstroCint_200_0_23, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - hor c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h r - 'UShort_t' 1 - m "
"r - 'UShort_t' 1 - s", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, UShort_t&, UShort_t&))(&MAstro::Hor2Hms) ), 0);
   G__memfunc_setup("Day2Hm",517,G__AstroCint_200_0_24, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - day c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Day2Hm) ), 0);
   G__memfunc_setup("Rad2Dm",506,G__AstroCint_200_0_25, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Rad2Dm) ), 0);
   G__memfunc_setup("Rad2Hm",510,G__AstroCint_200_0_26, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Rad2Hm) ), 0);
   G__memfunc_setup("Deg2Dm",499,G__AstroCint_200_0_27, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - deg c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Deg2Dm) ), 0);
   G__memfunc_setup("Deg2Hm",503,G__AstroCint_200_0_28, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - deg c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Deg2Hm) ), 0);
   G__memfunc_setup("Hor2Dm",524,G__AstroCint_200_0_29, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - d d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Hor2Dm) ), 0);
   G__memfunc_setup("Hor2Hm",528,G__AstroCint_200_0_30, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - rad c - 'Char_t' 1 - sgn "
"r - 'UShort_t' 1 - h d - 'Double_t' 1 - m", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Char_t&, UShort_t&, Double_t&))(&MAstro::Hor2Hm) ), 0);
   G__memfunc_setup("GetStringDeg",1191,G__AstroCint_200_0_31, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - deg C - - 10 '\"%c%d:%02d:%02d\"' fmt", (char*)NULL, (void*) G__func2void( (TString (*)(Double_t, const char*))(&MAstro::GetStringDeg) ), 0);
   G__memfunc_setup("GetStringHor",1216,G__AstroCint_200_0_32, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - deg C - - 10 '\"%c%d:%02d:%02d\"' fmt", (char*)NULL, (void*) G__func2void( (TString (*)(Double_t, const char*))(&MAstro::GetStringHor) ), 0);
   G__memfunc_setup("String2Angle",1168,G__AstroCint_200_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TString' - 1 - str d - 'Double_t' 1 - ret", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString&, Double_t&))(&MAstro::String2Angle) ), 0);
   G__memfunc_setup("Coordinate2Angle",1569,G__AstroCint_200_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TString' - 11 - str d - 'Double_t' 1 - ret", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TString&, Double_t&))(&MAstro::Coordinate2Angle) ), 0);
   G__memfunc_setup("Angle2Coordinate",1569,G__AstroCint_200_0_35, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) G__func2void( (TString (*)(Double_t))(&MAstro::Angle2Coordinate) ), 0);
   G__memfunc_setup("AngularDistance",1525,G__AstroCint_200_0_36, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - theta0 d - 'Double_t' 0 - phi0 "
"d - 'Double_t' 0 - theta1 d - 'Double_t' 0 - phi1", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&MAstro::AngularDistance) ), 0);
   G__memfunc_setup("Mjd2Ymd",631,G__AstroCint_200_0_37, 121, -1, -1, 0, 4, 3, 1, 0, 
"h - 'UInt_t' 0 - mjd r - 'UShort_t' 1 - y "
"b - 'Byte_t' 1 - m b - 'Byte_t' 1 - d", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t, UShort_t&, Byte_t&, Byte_t&))(&MAstro::Mjd2Ymd) ), 0);
   G__memfunc_setup("Ymd2Mjd",631,G__AstroCint_200_0_38, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"r - 'UShort_t' 0 - y b - 'Byte_t' 0 - m "
"b - 'Byte_t' 0 - d", (char*)NULL, (void*) G__func2void( (Int_t (*)(UShort_t, Byte_t, Byte_t))(&MAstro::Ymd2Mjd) ), 0);
   G__memfunc_setup("Mjd2Yymmdd",961,G__AstroCint_200_0_39, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - mjd", (char*)NULL, (void*) G__func2void( (UInt_t (*)(UInt_t))(&MAstro::Mjd2Yymmdd) ), 0);
   G__memfunc_setup("Yymmdd2Mjd",961,G__AstroCint_200_0_40, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - yymmdd", (char*)NULL, (void*) G__func2void( (UInt_t (*)(UInt_t))(&MAstro::Yymmdd2Mjd) ), 0);
   G__memfunc_setup("UT2GMST",534,G__AstroCint_200_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - ut1", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MAstro::UT2GMST) ), 0);
   G__memfunc_setup("RotationAngle",1335,G__AstroCint_200_0_42, 121, -1, -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - sinl d - 'Double_t' 0 - cosl "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 1 - sin d - 'Double_t' 1 - cos", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&))(&MAstro::RotationAngle) ), 0);
   G__memfunc_setup("RotationAngle",1335,G__AstroCint_200_0_43, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - sinl d - 'Double_t' 0 - cosl "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&MAstro::RotationAngle) ), 0);
   G__memfunc_setup("GetMoonRaDec",1144,G__AstroCint_200_0_44, 121, -1, -1, 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 1 - ra "
"d - 'Double_t' 1 - dec", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t&, Double_t&))(&MAstro::GetMoonRaDec) ), 0);
   G__memfunc_setup("GetMoonPhase",1194,G__AstroCint_200_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - mjd", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MAstro::GetMoonPhase) ), 0);
   G__memfunc_setup("GetMoonPeriod",1308,G__AstroCint_200_0_46, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - mjd", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MAstro::GetMoonPeriod) ), 0);
   G__memfunc_setup("GetMoonPeriodMjd",1591,G__AstroCint_200_0_47, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MAstro::GetMoonPeriodMjd) ), 0);
   G__memfunc_setup("GetMagicPeriod",1380,G__AstroCint_200_0_48, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - mjd", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t))(&MAstro::GetMagicPeriod) ), 0);
   G__memfunc_setup("GetMagicPeriodStart",1906,G__AstroCint_200_0_49, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - p", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t))(&MAstro::GetMagicPeriodStart) ), 0);
   G__memfunc_setup("EstimateCulminationTime",2382,G__AstroCint_200_0_50, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 0 - longit "
"d - 'Double_t' 0 - ra", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MAstro::EstimateCulminationTime) ), 0);
   G__memfunc_setup("GetSunRaDec",1045,G__AstroCint_200_0_51, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 1 - ra "
"d - 'Double_t' 1 - dec", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t&, Double_t&))(&MAstro::GetSunRaDec) ), 0);
   G__memfunc_setup("GetEquationOfTime",1706,G__AstroCint_200_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - mjd", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MAstro::GetEquationOfTime) ), 0);
   G__memfunc_setup("GetNoonTime",1097,G__AstroCint_200_0_53, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 0 - longit", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&MAstro::GetNoonTime) ), 0);
   G__memfunc_setup("GetTimeFromNoonToAlt",1985,G__AstroCint_200_0_54, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 0 - latit "
"d - 'Double_t' 0 - alt", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MAstro::GetTimeFromNoonToAlt) ), 0);
   G__memfunc_setup("GetSunRiseSet",1301,G__AstroCint_200_0_55, 117, G__get_linked_tagnum(&G__AstroCintLN_TArrayD), -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 0 - longit "
"d - 'Double_t' 0 - latit d - 'Double_t' 0 '0' alt", (char*)NULL, (void*) G__func2void( (TArrayD (*)(Double_t, Double_t, Double_t, Double_t))(&MAstro::GetSunRiseSet) ), 0);
   G__memfunc_setup("GetDistOnPlain",1381,G__AstroCint_200_0_56, 117, G__get_linked_tagnum(&G__AstroCintLN_TVector2), -1, 0, 3, 3, 1, 0, 
"u 'TVector3' - 11 - v0 u 'TVector3' - 0 - v1 "
"d - 'Double_t' 0 '1' dist", (char*)NULL, (void*) G__func2void( (TVector2 (*)(const TVector3&, TVector3, Double_t))(&MAstro::GetDistOnPlain) ), 0);
   G__memfunc_setup("GetDevAbs",853,G__AstroCint_200_0_57, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - nomzd d - 'Double_t' 0 - devzd "
"d - 'Double_t' 0 - devaz", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MAstro::GetDevAbs) ), 0);
   G__memfunc_setup("GetEasterOffset",1515,G__AstroCint_200_0_58, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "r - 'UShort_t' 0 - year", (char*)NULL, (void*) G__func2void( (Int_t (*)(UShort_t))(&MAstro::GetEasterOffset) ), 0);
   G__memfunc_setup("Class",502,G__AstroCint_200_0_59, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAstro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_200_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_200_0_61, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAstro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_200_0_62, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAstro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__AstroCint_200_0_63, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__AstroCint_200_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__AstroCint_200_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_200_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_200_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_200_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_200_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_200_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstro::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("MAstro", 598, G__AstroCint_200_0_71, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MAstro), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MAstro", 598, G__AstroCint_200_0_72, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MAstro), -1, 0, 1, 1, 1, 0, "u 'MAstro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MAstro", 724, G__AstroCint_200_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AstroCint_200_0_74, (int) ('u'), G__get_linked_tagnum(&G__AstroCintLN_MAstro), -1, 1, 1, 1, 1, 0, "u 'MAstro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMObservatory(void) {
   /* MObservatory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MObservatory));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MObservatory",1261,G__AstroCint_203_0_2, 105, G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MObservatory",1261,G__AstroCint_203_0_3, 105, G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 0, 3, 1, 1, 0, 
"i 'MObservatory::LocationName_t' - 0 - key C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MObservatory",1261,G__AstroCint_203_0_4, 105, G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - lon d - 'Double_t' 0 - lat "
"C - - 10 '\"<n/a>\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MObservatory",1261,G__AstroCint_203_0_5, 105, G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - lon d - 'Double_t' 0 - lat "
"d - 'Double_t' 0 - h C - - 10 '\"<n/a>\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLocation",1125,G__AstroCint_203_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MObservatory::LocationName_t' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLocation",1125,G__AstroCint_203_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - lon d - 'Double_t' 0 - lat "
"d - 'Double_t' 0 '0' h C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObservatoryName",1857,G__AstroCint_203_0_10, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLatitudeDeg",1388,G__AstroCint_203_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[deg]", (void*) NULL, 0);
   G__memfunc_setup("GetLongitudeDeg",1499,G__AstroCint_203_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[deg]", (void*) NULL, 0);
   G__memfunc_setup("GetLatitudeRad",1395,G__AstroCint_203_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[rad]", (void*) NULL, 0);
   G__memfunc_setup("GetLongitudeRad",1506,G__AstroCint_203_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[rad]", (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__AstroCint_203_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[rad]", (void*) NULL, 0);
   G__memfunc_setup("GetElong",789,G__AstroCint_203_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "[rad]", (void*) NULL, 0);
   G__memfunc_setup("GetSinPhi",875,G__AstroCint_203_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosPhi",870,G__AstroCint_203_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__AstroCint_203_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSunRiseSet",1301,G__AstroCint_203_0_20, 117, G__get_linked_tagnum(&G__AstroCintLN_TArrayD), -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - mjd d - 'Double_t' 0 '0' alt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotationAngle",1335,G__AstroCint_203_0_21, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 1 - sin d - 'Double_t' 1 - cos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotationAngle",1335,G__AstroCint_203_0_22, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObservatoryKey",1769,G__AstroCint_203_0_23, 105, G__get_linked_tagnum(&G__AstroCintLN_MObservatorycLcLLocationName_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AstroCint_203_0_25, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MObservatory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_203_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObservatory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_203_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MObservatory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_203_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MObservatory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_203_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_203_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObservatory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_203_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MObservatory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_203_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObservatory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_203_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MObservatory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MObservatory", 1261, G__AstroCint_203_0_37, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 0, 1, 1, 1, 0, "u 'MObservatory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MObservatory", 1387, G__AstroCint_203_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AstroCint_203_0_39, (int) ('u'), G__get_linked_tagnum(&G__AstroCintLN_MObservatory), -1, 1, 1, 1, 1, 0, "u 'MObservatory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAstroSky2Local(void) {
   /* MAstroSky2Local */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - gmst u 'MObservatory' - 11 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MAstroSky2Local",1450,G__AstroCint_204_0_2, 105, G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - gmst u 'MObservatory' - 11 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MAstroSky2Local",1450,G__AstroCint_204_0_3, 105, G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local), -1, 0, 2, 1, 1, 0, 
"u 'MTime' - 11 - t u 'MObservatory' - 11 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotationAngle",1335,G__AstroCint_204_0_4, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - ra d - 'Double_t' 0 - dec "
"d - 'Double_t' 0 '0' dzd d - 'Double_t' 0 '0' daz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AstroCint_204_0_5, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAstroSky2Local::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_204_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroSky2Local::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_204_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAstroSky2Local::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_204_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAstroSky2Local::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_204_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_204_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroSky2Local::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_204_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroSky2Local::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_204_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroSky2Local::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_204_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroSky2Local::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MAstroSky2Local", 1450, G__AstroCint_204_0_17, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local), -1, 0, 1, 1, 1, 0, "u 'MAstroSky2Local' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MAstroSky2Local", 1576, G__AstroCint_204_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AstroCint_204_0_19, (int) ('u'), G__get_linked_tagnum(&G__AstroCintLN_MAstroSky2Local), -1, 1, 1, 1, 1, 0, "u 'MAstroSky2Local' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAttLine(void) {
   /* MAttLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MAttLine));
   G__memfunc_setup("MAttLine",766,G__AstroCint_233_0_1, 105, G__get_linked_tagnum(&G__AstroCintLN_MAttLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AstroCint_233_0_2, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAttLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_233_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAttLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_233_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAttLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_233_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAttLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_233_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_233_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAttLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_233_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAttLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_233_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAttLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_233_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAttLine::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MAttLine", 766, G__AstroCint_233_0_14, (int) ('i'), G__get_linked_tagnum(&G__AstroCintLN_MAttLine), -1, 0, 1, 1, 1, 0, "u 'MAttLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MAttLine", 892, G__AstroCint_233_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AstroCint_233_0_16, (int) ('u'), G__get_linked_tagnum(&G__AstroCintLN_MAttLine), -1, 1, 1, 1, 1, 0, "u 'MAttLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAstroCatalog(void) {
   /* MAstroCatalog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog));
   G__memfunc_setup("ShowToolTip",1132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineAttributes",1755,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'MAttLine' - 1 - att", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindToken",898,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 0, 2, 1, 4, 0, 
"u 'TString' - 1 - line c - 'Char_t' 0 '','' tok", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("atoi",429,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "u 'TString' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("atof",426,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 0, "u 'TString' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertToPad",1209,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 8, 
"u 'TVector3' - 11 - w u 'TVector2' - 1 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPrimitives",1333,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRangePad",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert",737,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 8, 
"u 'TRotation' - 11 - rot u 'TVector2' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"u 'TVector2' - 11 - v0 u 'TRotation' - 11 - rot "
"u 'TArrayI' - 1 - dx u 'TArrayI' - 1 - dy "
"i - 'Int_t' 0 - stepx i - 'Int_t' 0 - stepy "
"i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPrimitives",1466,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawLine",790,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 4, 0, 
"u 'TVector2' - 11 - v0 i - 'Int_t' 0 - dx "
"i - 'Int_t' 0 - dy u 'TRotation' - 11 - rot "
"i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawGrid",788,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'TVector3' - 11 - v0 u 'TRotation' - 11 - rot "
"i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AlignCoordinates",1638,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AstroCintLN_TRotation), -1, 0, 1, 1, 2, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadTitle",1079,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AstroCintLN_TString), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGrid",678,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AstroCintLN_TRotation), -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawStar",808,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"u 'TVector3' - 11 - v i - 'Int_t' 0 - col "
"C - - 10 '0' txt g - 'Bool_t' 0 'kFALSE' resize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 'kFALSE' upd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteEventKbd",1510,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - keycode i - 'Int_t' 0 - keysym", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - mp1 "
"i - 'Int_t' 0 - mp2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MAstroCatalog",1297,G__AstroCint_234_0_24, 105, G__get_linked_tagnum(&G__AstroCintLN_MAstroCatalog), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceUpdate",1106,G__AstroCint_234_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "Slot for marker handling", (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__AstroCint_234_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MTime' - 11 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetObservatory",1484,G__AstroCint_234_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MObservatory' - 11 - obs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLimMag",867,G__AstroCint_234_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mag", "*MENU* *ARGS={mag=>fLimMag}", (void*) NULL, 0);
   G__memfunc_setup("SetRadiusFOV",1151,G__AstroCint_234_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pixsize d - 'Double_t' 0 - w "
"d - 'Double_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRadiusFOV",1151,G__AstroCint_234_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - deg", "*MENU* *ARGS={deg=>fRadiusFOV}", (void*) NULL, 0);
   G__memfunc_setup("SetRaDec",747,G__AstroCint_234_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - ra d - 'Double_t' 0 - dec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRaDec",747,G__AstroCint_234_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGuiActive",1197,G__AstroCint_234_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlainScreen",1408,G__AstroCint_234_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "*TOGGLE* *GETTER=IsPlainScreen", (void*) NULL, 0);
   G__memfunc_setup("IsPlainScreen",1296,G__AstroCint_234_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoToolTips",1319,G__AstroCint_234_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "*TOGGLE* *GETTER=HasNoToolTips", (void*) NULL, 0);
   G__memfunc_setup("HasNoToolTips",1303,G__AstroCint_234_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLimMag",855,G__AstroCint_234_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Get Limiting Magnitude", (void*) NULL, 0);
   G__memfunc_setup("GetRadiusFOV",1139,G__AstroCint_234_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Get maximum radius of Field Of View", (void*) NULL, 0);
   G__memfunc_setup("ReadXephem",995,G__AstroCint_234_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"/usr/X11R6/lib/xephem/catalogs/YBS.edb\"' catalog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNGC2000",790,G__AstroCint_234_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"ngc2000.dat\"' catalog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBSC",596,G__AstroCint_234_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"bsc5.dat\"' catalog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHeasarcPPM",1312,G__AstroCint_234_0_43, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"heasarc_ppm.tdat\"' catalog u 'TString' - 0 '\"\"' fout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCompressed",1425,G__AstroCint_234_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - catalog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__AstroCint_234_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - ra f - 'Float_t' 0 - dec "
"f - 'Float_t' 0 - mag u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetList",700,G__AstroCint_234_0_46, 85, G__get_linked_tagnum(&G__AstroCintLN_TList), -1, 0, 0, 1, 1, 0, "", "Return list of stars", (void*) NULL, 0);
   G__memfunc_setup("GetNumStars",1117,G__AstroCint_234_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkObject",994,G__AstroCint_234_0_50, 121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVisibilityCurve",1869,G__AstroCint_234_0_51, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TGraph' - 1 - g C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", "Delete list of stars", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' -", "Print all stars", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDrawOption",1331,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("PaintImg",793,G__AstroCint_234_0_56, 121, -1, -1, 0, 4, 1, 1, 0, 
"B - - 0 - buf i - - 0 '768' w "
"i - - 0 '576' h C - 'Option_t' 10 '0' o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineAttributesLocal",2246,G__AstroCint_234_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetLineAttributesSky",2066,G__AstroCint_234_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetMarkerAttributes",1973,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetAttLineSky",1288,G__AstroCint_234_0_60, 117, G__get_linked_tagnum(&G__AstroCintLN_TAttLine), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttLineLocal",1468,G__AstroCint_234_0_61, 117, G__get_linked_tagnum(&G__AstroCintLN_TAttLine), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventInfo",910,G__AstroCint_234_0_62, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py U 'TObject' - 0 '0' selected", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__AstroCint_234_0_63, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAstroCatalog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_234_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCatalog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_234_0_65, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAstroCatalog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_234_0_66, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAstroCatalog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_234_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_234_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCatalog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_234_0_72, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroCatalog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_234_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCatalog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_234_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroCatalog::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MAstroCatalog", 1423, G__AstroCint_234_0_75, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMAstroCamera(void) {
   /* MAstroCamera */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera));
   G__memfunc_setup("ConvertToPad",1209,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 8, 
"u 'TVector3' - 11 - w u 'TVector2' - 1 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPrimitives",1333,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRangePad",1070,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - mp1 "
"i - 'Int_t' 0 - mp2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MAstroCamera",1183,G__AstroCint_238_0_5, 105, G__get_linked_tagnum(&G__AstroCintLN_MAstroCamera), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMirrors",1050,G__AstroCint_238_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMirrors",1050,G__AstroCint_238_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeom",692,G__AstroCint_238_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MGeomCam' - 11 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffZdAz",1042,G__AstroCint_238_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 1 - dzd d - 'Double_t' 1 - daz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AstroCint_238_0_10, 85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MAstroCamera::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AstroCint_238_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCamera::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AstroCint_238_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MAstroCamera::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AstroCint_238_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MAstroCamera::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AstroCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AstroCint_238_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AstroCint_238_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCamera::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AstroCint_238_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroCamera::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AstroCint_238_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MAstroCamera::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AstroCint_238_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MAstroCamera::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MAstroCamera", 1309, G__AstroCint_238_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAstroCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAstroCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAstroCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AstroCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MVector3 = { "MVector3" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MVector3cLcLVectorType_t = { "MVector3::VectorType_t" , 101 , -1 };
G__linked_taginfo G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AstroCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MTime = { "MTime" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAstro = { "MAstro" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MObservatory = { "MObservatory" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAstroSky2Local = { "MAstroSky2Local" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TGToolTip = { "TGToolTip" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MGMap = { "MGMap" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAttLine = { "MAttLine" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAstroCatalog = { "MAstroCatalog" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAstroCatalogcLcLdA = { "MAstroCatalog::$" , 101 , -1 };
G__linked_taginfo G__AstroCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MGeomMirror = { "MGeomMirror" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MAstroCamera = { "MAstroCamera" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__AstroCintLN_MObservatorycLcLLocationName_t = { "MObservatory::LocationName_t" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAstroCint() {
  G__AstroCintLN_TClass.tagnum = -1 ;
  G__AstroCintLN_TBuffer.tagnum = -1 ;
  G__AstroCintLN_TMemberInspector.tagnum = -1 ;
  G__AstroCintLN_TObject.tagnum = -1 ;
  G__AstroCintLN_TString.tagnum = -1 ;
  G__AstroCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__AstroCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AstroCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AstroCintLN_TList.tagnum = -1 ;
  G__AstroCintLN_TClonesArray.tagnum = -1 ;
  G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AstroCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AstroCintLN_TVector2.tagnum = -1 ;
  G__AstroCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AstroCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AstroCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AstroCintLN_TRotation.tagnum = -1 ;
  G__AstroCintLN_TVector3.tagnum = -1 ;
  G__AstroCintLN_MVector3.tagnum = -1 ;
  G__AstroCintLN_MVector3cLcLVectorType_t.tagnum = -1 ;
  G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AstroCintLN_TArrayD.tagnum = -1 ;
  G__AstroCintLN_MTime.tagnum = -1 ;
  G__AstroCintLN_MAstro.tagnum = -1 ;
  G__AstroCintLN_MObservatory.tagnum = -1 ;
  G__AstroCintLN_MAstroSky2Local.tagnum = -1 ;
  G__AstroCintLN_TAttLine.tagnum = -1 ;
  G__AstroCintLN_TAttMarker.tagnum = -1 ;
  G__AstroCintLN_TGToolTip.tagnum = -1 ;
  G__AstroCintLN_MGMap.tagnum = -1 ;
  G__AstroCintLN_TArrayI.tagnum = -1 ;
  G__AstroCintLN_TGraph.tagnum = -1 ;
  G__AstroCintLN_MAttLine.tagnum = -1 ;
  G__AstroCintLN_MAstroCatalog.tagnum = -1 ;
  G__AstroCintLN_MAstroCatalogcLcLdA.tagnum = -1 ;
  G__AstroCintLN_MGeomCam.tagnum = -1 ;
  G__AstroCintLN_MGeomMirror.tagnum = -1 ;
  G__AstroCintLN_MAstroCamera.tagnum = -1 ;
  G__AstroCintLN_TEnv.tagnum = -1 ;
  G__AstroCintLN_MParContainer.tagnum = -1 ;
  G__AstroCintLN_MObservatorycLcLLocationName_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAstroCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TString);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TList);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TRotation);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MVector3),sizeof(MVector3),-1,323840,"A specialized TVector3 storing a star-name",G__setup_memvarMVector3,G__setup_memfuncMVector3);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MVector3cLcLVectorType_t);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MTime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MAstro),sizeof(MAstro),-1,263168,(char*)NULL,G__setup_memvarMAstro,G__setup_memfuncMAstro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MObservatory),sizeof(MObservatory),-1,323840,"class storing observatory locations",G__setup_memvarMObservatory,G__setup_memfuncMObservatory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MAstroSky2Local),sizeof(MAstroSky2Local),-1,323584,"Rotation Matrix to convert sky coordinates to ideal local coordinates",G__setup_memvarMAstroSky2Local,G__setup_memfuncMAstroSky2Local);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TGToolTip);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MGMap);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MAttLine),sizeof(MAttLine),-1,323840,"Helper class to have a TAttLine derving from TObject (for standalone GED editor)",G__setup_memvarMAttLine,G__setup_memfuncMAttLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MAstroCatalog),sizeof(MAstroCatalog),-1,324864,"Display class for star catalogs",G__setup_memvarMAstroCatalog,G__setup_memfuncMAstroCatalog);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MAstroCatalogcLcLdA);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MGeomCam);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MGeomMirror);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AstroCintLN_MAstroCamera),sizeof(MAstroCamera),-1,324864,"Display class to display stars on the camera",G__setup_memvarMAstroCamera,G__setup_memfuncMAstroCamera);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__AstroCintLN_MObservatorycLcLLocationName_t);
}
extern "C" void G__cpp_setupAstroCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupAstroCint()");
  G__set_cpp_environmentAstroCint();
  G__cpp_setup_tagtableAstroCint();

  G__cpp_setup_inheritanceAstroCint();

  G__cpp_setup_typetableAstroCint();

  G__cpp_setup_memvarAstroCint();

  G__cpp_setup_memfuncAstroCint();
  G__cpp_setup_globalAstroCint();
  G__cpp_setup_funcAstroCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAstroCint();
  return;
}
class G__cpp_setup_initAstroCint {
  public:
    G__cpp_setup_initAstroCint() { G__add_setup_func("AstroCint",(G__incsetup)(&G__cpp_setupAstroCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAstroCint() { G__remove_setup_func("AstroCint"); }
};
G__cpp_setup_initAstroCint G__cpp_setup_initializerAstroCint;

