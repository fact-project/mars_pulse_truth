//
// File generated by rootcint at Mon Nov 28 11:05:44 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME HistCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "HistCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MHCamera_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHCamera(void *p = 0);
   static void *newArray_MHCamera(Long_t size, void *p);
   static void delete_MHCamera(void *p);
   static void deleteArray_MHCamera(void *p);
   static void destruct_MHCamera(void *p);
   static void directoryAutoAdd_MHCamera(void *obj, TDirectory *dir);
   static Long64_t merge_MHCamera(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHCamera*)
   {
      ::MHCamera *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHCamera >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHCamera", ::MHCamera::Class_Version(), "./MHCamera.h", 39,
                  typeid(::MHCamera), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHCamera::Dictionary, isa_proxy, 4,
                  sizeof(::MHCamera) );
      instance.SetNew(&new_MHCamera);
      instance.SetNewArray(&newArray_MHCamera);
      instance.SetDelete(&delete_MHCamera);
      instance.SetDeleteArray(&deleteArray_MHCamera);
      instance.SetDestructor(&destruct_MHCamera);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_MHCamera);
      instance.SetMerge(&merge_MHCamera);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHCamera*)
   {
      return GenerateInitInstanceLocal((::MHCamera*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHCamera*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHEvent(void *p = 0);
   static void *newArray_MHEvent(Long_t size, void *p);
   static void delete_MHEvent(void *p);
   static void deleteArray_MHEvent(void *p);
   static void destruct_MHEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHEvent*)
   {
      ::MHEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHEvent", ::MHEvent::Class_Version(), "./MHEvent.h", 21,
                  typeid(::MHEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MHEvent) );
      instance.SetNew(&new_MHEvent);
      instance.SetNewArray(&newArray_MHEvent);
      instance.SetDelete(&delete_MHEvent);
      instance.SetDeleteArray(&deleteArray_MHEvent);
      instance.SetDestructor(&destruct_MHEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHEvent*)
   {
      return GenerateInitInstanceLocal((::MHEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHCamEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHCamEvent(void *p = 0);
   static void *newArray_MHCamEvent(Long_t size, void *p);
   static void delete_MHCamEvent(void *p);
   static void deleteArray_MHCamEvent(void *p);
   static void destruct_MHCamEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHCamEvent*)
   {
      ::MHCamEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHCamEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHCamEvent", ::MHCamEvent::Class_Version(), "./MHCamEvent.h", 12,
                  typeid(::MHCamEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHCamEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MHCamEvent) );
      instance.SetNew(&new_MHCamEvent);
      instance.SetNewArray(&newArray_MHCamEvent);
      instance.SetDelete(&delete_MHCamEvent);
      instance.SetDeleteArray(&deleteArray_MHCamEvent);
      instance.SetDestructor(&destruct_MHCamEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHCamEvent*)
   {
      return GenerateInitInstanceLocal((::MHCamEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHCamEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHCamEventRot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHCamEventRot(void *p = 0);
   static void *newArray_MHCamEventRot(Long_t size, void *p);
   static void delete_MHCamEventRot(void *p);
   static void deleteArray_MHCamEventRot(void *p);
   static void destruct_MHCamEventRot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHCamEventRot*)
   {
      ::MHCamEventRot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHCamEventRot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHCamEventRot", ::MHCamEventRot::Class_Version(), "./MHCamEventRot.h", 21,
                  typeid(::MHCamEventRot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHCamEventRot::Dictionary, isa_proxy, 4,
                  sizeof(::MHCamEventRot) );
      instance.SetNew(&new_MHCamEventRot);
      instance.SetNewArray(&newArray_MHCamEventRot);
      instance.SetDelete(&delete_MHCamEventRot);
      instance.SetDeleteArray(&deleteArray_MHCamEventRot);
      instance.SetDestructor(&destruct_MHCamEventRot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHCamEventRot*)
   {
      return GenerateInitInstanceLocal((::MHCamEventRot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHCamEventRot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHStarMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHStarMap(void *p = 0);
   static void *newArray_MHStarMap(Long_t size, void *p);
   static void delete_MHStarMap(void *p);
   static void deleteArray_MHStarMap(void *p);
   static void destruct_MHStarMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHStarMap*)
   {
      ::MHStarMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHStarMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHStarMap", ::MHStarMap::Class_Version(), "./MHStarMap.h", 15,
                  typeid(::MHStarMap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHStarMap::Dictionary, isa_proxy, 4,
                  sizeof(::MHStarMap) );
      instance.SetNew(&new_MHStarMap);
      instance.SetNewArray(&newArray_MHStarMap);
      instance.SetDelete(&delete_MHStarMap);
      instance.SetDeleteArray(&deleteArray_MHStarMap);
      instance.SetDestructor(&destruct_MHStarMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHStarMap*)
   {
      return GenerateInitInstanceLocal((::MHStarMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHStarMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHHadronness_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHHadronness(void *p = 0);
   static void *newArray_MHHadronness(Long_t size, void *p);
   static void delete_MHHadronness(void *p);
   static void deleteArray_MHHadronness(void *p);
   static void destruct_MHHadronness(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHHadronness*)
   {
      ::MHHadronness *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHHadronness >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHHadronness", ::MHHadronness::Class_Version(), "./MHHadronness.h", 16,
                  typeid(::MHHadronness), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHHadronness::Dictionary, isa_proxy, 4,
                  sizeof(::MHHadronness) );
      instance.SetNew(&new_MHHadronness);
      instance.SetNewArray(&newArray_MHHadronness);
      instance.SetDelete(&delete_MHHadronness);
      instance.SetDeleteArray(&deleteArray_MHHadronness);
      instance.SetDestructor(&destruct_MHHadronness);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHHadronness*)
   {
      return GenerateInitInstanceLocal((::MHHadronness*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHHadronness*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHTriggerLvl0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHTriggerLvl0(void *p = 0);
   static void *newArray_MHTriggerLvl0(Long_t size, void *p);
   static void delete_MHTriggerLvl0(void *p);
   static void deleteArray_MHTriggerLvl0(void *p);
   static void destruct_MHTriggerLvl0(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHTriggerLvl0*)
   {
      ::MHTriggerLvl0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHTriggerLvl0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHTriggerLvl0", ::MHTriggerLvl0::Class_Version(), "./MHTriggerLvl0.h", 12,
                  typeid(::MHTriggerLvl0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHTriggerLvl0::Dictionary, isa_proxy, 4,
                  sizeof(::MHTriggerLvl0) );
      instance.SetNew(&new_MHTriggerLvl0);
      instance.SetNewArray(&newArray_MHTriggerLvl0);
      instance.SetDelete(&delete_MHTriggerLvl0);
      instance.SetDeleteArray(&deleteArray_MHTriggerLvl0);
      instance.SetDestructor(&destruct_MHTriggerLvl0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHTriggerLvl0*)
   {
      return GenerateInitInstanceLocal((::MHTriggerLvl0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHTriggerLvl0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHRate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHRate(void *p = 0);
   static void *newArray_MHRate(Long_t size, void *p);
   static void delete_MHRate(void *p);
   static void deleteArray_MHRate(void *p);
   static void destruct_MHRate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHRate*)
   {
      ::MHRate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHRate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHRate", ::MHRate::Class_Version(), "./MHRate.h", 22,
                  typeid(::MHRate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHRate::Dictionary, isa_proxy, 4,
                  sizeof(::MHRate) );
      instance.SetNew(&new_MHRate);
      instance.SetNewArray(&newArray_MHRate);
      instance.SetDelete(&delete_MHRate);
      instance.SetDeleteArray(&deleteArray_MHRate);
      instance.SetDestructor(&destruct_MHRate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHRate*)
   {
      return GenerateInitInstanceLocal((::MHRate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHRate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHWeather_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHWeather(void *p = 0);
   static void *newArray_MHWeather(Long_t size, void *p);
   static void delete_MHWeather(void *p);
   static void deleteArray_MHWeather(void *p);
   static void destruct_MHWeather(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHWeather*)
   {
      ::MHWeather *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHWeather >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHWeather", ::MHWeather::Class_Version(), "./MHWeather.h", 16,
                  typeid(::MHWeather), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHWeather::Dictionary, isa_proxy, 4,
                  sizeof(::MHWeather) );
      instance.SetNew(&new_MHWeather);
      instance.SetNewArray(&newArray_MHWeather);
      instance.SetDelete(&delete_MHWeather);
      instance.SetDeleteArray(&deleteArray_MHWeather);
      instance.SetDestructor(&destruct_MHWeather);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHWeather*)
   {
      return GenerateInitInstanceLocal((::MHWeather*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHWeather*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MHCamera::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHCamera::Class_Name()
{
   return "MHCamera";
}

//______________________________________________________________________________
const char *MHCamera::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamera*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHCamera::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamera*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHCamera::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamera*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHCamera::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamera*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHEvent::Class_Name()
{
   return "MHEvent";
}

//______________________________________________________________________________
const char *MHEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHCamEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHCamEvent::Class_Name()
{
   return "MHCamEvent";
}

//______________________________________________________________________________
const char *MHCamEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHCamEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHCamEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHCamEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHCamEventRot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHCamEventRot::Class_Name()
{
   return "MHCamEventRot";
}

//______________________________________________________________________________
const char *MHCamEventRot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEventRot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHCamEventRot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEventRot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHCamEventRot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEventRot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHCamEventRot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHCamEventRot*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHStarMap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHStarMap::Class_Name()
{
   return "MHStarMap";
}

//______________________________________________________________________________
const char *MHStarMap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHStarMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHStarMap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHStarMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHStarMap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHStarMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHStarMap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHStarMap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHHadronness::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHHadronness::Class_Name()
{
   return "MHHadronness";
}

//______________________________________________________________________________
const char *MHHadronness::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHHadronness*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHHadronness::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHHadronness*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHHadronness::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHHadronness*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHHadronness::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHHadronness*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHTriggerLvl0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHTriggerLvl0::Class_Name()
{
   return "MHTriggerLvl0";
}

//______________________________________________________________________________
const char *MHTriggerLvl0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHTriggerLvl0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHTriggerLvl0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHTriggerLvl0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHTriggerLvl0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHTriggerLvl0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHTriggerLvl0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHTriggerLvl0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHRate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHRate::Class_Name()
{
   return "MHRate";
}

//______________________________________________________________________________
const char *MHRate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHRate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHRate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHRate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHRate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHRate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHRate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHRate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHWeather::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHWeather::Class_Name()
{
   return "MHWeather";
}

//______________________________________________________________________________
const char *MHWeather::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHWeather*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHWeather::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHWeather*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHWeather::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHWeather*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHWeather::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHWeather*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MHEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MHEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHEvent.
      TClass *R__cl = ::MHEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvtData", &fRawEvtData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawRunHeader", &fRawRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvtHeader", &fRawEvtHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcEvt", &fMcEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcTrig", &fMcTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCerPhotEvt", &fCerPhotEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fImgCleanStd", &fImgCleanStd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigger", &fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClone", &fClone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigCpy", &fTrigCpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHist", &fHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaximum", &fMaximum);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHEvent(void *p) {
      return  p ? new(p) ::MHEvent : new ::MHEvent;
   }
   static void *newArray_MHEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MHEvent[nElements] : new ::MHEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHEvent(void *p) {
      delete ((::MHEvent*)p);
   }
   static void deleteArray_MHEvent(void *p) {
      delete [] ((::MHEvent*)p);
   }
   static void destruct_MHEvent(void *p) {
      typedef ::MHEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHEvent

//______________________________________________________________________________
void MHCamEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHCamEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHCamEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHCamEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MHCamEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHCamEvent.
      TClass *R__cl = ::MHCamEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSum", &fSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fErr", &fErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvt", &fEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSub", &fSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameEvt", &fNameEvt);
      R__insp.InspectMember(fNameEvt, "fNameEvt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSub", &fNameSub);
      R__insp.InspectMember(fNameSub, "fNameSub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameGeom", &fNameGeom);
      R__insp.InspectMember(fNameGeom, "fNameGeom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorSpread", &fErrorSpread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorRelative", &fErrorRelative);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseThreshold", &fUseThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRatio", &fIsRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumReInit", &fNumReInit);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHCamEvent(void *p) {
      return  p ? new(p) ::MHCamEvent : new ::MHCamEvent;
   }
   static void *newArray_MHCamEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MHCamEvent[nElements] : new ::MHCamEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHCamEvent(void *p) {
      delete ((::MHCamEvent*)p);
   }
   static void deleteArray_MHCamEvent(void *p) {
      delete [] ((::MHCamEvent*)p);
   }
   static void destruct_MHCamEvent(void *p) {
      typedef ::MHCamEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHCamEvent

//______________________________________________________________________________
void MHCamEventRot::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHCamEventRot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHCamEventRot::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHCamEventRot::Class(),this);
   }
}

//______________________________________________________________________________
void MHCamEventRot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHCamEventRot.
      TClass *R__cl = ::MHCamEventRot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeom", &fGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPos", &fPointPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObservatory", &fObservatory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHist", &fHist);
      R__insp.InspectMember(fHist, "fHist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRa", &fRa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDec", &fDec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameTime", &fNameTime);
      R__insp.InspectMember(fNameTime, "fNameTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseThreshold", &fUseThreshold);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHCamEventRot(void *p) {
      return  p ? new(p) ::MHCamEventRot : new ::MHCamEventRot;
   }
   static void *newArray_MHCamEventRot(Long_t nElements, void *p) {
      return p ? new(p) ::MHCamEventRot[nElements] : new ::MHCamEventRot[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHCamEventRot(void *p) {
      delete ((::MHCamEventRot*)p);
   }
   static void deleteArray_MHCamEventRot(void *p) {
      delete [] ((::MHCamEventRot*)p);
   }
   static void destruct_MHCamEventRot(void *p) {
      typedef ::MHCamEventRot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHCamEventRot

//______________________________________________________________________________
void MHTriggerLvl0::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHTriggerLvl0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHTriggerLvl0::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHTriggerLvl0::Class(),this);
   }
}

//______________________________________________________________________________
void MHTriggerLvl0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHTriggerLvl0.
      TClass *R__cl = ::MHTriggerLvl0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSum", &fSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvt", &fEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameEvt", &fNameEvt);
      R__insp.InspectMember(fNameEvt, "fNameEvt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHTriggerLvl0(void *p) {
      return  p ? new(p) ::MHTriggerLvl0 : new ::MHTriggerLvl0;
   }
   static void *newArray_MHTriggerLvl0(Long_t nElements, void *p) {
      return p ? new(p) ::MHTriggerLvl0[nElements] : new ::MHTriggerLvl0[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHTriggerLvl0(void *p) {
      delete ((::MHTriggerLvl0*)p);
   }
   static void deleteArray_MHTriggerLvl0(void *p) {
      delete [] ((::MHTriggerLvl0*)p);
   }
   static void destruct_MHTriggerLvl0(void *p) {
      typedef ::MHTriggerLvl0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHTriggerLvl0

//______________________________________________________________________________
void MHStarMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHStarMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHStarMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHStarMap::Class(),this);
   }
}

//______________________________________________________________________________
void MHStarMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHStarMap.
      TClass *R__cl = ::MHStarMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSrcPos", &fSrcPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPos", &fPointPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObservatory", &fObservatory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStarMap", &fStarMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMm2Deg", &fMm2Deg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseMmScale", &fUseMmScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosLat", &fCosLat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSinLat", &fSinLat);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHStarMap(void *p) {
      return  p ? new(p) ::MHStarMap : new ::MHStarMap;
   }
   static void *newArray_MHStarMap(Long_t nElements, void *p) {
      return p ? new(p) ::MHStarMap[nElements] : new ::MHStarMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHStarMap(void *p) {
      delete ((::MHStarMap*)p);
   }
   static void deleteArray_MHStarMap(void *p) {
      delete [] ((::MHStarMap*)p);
   }
   static void destruct_MHStarMap(void *p) {
      typedef ::MHStarMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHStarMap

//______________________________________________________________________________
void MHHadronness::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHHadronness.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHHadronness::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHHadronness::Class(),this);
   }
}

//______________________________________________________________________________
void MHHadronness::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHHadronness.
      TClass *R__cl = ::MHHadronness::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcEvt", &fMcEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHadronness", &fHadronness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", &fMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhness", &fPhness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGhness", &fGhness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIntPhness", &fIntPhness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIntGhness", &fIntGhness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQfac", &fQfac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGraph", &fGraph);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHHadronness(void *p) {
      return  p ? new(p) ::MHHadronness : new ::MHHadronness;
   }
   static void *newArray_MHHadronness(Long_t nElements, void *p) {
      return p ? new(p) ::MHHadronness[nElements] : new ::MHHadronness[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHHadronness(void *p) {
      delete ((::MHHadronness*)p);
   }
   static void deleteArray_MHHadronness(void *p) {
      delete [] ((::MHHadronness*)p);
   }
   static void destruct_MHHadronness(void *p) {
      typedef ::MHHadronness current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHHadronness

//______________________________________________________________________________
void MHCamera::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHCamera.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHCamera::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHCamera::Class(),this);
   }
}

//______________________________________________________________________________
void MHCamera::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHCamera.
      TClass *R__cl = ::MHCamera::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomCam", &fGeomCam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUsed", &fUsed);
      R__insp.InspectMember(fUsed, "fUsed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinEntries", &fBinEntries);
      R__insp.InspectMember(fBinEntries, "fBinEntries.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNotify", &fNotify);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFreezed", &fFreezed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbberation", &fAbberation);
      TH1D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHCamera(void *p) {
      return  p ? new(p) ::MHCamera : new ::MHCamera;
   }
   static void *newArray_MHCamera(Long_t nElements, void *p) {
      return p ? new(p) ::MHCamera[nElements] : new ::MHCamera[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHCamera(void *p) {
      delete ((::MHCamera*)p);
   }
   static void deleteArray_MHCamera(void *p) {
      delete [] ((::MHCamera*)p);
   }
   static void destruct_MHCamera(void *p) {
      typedef ::MHCamera current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_MHCamera(void *p, TDirectory *dir) {
      ((::MHCamera*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_MHCamera(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::MHCamera*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::MHCamera

//______________________________________________________________________________
void MHRate::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHRate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHRate::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHRate::Class(),this);
   }
}

//______________________________________________________________________________
void MHRate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHRate.
      TClass *R__cl = ::MHRate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRateTime", &fRateTime);
      R__insp.InspectMember(fRateTime, "fRateTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRateZd", &fRateZd);
      R__insp.InspectMember(fRateZd, "fRateZd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRate", &fRate);
      R__insp.InspectMember(fRate, "fRate.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPos", &fPointPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtRate", &fEvtRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLast", &fLast);
      R__insp.InspectMember(fLast, "fLast.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMean", &fMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHRate(void *p) {
      return  p ? new(p) ::MHRate : new ::MHRate;
   }
   static void *newArray_MHRate(Long_t nElements, void *p) {
      return p ? new(p) ::MHRate[nElements] : new ::MHRate[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHRate(void *p) {
      delete ((::MHRate*)p);
   }
   static void deleteArray_MHRate(void *p) {
      delete [] ((::MHRate*)p);
   }
   static void destruct_MHRate(void *p) {
      typedef ::MHRate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHRate

//______________________________________________________________________________
void MHWeather::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHWeather.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHWeather::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHWeather::Class(),this);
   }
}

//______________________________________________________________________________
void MHWeather::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHWeather.
      TClass *R__cl = ::MHWeather::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHumidity", &fHumidity);
      R__insp.InspectMember(fHumidity, "fHumidity.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTemperature", &fTemperature);
      R__insp.InspectMember(fTemperature, "fTemperature.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWindSpeed", &fWindSpeed);
      R__insp.InspectMember(fWindSpeed, "fWindSpeed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventRate", &fEventRate);
      R__insp.InspectMember(fEventRate, "fEventRate.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCloudiness", &fCloudiness);
      R__insp.InspectMember(fCloudiness, "fCloudiness.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTempAir", &fTempAir);
      R__insp.InspectMember(fTempAir, "fTempAir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTempSky", &fTempSky);
      R__insp.InspectMember(fTempSky, "fTempSky.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReportCC", &fReportCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReportPyro", &fReportPyro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRate", &fRate);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHWeather(void *p) {
      return  p ? new(p) ::MHWeather : new ::MHWeather;
   }
   static void *newArray_MHWeather(Long_t nElements, void *p) {
      return p ? new(p) ::MHWeather[nElements] : new ::MHWeather[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHWeather(void *p) {
      delete ((::MHWeather*)p);
   }
   static void deleteArray_MHWeather(void *p) {
      delete [] ((::MHWeather*)p);
   }
   static void destruct_MHWeather(void *p) {
      typedef ::MHWeather current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHWeather

/********************************************************
* HistCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableHistCint();

extern "C" void G__set_cpp_environmentHistCint() {
  G__cpp_reset_tagtableHistCint();
}
#include <new>
extern "C" int G__cpp_dllrevHistCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MHCamera */
static int G__HistCint_224_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHCamera* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamera[n];
     } else {
       p = new((void*) gvp) MHCamera[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamera;
     } else {
       p = new((void*) gvp) MHCamera;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamera));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHCamera* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamera(
*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHCamera(
*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamera(*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHCamera(*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamera(*(MGeomCam*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MHCamera(*(MGeomCam*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamera));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MHCamera*) G__getstructoffset())->SetGeometry(*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->SetGeometry(*(MGeomCam*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetGeometry(*(MGeomCam*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->GetGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MHCamera*) G__getstructoffset())->IsUsed((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetUsed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetAllUsed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHCamera*) G__getstructoffset())->GetNumUsedSector(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHCamera*) G__getstructoffset())->GetNumUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHCamera*) G__getstructoffset())->GetNumUsedSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MHCamera*) G__getstructoffset())->Fill((Axis_t) G__double(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Stat_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetPixContent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHCamera*) G__getstructoffset())->AddCamDifference(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Stat_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHCamera*) G__getstructoffset())->AddCamDifference(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamDifference(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHCamera*) G__getstructoffset())->AddCamRatio(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Stat_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHCamera*) G__getstructoffset())->AddCamRatio(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamRatio(*(MCamEvent*) libp->para[0].ref, *(MCamEvent*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Stat_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MHCamera*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MHCamera*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(TArrayD*) libp->para[0].ref, (TArrayC*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(TArrayD*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MArrayD*) libp->para[0].ref, (TArrayC*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddCamContent(*(MArrayD*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MHCamera*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MHCamera*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(TArrayD*) libp->para[0].ref, (TArrayC*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(TArrayD*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MArrayD*) libp->para[0].ref, (TArrayC*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetCamContent(*(MArrayD*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetCamError(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetCamError(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetUsed(*(TArrayC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MHCamera*) G__getstructoffset())->AddMedianShift(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Stat_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->AddMedianShift(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddMedianShift(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MHCamera*) G__getstructoffset())->AddMeanShift(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Stat_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->AddMeanShift(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->AddMeanShift(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, *((TArrayD*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, *((TArrayD*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, *((TArrayD*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(TArrayD*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(TArrayD*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->CntCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, *(MCamEvent*) libp->para[2].ref, (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetMaxCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetMaxCamContent(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetMinCamContent(*(MCamEvent*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetMinCamContent(*(MCamEvent*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimum((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximum((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimumSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimumSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximumSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximumSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimumSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMinimumSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximumSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMaximumSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const MHCamera*) G__getstructoffset())->GetNumBinsAboveThreshold((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const MHCamera*) G__getstructoffset())->GetNumBinsAboveThreshold());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const MHCamera*) G__getstructoffset())->GetNumBinsBelowThreshold((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const MHCamera*) G__getstructoffset())->GetNumBinsBelowThreshold());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetLevels(*(TArrayF*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->FillRandom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHCamera*) G__getstructoffset())->PrintInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const MHCamera*) G__getstructoffset())->DrawProjection((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const MHCamera*) G__getstructoffset())->DrawProjection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHCamera*) G__getstructoffset())->DrawRadialProfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHCamera*) G__getstructoffset())->DrawAzimuthProfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SavePrimitive(*(ofstream*) libp->para[0].ref, (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetPalette((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetPrettyPalette();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetDeepBlueSeaPalette();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetInvDeepBlueSeaPalette();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHCamera*) G__getstructoffset())->SetFreezed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamera*) G__getstructoffset())->SetFreezed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MHCamera*) G__getstructoffset())->IsFreezed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHCamera*) G__getstructoffset())->SetErrorSpread((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamera*) G__getstructoffset())->SetErrorSpread();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MHCamera*) G__getstructoffset())->IsErrorSpread());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHCamera*) G__getstructoffset())->SetAbberation((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamera*) G__getstructoffset())->SetAbberation();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->SetAutoScale();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamera*) G__getstructoffset())->SetMinMax((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamera*) G__getstructoffset())->SetMinMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamera*) G__getstructoffset())->SetMinMax();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->AddNotify((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMean((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedian((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetRMS((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDev((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedian((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedian());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDev((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDev());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMeanSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMeanSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedianSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedianSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetRmsSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetRmsSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDevSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDevSector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMeanSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMeanSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedianSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetMedianSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetRmsSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetRmsSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDevSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MHCamera*) G__getstructoffset())->GetDevSectors(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHCamera*) G__getstructoffset())->GetNumPixels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->Projection((const char*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->Projection((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->Projection());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->ProjectionS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfile((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->RadialProfileS(*(TArrayI*) libp->para[0].ref, *(TArrayI*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfile((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfileA(*(TArrayI*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfileA(*(TArrayI*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MHCamera*) G__getstructoffset())->AzimuthProfileA(*(TArrayI*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((MHCamera*) G__getstructoffset())->CamDraw(
*(TCanvas*) libp->para[0].ref, (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (TObject*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((MHCamera*) G__getstructoffset())->CamDraw(*(TCanvas*) libp->para[0].ref, (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MHCamera*) G__getstructoffset())->CamDraw(*(TCanvas*) libp->para[0].ref, (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MHCamera*) G__getstructoffset())->CamDraw(*(TCanvas*) libp->para[0].ref, (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MGeomCam& obj = ((const MHCamera*) G__getstructoffset())->GetGeomCam();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHCamera::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamera::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHCamera::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHCamera::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamera*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamera::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamera::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamera::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_224_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamera::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HistCint_224_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MHCamera* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MHCamera(*(MHCamera*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamera));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHCamera G__TMHCamera;
static int G__HistCint_224_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHCamera*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHCamera*) (soff+(sizeof(MHCamera)*i)))->~G__TMHCamera();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHCamera*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHCamera*) (soff))->~G__TMHCamera();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHEvent */
static int G__HistCint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHEvent((MHEvent::EventType_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHEvent((MHEvent::EventType_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHEvent[n];
       } else {
         p = new((void*) gvp) MHEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHEvent;
       } else {
         p = new((void*) gvp) MHEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHEvent*) G__getstructoffset())->SetMinimum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHEvent*) G__getstructoffset())->SetMinimum();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHEvent*) G__getstructoffset())->SetMaximum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHEvent*) G__getstructoffset())->SetMaximum();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHEvent*) G__getstructoffset())->GetHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHEvent G__TMHEvent;
static int G__HistCint_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHEvent*) (soff+(sizeof(MHEvent)*i)))->~G__TMHEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHEvent*) (soff))->~G__TMHEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHCamEvent */
static int G__HistCint_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHCamEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHCamEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEvent((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHCamEvent((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHCamEvent[n];
       } else {
         p = new((void*) gvp) MHCamEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHCamEvent;
       } else {
         p = new((void*) gvp) MHCamEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHCamEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEvent(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHCamEvent(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHCamEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEvent((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHCamEvent((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetNameEvt(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamEvent*) G__getstructoffset())->SetNameSub(*((const TString*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamEvent*) G__getstructoffset())->SetNameSub(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetNameGeom(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetHist(*(MHCamera*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHCamEvent*) G__getstructoffset())->GetHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHCamEvent*) G__getstructoffset())->GetHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const MHCamEvent*) G__getstructoffset())->GetHistByName(*((const TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MHCamEvent*) G__getstructoffset())->GetHistByName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHCamEvent*) G__getstructoffset())->PrintOutliers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamEvent*) G__getstructoffset())->SetThreshold((Float_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamEvent*) G__getstructoffset())->SetThreshold((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamEvent*) G__getstructoffset())->SetThreshold();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetCollectMin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetCollectMax();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetMedianShift();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->SetMeanShift();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHCamEvent*) G__getstructoffset())->SetErrorSpread((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamEvent*) G__getstructoffset())->SetErrorSpread();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHCamEvent*) G__getstructoffset())->SetErrorRelative((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHCamEvent*) G__getstructoffset())->SetErrorRelative();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHCamEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHCamEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHCamEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_237_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHCamEvent G__TMHCamEvent;
static int G__HistCint_237_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHCamEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHCamEvent*) (soff+(sizeof(MHCamEvent)*i)))->~G__TMHCamEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHCamEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHCamEvent*) (soff))->~G__TMHCamEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHCamEventRot */
static int G__HistCint_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHCamEventRot* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEventRot((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHCamEventRot((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHCamEventRot((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHCamEventRot((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHCamEventRot[n];
       } else {
         p = new((void*) gvp) MHCamEventRot[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHCamEventRot;
       } else {
         p = new((void*) gvp) MHCamEventRot;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEventRot*) G__getstructoffset())->SetNameTime((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MHCamEventRot*) G__getstructoffset())->SetThreshold((Float_t) G__double(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MHCamEventRot*) G__getstructoffset())->SetThreshold((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHCamEventRot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEventRot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHCamEventRot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHCamEventRot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHCamEventRot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEventRot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamEventRot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHCamEventRot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHCamEventRot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHCamEventRot G__TMHCamEventRot;
static int G__HistCint_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHCamEventRot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHCamEventRot*) (soff+(sizeof(MHCamEventRot)*i)))->~G__TMHCamEventRot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHCamEventRot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHCamEventRot*) (soff))->~G__TMHCamEventRot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHStarMap */
static int G__HistCint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHStarMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHStarMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHStarMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHStarMap((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHStarMap((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHStarMap[n];
       } else {
         p = new((void*) gvp) MHStarMap[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHStarMap;
       } else {
         p = new((void*) gvp) MHStarMap;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHStarMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHStarMap*) G__getstructoffset())->SetMmScale((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHStarMap*) G__getstructoffset())->SetMmScale();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHStarMap*) G__getstructoffset())->SetMm2Deg((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHStarMap*) G__getstructoffset())->GetHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHStarMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHStarMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHStarMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHStarMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHStarMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHStarMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHStarMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHStarMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHStarMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHStarMap G__TMHStarMap;
static int G__HistCint_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHStarMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHStarMap*) (soff+(sizeof(MHStarMap)*i)))->~G__TMHStarMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHStarMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHStarMap*) (soff))->~G__TMHStarMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHHadronness */
static int G__HistCint_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHHadronness* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHHadronness(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHHadronness(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHHadronness((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHHadronness((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHHadronness((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHHadronness((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHHadronness[n];
       } else {
         p = new((void*) gvp) MHHadronness[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHHadronness;
       } else {
         p = new((void*) gvp) MHHadronness;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHHadronness));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHHadronness*) G__getstructoffset())->GetGammaAcceptance((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHHadronness*) G__getstructoffset())->GetHadronAcceptance((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHHadronness*) G__getstructoffset())->GetHadronness((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHHadronness*) G__getstructoffset())->Getghness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHHadronness*) G__getstructoffset())->Getphness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHHadronness*) G__getstructoffset())->Getighness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHHadronness*) G__getstructoffset())->Getiphness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MHHadronness*) G__getstructoffset())->GetQ05());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHHadronness*) G__getstructoffset())->InitMapping((MHMatrix*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHHadronness*) G__getstructoffset())->StopMapping();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHHadronness::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHHadronness::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHHadronness::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHHadronness::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHHadronness*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHHadronness::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHHadronness::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHHadronness::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_250_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHHadronness::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHHadronness G__TMHHadronness;
static int G__HistCint_250_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHHadronness*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHHadronness*) (soff+(sizeof(MHHadronness)*i)))->~G__TMHHadronness();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHHadronness*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHHadronness*) (soff))->~G__TMHHadronness();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHTriggerLvl0 */
static int G__HistCint_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHTriggerLvl0* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHTriggerLvl0(
(Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHTriggerLvl0(
(Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHTriggerLvl0((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHTriggerLvl0((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHTriggerLvl0((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) MHTriggerLvl0((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHTriggerLvl0[n];
       } else {
         p = new((void*) gvp) MHTriggerLvl0[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHTriggerLvl0;
       } else {
         p = new((void*) gvp) MHTriggerLvl0;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHTriggerLvl0*) G__getstructoffset())->SetNameEvt(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHTriggerLvl0*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHTriggerLvl0*) G__getstructoffset())->SetThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const MHTriggerLvl0*) G__getstructoffset())->GetHistByName(*((const TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MHTriggerLvl0*) G__getstructoffset())->GetHistByName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHTriggerLvl0*) G__getstructoffset())->PrintOutliers((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHTriggerLvl0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHTriggerLvl0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHTriggerLvl0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHTriggerLvl0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHTriggerLvl0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHTriggerLvl0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHTriggerLvl0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHTriggerLvl0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_251_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHTriggerLvl0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHTriggerLvl0 G__TMHTriggerLvl0;
static int G__HistCint_251_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHTriggerLvl0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHTriggerLvl0*) (soff+(sizeof(MHTriggerLvl0)*i)))->~G__TMHTriggerLvl0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHTriggerLvl0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHTriggerLvl0*) (soff))->~G__TMHTriggerLvl0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHRate */
static int G__HistCint_322_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHRate* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHRate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHRate((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHRate((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHRate((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHRate[n];
       } else {
         p = new((void*) gvp) MHRate[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHRate;
       } else {
         p = new((void*) gvp) MHRate;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHRate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHRate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHRate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHRate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHRate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHRate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHRate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHRate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHRate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_322_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHRate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHRate G__TMHRate;
static int G__HistCint_322_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHRate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHRate*) (soff+(sizeof(MHRate)*i)))->~G__TMHRate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHRate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHRate*) (soff))->~G__TMHRate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHWeather */
static int G__HistCint_325_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHWeather* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHWeather((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHWeather((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHWeather((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHWeather((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHWeather[n];
       } else {
         p = new((void*) gvp) MHWeather[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHWeather;
       } else {
         p = new((void*) gvp) MHWeather;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HistCintLN_MHWeather));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHWeather::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHWeather::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHWeather::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHWeather::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHWeather*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHWeather::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHWeather::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHWeather::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HistCint_325_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHWeather::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHWeather G__TMHWeather;
static int G__HistCint_325_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHWeather*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHWeather*) (soff+(sizeof(MHWeather)*i)))->~G__TMHWeather();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHWeather*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHWeather*) (soff))->~G__TMHWeather();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MHCamera */

/* MHEvent */

/* MHCamEvent */

/* MHCamEventRot */

/* MHStarMap */

/* MHHadronness */

/* MHTriggerLvl0 */

/* MHRate */

/* MHWeather */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncHistCint {
 public:
  G__Sizep2memfuncHistCint(): p(&G__Sizep2memfuncHistCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncHistCint::*p)();
};

size_t G__get_sizep2memfuncHistCint()
{
  G__Sizep2memfuncHistCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceHistCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHCamera))) {
     MHCamera *G__Lderived;
     G__Lderived=(MHCamera*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera),G__get_linked_tagnum(&G__HistCintLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHEvent))) {
     MHEvent *G__Lderived;
     G__Lderived=(MHEvent*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHEvent),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHEvent),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHEvent),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent))) {
     MHCamEvent *G__Lderived;
     G__Lderived=(MHCamEvent*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot))) {
     MHCamEventRot *G__Lderived;
     G__Lderived=(MHCamEventRot*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHStarMap))) {
     MHStarMap *G__Lderived;
     G__Lderived=(MHStarMap*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHStarMap),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHStarMap),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHStarMap),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHHadronness))) {
     MHHadronness *G__Lderived;
     G__Lderived=(MHHadronness*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHHadronness),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHHadronness),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHHadronness),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0))) {
     MHTriggerLvl0 *G__Lderived;
     G__Lderived=(MHTriggerLvl0*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHRate))) {
     MHRate *G__Lderived;
     G__Lderived=(MHRate*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHRate),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHRate),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHRate),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HistCintLN_MHWeather))) {
     MHWeather *G__Lderived;
     G__Lderived=(MHWeather*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHWeather),G__get_linked_tagnum(&G__HistCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHWeather),G__get_linked_tagnum(&G__HistCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HistCintLN_MHWeather),G__get_linked_tagnum(&G__HistCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableHistCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Stat_t",100,-1,0,-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__HistCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__HistCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__HistCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__HistCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__HistCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HistCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MHCamera */
static void G__setup_memvarMHCamera(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera));
   { MHCamera *p; p=(MHCamera*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kProfile=%lldLL",(long long)MHCamera::kProfile).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFreezed=%lldLL",(long long)MHCamera::kFreezed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoLegend=%lldLL",(long long)MHCamera::kNoLegend).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoScale=%lldLL",(long long)MHCamera::kNoScale).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoUnused=%lldLL",(long long)MHCamera::kNoUnused).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kErrorMean=%lldLL",(long long)MHCamera::kErrorMean).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MGeomCam),-1,-1,2,"fGeomCam=",0,"pointer to camera geometry (y-axis)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TArrayC),-1,-1,2,"fUsed=",0,"array containing flags");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TArrayI),-1,-1,2,"fBinEntries=",0,"number of entries per bin");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TList),-1,-1,2,"fNotify=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFreezed=",0,"! Just a dummy!!!! ([Set,Is]Freezed)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAbberation=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCameracLcLdA),-1,-2,2,"kIsUsed=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHEvent */
static void G__setup_memvarMHEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHEvent));
   { MHEvent *p; p=(MHEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtSignalRaw=%lldLL",(long long)MHEvent::kEvtSignalRaw).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtSignalDensity=%lldLL",(long long)MHEvent::kEvtSignalDensity).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtSignalUncleaned=%lldLL",(long long)MHEvent::kEvtSignalUncleaned).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtPedestal=%lldLL",(long long)MHEvent::kEvtPedestal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtPedestalRMS=%lldLL",(long long)MHEvent::kEvtPedestalRMS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtPedPhot=%lldLL",(long long)MHEvent::kEvtPedPhot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtPedPhotRMS=%lldLL",(long long)MHEvent::kEvtPedPhotRMS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtCleaningLevels=%lldLL",(long long)MHEvent::kEvtCleaningLevels).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtCleaningData=%lldLL",(long long)MHEvent::kEvtCleaningData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtIdxMax=%lldLL",(long long)MHEvent::kEvtIdxMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtArrTime=%lldLL",(long long)MHEvent::kEvtArrTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtArrTimeCleaned=%lldLL",(long long)MHEvent::kEvtArrTimeCleaned).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtTrigPix=%lldLL",(long long)MHEvent::kEvtTrigPix).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtIslandIndex=%lldLL",(long long)MHEvent::kEvtIslandIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtTimeSlope=%lldLL",(long long)MHEvent::kEvtTimeSlope).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-2,1,G__FastAllocString(2048).Format("kEvtTimeSlopeCleaned=%lldLL",(long long)MHEvent::kEvtTimeSlopeCleaned).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MRawEvtData),-1,-1,4,"fRawEvtData=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MRawRunHeader),-1,-1,4,"fRawRunHeader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MRawEvtHeader),-1,-1,4,"fRawEvtHeader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MTime),-1,-1,4,"fTime=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MMcEvt),-1,-1,4,"fMcEvt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MMcTrig),-1,-1,4,"fMcTrig=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MSignalCam),-1,-1,4,"fCerPhotEvt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MImgCleanStd),-1,-1,4,"fImgCleanStd=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MTriggerPattern),-1,-1,4,"fTrigger=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MRawEvtData),-1,-1,4,"fClone=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MTriggerPattern),-1,-1,4,"fTrigCpy=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MHCamera),-1,-1,4,"fHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__HistCintLN_MHEventcLcLEventType_t),-1,-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinimum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaximum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHCamEvent */
static void G__setup_memvarMHCamEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent));
   { MHCamEvent *p; p=(MHCamEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-2,4,"gsDefName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-2,4,"gsDefTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MHCamera),-1,-1,2,"fSum=",0,"storing the sum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MHCamera),-1,-1,2,"fErr=",0,"! storing the err");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MCamEvent),-1,-1,2,"fEvt=",0,"! the current event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MCamEvent),-1,-1,2,"fSub=",0,"! the event to be subtracted");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-1,2,"fNameEvt=",0,"Name of MCamEvent to fill into histogram");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-1,2,"fNameSub=",0,"Name of MCamEvent to fill into histogram");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-1,2,"fNameGeom=",0,"Name of geometry container");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"Type to used for calling GetPixelContent");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fErrorSpread=",0,"kFALSE==mean, kTRUE==spread");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fErrorRelative=",0,"Display relative error?");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fThreshold=",0,"Count pixel above/below this threshold");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fUseThreshold=",0,"Use a threshold? Which direction has it?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRatio=",0,"If NameSub is set: Use Ratio or difference");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumReInit=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsLowerBound=%lldLL",(long long)MHCamEvent::kIsLowerBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsUpperBound=%lldLL",(long long)MHCamEvent::kIsUpperBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoBound=%lldLL",(long long)MHCamEvent::kNoBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCollectMin=%lldLL",(long long)MHCamEvent::kCollectMin).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCollectMax=%lldLL",(long long)MHCamEvent::kCollectMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMedianShift=%lldLL",(long long)MHCamEvent::kMedianShift).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMeanShift=%lldLL",(long long)MHCamEvent::kMeanShift).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHCamEventRot */
static void G__setup_memvarMHCamEventRot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot));
   { MHCamEventRot *p; p=(MHCamEventRot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-2,4,"gsDefName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-2,4,"gsDefTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MGeomCam),-1,-1,4,"fGeom=",0,"! container storing the camera geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MTime),-1,-1,4,"fTime=",0,"! container to take the event time from");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MPointingPos),-1,-1,4,"fPointPos=",0,"! container to take pointing position from");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MObservatory),-1,-1,4,"fObservatory=",0,"! conteiner to take observatory location from");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TH2D),-1,-1,4,"fHist=",0,"Alpha vs. x and y");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,"Type to used for calling GetPixelContent");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRa=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-1,4,"fNameTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fThreshold=",0,"Count pixel above/below this threshold");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fUseThreshold=",0,"Use a threshold? Which direction has it?");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventRotcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsLowerBound=%lldLL",(long long)MHCamEventRot::kIsLowerBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventRotcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsUpperBound=%lldLL",(long long)MHCamEventRot::kIsUpperBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HistCintLN_MHCamEventRotcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoBound=%lldLL",(long long)MHCamEventRot::kNoBound).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHStarMap */
static void G__setup_memvarMHStarMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHStarMap));
   { MHStarMap *p; p=(MHStarMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MSrcPosCam),-1,-1,4,"fSrcPos=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MPointingPos),-1,-1,4,"fPointPos=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MObservatory),-1,-1,4,"fObservatory=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TH2F),-1,-1,4,"fStarMap=",0,"->");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMm2Deg=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseMmScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCosLat=",0,"!");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSinLat=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHHadronness */
static void G__setup_memvarMHHadronness(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHHadronness));
   { MHHadronness *p; p=(MHHadronness*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__HistCintLN_MMcEvt),-1,-1,4,"fMcEvt=",0,"!");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__HistCintLN_MParameterD),-1,-1,4,"fHadronness=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MHMatrix),-1,-1,4,"fMatrix=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TH1D),-1,-1,4,"fPhness=",0,"-> Hadrons Hadronness");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TH1D),-1,-1,4,"fGhness=",0,"-> Gammas  Hadronness");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TH1D),-1,-1,4,"fIntPhness=",0,"-> Hadrons Acceptance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TH1D),-1,-1,4,"fIntGhness=",0,"-> Gammas  Acceptance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fQfac=",0,"-> Quality factor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fGraph=",0,"-> gamma acceptance vs. hadron acceptance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHTriggerLvl0 */
static void G__setup_memvarMHTriggerLvl0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0));
   { MHTriggerLvl0 *p; p=(MHTriggerLvl0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MHCamera),-1,-1,4,"fSum=",0,"storing the sum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MCamEvent),-1,-1,4,"fEvt=",0,"! the current event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TString),-1,-1,4,"fNameEvt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHRate */
static void G__setup_memvarMHRate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHRate));
   { MHRate *p; p=(MHRate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fRateTime=",0,"Graph of rate versus time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TProfile),-1,-1,4,"fRateZd=",0,"Profile of rate vs Zd");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TH1D),-1,-1,4,"fRate=",0,"Rate histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MPointingPos),-1,-1,4,"fPointPos=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MEventRate),-1,-1,4,"fEvtRate=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_MTime),-1,-1,4,"fLast=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMean=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCounter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHWeather */
static void G__setup_memvarMHWeather(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HistCintLN_MHWeather));
   { MHWeather *p; p=(MHWeather*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fHumidity=",0,"Humidity from weather station");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fTemperature=",0,"Temperature from weather station");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fWindSpeed=",0,"Wind Speed from weather station");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fEventRate=",0,"Event rate from event times");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fCloudiness=",0,"Cloudiness from Pyrometer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fTempAir=",0,"Temperature of the air from Pyrometer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HistCintLN_TGraph),-1,-1,4,"fTempSky=",0,"Temperature of the sky from Pyrometer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MReportCC),-1,-1,4,"fReportCC=",0,"! CC report with data from weather station");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MReportPyrometer),-1,-1,4,"fReportPyro=",0,"! Pyrometer report");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_MEventRate),-1,-1,4,"fRate=",0,"! Event rate");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HistCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarHistCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMHCamera(void) {
   /* MHCamera */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamera));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"f - 'Float_t' 0 - val f - 'Float_t' 0 - min "
"f - 'Float_t' 0 - max g - 'Bool_t' 0 - islog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintIndices",1211,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"g - 'Bool_t' 0 - islog g - 'Bool_t' 0 - isbox "
"g - 'Bool_t' 0 - iscol g - 'Bool_t' 0 - issame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateLegend",1202,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"f - 'Float_t' 0 - min f - 'Float_t' 0 - max "
"g - 'Bool_t' 0 - islog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatisticBox",1537,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HistCintLN_TPaveStats), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixelIndex",1306,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"f - 'Float_t' 0 '1' conv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintAxisTitle",1427,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetUsed",916,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVal",676,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 8, 
"u 'TArrayI' - 11 - arr i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchSector",1117,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 8, 
"i - 'Int_t' 0 - idx u 'TArrayI' - 11 - sector "
"u 'TArrayI' - 11 - aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rebin",496,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 '2' - C - - 10 '\"\"' - "
"D - 'Double_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rebin",496,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 '2' - C - - 10 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPanel",894,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "d - 'Axis_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"C - - 10 - - d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillN",469,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - - D - 'Axis_t' 10 - - "
"D - 'Double_t' 10 - - i - 'Int_t' 0 '1' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillN",469,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"i - 'Int_t' 0 - - D - 'Axis_t' 10 - - "
"D - 'Axis_t' 10 - - D - 'Double_t' 10 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHCamera",734,G__HistCint_224_0_19, 105, G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHCamera",734,G__HistCint_224_0_20, 105, G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom C - - 10 '\"\"' name "
"C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,G__HistCint_224_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom C - - 10 '\"\"' name "
"C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometry",1132,G__HistCint_224_0_23, 85, G__get_linked_tagnum(&G__HistCintLN_MGeomCam), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUsed",589,G__HistCint_224_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUsed",701,G__HistCint_224_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllUsed",982,G__HistCint_224_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUsedSector",1617,G__HistCint_224_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUsed",993,G__HistCint_224_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUsedSector",1617,G__HistCint_224_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__HistCint_224_0_30, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"d - 'Axis_t' 0 - x d - 'Axis_t' 0 - y "
"d - 'Stat_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Axis_t' 0 - x d - 'Stat_t' 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FitPanel",787,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPixContent",1324,G__HistCint_224_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamDifference",1541,G__HistCint_224_0_34, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt u 'MCamEvent' - 11 - evt2 "
"i - 'Int_t' 0 '0' type d - 'Stat_t' 0 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamRatio",1049,G__HistCint_224_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt u 'MCamEvent' - 11 - evt2 "
"i - 'Int_t' 0 '0' type d - 'Stat_t' 0 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamContent",1269,G__HistCint_224_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type "
"d - 'Stat_t' 0 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamContent",1269,G__HistCint_224_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MHCamera' - 11 - evt i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamContent",1269,G__HistCint_224_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TArrayD' - 11 - arr U 'TArrayC' - 10 '0' used", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCamContent",1269,G__HistCint_224_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MArrayD' - 11 - arr U 'TArrayC' - 10 '0' used", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCamContent",1304,G__HistCint_224_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCamContent",1304,G__HistCint_224_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MHCamera' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCamContent",1304,G__HistCint_224_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TArrayD' - 11 - evt U 'TArrayC' - 10 '0' used", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCamContent",1304,G__HistCint_224_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MArrayD' - 11 - evt U 'TArrayC' - 10 '0' used", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCamError",1095,G__HistCint_224_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUsed",701,G__HistCint_224_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayC' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMedianShift",1365,G__HistCint_224_0_46, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type "
"d - 'Stat_t' 0 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMeanShift",1160,G__HistCint_224_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type "
"d - 'Stat_t' 0 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CntCamContent",1297,G__HistCint_224_0_48, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt d - 'Double_t' 0 - threshold "
"i - 'Int_t' 0 '0' type g - 'Bool_t' 0 'kTRUE' isabove", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CntCamContent",1297,G__HistCint_224_0_49, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt u 'TArrayD' - 0 - threshold "
"i - 'Int_t' 0 '0' type g - 'Bool_t' 0 'kTRUE' isabove", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CntCamContent",1297,G__HistCint_224_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TArrayD' - 11 - evt d - 'Double_t' 0 - threshold "
"g - 'Bool_t' 0 'kTRUE' ispos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CntCamContent",1297,G__HistCint_224_0_51, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'MCamEvent' - 11 - event i - 'Int_t' 0 - type1 "
"u 'MCamEvent' - 11 - thresevt i - 'Int_t' 0 - type2 "
"d - 'Double_t' 0 - threshold g - 'Bool_t' 0 - isabove", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxCamContent",1598,G__HistCint_224_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMinCamContent",1596,G__HistCint_224_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MCamEvent' - 11 - evt i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinContent",1300,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - bin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinContent",1300,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - binx i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinContent",1300,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - binx i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinError",1091,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - bin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinError",1091,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - binx i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinError",1091,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - binx i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinimum",1020,G__HistCint_224_0_60, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximum",1022,G__HistCint_224_0_61, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimum",1020,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", "FIXME: To be done: Minimum greater than", (void*) NULL, 1);
   G__memfunc_setup("GetMaximum",1022,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", "FIXME: To be done: Maximum lower than", (void*) NULL, 1);
   G__memfunc_setup("GetMinimum",1020,G__HistCint_224_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "FIXME: To be done: Minimum greater than", (void*) NULL, 0);
   G__memfunc_setup("GetMaximum",1022,G__HistCint_224_0_65, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "FIXME: To be done: Maximum lower than", (void*) NULL, 0);
   G__memfunc_setup("GetMinimumSector",1644,G__HistCint_224_0_66, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximumSector",1646,G__HistCint_224_0_67, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimumSectors",1759,G__HistCint_224_0_68, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximumSectors",1761,G__HistCint_224_0_69, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBinsAboveThreshold",2422,G__HistCint_224_0_70, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBinsBelowThreshold",2434,G__HistCint_224_0_71, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLevels",919,G__HistCint_224_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayF' - 11 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillRandom",1000,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 '5000' ntimes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillRandom",1000,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - h i - 'Int_t' 0 '5000' ntimes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillRandom",1000,G__HistCint_224_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInfo",921,G__HistCint_224_0_76, 121, -1, -1, 0, 0, 1, 1, 8, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__HistCint_224_0_78, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawProjection",1451,G__HistCint_224_0_82, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' fit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawRadialProfile",1708,G__HistCint_224_0_83, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAzimuthProfile",1857,G__HistCint_224_0_84, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,G__HistCint_224_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDrawOption",1331,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetPalette",1019,G__HistCint_224_0_91, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ncolors I - 'Int_t' 0 - colors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrettyPalette",1667,G__HistCint_224_0_92, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetDeepBlueSeaPalette",2074,G__HistCint_224_0_93, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetInvDeepBlueSeaPalette",2375,G__HistCint_224_0_94, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetFreezed",1009,G__HistCint_224_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", "*TOGGLE* *GETTER=IsFreezed", (void*) NULL, 0);
   G__memfunc_setup("IsFreezed",897,G__HistCint_224_0_96, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrorSpread",1429,G__HistCint_224_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", "*TOGGLE* *GETTER=IsErrorSpread", (void*) NULL, 0);
   G__memfunc_setup("IsErrorSpread",1317,G__HistCint_224_0_98, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbberation",1315,G__HistCint_224_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.0713' f", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetAutoScale",1197,G__HistCint_224_0_100, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("SetMinMax",886,G__HistCint_224_0_101, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1111' min d - 'Double_t' 0 '-1111' max", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("AddNotify",898,G__HistCint_224_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,G__HistCint_224_0_103, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMedian",878,G__HistCint_224_0_104, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRMS",530,G__HistCint_224_0_105, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDev",575,G__HistCint_224_0_106, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "g - 'Bool_t' 0 - ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMedian",878,G__HistCint_224_0_108, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRMS",530,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDev",575,G__HistCint_224_0_110, 100, -1, G__defined_typename("Stat_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanSector",1297,G__HistCint_224_0_111, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMedianSector",1502,G__HistCint_224_0_112, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmsSector",1218,G__HistCint_224_0_113, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDevSector",1199,G__HistCint_224_0_114, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"g - 'Bool_t' 0 'kFALSE' ball", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanSectors",1412,G__HistCint_224_0_115, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMedianSectors",1617,G__HistCint_224_0_116, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmsSectors",1333,G__HistCint_224_0_117, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDevSectors",1314,G__HistCint_224_0_118, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"g - 'Bool_t' 0 'kFALSE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPixels",1221,G__HistCint_224_0_119, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Projection",1053,G__HistCint_224_0_120, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"_proj\"' name i - 'Int_t' 10 '50' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectionS",1136,G__HistCint_224_0_121, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"C - - 10 '\"_proj\"' name i - 'Int_t' 10 '50' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectionS",1136,G__HistCint_224_0_122, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 4, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"C - - 10 '\"_proj\"' name i - 'Int_t' 10 '50' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadialProfile",1310,G__HistCint_224_0_123, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"_rad\"' name i - 'Int_t' 0 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadialProfileS",1393,G__HistCint_224_0_124, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - aidx "
"C - - 10 '\"_rad\"' name i - 'Int_t' 10 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RadialProfileS",1393,G__HistCint_224_0_125, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 4, 1, 1, 8, 
"u 'TArrayI' - 11 - sector u 'TArrayI' - 11 - aidx "
"C - - 10 '\"_rad\"' name i - 'Int_t' 10 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AzimuthProfile",1459,G__HistCint_224_0_126, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"_az\"' name i - 'Int_t' 0 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AzimuthProfile",1459,G__HistCint_224_0_127, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - aidx C - - 10 '\"_az\"' name "
"i - 'Int_t' 10 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AzimuthProfileA",1524,G__HistCint_224_0_128, 85, G__get_linked_tagnum(&G__HistCintLN_TProfile), -1, 0, 3, 1, 1, 8, 
"u 'TArrayI' - 11 - aidx C - - 10 '\"_az\"' name "
"i - 'Int_t' 10 '25' nbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CamDraw",671,G__HistCint_224_0_129, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TCanvas' - 1 - c i - 'Int_t' 10 - x "
"i - 'Int_t' 10 - y i - 'Int_t' 10 - fit "
"i - 'Int_t' 10 '0' rad i - 'Int_t' 10 '0' azi "
"U 'TObject' - 0 '0' notify", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeomCam",953,G__HistCint_224_0_130, 117, G__get_linked_tagnum(&G__HistCintLN_MGeomCam), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HistCint_224_0_131, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHCamera::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_224_0_132, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamera::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_224_0_133, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHCamera::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_224_0_134, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHCamera::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_224_0_138, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_224_0_139, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamera::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_224_0_140, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamera::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_224_0_141, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamera::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_224_0_142, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamera::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MHCamera", 734, G__HistCint_224_0_143, (int) ('i'), G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 1, 1, 1, 0, "u 'MHCamera' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MHCamera", 860, G__HistCint_224_0_144, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHEvent(void) {
   /* MHEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHEvent));
   G__memfunc_setup("GetHistByName",1268,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 1, 1, 4, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - par", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHEvent",663,G__HistCint_234_0_5, 105, G__get_linked_tagnum(&G__HistCintLN_MHEvent), -1, 0, 1, 1, 1, 0, "i 'MHEvent::EventType_t' - 0 'kEvtSignalRaw' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinimum",1032,G__HistCint_234_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1111' min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaximum",1034,G__HistCint_234_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1111' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,G__HistCint_234_0_8, 85, G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_234_0_11, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_234_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_234_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_234_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_234_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_234_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_234_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_234_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_234_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHEvent", 789, G__HistCint_234_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHCamEvent(void) {
   /* MHCamEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEvent));
   G__memfunc_setup("Format",617,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__HistCintLN_TString), -1, 0, 1, 1, 2, 8, "C - - 10 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitGeom",796,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'MParList' - 11 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'MParList' - 10 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHCamEvent",936,G__HistCint_237_0_7, 105, G__get_linked_tagnum(&G__HistCintLN_MHCamEvent), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHCamEvent",936,G__HistCint_237_0_8, 105, G__get_linked_tagnum(&G__HistCintLN_MHCamEvent), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - type C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameEvt",988,G__HistCint_237_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameSub",983,G__HistCint_237_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 - name g - 'Bool_t' 0 'kFALSE' ratio", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameGeom",1077,G__HistCint_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__HistCint_237_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHist",708,G__HistCint_237_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MHCamera' - 11 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,G__HistCint_237_0_14, 85, G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,G__HistCint_237_0_15, 85, G__get_linked_tagnum(&G__HistCintLN_MHCamera), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistByName",1268,G__HistCint_237_0_16, 85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 '\"\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("PrintOutliers",1380,G__HistCint_237_0_19, 121, -1, -1, 0, 1, 1, 1, 8, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThreshold",1241,G__HistCint_237_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 '0' f c - 'Char_t' 0 'kIsLowerBound' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCollectMin",1302,G__HistCint_237_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCollectMax",1304,G__HistCint_237_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMedianShift",1400,G__HistCint_237_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanShift",1195,G__HistCint_237_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrorSpread",1429,G__HistCint_237_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrorRelative",1650,G__HistCint_237_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_237_0_28, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHCamEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_237_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_237_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHCamEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_237_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHCamEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_237_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_237_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_237_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_237_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_237_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHCamEvent", 1062, G__HistCint_237_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHCamEventRot(void) {
   /* MHCamEventRot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot));
   G__memfunc_setup("GetCatalog",987,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HistCintLN_TObject), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHCamEventRot",1245,G__HistCint_242_0_2, 105, G__get_linked_tagnum(&G__HistCintLN_MHCamEventRot), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHistByName",1268,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNameTime",1084,G__HistCint_242_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetThreshold",1241,G__HistCint_242_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - f c - 'Char_t' 0 'kIsLowerBound' direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HistCint_242_0_9, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHCamEventRot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_242_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEventRot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_242_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHCamEventRot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_242_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHCamEventRot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_242_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_242_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEventRot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_242_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamEventRot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_242_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHCamEventRot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_242_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHCamEventRot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHCamEventRot", 1371, G__HistCint_242_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHStarMap(void) {
   /* MHStarMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHStarMap));
   G__memfunc_setup("PrepareDrawing",1435,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 10 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRotationAngle",1623,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 1 - sin d - 'Double_t' 1 - cos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHStarMap",845,G__HistCint_246_0_7, 105, G__get_linked_tagnum(&G__HistCintLN_MHStarMap), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMmScale",974,G__HistCint_246_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mmscale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMm2Deg",808,G__HistCint_246_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - mmdeg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistByName",1268,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHist",696,G__HistCint_246_0_11, 85, G__get_linked_tagnum(&G__HistCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawClone",895,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_246_0_14, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHStarMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_246_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHStarMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_246_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHStarMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_246_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHStarMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_246_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_246_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHStarMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_246_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHStarMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_246_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHStarMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_246_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHStarMap::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHStarMap", 971, G__HistCint_246_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHHadronness(void) {
   /* MHHadronness */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHHadronness));
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcGraph",869,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - sumg d - 'Double_t' 0 - sump", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHHadronness",1194,G__HistCint_250_0_3, 105, G__get_linked_tagnum(&G__HistCintLN_MHHadronness), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '100' nbins C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaAcceptance",1770,G__HistCint_250_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - acchad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHadronAcceptance",1891,G__HistCint_250_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - accgam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHadronness",1333,G__HistCint_250_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - acchad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getghness",936,G__HistCint_250_0_7, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getphness",945,G__HistCint_250_0_8, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getighness",1041,G__HistCint_250_0_9, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getiphness",1050,G__HistCint_250_0_10, 85, G__get_linked_tagnum(&G__HistCintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ05",470,G__HistCint_250_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitMapping",1120,G__HistCint_250_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MHMatrix' - 0 - mat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopMapping",1138,G__HistCint_250_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_250_0_19, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHHadronness::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_250_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHHadronness::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_250_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHHadronness::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_250_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHHadronness::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_250_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_250_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHHadronness::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_250_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHHadronness::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_250_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHHadronness::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_250_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHHadronness::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHHadronness", 1320, G__HistCint_250_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHTriggerLvl0(void) {
   /* MHTriggerLvl0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0));
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 10 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHTriggerLvl0",1223,G__HistCint_251_0_4, 105, G__get_linked_tagnum(&G__HistCintLN_MHTriggerLvl0), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '0' t C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameEvt",988,G__HistCint_251_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__HistCint_251_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThreshold",1241,G__HistCint_251_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistByName",1268,G__HistCint_251_0_8, 85, G__get_linked_tagnum(&G__HistCintLN_TH1), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 '\"\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintOutliers",1380,G__HistCint_251_0_10, 121, -1, -1, 0, 1, 1, 1, 8, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HistCint_251_0_11, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHTriggerLvl0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_251_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHTriggerLvl0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_251_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHTriggerLvl0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_251_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHTriggerLvl0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_251_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_251_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHTriggerLvl0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_251_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHTriggerLvl0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_251_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHTriggerLvl0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_251_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHTriggerLvl0::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHTriggerLvl0", 1349, G__HistCint_251_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHRate(void) {
   /* MHRate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHRate));
   G__memfunc_setup("ResetGraph",1013,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TGraph' - 1 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitGraph",902,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TGraph' - 1 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"u 'TGraph' - 1 - g d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawGraph",896,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TGraph' - 1 - g C - - 10 '0' y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHRate",545,G__HistCint_322_0_5, 105, G__get_linked_tagnum(&G__HistCintLN_MHRate), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_322_0_10, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHRate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_322_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHRate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_322_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHRate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_322_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHRate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_322_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_322_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHRate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_322_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHRate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_322_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHRate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_322_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHRate::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHRate", 671, G__HistCint_322_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHWeather(void) {
   /* MHWeather */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HistCintLN_MHWeather));
   G__memfunc_setup("ResetGraph",1013,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TGraph' - 1 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitGraph",902,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TGraph' - 1 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"u 'TGraph' - 1 - g d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawGraph",896,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TGraph' - 1 - g C - - 10 '0' y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRightAxis",1526,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TGraph' - 1 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawRightAxis",1313,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"C - - 10 - title i - 'Int_t' 0 'kBlack' col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHWeather",869,G__HistCint_325_0_7, 105, G__get_linked_tagnum(&G__HistCintLN_MHWeather), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HistCint_325_0_12, 85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHWeather::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HistCint_325_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHWeather::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HistCint_325_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHWeather::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HistCint_325_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHWeather::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HistCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HistCint_325_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HistCint_325_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHWeather::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HistCint_325_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHWeather::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HistCint_325_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHWeather::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HistCint_325_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHWeather::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHWeather", 995, G__HistCint_325_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncHistCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalHistCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcHistCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__HistCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__HistCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__HistCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__HistCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__HistCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__HistCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MArrayD = { "MArrayD" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TArrayC = { "TArrayC" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MH = { "MH" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCamera = { "MHCamera" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MRawEvtData = { "MRawEvtData" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MRawRunHeader = { "MRawRunHeader" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MRawEvtHeader = { "MRawEvtHeader" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MTime = { "MTime" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MMcEvt = { "MMcEvt" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MMcTrig = { "MMcTrig" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MSignalCam = { "MSignalCam" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MImgCleanStd = { "MImgCleanStd" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MTriggerPattern = { "MTriggerPattern" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHEvent = { "MHEvent" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHEventcLcLEventType_t = { "MHEvent::EventType_t" , 101 , -1 };
G__linked_taginfo G__HistCintLN_MCamEvent = { "MCamEvent" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCamEvent = { "MHCamEvent" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCamEventcLcLdA = { "MHCamEvent::$" , 101 , -1 };
G__linked_taginfo G__HistCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MPointingPos = { "MPointingPos" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MObservatory = { "MObservatory" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCamEventRot = { "MHCamEventRot" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCamEventRotcLcLdA = { "MHCamEventRot::$" , 101 , -1 };
G__linked_taginfo G__HistCintLN_MSrcPosCam = { "MSrcPosCam" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHStarMap = { "MHStarMap" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MParameterD = { "MParameterD" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHMatrix = { "MHMatrix" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHHadronness = { "MHHadronness" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHTriggerLvl0 = { "MHTriggerLvl0" , 99 , -1 };
G__linked_taginfo G__HistCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__HistCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HistCintLN_TPaveStats = { "TPaveStats" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHCameracLcLdA = { "MHCamera::$" , 101 , -1 };
G__linked_taginfo G__HistCintLN_MEventRate = { "MEventRate" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHRate = { "MHRate" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MReportCC = { "MReportCC" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MReportPyrometer = { "MReportPyrometer" , 99 , -1 };
G__linked_taginfo G__HistCintLN_MHWeather = { "MHWeather" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableHistCint() {
  G__HistCintLN_TClass.tagnum = -1 ;
  G__HistCintLN_TBuffer.tagnum = -1 ;
  G__HistCintLN_TMemberInspector.tagnum = -1 ;
  G__HistCintLN_TObject.tagnum = -1 ;
  G__HistCintLN_TNamed.tagnum = -1 ;
  G__HistCintLN_TString.tagnum = -1 ;
  G__HistCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__HistCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__HistCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HistCintLN_TList.tagnum = -1 ;
  G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__HistCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__HistCintLN_TCanvas.tagnum = -1 ;
  G__HistCintLN_TArrayD.tagnum = -1 ;
  G__HistCintLN_MParContainer.tagnum = -1 ;
  G__HistCintLN_TH1.tagnum = -1 ;
  G__HistCintLN_TH1D.tagnum = -1 ;
  G__HistCintLN_TArrayF.tagnum = -1 ;
  G__HistCintLN_MArrayD.tagnum = -1 ;
  G__HistCintLN_TProfile.tagnum = -1 ;
  G__HistCintLN_MParList.tagnum = -1 ;
  G__HistCintLN_TArray.tagnum = -1 ;
  G__HistCintLN_TAttLine.tagnum = -1 ;
  G__HistCintLN_TAttFill.tagnum = -1 ;
  G__HistCintLN_TAttMarker.tagnum = -1 ;
  G__HistCintLN_TArrayC.tagnum = -1 ;
  G__HistCintLN_TArrayI.tagnum = -1 ;
  G__HistCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__HistCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__HistCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__HistCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__HistCintLN_TH2F.tagnum = -1 ;
  G__HistCintLN_TH2D.tagnum = -1 ;
  G__HistCintLN_MH.tagnum = -1 ;
  G__HistCintLN_MHCamera.tagnum = -1 ;
  G__HistCintLN_MRawEvtData.tagnum = -1 ;
  G__HistCintLN_MRawRunHeader.tagnum = -1 ;
  G__HistCintLN_MRawEvtHeader.tagnum = -1 ;
  G__HistCintLN_MTime.tagnum = -1 ;
  G__HistCintLN_MMcEvt.tagnum = -1 ;
  G__HistCintLN_MMcTrig.tagnum = -1 ;
  G__HistCintLN_MSignalCam.tagnum = -1 ;
  G__HistCintLN_MImgCleanStd.tagnum = -1 ;
  G__HistCintLN_MTriggerPattern.tagnum = -1 ;
  G__HistCintLN_MHEvent.tagnum = -1 ;
  G__HistCintLN_MHEventcLcLEventType_t.tagnum = -1 ;
  G__HistCintLN_MCamEvent.tagnum = -1 ;
  G__HistCintLN_MHCamEvent.tagnum = -1 ;
  G__HistCintLN_MHCamEventcLcLdA.tagnum = -1 ;
  G__HistCintLN_MGeomCam.tagnum = -1 ;
  G__HistCintLN_MPointingPos.tagnum = -1 ;
  G__HistCintLN_MObservatory.tagnum = -1 ;
  G__HistCintLN_MHCamEventRot.tagnum = -1 ;
  G__HistCintLN_MHCamEventRotcLcLdA.tagnum = -1 ;
  G__HistCintLN_MSrcPosCam.tagnum = -1 ;
  G__HistCintLN_MHStarMap.tagnum = -1 ;
  G__HistCintLN_TGraph.tagnum = -1 ;
  G__HistCintLN_MParameterD.tagnum = -1 ;
  G__HistCintLN_MHMatrix.tagnum = -1 ;
  G__HistCintLN_MHHadronness.tagnum = -1 ;
  G__HistCintLN_MHTriggerLvl0.tagnum = -1 ;
  G__HistCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__HistCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HistCintLN_TPaveStats.tagnum = -1 ;
  G__HistCintLN_MHCameracLcLdA.tagnum = -1 ;
  G__HistCintLN_MEventRate.tagnum = -1 ;
  G__HistCintLN_MHRate.tagnum = -1 ;
  G__HistCintLN_MReportCC.tagnum = -1 ;
  G__HistCintLN_MReportPyrometer.tagnum = -1 ;
  G__HistCintLN_MHWeather.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableHistCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__HistCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TString);
   G__get_linked_tagnum_fwd(&G__HistCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TList);
   G__get_linked_tagnum_fwd(&G__HistCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MArrayD);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TArray);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TArrayC);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MH);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHCamera),sizeof(MHCamera),-1,324864,"Displays the magic camera",G__setup_memvarMHCamera,G__setup_memfuncMHCamera);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MRawEvtData);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MRawRunHeader);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MRawEvtHeader);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MTime);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MMcEvt);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MMcTrig);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MSignalCam);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MImgCleanStd);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MTriggerPattern);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHEvent),sizeof(MHEvent),-1,324864,(char*)NULL,G__setup_memvarMHEvent,G__setup_memfuncMHEvent);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MHEventcLcLEventType_t);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MCamEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHCamEvent),sizeof(MHCamEvent),-1,324864,"Histogram to sum camera events",G__setup_memvarMHCamEvent,G__setup_memfuncMHCamEvent);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MHCamEventcLcLdA);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MGeomCam);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MPointingPos);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MObservatory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHCamEventRot),sizeof(MHCamEventRot),-1,323840,"2D-histogram in MCamEvent data (derotated)",G__setup_memvarMHCamEventRot,G__setup_memfuncMHCamEventRot);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MHCamEventRotcLcLdA);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MSrcPosCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHStarMap),sizeof(MHStarMap),-1,324864,"Container to hold the Starmap",G__setup_memvarMHStarMap,G__setup_memfuncMHStarMap);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MParameterD);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MHMatrix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHHadronness),sizeof(MHHadronness),-1,324864,"Gamma/Hadron Separation Quality Histograms",G__setup_memvarMHHadronness,G__setup_memfuncMHHadronness);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHTriggerLvl0),sizeof(MHTriggerLvl0),-1,324864,"Histogram to count how often a pixel is above threshold",G__setup_memvarMHTriggerLvl0,G__setup_memfuncMHTriggerLvl0);
   G__get_linked_tagnum_fwd(&G__HistCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HistCintLN_TPaveStats);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MHCameracLcLdA);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MEventRate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHRate),sizeof(MHRate),-1,323840,"Histogram to display information about rate",G__setup_memvarMHRate,G__setup_memfuncMHRate);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MReportCC);
   G__get_linked_tagnum_fwd(&G__HistCintLN_MReportPyrometer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HistCintLN_MHWeather),sizeof(MHWeather),-1,323840,"Histogram to display weather and pyrometer data",G__setup_memvarMHWeather,G__setup_memfuncMHWeather);
}
extern "C" void G__cpp_setupHistCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupHistCint()");
  G__set_cpp_environmentHistCint();
  G__cpp_setup_tagtableHistCint();

  G__cpp_setup_inheritanceHistCint();

  G__cpp_setup_typetableHistCint();

  G__cpp_setup_memvarHistCint();

  G__cpp_setup_memfuncHistCint();
  G__cpp_setup_globalHistCint();
  G__cpp_setup_funcHistCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncHistCint();
  return;
}
class G__cpp_setup_initHistCint {
  public:
    G__cpp_setup_initHistCint() { G__add_setup_func("HistCint",(G__incsetup)(&G__cpp_setupHistCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initHistCint() { G__remove_setup_func("HistCint"); }
};
G__cpp_setup_initHistCint G__cpp_setup_initializerHistCint;

