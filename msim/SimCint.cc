//
// File generated by rootcint at Mon Nov 28 11:06:38 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SimCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SimCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MPhotonData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPhotonData(void *p = 0);
   static void *newArray_MPhotonData(Long_t size, void *p);
   static void delete_MPhotonData(void *p);
   static void deleteArray_MPhotonData(void *p);
   static void destruct_MPhotonData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPhotonData*)
   {
      ::MPhotonData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPhotonData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPhotonData", ::MPhotonData::Class_Version(), "./MPhotonData.h", 30,
                  typeid(::MPhotonData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPhotonData::Dictionary, isa_proxy, 4,
                  sizeof(::MPhotonData) );
      instance.SetNew(&new_MPhotonData);
      instance.SetNewArray(&newArray_MPhotonData);
      instance.SetDelete(&delete_MPhotonData);
      instance.SetDeleteArray(&deleteArray_MPhotonData);
      instance.SetDestructor(&destruct_MPhotonData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPhotonData*)
   {
      return GenerateInitInstanceLocal((::MPhotonData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPhotonData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPhotonEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPhotonEvent(void *p = 0);
   static void *newArray_MPhotonEvent(Long_t size, void *p);
   static void delete_MPhotonEvent(void *p);
   static void deleteArray_MPhotonEvent(void *p);
   static void destruct_MPhotonEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPhotonEvent*)
   {
      ::MPhotonEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPhotonEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPhotonEvent", ::MPhotonEvent::Class_Version(), "./MPhotonEvent.h", 21,
                  typeid(::MPhotonEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPhotonEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MPhotonEvent) );
      instance.SetNew(&new_MPhotonEvent);
      instance.SetNewArray(&newArray_MPhotonEvent);
      instance.SetDelete(&delete_MPhotonEvent);
      instance.SetDeleteArray(&deleteArray_MPhotonEvent);
      instance.SetDestructor(&destruct_MPhotonEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPhotonEvent*)
   {
      return GenerateInitInstanceLocal((::MPhotonEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPhotonEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPhotonStatistics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPhotonStatistics(void *p = 0);
   static void *newArray_MPhotonStatistics(Long_t size, void *p);
   static void delete_MPhotonStatistics(void *p);
   static void deleteArray_MPhotonStatistics(void *p);
   static void destruct_MPhotonStatistics(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPhotonStatistics*)
   {
      ::MPhotonStatistics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPhotonStatistics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPhotonStatistics", ::MPhotonStatistics::Class_Version(), "./MPhotonEvent.h", 78,
                  typeid(::MPhotonStatistics), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPhotonStatistics::Dictionary, isa_proxy, 4,
                  sizeof(::MPhotonStatistics) );
      instance.SetNew(&new_MPhotonStatistics);
      instance.SetNewArray(&newArray_MPhotonStatistics);
      instance.SetDelete(&delete_MPhotonStatistics);
      instance.SetDeleteArray(&deleteArray_MPhotonStatistics);
      instance.SetDestructor(&destruct_MPhotonStatistics);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPhotonStatistics*)
   {
      return GenerateInitInstanceLocal((::MPhotonStatistics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPhotonStatistics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHPhotonEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHPhotonEvent(void *p = 0);
   static void *newArray_MHPhotonEvent(Long_t size, void *p);
   static void delete_MHPhotonEvent(void *p);
   static void deleteArray_MHPhotonEvent(void *p);
   static void destruct_MHPhotonEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHPhotonEvent*)
   {
      ::MHPhotonEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHPhotonEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHPhotonEvent", ::MHPhotonEvent::Class_Version(), "./MHPhotonEvent.h", 19,
                  typeid(::MHPhotonEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHPhotonEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MHPhotonEvent) );
      instance.SetNew(&new_MHPhotonEvent);
      instance.SetNewArray(&newArray_MHPhotonEvent);
      instance.SetDelete(&delete_MHPhotonEvent);
      instance.SetDeleteArray(&deleteArray_MHPhotonEvent);
      instance.SetDestructor(&destruct_MHPhotonEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHPhotonEvent*)
   {
      return GenerateInitInstanceLocal((::MHPhotonEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHPhotonEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSimMMCS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSimMMCS(void *p = 0);
   static void *newArray_MSimMMCS(Long_t size, void *p);
   static void delete_MSimMMCS(void *p);
   static void deleteArray_MSimMMCS(void *p);
   static void destruct_MSimMMCS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSimMMCS*)
   {
      ::MSimMMCS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSimMMCS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSimMMCS", ::MSimMMCS::Class_Version(), "./MSimMMCS.h", 17,
                  typeid(::MSimMMCS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSimMMCS::Dictionary, isa_proxy, 4,
                  sizeof(::MSimMMCS) );
      instance.SetNew(&new_MSimMMCS);
      instance.SetNewArray(&newArray_MSimMMCS);
      instance.SetDelete(&delete_MSimMMCS);
      instance.SetDeleteArray(&deleteArray_MSimMMCS);
      instance.SetDestructor(&destruct_MSimMMCS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSimMMCS*)
   {
      return GenerateInitInstanceLocal((::MSimMMCS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSimMMCS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSimAtmosphere_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSimAtmosphere(void *p = 0);
   static void *newArray_MSimAtmosphere(Long_t size, void *p);
   static void delete_MSimAtmosphere(void *p);
   static void deleteArray_MSimAtmosphere(void *p);
   static void destruct_MSimAtmosphere(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSimAtmosphere*)
   {
      ::MSimAtmosphere *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSimAtmosphere >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSimAtmosphere", ::MSimAtmosphere::Class_Version(), "./MSimAtmosphere.h", 14,
                  typeid(::MSimAtmosphere), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSimAtmosphere::Dictionary, isa_proxy, 4,
                  sizeof(::MSimAtmosphere) );
      instance.SetNew(&new_MSimAtmosphere);
      instance.SetNewArray(&newArray_MSimAtmosphere);
      instance.SetDelete(&delete_MSimAtmosphere);
      instance.SetDeleteArray(&deleteArray_MSimAtmosphere);
      instance.SetDestructor(&destruct_MSimAtmosphere);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSimAtmosphere*)
   {
      return GenerateInitInstanceLocal((::MSimAtmosphere*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSimAtmosphere*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSimAbsorption_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSimAbsorption(void *p = 0);
   static void *newArray_MSimAbsorption(Long_t size, void *p);
   static void delete_MSimAbsorption(void *p);
   static void deleteArray_MSimAbsorption(void *p);
   static void destruct_MSimAbsorption(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSimAbsorption*)
   {
      ::MSimAbsorption *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSimAbsorption >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSimAbsorption", ::MSimAbsorption::Class_Version(), "./MSimAbsorption.h", 15,
                  typeid(::MSimAbsorption), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSimAbsorption::Dictionary, isa_proxy, 4,
                  sizeof(::MSimAbsorption) );
      instance.SetNew(&new_MSimAbsorption);
      instance.SetNewArray(&newArray_MSimAbsorption);
      instance.SetDelete(&delete_MSimAbsorption);
      instance.SetDeleteArray(&deleteArray_MSimAbsorption);
      instance.SetDestructor(&destruct_MSimAbsorption);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSimAbsorption*)
   {
      return GenerateInitInstanceLocal((::MSimAbsorption*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSimAbsorption*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSimPointingPos_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSimPointingPos(void *p = 0);
   static void *newArray_MSimPointingPos(Long_t size, void *p);
   static void delete_MSimPointingPos(void *p);
   static void deleteArray_MSimPointingPos(void *p);
   static void destruct_MSimPointingPos(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSimPointingPos*)
   {
      ::MSimPointingPos *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSimPointingPos >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSimPointingPos", ::MSimPointingPos::Class_Version(), "./MSimPointingPos.h", 14,
                  typeid(::MSimPointingPos), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSimPointingPos::Dictionary, isa_proxy, 4,
                  sizeof(::MSimPointingPos) );
      instance.SetNew(&new_MSimPointingPos);
      instance.SetNewArray(&newArray_MSimPointingPos);
      instance.SetDelete(&delete_MSimPointingPos);
      instance.SetDeleteArray(&deleteArray_MSimPointingPos);
      instance.SetDestructor(&destruct_MSimPointingPos);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSimPointingPos*)
   {
      return GenerateInitInstanceLocal((::MSimPointingPos*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSimPointingPos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MPhotonData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPhotonData::Class_Name()
{
   return "MPhotonData";
}

//______________________________________________________________________________
const char *MPhotonData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPhotonData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPhotonData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPhotonData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPhotonEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPhotonEvent::Class_Name()
{
   return "MPhotonEvent";
}

//______________________________________________________________________________
const char *MPhotonEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPhotonEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPhotonEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPhotonEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPhotonStatistics::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPhotonStatistics::Class_Name()
{
   return "MPhotonStatistics";
}

//______________________________________________________________________________
const char *MPhotonStatistics::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonStatistics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPhotonStatistics::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonStatistics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPhotonStatistics::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonStatistics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPhotonStatistics::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPhotonStatistics*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHPhotonEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHPhotonEvent::Class_Name()
{
   return "MHPhotonEvent";
}

//______________________________________________________________________________
const char *MHPhotonEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHPhotonEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHPhotonEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHPhotonEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHPhotonEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHPhotonEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHPhotonEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHPhotonEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSimMMCS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSimMMCS::Class_Name()
{
   return "MSimMMCS";
}

//______________________________________________________________________________
const char *MSimMMCS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimMMCS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSimMMCS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimMMCS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSimMMCS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimMMCS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSimMMCS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimMMCS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSimAtmosphere::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSimAtmosphere::Class_Name()
{
   return "MSimAtmosphere";
}

//______________________________________________________________________________
const char *MSimAtmosphere::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAtmosphere*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSimAtmosphere::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAtmosphere*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSimAtmosphere::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAtmosphere*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSimAtmosphere::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAtmosphere*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSimAbsorption::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSimAbsorption::Class_Name()
{
   return "MSimAbsorption";
}

//______________________________________________________________________________
const char *MSimAbsorption::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAbsorption*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSimAbsorption::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAbsorption*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSimAbsorption::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAbsorption*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSimAbsorption::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimAbsorption*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSimPointingPos::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSimPointingPos::Class_Name()
{
   return "MSimPointingPos";
}

//______________________________________________________________________________
const char *MSimPointingPos::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimPointingPos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSimPointingPos::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSimPointingPos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSimPointingPos::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimPointingPos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSimPointingPos::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSimPointingPos*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MPhotonEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPhotonEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPhotonEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPhotonEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MPhotonEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPhotonEvent.
      TClass *R__cl = ::MPhotonEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", &fData);
      R__insp.InspectMember(fData, "fData.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPhotonEvent(void *p) {
      return  p ? new(p) ::MPhotonEvent : new ::MPhotonEvent;
   }
   static void *newArray_MPhotonEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MPhotonEvent[nElements] : new ::MPhotonEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPhotonEvent(void *p) {
      delete ((::MPhotonEvent*)p);
   }
   static void deleteArray_MPhotonEvent(void *p) {
      delete [] ((::MPhotonEvent*)p);
   }
   static void destruct_MPhotonEvent(void *p) {
      typedef ::MPhotonEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPhotonEvent

//______________________________________________________________________________
void MPhotonData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPhotonData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPhotonData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPhotonData::Class(),this);
   }
}

//______________________________________________________________________________
void MPhotonData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPhotonData.
      TClass *R__cl = ::MPhotonData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosX", &fPosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosY", &fPosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosU", &fCosU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosV", &fCosV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWavelength", &fWavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProductionHeight", &fProductionHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrimary", &fPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTag", &fTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMirrorTag", &fMirrorTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWeight", &fWeight);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPhotonData(void *p) {
      return  p ? new(p) ::MPhotonData : new ::MPhotonData;
   }
   static void *newArray_MPhotonData(Long_t nElements, void *p) {
      return p ? new(p) ::MPhotonData[nElements] : new ::MPhotonData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPhotonData(void *p) {
      delete ((::MPhotonData*)p);
   }
   static void deleteArray_MPhotonData(void *p) {
      delete [] ((::MPhotonData*)p);
   }
   static void destruct_MPhotonData(void *p) {
      typedef ::MPhotonData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPhotonData

//______________________________________________________________________________
void MHPhotonEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHPhotonEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHPhotonEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHPhotonEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MHPhotonEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHPhotonEvent.
      TClass *R__cl = ::MHPhotonEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistXY", &fHistXY);
      R__insp.InspectMember(fHistXY, "fHistXY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistUV", &fHistUV);
      R__insp.InspectMember(fHistUV, "fHistUV.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistT", &fHistT);
      R__insp.InspectMember(fHistT, "fHistT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistWL", &fHistWL);
      R__insp.InspectMember(fHistWL, "fHistWL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistH", &fHistH);
      R__insp.InspectMember(fHistH, "fHistH.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPermanentReset", &fPermanentReset);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHPhotonEvent(void *p) {
      return  p ? new(p) ::MHPhotonEvent : new ::MHPhotonEvent;
   }
   static void *newArray_MHPhotonEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MHPhotonEvent[nElements] : new ::MHPhotonEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHPhotonEvent(void *p) {
      delete ((::MHPhotonEvent*)p);
   }
   static void deleteArray_MHPhotonEvent(void *p) {
      delete [] ((::MHPhotonEvent*)p);
   }
   static void destruct_MHPhotonEvent(void *p) {
      typedef ::MHPhotonEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHPhotonEvent

//______________________________________________________________________________
void MPhotonStatistics::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPhotonStatistics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPhotonStatistics::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPhotonStatistics::Class(),this);
   }
}

//______________________________________________________________________________
void MPhotonStatistics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPhotonStatistics.
      TClass *R__cl = ::MPhotonStatistics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeFirst", &fTimeFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeLast", &fTimeLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeMedDev", &fTimeMedDev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxIndex", &fMaxIndex);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPhotonStatistics(void *p) {
      return  p ? new(p) ::MPhotonStatistics : new ::MPhotonStatistics;
   }
   static void *newArray_MPhotonStatistics(Long_t nElements, void *p) {
      return p ? new(p) ::MPhotonStatistics[nElements] : new ::MPhotonStatistics[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPhotonStatistics(void *p) {
      delete ((::MPhotonStatistics*)p);
   }
   static void deleteArray_MPhotonStatistics(void *p) {
      delete [] ((::MPhotonStatistics*)p);
   }
   static void destruct_MPhotonStatistics(void *p) {
      typedef ::MPhotonStatistics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPhotonStatistics

//______________________________________________________________________________
void MSimPointingPos::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSimPointingPos.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSimPointingPos::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSimPointingPos::Class(),this);
   }
}

//______________________________________________________________________________
void MSimPointingPos::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSimPointingPos.
      TClass *R__cl = ::MSimPointingPos::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtHeader", &fEvtHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointing", &fPointing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimSourcePosition", &fSimSourcePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffTargetDistance", &fOffTargetDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffTargetPhi", &fOffTargetPhi);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSimPointingPos(void *p) {
      return  p ? new(p) ::MSimPointingPos : new ::MSimPointingPos;
   }
   static void *newArray_MSimPointingPos(Long_t nElements, void *p) {
      return p ? new(p) ::MSimPointingPos[nElements] : new ::MSimPointingPos[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSimPointingPos(void *p) {
      delete ((::MSimPointingPos*)p);
   }
   static void deleteArray_MSimPointingPos(void *p) {
      delete [] ((::MSimPointingPos*)p);
   }
   static void destruct_MSimPointingPos(void *p) {
      typedef ::MSimPointingPos current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSimPointingPos

//______________________________________________________________________________
void MSimAbsorption::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSimAbsorption.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSimAbsorption::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSimAbsorption::Class(),this);
   }
}

//______________________________________________________________________________
void MSimAbsorption::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSimAbsorption.
      TClass *R__cl = ::MSimAbsorption::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvt", &fEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeader", &fHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSpline", &fSpline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParName", &fParName);
      R__insp.InspectMember(fParName, "fParName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTheta", &fUseTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForce", &fForce);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSimAbsorption(void *p) {
      return  p ? new(p) ::MSimAbsorption : new ::MSimAbsorption;
   }
   static void *newArray_MSimAbsorption(Long_t nElements, void *p) {
      return p ? new(p) ::MSimAbsorption[nElements] : new ::MSimAbsorption[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSimAbsorption(void *p) {
      delete ((::MSimAbsorption*)p);
   }
   static void deleteArray_MSimAbsorption(void *p) {
      delete [] ((::MSimAbsorption*)p);
   }
   static void destruct_MSimAbsorption(void *p) {
      typedef ::MSimAbsorption current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSimAbsorption

//______________________________________________________________________________
void MSimAtmosphere::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSimAtmosphere.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSimAtmosphere::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSimAtmosphere::Class(),this);
   }
}

//______________________________________________________________________________
void MSimAtmosphere::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSimAtmosphere.
      TClass *R__cl = ::MSimAtmosphere::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvt", &fEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAtmosphere", &fAtmosphere);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileAerosols", &fFileAerosols);
      R__insp.InspectMember(fFileAerosols, "fFileAerosols.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileOzone", &fFileOzone);
      R__insp.InspectMember(fFileOzone, "fFileOzone.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForce", &fForce);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSimAtmosphere(void *p) {
      return  p ? new(p) ::MSimAtmosphere : new ::MSimAtmosphere;
   }
   static void *newArray_MSimAtmosphere(Long_t nElements, void *p) {
      return p ? new(p) ::MSimAtmosphere[nElements] : new ::MSimAtmosphere[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSimAtmosphere(void *p) {
      delete ((::MSimAtmosphere*)p);
   }
   static void deleteArray_MSimAtmosphere(void *p) {
      delete [] ((::MSimAtmosphere*)p);
   }
   static void destruct_MSimAtmosphere(void *p) {
      typedef ::MSimAtmosphere current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSimAtmosphere

//______________________________________________________________________________
void MSimMMCS::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSimMMCS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSimMMCS::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSimMMCS::Class(),this);
   }
}

//______________________________________________________________________________
void MSimMMCS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSimMMCS.
      TClass *R__cl = ::MSimMMCS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcEvtBasic", &fMcEvtBasic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcEvt", &fMcEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointingTel", &fPointingTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtHeader", &fEvtHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMcRunHeader", &fMcRunHeader);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSimMMCS(void *p) {
      return  p ? new(p) ::MSimMMCS : new ::MSimMMCS;
   }
   static void *newArray_MSimMMCS(Long_t nElements, void *p) {
      return p ? new(p) ::MSimMMCS[nElements] : new ::MSimMMCS[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSimMMCS(void *p) {
      delete ((::MSimMMCS*)p);
   }
   static void deleteArray_MSimMMCS(void *p) {
      delete [] ((::MSimMMCS*)p);
   }
   static void destruct_MSimMMCS(void *p) {
      typedef ::MSimMMCS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSimMMCS

/********************************************************
* SimCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSimCint();

extern "C" void G__set_cpp_environmentSimCint() {
  G__cpp_reset_tagtableSimCint();
}
#include <new>
extern "C" int G__cpp_dllrevSimCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MPhotonData */
static int G__SimCint_212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPhotonData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonData[n];
     } else {
       p = new((void*) gvp) MPhotonData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonData;
     } else {
       p = new((void*) gvp) MPhotonData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MPhotonData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetPosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetPosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetCosU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetCosV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetCosW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetSinW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetCosW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetSinW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonData*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const MPhotonData*) G__getstructoffset())->GetPos2();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const MPhotonData*) G__getstructoffset())->GetDir2();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const MPhotonData*) G__getstructoffset())->GetPos3();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const MPhotonData*) G__getstructoffset())->GetDir3();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const MPhotonData*) G__getstructoffset())->GetPosQ();
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const MPhotonData*) G__getstructoffset())->GetDirQ();
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const MPhotonData*) G__getstructoffset())->GetWavelength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetProductionHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonData*) G__getstructoffset())->GetPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MPhotonData*) G__getstructoffset())->IncludesEfficiencies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonData*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPhotonData*) G__getstructoffset())->SetWeight((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPhotonData*) G__getstructoffset())->SetWeight();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetPosition((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetDirection((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetPosition(*(TVector2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetDirection(*(TVector2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetPosition(*(TQuaternion*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetDirection(*(TQuaternion*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetPrimary((MMcEvtBasic::ParticleId_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetWavelength((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->AddTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SimWavelength((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetTag((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonData*) G__getstructoffset())->GetTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->SetMirrorTag((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonData*) G__getstructoffset())->GetMirrorTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonData*) G__getstructoffset())->FillCorsika((Float_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonData*) G__getstructoffset())->FillEventIO((Short_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonData*) G__getstructoffset())->FillEventIO((Float_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonData*) G__getstructoffset())->FillRfl((Float_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPhotonData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPhotonData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPhotonData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_212_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SimCint_212_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPhotonData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPhotonData(*(MPhotonData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MPhotonData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPhotonData G__TMPhotonData;
static int G__SimCint_212_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPhotonData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPhotonData*) (soff+(sizeof(MPhotonData)*i)))->~G__TMPhotonData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPhotonData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPhotonData*) (soff))->~G__TMPhotonData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimCint_212_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPhotonData* dest = (MPhotonData*) G__getstructoffset();
   *dest = *(MPhotonData*) libp->para[0].ref;
   const MPhotonData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPhotonEvent */
static int G__SimCint_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPhotonEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPhotonEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonEvent((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPhotonEvent((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPhotonEvent[n];
       } else {
         p = new((void*) gvp) MPhotonEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPhotonEvent;
       } else {
         p = new((void*) gvp) MPhotonEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPhotonEvent*) G__getstructoffset())->Sort((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPhotonEvent*) G__getstructoffset())->Sort();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MPhotonEvent*) G__getstructoffset())->IsSorted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonEvent*) G__getstructoffset())->GetNumPhotons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonEvent*) G__getstructoffset())->GetNumExternal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonEvent*) G__getstructoffset())->GetTimeFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonEvent*) G__getstructoffset())->GetTimeLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonEvent*) G__getstructoffset())->GetTimeMedianDev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonEvent*) G__getstructoffset())->GetMeanX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonEvent*) G__getstructoffset())->GetMeanY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MPhotonEvent*) G__getstructoffset())->GetMeanT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TClonesArray& obj = ((MPhotonEvent*) G__getstructoffset())->GetArray();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TClonesArray& obj = ((const MPhotonEvent*) G__getstructoffset())->GetArray();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPhotonData& obj = ((MPhotonEvent*) G__getstructoffset())->Add((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPhotonData& obj = ((MPhotonEvent*) G__getstructoffset())->Add();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MPhotonEvent*) G__getstructoffset())->GetFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MPhotonEvent*) G__getstructoffset())->GetLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPhotonData& obj = ((MPhotonEvent*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPhotonData& obj = ((const MPhotonEvent*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonEvent*) G__getstructoffset())->Shrink((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonEvent*) G__getstructoffset())->Resize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonEvent*) G__getstructoffset())->AddXY((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonEvent*) G__getstructoffset())->SimWavelength((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonEvent*) G__getstructoffset())->ReadEventIoEvt((MCorsikaFormat*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonEvent*) G__getstructoffset())->ReadEventIoEvtCompact((MCorsikaFormat*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPhotonEvent*) G__getstructoffset())->ReadCorsikaEvt((Float_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPhotonEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPhotonEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPhotonEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_216_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPhotonEvent G__TMPhotonEvent;
static int G__SimCint_216_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPhotonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPhotonEvent*) (soff+(sizeof(MPhotonEvent)*i)))->~G__TMPhotonEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPhotonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPhotonEvent*) (soff))->~G__TMPhotonEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPhotonStatistics */
static int G__SimCint_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPhotonStatistics* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonStatistics((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPhotonStatistics((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPhotonStatistics((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPhotonStatistics((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPhotonStatistics[n];
       } else {
         p = new((void*) gvp) MPhotonStatistics[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPhotonStatistics;
       } else {
         p = new((void*) gvp) MPhotonStatistics;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonStatistics*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonStatistics*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonStatistics*) G__getstructoffset())->SetMaxIndex((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonStatistics*) G__getstructoffset())->SetTimeMedDev((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonStatistics*) G__getstructoffset())->GetTimeFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonStatistics*) G__getstructoffset())->GetTimeLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonStatistics*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPhotonStatistics*) G__getstructoffset())->GetTimeMedDev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPhotonStatistics*) G__getstructoffset())->GetMaxIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPhotonStatistics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonStatistics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPhotonStatistics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPhotonStatistics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPhotonStatistics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonStatistics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonStatistics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPhotonStatistics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPhotonStatistics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPhotonStatistics G__TMPhotonStatistics;
static int G__SimCint_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPhotonStatistics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPhotonStatistics*) (soff+(sizeof(MPhotonStatistics)*i)))->~G__TMPhotonStatistics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPhotonStatistics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPhotonStatistics*) (soff))->~G__TMPhotonStatistics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHPhotonEvent */
static int G__SimCint_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHPhotonEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent(
(Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHPhotonEvent(
(Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHPhotonEvent((Double_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) MHPhotonEvent((Double_t) G__double(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHPhotonEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MHPhotonEvent(
(Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHPhotonEvent((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPhotonEvent((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHPhotonEvent((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHPhotonEvent[n];
       } else {
         p = new((void*) gvp) MHPhotonEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHPhotonEvent;
       } else {
         p = new((void*) gvp) MHPhotonEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHPhotonEvent*) G__getstructoffset())->PermanentReset((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHPhotonEvent*) G__getstructoffset())->PermanentReset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TH2F& obj = ((const MHPhotonEvent*) G__getstructoffset())->GetHistXY();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TProfile2D& obj = ((const MHPhotonEvent*) G__getstructoffset())->GetHistT();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHPhotonEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPhotonEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHPhotonEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHPhotonEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHPhotonEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPhotonEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHPhotonEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPhotonEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_269_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHPhotonEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHPhotonEvent G__TMHPhotonEvent;
static int G__SimCint_269_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHPhotonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHPhotonEvent*) (soff+(sizeof(MHPhotonEvent)*i)))->~G__TMHPhotonEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHPhotonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHPhotonEvent*) (soff))->~G__TMHPhotonEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSimMMCS */
static int G__SimCint_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSimMMCS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimMMCS((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSimMMCS((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimMMCS((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSimMMCS((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimMMCS[n];
       } else {
         p = new((void*) gvp) MSimMMCS[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimMMCS;
       } else {
         p = new((void*) gvp) MSimMMCS;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MSimMMCS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSimMMCS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimMMCS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSimMMCS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSimMMCS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSimMMCS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimMMCS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimMMCS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimMMCS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimMMCS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSimMMCS G__TMSimMMCS;
static int G__SimCint_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSimMMCS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSimMMCS*) (soff+(sizeof(MSimMMCS)*i)))->~G__TMSimMMCS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSimMMCS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSimMMCS*) (soff))->~G__TMSimMMCS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSimAtmosphere */
static int G__SimCint_281_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSimAtmosphere* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimAtmosphere((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSimAtmosphere((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimAtmosphere((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSimAtmosphere((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimAtmosphere[n];
       } else {
         p = new((void*) gvp) MSimAtmosphere[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimAtmosphere;
       } else {
         p = new((void*) gvp) MSimAtmosphere;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSimAtmosphere::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAtmosphere::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSimAtmosphere::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSimAtmosphere::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSimAtmosphere*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAtmosphere::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimAtmosphere::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAtmosphere::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_281_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimAtmosphere::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSimAtmosphere G__TMSimAtmosphere;
static int G__SimCint_281_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSimAtmosphere*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSimAtmosphere*) (soff+(sizeof(MSimAtmosphere)*i)))->~G__TMSimAtmosphere();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSimAtmosphere*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSimAtmosphere*) (soff))->~G__TMSimAtmosphere();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSimAbsorption */
static int G__SimCint_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSimAbsorption* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimAbsorption((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSimAbsorption((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimAbsorption((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSimAbsorption((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimAbsorption[n];
       } else {
         p = new((void*) gvp) MSimAbsorption[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimAbsorption;
       } else {
         p = new((void*) gvp) MSimAbsorption;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSimAbsorption*) G__getstructoffset())->SetParName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSimAbsorption*) G__getstructoffset())->SetUseTheta((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSimAbsorption*) G__getstructoffset())->SetUseTheta();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSimAbsorption*) G__getstructoffset())->SetForce((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSimAbsorption*) G__getstructoffset())->SetForce();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSimAbsorption::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAbsorption::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSimAbsorption::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSimAbsorption::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSimAbsorption*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAbsorption::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimAbsorption::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimAbsorption::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_283_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimAbsorption::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSimAbsorption G__TMSimAbsorption;
static int G__SimCint_283_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSimAbsorption*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSimAbsorption*) (soff+(sizeof(MSimAbsorption)*i)))->~G__TMSimAbsorption();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSimAbsorption*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSimAbsorption*) (soff))->~G__TMSimAbsorption();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSimPointingPos */
static int G__SimCint_284_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSimPointingPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimPointingPos((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSimPointingPos((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSimPointingPos((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSimPointingPos((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimPointingPos[n];
       } else {
         p = new((void*) gvp) MSimPointingPos[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MSimPointingPos;
       } else {
         p = new((void*) gvp) MSimPointingPos;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MSimPointingPos*) G__getstructoffset())->GetOffTargetDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MSimPointingPos*) G__getstructoffset())->GetOffTargetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSimPointingPos*) G__getstructoffset())->SetOffTargetDistance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSimPointingPos*) G__getstructoffset())->SetOffTargetDistance();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MSimPointingPos*) G__getstructoffset())->SetOffTargetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MSimPointingPos*) G__getstructoffset())->SetOffTargetPhi();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MSimPointingPos*) G__getstructoffset())->IsOffTargetObservation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSimPointingPos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimPointingPos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSimPointingPos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSimPointingPos::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSimPointingPos*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimPointingPos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimPointingPos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSimPointingPos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimCint_284_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSimPointingPos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSimPointingPos G__TMSimPointingPos;
static int G__SimCint_284_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSimPointingPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSimPointingPos*) (soff+(sizeof(MSimPointingPos)*i)))->~G__TMSimPointingPos();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSimPointingPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSimPointingPos*) (soff))->~G__TMSimPointingPos();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MPhotonData */

/* MPhotonEvent */

/* MPhotonStatistics */

/* MHPhotonEvent */

/* MSimMMCS */

/* MSimAtmosphere */

/* MSimAbsorption */

/* MSimPointingPos */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSimCint {
 public:
  G__Sizep2memfuncSimCint(): p(&G__Sizep2memfuncSimCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSimCint::*p)();
};

size_t G__get_sizep2memfuncSimCint()
{
  G__Sizep2memfuncSimCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSimCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MPhotonData))) {
     MPhotonData *G__Lderived;
     G__Lderived=(MPhotonData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonData),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent))) {
     MPhotonEvent *G__Lderived;
     G__Lderived=(MPhotonEvent*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics))) {
     MPhotonStatistics *G__Lderived;
     G__Lderived=(MPhotonStatistics*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent))) {
     MHPhotonEvent *G__Lderived;
     G__Lderived=(MHPhotonEvent*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent),G__get_linked_tagnum(&G__SimCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS))) {
     MSimMMCS *G__Lderived;
     G__Lderived=(MSimMMCS*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS),G__get_linked_tagnum(&G__SimCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS),G__get_linked_tagnum(&G__SimCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere))) {
     MSimAtmosphere *G__Lderived;
     G__Lderived=(MSimAtmosphere*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere),G__get_linked_tagnum(&G__SimCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere),G__get_linked_tagnum(&G__SimCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption))) {
     MSimAbsorption *G__Lderived;
     G__Lderived=(MSimAbsorption*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption),G__get_linked_tagnum(&G__SimCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption),G__get_linked_tagnum(&G__SimCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos))) {
     MSimPointingPos *G__Lderived;
     G__Lderived=(MSimPointingPos*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos),G__get_linked_tagnum(&G__SimCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos),G__get_linked_tagnum(&G__SimCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos),G__get_linked_tagnum(&G__SimCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos),G__get_linked_tagnum(&G__SimCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSimCint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SimCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__SimCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MPhotonData */
static void G__setup_memvarMPhotonData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonData));
   { MPhotonData *p; p=(MPhotonData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPosX=",0,"[cm] \"+west\"    \"-east\"  (both at observation level)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPosY=",0,"[cm] \"+south\"   \"-north\" (north denotes the magnet north which is defined to be in the geografic north!)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCosU=",0,"[cos x] U direction cosine to x-axis");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCosV=",0,"[cos y] V direction cosine to y-axis");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"[ns] Time since first interaction or entrance into atmosphere");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fWavelength=",0,"[nm] Wavelength");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fProductionHeight=",0,"[cm] Height of bunch production");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__SimCintLN_MMcEvtBasiccLcLParticleId_t),-1,-1,4,"fPrimary=",0,"Type of emitting particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTag=",0,"! A tag for external use");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMirrorTag=",0,"Tag for the mirror ID of the mirror which was hit by this photon");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWeight=",0,"! A weight for external use");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPhotonEvent */
static void G__setup_memvarMPhotonEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent));
   { MPhotonEvent *p; p=(MPhotonEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TClonesArray),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPhotonStatistics */
static void G__setup_memvarMPhotonStatistics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics));
   { MPhotonStatistics *p; p=(MPhotonStatistics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTimeFirst=",0,"! Start of (simulated) sampling window");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTimeLast=",0,"! Start of (simulated) sampling window");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fLength=",0,"Time between first and last photon");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTimeMedDev=",0,"Median deviation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxIndex=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHPhotonEvent */
static void G__setup_memvarMHPhotonEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent));
   { MHPhotonEvent *p; p=(MHPhotonEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TH2F),-1,-1,4,"fHistXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TH2F),-1,-1,4,"fHistUV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TProfile2D),-1,-1,4,"fHistT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TH1F),-1,-1,4,"fHistWL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TH1F),-1,-1,4,"fHistH=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPermanentReset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSimMMCS */
static void G__setup_memvarMSimMMCS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS));
   { MSimMMCS *p; p=(MSimMMCS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MMcEvtBasic),-1,-1,4,"fMcEvtBasic=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MMcEvt),-1,-1,4,"fMcEvt=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MPointingPos),-1,-1,4,"fPointingTel=",0,"! telescope poiting position in local (telescope) coordinate system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaEvtHeader),-1,-1,4,"fEvtHeader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaRunHeader),-1,-1,4,"fRunHeader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MMcRunHeader),-1,-1,4,"fMcRunHeader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSimAtmosphere */
static void G__setup_memvarMSimAtmosphere(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere));
   { MSimAtmosphere *p; p=(MSimAtmosphere*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaRunHeader),-1,-1,4,"fRunHeader=",0,"! Corsika run header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent),-1,-1,4,"fEvt=",0,"! Event stroing the photons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MAtmosphere),-1,-1,4,"fAtmosphere=",0,"! Instance of class describing atmosphere");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TString),-1,-1,4,"fFileAerosols=",0,"Name of file with aersole absorption");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TString),-1,-1,4,"fFileOzone=",0,"Name of file with ozone absorption");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForce=",0,"Force execution in case efficiencies are already included (CEFFIC)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSimAbsorption */
static void G__setup_memvarMSimAbsorption(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption));
   { MSimAbsorption *p; p=(MSimAbsorption*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent),-1,-1,4,"fEvt=",0,"! Event stroing the photons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaRunHeader),-1,-1,4,"fRunHeader=",0,"! Corsika run header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaEvtHeader),-1,-1,4,"fHeader=",0,"! Header storing event information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MParSpline),-1,-1,4,"fSpline=",0,"! Spline to interpolate wavelength or incident angle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SimCintLN_TString),-1,-1,4,"fParName=",0,"Container name of the spline containing the curve");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTheta=",0,"Switches between using wavelength or incident angle");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForce=",0,"Force execution even if corsika already simulated the efficiencies");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSimPointingPos */
static void G__setup_memvarMSimPointingPos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos));
   { MSimPointingPos *p; p=(MSimPointingPos*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaRunHeader),-1,-1,4,"fRunHeader=",0,"! Header storing event information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MCorsikaEvtHeader),-1,-1,4,"fEvtHeader=",0,"! Header storing event information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MPointingPos),-1,-1,4,"fPointing=",0,"! Output storing telescope pointing position in local (telescope) coordinate system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_MPointingPos),-1,-1,4,"fSimSourcePosition=",0,"! Output storing simulated source pointing position in local (telescope) coordinate system");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOffTargetDistance=",0,"[rad] Distance of the observed off-target position from the source");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOffTargetPhi=",0,"[rad] Rotation angle of the off-target position (phi==0 means south, phi=90 west) [0;2pi], phi<0 means random");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSimCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMPhotonData(void) {
   /* MPhotonData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonData));
   G__memfunc_setup("MPhotonData",1087,G__SimCint_212_0_1, 105, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosX",682,G__SimCint_212_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosY",683,G__SimCint_212_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosU",666,G__SimCint_212_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosV",667,G__SimCint_212_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosW",668,G__SimCint_212_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSinW",673,G__SimCint_212_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosW2",718,G__SimCint_212_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSinW2",723,G__SimCint_212_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__SimCint_212_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__SimCint_212_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos2",644,G__SimCint_212_0_12, 117, G__get_linked_tagnum(&G__SimCintLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDir2",625,G__SimCint_212_0_13, 117, G__get_linked_tagnum(&G__SimCintLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos3",645,G__SimCint_212_0_14, 117, G__get_linked_tagnum(&G__SimCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDir3",626,G__SimCint_212_0_15, 117, G__get_linked_tagnum(&G__SimCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosQ",675,G__SimCint_212_0_16, 117, G__get_linked_tagnum(&G__SimCintLN_TQuaternion), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirQ",656,G__SimCint_212_0_17, 117, G__get_linked_tagnum(&G__SimCintLN_TQuaternion), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWavelength",1333,G__SimCint_212_0_18, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProductionHeight",1952,G__SimCint_212_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimary",1028,G__SimCint_212_0_20, 105, G__get_linked_tagnum(&G__SimCintLN_MMcEvtBasiccLcLParticleId_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludesEfficiencies",2036,G__SimCint_212_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__SimCint_212_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWeight",916,G__SimCint_212_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__SimCint_212_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__SimCint_212_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - u f - 'Float_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__SimCint_212_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector2' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__SimCint_212_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector2' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__SimCint_212_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TQuaternion' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__SimCint_212_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TQuaternion' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimary",1040,G__SimCint_212_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MMcEvtBasic::ParticleId_t' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWavelength",1345,G__SimCint_212_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - wl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTime",664,G__SimCint_212_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__SimCint_212_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimWavelength",1342,G__SimCint_212_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - wmin f - 'Float_t' 0 - wmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTag",584,G__SimCint_212_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTag",572,G__SimCint_212_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMirrorTag",1219,G__SimCint_212_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mirrorTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMirrorTag",1207,G__SimCint_212_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillCorsika",1107,G__SimCint_212_0_43, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"F - 'Float_t' 0 - f i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEventIO",1057,G__SimCint_212_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "S - 'Short_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEventIO",1057,G__SimCint_212_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "F - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillRfl",683,G__SimCint_212_0_46, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "F - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_212_0_47, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPhotonData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_212_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_212_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPhotonData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_212_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPhotonData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_212_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_212_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_212_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_212_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_212_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPhotonData", 1087, G__SimCint_212_0_59, (int) ('i'), G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 0, 1, 1, 1, 0, "u 'MPhotonData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPhotonData", 1213, G__SimCint_212_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimCint_212_0_61, (int) ('u'), G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 1, 1, 1, 1, 0, "u 'MPhotonData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPhotonEvent(void) {
   /* MPhotonEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent));
   G__memfunc_setup("MPhotonEvent",1223,G__SimCint_216_0_1, 105, G__get_linked_tagnum(&G__SimCintLN_MPhotonEvent), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__SimCint_216_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSorted",813,G__SimCint_216_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPhotons",1339,G__SimCint_216_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumExternal",1427,G__SimCint_216_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeFirst",1207,G__SimCint_216_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeLast",1091,G__SimCint_216_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeMedianDev",1564,G__SimCint_216_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanX",761,G__SimCint_216_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanY",762,G__SimCint_216_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanT",757,G__SimCint_216_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__SimCint_216_0_12, 117, G__get_linked_tagnum(&G__SimCintLN_TClonesArray), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__SimCint_216_0_13, 117, G__get_linked_tagnum(&G__SimCintLN_TClonesArray), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AsciiWrite",1012,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,G__SimCint_216_0_15, 117, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SimCint_216_0_16, 117, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirst",808,G__SimCint_216_0_17, 85, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLast",692,G__SimCint_216_0_18, 85, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SimCint_216_0_19, 117, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SimCint_216_0_20, 117, G__get_linked_tagnum(&G__SimCintLN_MPhotonData), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Shrink",623,G__SimCint_216_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resize",626,G__SimCint_216_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXY",442,G__SimCint_216_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimWavelength",1342,G__SimCint_216_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - wmin f - 'Float_t' 0 - wmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEventIoEvt",1381,G__SimCint_216_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MCorsikaFormat' - 0 - fInFormat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEventIoEvtCompact",2092,G__SimCint_216_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MCorsikaFormat' - 0 - fInFormat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCorsikaEvt",1399,G__SimCint_216_0_27, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"F - 'Float_t' 0 - data i - 'Int_t' 0 - numEvents "
"i - 'Int_t' 0 - arrayIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SimCint_216_0_30, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPhotonEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_216_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_216_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPhotonEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_216_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPhotonEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_216_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_216_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_216_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_216_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_216_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MPhotonEvent", 1349, G__SimCint_216_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPhotonStatistics(void) {
   /* MPhotonStatistics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics));
   G__memfunc_setup("MPhotonStatistics",1776,G__SimCint_217_0_1, 105, G__get_linked_tagnum(&G__SimCintLN_MPhotonStatistics), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__SimCint_217_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - first f - 'Float_t' 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLength",910,G__SimCint_217_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxIndex",1098,G__SimCint_217_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeMedDev",1264,G__SimCint_217_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeFirst",1207,G__SimCint_217_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeLast",1091,G__SimCint_217_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__SimCint_217_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeMedDev",1252,G__SimCint_217_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxIndex",1086,G__SimCint_217_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_217_0_11, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPhotonStatistics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_217_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonStatistics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_217_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPhotonStatistics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_217_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPhotonStatistics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_217_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_217_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonStatistics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_217_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonStatistics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_217_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPhotonStatistics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_217_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPhotonStatistics::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MPhotonStatistics", 1902, G__SimCint_217_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHPhotonEvent(void) {
   /* MHPhotonEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinningXY",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - num d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 10 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' weight", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHPhotonEvent",1295,G__SimCint_269_0_7, 105, G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - max C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHPhotonEvent",1295,G__SimCint_269_0_8, 105, G__get_linked_tagnum(&G__SimCintLN_MHPhotonEvent), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '3' type C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PermanentReset",1453,G__SimCint_269_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHistXY",873,G__SimCint_269_0_13, 117, G__get_linked_tagnum(&G__SimCintLN_TH2F), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistT",780,G__SimCint_269_0_14, 117, G__get_linked_tagnum(&G__SimCintLN_TProfile2D), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_269_0_15, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHPhotonEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_269_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPhotonEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_269_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHPhotonEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_269_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHPhotonEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_269_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_269_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPhotonEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_269_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHPhotonEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_269_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPhotonEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_269_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHPhotonEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHPhotonEvent", 1421, G__SimCint_269_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSimMMCS(void) {
   /* MSimMMCS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MSimMMCS));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MSimMMCS",678,G__SimCint_279_0_4, 105, G__get_linked_tagnum(&G__SimCintLN_MSimMMCS), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_279_0_5, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSimMMCS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_279_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimMMCS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_279_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSimMMCS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_279_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSimMMCS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_279_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_279_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimMMCS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_279_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimMMCS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_279_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimMMCS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_279_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimMMCS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSimMMCS", 804, G__SimCint_279_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSimAtmosphere(void) {
   /* MSimAtmosphere */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MSimAtmosphere",1422,G__SimCint_281_0_5, 105, G__get_linked_tagnum(&G__SimCintLN_MSimAtmosphere), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_281_0_6, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSimAtmosphere::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_281_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAtmosphere::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_281_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSimAtmosphere::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_281_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSimAtmosphere::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_281_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_281_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAtmosphere::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_281_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimAtmosphere::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_281_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAtmosphere::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_281_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimAtmosphere::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSimAtmosphere", 1548, G__SimCint_281_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSimAbsorption(void) {
   /* MSimAbsorption */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MSimAbsorption",1431,G__SimCint_283_0_5, 105, G__get_linked_tagnum(&G__SimCintLN_MSimAbsorption), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParName",976,G__SimCint_283_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseTheta",1103,G__SimCint_283_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForce",795,G__SimCint_283_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_283_0_9, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSimAbsorption::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_283_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAbsorption::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_283_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSimAbsorption::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_283_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSimAbsorption::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_283_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_283_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAbsorption::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_283_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimAbsorption::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_283_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimAbsorption::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_283_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimAbsorption::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSimAbsorption", 1557, G__SimCint_283_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSimPointingPos(void) {
   /* MSimPointingPos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos));
   G__memfunc_setup("GetDelta",778,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"d - 'Double_t' 1 - dtheta d - 'Double_t' 1 - dphi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MSimPointingPos",1520,G__SimCint_284_0_6, 105, G__get_linked_tagnum(&G__SimCintLN_MSimPointingPos), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffTargetDistance",1997,G__SimCint_284_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffTargetPhi",1475,G__SimCint_284_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffTargetDistance",2009,G__SimCint_284_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0' d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffTargetPhi",1487,G__SimCint_284_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1' p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOffTargetObservation",2250,G__SimCint_284_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimCint_284_0_12, 85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSimPointingPos::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimCint_284_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimPointingPos::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimCint_284_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSimPointingPos::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimCint_284_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSimPointingPos::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimCint_284_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimCint_284_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimPointingPos::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimCint_284_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimPointingPos::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimCint_284_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSimPointingPos::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimCint_284_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSimPointingPos::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSimPointingPos", 1646, G__SimCint_284_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSimCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSimCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSimCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SimCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__SimCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SimCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SimCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SimCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MMcEvtBasic = { "MMcEvtBasic" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MMcEvtBasiccLcLParticleId_t = { "MMcEvtBasic::ParticleId_t" , 101 , -1 };
G__linked_taginfo G__SimCintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TQuaternion = { "TQuaternion" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MCorsikaRunHeader = { "MCorsikaRunHeader" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MPhotonData = { "MPhotonData" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MCorsikaFormat = { "MCorsikaFormat" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MPhotonEvent = { "MPhotonEvent" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MPhotonStatistics = { "MPhotonStatistics" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__SimCintLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MH = { "MH" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MHPhotonEvent = { "MHPhotonEvent" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MMcEvt = { "MMcEvt" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MPointingPos = { "MPointingPos" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MCorsikaEvtHeader = { "MCorsikaEvtHeader" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MMcRunHeader = { "MMcRunHeader" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MSimMMCS = { "MSimMMCS" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MAtmosphere = { "MAtmosphere" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MSimAtmosphere = { "MSimAtmosphere" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MParSpline = { "MParSpline" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MSimAbsorption = { "MSimAbsorption" , 99 , -1 };
G__linked_taginfo G__SimCintLN_MSimPointingPos = { "MSimPointingPos" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSimCint() {
  G__SimCintLN_TClass.tagnum = -1 ;
  G__SimCintLN_TBuffer.tagnum = -1 ;
  G__SimCintLN_TMemberInspector.tagnum = -1 ;
  G__SimCintLN_TObject.tagnum = -1 ;
  G__SimCintLN_TString.tagnum = -1 ;
  G__SimCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SimCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimCintLN_TClonesArray.tagnum = -1 ;
  G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SimCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SimCintLN_TEnv.tagnum = -1 ;
  G__SimCintLN_MParContainer.tagnum = -1 ;
  G__SimCintLN_MMcEvtBasic.tagnum = -1 ;
  G__SimCintLN_MMcEvtBasiccLcLParticleId_t.tagnum = -1 ;
  G__SimCintLN_TVector2.tagnum = -1 ;
  G__SimCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SimCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SimCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__SimCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__SimCintLN_TVector3.tagnum = -1 ;
  G__SimCintLN_TQuaternion.tagnum = -1 ;
  G__SimCintLN_MCorsikaRunHeader.tagnum = -1 ;
  G__SimCintLN_MPhotonData.tagnum = -1 ;
  G__SimCintLN_MCorsikaFormat.tagnum = -1 ;
  G__SimCintLN_MPhotonEvent.tagnum = -1 ;
  G__SimCintLN_MPhotonStatistics.tagnum = -1 ;
  G__SimCintLN_MParList.tagnum = -1 ;
  G__SimCintLN_TH1F.tagnum = -1 ;
  G__SimCintLN_TH2F.tagnum = -1 ;
  G__SimCintLN_TProfile2D.tagnum = -1 ;
  G__SimCintLN_MH.tagnum = -1 ;
  G__SimCintLN_MHPhotonEvent.tagnum = -1 ;
  G__SimCintLN_MInputStreamID.tagnum = -1 ;
  G__SimCintLN_MTask.tagnum = -1 ;
  G__SimCintLN_MMcEvt.tagnum = -1 ;
  G__SimCintLN_MPointingPos.tagnum = -1 ;
  G__SimCintLN_MCorsikaEvtHeader.tagnum = -1 ;
  G__SimCintLN_MMcRunHeader.tagnum = -1 ;
  G__SimCintLN_MSimMMCS.tagnum = -1 ;
  G__SimCintLN_MAtmosphere.tagnum = -1 ;
  G__SimCintLN_MSimAtmosphere.tagnum = -1 ;
  G__SimCintLN_MParSpline.tagnum = -1 ;
  G__SimCintLN_MSimAbsorption.tagnum = -1 ;
  G__SimCintLN_MSimPointingPos.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSimCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SimCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TString);
   G__get_linked_tagnum_fwd(&G__SimCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__SimCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MMcEvtBasic);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MMcEvtBasiccLcLParticleId_t);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TQuaternion);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MCorsikaRunHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MPhotonData),sizeof(MPhotonData),-1,291072,"Container to store a cherenkov photon bunch from a CORSUKA file",G__setup_memvarMPhotonData,G__setup_memfuncMPhotonData);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MCorsikaFormat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MPhotonEvent),sizeof(MPhotonEvent),-1,323840,"Container to store the raw Event Data",G__setup_memvarMPhotonEvent,G__setup_memfuncMPhotonEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MPhotonStatistics),sizeof(MPhotonStatistics),-1,323840,(char*)NULL,G__setup_memvarMPhotonStatistics,G__setup_memfuncMPhotonStatistics);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__SimCintLN_TProfile2D);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MH);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MHPhotonEvent),sizeof(MHPhotonEvent),-1,323840,"Histogram to display the information of MPhotonEvents",G__setup_memvarMHPhotonEvent,G__setup_memfuncMHPhotonEvent);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MMcEvt);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MPointingPos);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MCorsikaEvtHeader);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MMcRunHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MSimMMCS),sizeof(MSimMMCS),-1,323840,"Task to copy the Mars CheObs MC headers to the old Mars style",G__setup_memvarMSimMMCS,G__setup_memfuncMSimMMCS);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MAtmosphere);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MSimAtmosphere),sizeof(MSimAtmosphere),-1,324864,"Simulate the wavelength and height-dependant atmpsheric absorption",G__setup_memvarMSimAtmosphere,G__setup_memfuncMSimAtmosphere);
   G__get_linked_tagnum_fwd(&G__SimCintLN_MParSpline);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MSimAbsorption),sizeof(MSimAbsorption),-1,323840,"Task to calculate wavelength or incident angle dependent absorption",G__setup_memvarMSimAbsorption,G__setup_memfuncMSimAbsorption);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimCintLN_MSimPointingPos),sizeof(MSimPointingPos),-1,323840,"Task to simulate the pointing position (mirror orientation)",G__setup_memvarMSimPointingPos,G__setup_memfuncMSimPointingPos);
}
extern "C" void G__cpp_setupSimCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupSimCint()");
  G__set_cpp_environmentSimCint();
  G__cpp_setup_tagtableSimCint();

  G__cpp_setup_inheritanceSimCint();

  G__cpp_setup_typetableSimCint();

  G__cpp_setup_memvarSimCint();

  G__cpp_setup_memfuncSimCint();
  G__cpp_setup_globalSimCint();
  G__cpp_setup_funcSimCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSimCint();
  return;
}
class G__cpp_setup_initSimCint {
  public:
    G__cpp_setup_initSimCint() { G__add_setup_func("SimCint",(G__incsetup)(&G__cpp_setupSimCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSimCint() { G__remove_setup_func("SimCint"); }
};
G__cpp_setup_initSimCint G__cpp_setup_initializerSimCint;

