//
// File generated by rootcint at Mon Nov 28 11:05:29 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DataCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DataCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MData(void *p);
   static void deleteArray_MData(void *p);
   static void destruct_MData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MData*)
   {
      ::MData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MData", ::MData::Class_Version(), "./MData.h", 17,
                  typeid(::MData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MData::Dictionary, isa_proxy, 4,
                  sizeof(::MData) );
      instance.SetDelete(&delete_MData);
      instance.SetDeleteArray(&deleteArray_MData);
      instance.SetDestructor(&destruct_MData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MData*)
   {
      return GenerateInitInstanceLocal((::MData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataPhrase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataPhrase(void *p = 0);
   static void *newArray_MDataPhrase(Long_t size, void *p);
   static void delete_MDataPhrase(void *p);
   static void deleteArray_MDataPhrase(void *p);
   static void destruct_MDataPhrase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataPhrase*)
   {
      ::MDataPhrase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataPhrase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataPhrase", ::MDataPhrase::Class_Version(), "./MDataPhrase.h", 20,
                  typeid(::MDataPhrase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataPhrase::Dictionary, isa_proxy, 4,
                  sizeof(::MDataPhrase) );
      instance.SetNew(&new_MDataPhrase);
      instance.SetNewArray(&newArray_MDataPhrase);
      instance.SetDelete(&delete_MDataPhrase);
      instance.SetDeleteArray(&deleteArray_MDataPhrase);
      instance.SetDestructor(&destruct_MDataPhrase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataPhrase*)
   {
      return GenerateInitInstanceLocal((::MDataPhrase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataPhrase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataArray(void *p = 0);
   static void *newArray_MDataArray(Long_t size, void *p);
   static void delete_MDataArray(void *p);
   static void deleteArray_MDataArray(void *p);
   static void destruct_MDataArray(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataArray*)
   {
      ::MDataArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataArray", ::MDataArray::Class_Version(), "./MDataArray.h", 25,
                  typeid(::MDataArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataArray::Dictionary, isa_proxy, 4,
                  sizeof(::MDataArray) );
      instance.SetNew(&new_MDataArray);
      instance.SetNewArray(&newArray_MDataArray);
      instance.SetDelete(&delete_MDataArray);
      instance.SetDeleteArray(&deleteArray_MDataArray);
      instance.SetDestructor(&destruct_MDataArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataArray*)
   {
      return GenerateInitInstanceLocal((::MDataArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataElement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataElement(void *p = 0);
   static void *newArray_MDataElement(Long_t size, void *p);
   static void delete_MDataElement(void *p);
   static void deleteArray_MDataElement(void *p);
   static void destruct_MDataElement(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataElement*)
   {
      ::MDataElement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataElement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataElement", ::MDataElement::Class_Version(), "./MDataElement.h", 16,
                  typeid(::MDataElement), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataElement::Dictionary, isa_proxy, 4,
                  sizeof(::MDataElement) );
      instance.SetNew(&new_MDataElement);
      instance.SetNewArray(&newArray_MDataElement);
      instance.SetDelete(&delete_MDataElement);
      instance.SetDeleteArray(&deleteArray_MDataElement);
      instance.SetDestructor(&destruct_MDataElement);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataElement*)
   {
      return GenerateInitInstanceLocal((::MDataElement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataMember_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataMember(void *p = 0);
   static void *newArray_MDataMember(Long_t size, void *p);
   static void delete_MDataMember(void *p);
   static void deleteArray_MDataMember(void *p);
   static void destruct_MDataMember(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataMember*)
   {
      ::MDataMember *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataMember >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataMember", ::MDataMember::Class_Version(), "./MDataMember.h", 15,
                  typeid(::MDataMember), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataMember::Dictionary, isa_proxy, 4,
                  sizeof(::MDataMember) );
      instance.SetNew(&new_MDataMember);
      instance.SetNewArray(&newArray_MDataMember);
      instance.SetDelete(&delete_MDataMember);
      instance.SetDeleteArray(&deleteArray_MDataMember);
      instance.SetDestructor(&destruct_MDataMember);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataMember*)
   {
      return GenerateInitInstanceLocal((::MDataMember*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataMember*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataValue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataValue(void *p = 0);
   static void *newArray_MDataValue(Long_t size, void *p);
   static void delete_MDataValue(void *p);
   static void deleteArray_MDataValue(void *p);
   static void destruct_MDataValue(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataValue*)
   {
      ::MDataValue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataValue >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataValue", ::MDataValue::Class_Version(), "./MDataValue.h", 11,
                  typeid(::MDataValue), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataValue::Dictionary, isa_proxy, 4,
                  sizeof(::MDataValue) );
      instance.SetNew(&new_MDataValue);
      instance.SetNewArray(&newArray_MDataValue);
      instance.SetDelete(&delete_MDataValue);
      instance.SetDeleteArray(&deleteArray_MDataValue);
      instance.SetDestructor(&destruct_MDataValue);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataValue*)
   {
      return GenerateInitInstanceLocal((::MDataValue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataValue*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataList(void *p = 0);
   static void *newArray_MDataList(Long_t size, void *p);
   static void delete_MDataList(void *p);
   static void deleteArray_MDataList(void *p);
   static void destruct_MDataList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataList*)
   {
      ::MDataList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataList", ::MDataList::Class_Version(), "./MDataList.h", 21,
                  typeid(::MDataList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataList::Dictionary, isa_proxy, 4,
                  sizeof(::MDataList) );
      instance.SetNew(&new_MDataList);
      instance.SetNewArray(&newArray_MDataList);
      instance.SetDelete(&delete_MDataList);
      instance.SetDeleteArray(&deleteArray_MDataList);
      instance.SetDestructor(&destruct_MDataList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataList*)
   {
      return GenerateInitInstanceLocal((::MDataList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataChain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataChain(void *p = 0);
   static void *newArray_MDataChain(Long_t size, void *p);
   static void delete_MDataChain(void *p);
   static void deleteArray_MDataChain(void *p);
   static void destruct_MDataChain(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataChain*)
   {
      ::MDataChain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataChain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataChain", ::MDataChain::Class_Version(), "./MDataChain.h", 17,
                  typeid(::MDataChain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataChain::Dictionary, isa_proxy, 4,
                  sizeof(::MDataChain) );
      instance.SetNew(&new_MDataChain);
      instance.SetNewArray(&newArray_MDataChain);
      instance.SetDelete(&delete_MDataChain);
      instance.SetDeleteArray(&deleteArray_MDataChain);
      instance.SetDestructor(&destruct_MDataChain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataChain*)
   {
      return GenerateInitInstanceLocal((::MDataChain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataChain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDataFormula_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDataFormula(void *p = 0);
   static void *newArray_MDataFormula(Long_t size, void *p);
   static void delete_MDataFormula(void *p);
   static void deleteArray_MDataFormula(void *p);
   static void destruct_MDataFormula(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDataFormula*)
   {
      ::MDataFormula *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDataFormula >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDataFormula", ::MDataFormula::Class_Version(), "./MDataFormula.h", 16,
                  typeid(::MDataFormula), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDataFormula::Dictionary, isa_proxy, 4,
                  sizeof(::MDataFormula) );
      instance.SetNew(&new_MDataFormula);
      instance.SetNewArray(&newArray_MDataFormula);
      instance.SetDelete(&delete_MDataFormula);
      instance.SetDeleteArray(&deleteArray_MDataFormula);
      instance.SetDestructor(&destruct_MDataFormula);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDataFormula*)
   {
      return GenerateInitInstanceLocal((::MDataFormula*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDataFormula*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MData::Class_Name()
{
   return "MData";
}

//______________________________________________________________________________
const char *MData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataPhrase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataPhrase::Class_Name()
{
   return "MDataPhrase";
}

//______________________________________________________________________________
const char *MDataPhrase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataPhrase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataPhrase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataPhrase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataPhrase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataPhrase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataPhrase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataPhrase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataArray::Class_Name()
{
   return "MDataArray";
}

//______________________________________________________________________________
const char *MDataArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataElement::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataElement::Class_Name()
{
   return "MDataElement";
}

//______________________________________________________________________________
const char *MDataElement::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataElement::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataElement::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataElement::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataElement*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataMember::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataMember::Class_Name()
{
   return "MDataMember";
}

//______________________________________________________________________________
const char *MDataMember::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataMember*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataMember::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataMember*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataMember::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataMember*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataMember::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataMember*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataValue::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataValue::Class_Name()
{
   return "MDataValue";
}

//______________________________________________________________________________
const char *MDataValue::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataValue*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataValue::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataValue*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataValue::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataValue*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataValue::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataValue*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataList::Class_Name()
{
   return "MDataList";
}

//______________________________________________________________________________
const char *MDataList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataChain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataChain::Class_Name()
{
   return "MDataChain";
}

//______________________________________________________________________________
const char *MDataChain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataChain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataChain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataChain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataChain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataChain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataChain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataChain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDataFormula::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDataFormula::Class_Name()
{
   return "MDataFormula";
}

//______________________________________________________________________________
const char *MDataFormula::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataFormula*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDataFormula::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDataFormula*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDataFormula::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataFormula*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDataFormula::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDataFormula*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MData::Class(),this);
   }
}

//______________________________________________________________________________
void MData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MData.
      TClass *R__cl = ::MData::IsA();
      if (R__cl || R__insp.IsA()) { }
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MData(void *p) {
      delete ((::MData*)p);
   }
   static void deleteArray_MData(void *p) {
      delete [] ((::MData*)p);
   }
   static void destruct_MData(void *p) {
      typedef ::MData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MData

//______________________________________________________________________________
void MDataArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataArray::Class(),this);
   }
}

//______________________________________________________________________________
void MDataArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataArray.
      TClass *R__cl = ::MDataArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fList", &fList);
      R__insp.InspectMember(fList, "fList.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataArray(void *p) {
      return  p ? new(p) ::MDataArray : new ::MDataArray;
   }
   static void *newArray_MDataArray(Long_t nElements, void *p) {
      return p ? new(p) ::MDataArray[nElements] : new ::MDataArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataArray(void *p) {
      delete ((::MDataArray*)p);
   }
   static void deleteArray_MDataArray(void *p) {
      delete [] ((::MDataArray*)p);
   }
   static void destruct_MDataArray(void *p) {
      typedef ::MDataArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataArray

//______________________________________________________________________________
void MDataElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataElement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataElement::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataElement::Class(),this);
   }
}

//______________________________________________________________________________
void MDataElement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataElement.
      TClass *R__cl = ::MDataElement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatrixName", &fMatrixName);
      R__insp.InspectMember(fMatrixName, "fMatrixName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumCol", &fNumCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMatrix", &fMatrix);
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataElement(void *p) {
      return  p ? new(p) ::MDataElement : new ::MDataElement;
   }
   static void *newArray_MDataElement(Long_t nElements, void *p) {
      return p ? new(p) ::MDataElement[nElements] : new ::MDataElement[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataElement(void *p) {
      delete ((::MDataElement*)p);
   }
   static void deleteArray_MDataElement(void *p) {
      delete [] ((::MDataElement*)p);
   }
   static void destruct_MDataElement(void *p) {
      typedef ::MDataElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataElement

//______________________________________________________________________________
void MDataList::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataList::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataList::Class(),this);
   }
}

//______________________________________________________________________________
void MDataList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataList.
      TClass *R__cl = ::MDataList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMembers", &fMembers);
      R__insp.InspectMember(fMembers, "fMembers.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSign", &fSign);
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataList(void *p) {
      return  p ? new(p) ::MDataList : new ::MDataList;
   }
   static void *newArray_MDataList(Long_t nElements, void *p) {
      return p ? new(p) ::MDataList[nElements] : new ::MDataList[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataList(void *p) {
      delete ((::MDataList*)p);
   }
   static void deleteArray_MDataList(void *p) {
      delete [] ((::MDataList*)p);
   }
   static void destruct_MDataList(void *p) {
      typedef ::MDataList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataList

//______________________________________________________________________________
void MDataValue::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataValue.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataValue::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataValue::Class(),this);
   }
}

//______________________________________________________________________________
void MDataValue::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataValue.
      TClass *R__cl = ::MDataValue::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &fValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataValue(void *p) {
      return  p ? new(p) ::MDataValue : new ::MDataValue;
   }
   static void *newArray_MDataValue(Long_t nElements, void *p) {
      return p ? new(p) ::MDataValue[nElements] : new ::MDataValue[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataValue(void *p) {
      delete ((::MDataValue*)p);
   }
   static void deleteArray_MDataValue(void *p) {
      delete [] ((::MDataValue*)p);
   }
   static void destruct_MDataValue(void *p) {
      typedef ::MDataValue current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataValue

//______________________________________________________________________________
void MDataMember::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataMember.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataMember::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataMember::Class(),this);
   }
}

//______________________________________________________________________________
void MDataMember::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataMember.
      TClass *R__cl = ::MDataMember::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataMember", &fDataMember);
      R__insp.InspectMember(fDataMember, "fDataMember.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCall", &fCall);
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataMember(void *p) {
      return  p ? new(p) ::MDataMember : new ::MDataMember;
   }
   static void *newArray_MDataMember(Long_t nElements, void *p) {
      return p ? new(p) ::MDataMember[nElements] : new ::MDataMember[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataMember(void *p) {
      delete ((::MDataMember*)p);
   }
   static void deleteArray_MDataMember(void *p) {
      delete [] ((::MDataMember*)p);
   }
   static void destruct_MDataMember(void *p) {
      typedef ::MDataMember current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataMember

//______________________________________________________________________________
void MDataChain::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataChain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataChain::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataChain::Class(),this);
   }
}

//______________________________________________________________________________
void MDataChain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataChain.
      TClass *R__cl = ::MDataChain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMember", &fMember);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOperatorType", &fOperatorType);
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataChain(void *p) {
      return  p ? new(p) ::MDataChain : new ::MDataChain;
   }
   static void *newArray_MDataChain(Long_t nElements, void *p) {
      return p ? new(p) ::MDataChain[nElements] : new ::MDataChain[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataChain(void *p) {
      delete ((::MDataChain*)p);
   }
   static void deleteArray_MDataChain(void *p) {
      delete [] ((::MDataChain*)p);
   }
   static void destruct_MDataChain(void *p) {
      typedef ::MDataChain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataChain

//______________________________________________________________________________
void MDataFormula::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataFormula.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataFormula::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataFormula::Class(),this);
   }
}

//______________________________________________________________________________
void MDataFormula::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataFormula.
      TClass *R__cl = ::MDataFormula::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFormula", &fFormula);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMembers", &fMembers);
      R__insp.InspectMember(fMembers, "fMembers.");
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataFormula(void *p) {
      return  p ? new(p) ::MDataFormula : new ::MDataFormula;
   }
   static void *newArray_MDataFormula(Long_t nElements, void *p) {
      return p ? new(p) ::MDataFormula[nElements] : new ::MDataFormula[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataFormula(void *p) {
      delete ((::MDataFormula*)p);
   }
   static void deleteArray_MDataFormula(void *p) {
      delete [] ((::MDataFormula*)p);
   }
   static void destruct_MDataFormula(void *p) {
      typedef ::MDataFormula current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataFormula

//______________________________________________________________________________
void MDataPhrase::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDataPhrase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDataPhrase::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDataPhrase::Class(),this);
   }
}

//______________________________________________________________________________
void MDataPhrase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDataPhrase.
      TClass *R__cl = ::MDataPhrase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFormula", &fFormula);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMembers", &fMembers);
      R__insp.InspectMember(fMembers, "fMembers.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStorage", &fStorage);
      R__insp.InspectMember(fStorage, "fStorage.");
      MData::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDataPhrase(void *p) {
      return  p ? new(p) ::MDataPhrase : new ::MDataPhrase;
   }
   static void *newArray_MDataPhrase(Long_t nElements, void *p) {
      return p ? new(p) ::MDataPhrase[nElements] : new ::MDataPhrase[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDataPhrase(void *p) {
      delete ((::MDataPhrase*)p);
   }
   static void deleteArray_MDataPhrase(void *p) {
      delete [] ((::MDataPhrase*)p);
   }
   static void destruct_MDataPhrase(void *p) {
      typedef ::MDataPhrase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDataPhrase

/********************************************************
* DataCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDataCint();

extern "C" void G__set_cpp_environmentDataCint() {
  G__cpp_reset_tagtableDataCint();
}
#include <new>
extern "C" int G__cpp_dllrevDataCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MData */
static int G__DataCint_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MData*) G__getstructoffset())->GetValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MData*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MData*) G__getstructoffset())->PreProcess((MParList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MData*) G__getstructoffset())->GetRule();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MData*) G__getstructoffset())->GetDataMember();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MData*) G__getstructoffset())->operator()());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MData G__TMData;
static int G__DataCint_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MData*) (soff+(sizeof(MData)*i)))->~G__TMData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MData*) (soff))->~G__TMData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataPhrase */
static int G__DataCint_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataPhrase* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataPhrase(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MDataPhrase(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataPhrase((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataPhrase((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataPhrase((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataPhrase((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataPhrase[n];
       } else {
         p = new((void*) gvp) MDataPhrase[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataPhrase;
       } else {
         p = new((void*) gvp) MDataPhrase;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataPhrase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataPhrase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataPhrase(*(MDataPhrase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MDataPhrase(*(MDataPhrase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataPhrase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataPhrase*) G__getstructoffset())->HasValidRule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MDataPhrase*) G__getstructoffset())->Eval((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const MDataPhrase*) G__getstructoffset())->Eval((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const MDataPhrase*) G__getstructoffset())->Eval((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const MDataPhrase*) G__getstructoffset())->Eval((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MDataPhrase*) G__getstructoffset())->Eval((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MDataPhrase*) G__getstructoffset())->GetRuleRaw();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataPhrase*) G__getstructoffset())->GetBool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MDataPhrase*) G__getstructoffset())->SetRule(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataPhrase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataPhrase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataPhrase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataPhrase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataPhrase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataPhrase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataPhrase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataPhrase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataPhrase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataPhrase G__TMDataPhrase;
static int G__DataCint_177_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataPhrase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataPhrase*) (soff+(sizeof(MDataPhrase)*i)))->~G__TMDataPhrase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataPhrase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataPhrase*) (soff))->~G__TMDataPhrase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataArray */
static int G__DataCint_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataArray((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataArray((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataArray((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataArray((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataArray[n];
       } else {
         p = new((void*) gvp) MDataArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataArray;
       } else {
         p = new((void*) gvp) MDataArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataArray(
*(MDataArray*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MDataArray(
*(MDataArray*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataArray(*(MDataArray*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataArray(*(MDataArray*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataArray(*(MDataArray*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MDataArray(*(MDataArray*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataArray*) G__getstructoffset())->AddEntry(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataArray*) G__getstructoffset())->AddEntry((MData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MDataArray*) G__getstructoffset())->FindRule((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MData& obj = ((const MDataArray*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MDataArray*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataArray*) G__getstructoffset())->GetData(*(TVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MDataArray*) G__getstructoffset())->operator>>(*(TVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MDataArray*) G__getstructoffset())->GetRule((int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MDataArray*) G__getstructoffset())->PreProcess((MParList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MDataArray*) G__getstructoffset())->GetDataMember();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MDataArray*) G__getstructoffset())->GetNumEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_234_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataArray G__TMDataArray;
static int G__DataCint_234_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataArray*) (soff+(sizeof(MDataArray)*i)))->~G__TMDataArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataArray*) (soff))->~G__TMDataArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataElement */
static int G__DataCint_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataElement((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataElement((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataElement((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataElement((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataElement[n];
       } else {
         p = new((void*) gvp) MDataElement[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataElement;
       } else {
         p = new((void*) gvp) MDataElement;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataElement((MHMatrix*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataElement((MHMatrix*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataElement((MHMatrix*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataElement((MHMatrix*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MDataElement*) G__getstructoffset())->operator()());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataElement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataElement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataElement G__TMDataElement;
static int G__DataCint_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataElement*) (soff+(sizeof(MDataElement)*i)))->~G__TMDataElement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataElement*) (soff))->~G__TMDataElement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataMember */
static int G__DataCint_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataMember* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataMember((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataMember((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataMember[n];
       } else {
         p = new((void*) gvp) MDataMember[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataMember;
       } else {
         p = new((void*) gvp) MDataMember;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataMember));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataMember* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataMember((MParContainer*) G__int(libp->para[0]), (TMethodCall*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MDataMember((MParContainer*) G__int(libp->para[0]), (TMethodCall*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataMember));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataMember* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataMember((MParContainer*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) MDataMember((MParContainer*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataMember));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MDataMember*) G__getstructoffset())->GetString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MDataMember*) G__getstructoffset())->IsInt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataMember::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataMember::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataMember::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataMember::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataMember*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataMember::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataMember::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataMember::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataMember::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataMember G__TMDataMember;
static int G__DataCint_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataMember*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataMember*) (soff+(sizeof(MDataMember)*i)))->~G__TMDataMember();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataMember*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataMember*) (soff))->~G__TMDataMember();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataValue */
static int G__DataCint_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataValue* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataValue((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataValue((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataValue((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataValue((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataValue[n];
       } else {
         p = new((void*) gvp) MDataValue[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataValue;
       } else {
         p = new((void*) gvp) MDataValue;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataValue::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataValue::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataValue::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataValue::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataValue*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataValue::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataValue::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataValue::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataValue::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataValue G__TMDataValue;
static int G__DataCint_239_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataValue*) (soff+(sizeof(MDataValue)*i)))->~G__TMDataValue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataValue*) (soff))->~G__TMDataValue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataList */
static int G__DataCint_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataList[n];
     } else {
       p = new((void*) gvp) MDataList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataList;
     } else {
       p = new((void*) gvp) MDataList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataList((char) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MDataList((char) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataList(*(MDataList*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MDataList(*(MDataList*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MDataList*) G__getstructoffset())->AddToList((MData*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MDataList*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MDataList*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_243_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataList G__TMDataList;
static int G__DataCint_243_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataList*) (soff+(sizeof(MDataList)*i)))->~G__TMDataList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataList*) (soff))->~G__TMDataList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataChain */
static int G__DataCint_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataChain(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MDataChain(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataChain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataChain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataChain((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataChain((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataChain[n];
       } else {
         p = new((void*) gvp) MDataChain[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataChain;
       } else {
         p = new((void*) gvp) MDataChain;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataChain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataChain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataChain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataChain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataChain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataChain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataChain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataChain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataChain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataChain G__TMDataChain;
static int G__DataCint_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataChain*) (soff+(sizeof(MDataChain)*i)))->~G__TMDataChain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataChain*) (soff))->~G__TMDataChain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDataFormula */
static int G__DataCint_248_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataFormula(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MDataFormula(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataFormula((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDataFormula((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDataFormula((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDataFormula((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataFormula[n];
       } else {
         p = new((void*) gvp) MDataFormula[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MDataFormula;
       } else {
         p = new((void*) gvp) MDataFormula;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDataFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDataFormula(*(MDataFormula*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MDataFormula(*(MDataFormula*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataCintLN_MDataFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDataFormula::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataFormula::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDataFormula::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDataFormula::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDataFormula*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataFormula::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataFormula::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDataFormula::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataCint_248_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDataFormula::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDataFormula G__TMDataFormula;
static int G__DataCint_248_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDataFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDataFormula*) (soff+(sizeof(MDataFormula)*i)))->~G__TMDataFormula();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDataFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDataFormula*) (soff))->~G__TMDataFormula();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MData */

/* MDataPhrase */

/* MDataArray */

/* MDataElement */

/* MDataMember */

/* MDataValue */

/* MDataList */

/* MDataChain */

/* MDataFormula */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDataCint {
 public:
  G__Sizep2memfuncDataCint(): p(&G__Sizep2memfuncDataCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDataCint::*p)();
};

size_t G__get_sizep2memfuncDataCint()
{
  G__Sizep2memfuncDataCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDataCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MData))) {
     MData *G__Lderived;
     G__Lderived=(MData*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MData),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MData),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase))) {
     MDataPhrase *G__Lderived;
     G__Lderived=(MDataPhrase*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataArray))) {
     MDataArray *G__Lderived;
     G__Lderived=(MDataArray*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataArray),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataArray),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataElement))) {
     MDataElement *G__Lderived;
     G__Lderived=(MDataElement*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataElement),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataElement),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataElement),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataMember))) {
     MDataMember *G__Lderived;
     G__Lderived=(MDataMember*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataMember),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataMember),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataMember),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataValue))) {
     MDataValue *G__Lderived;
     G__Lderived=(MDataValue*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataValue),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataValue),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataValue),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataList))) {
     MDataList *G__Lderived;
     G__Lderived=(MDataList*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataList),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataList),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataList),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataChain))) {
     MDataChain *G__Lderived;
     G__Lderived=(MDataChain*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataChain),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataChain),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataChain),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataCintLN_MDataFormula))) {
     MDataFormula *G__Lderived;
     G__Lderived=(MDataFormula*)0x1000;
     {
       MData *G__Lpbase=(MData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataFormula),G__get_linked_tagnum(&G__DataCintLN_MData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataFormula),G__get_linked_tagnum(&G__DataCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataCintLN_MDataFormula),G__get_linked_tagnum(&G__DataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDataCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DataCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DataCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DataCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DataCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVector",117,G__get_linked_tagnum(&G__DataCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SignType_t",117,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),0,G__get_linked_tagnum(&G__DataCintLN_MDataList));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("OperatorType_t",117,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),0,G__get_linked_tagnum(&G__DataCintLN_MDataChain));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MData */
static void G__setup_memvarMData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MData));
   { MData *p; p=(MData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataPhrase */
static void G__setup_memvarMDataPhrase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase));
   { MDataPhrase *p; p=(MDataPhrase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TFormula),-1,-1,4,"fFormula=",0,"TFormula (its a pointer to be able to have no expression)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TObjArray),-1,-1,4,"fMembers=",0,"List of arguments");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_MArrayD),-1,-1,4,"fStorage=",0,"! Temporary storage used in GetValue (only!)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataArray */
static void G__setup_memvarMDataArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataArray));
   { MDataArray *p; p=(MDataArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TObjArray),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataElement */
static void G__setup_memvarMDataElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataElement));
   { MDataElement *p; p=(MDataElement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TString),-1,-1,4,"fMatrixName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_MHMatrix),-1,-1,4,"fMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataMember */
static void G__setup_memvarMDataMember(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataMember));
   { MDataMember *p; p=(MDataMember*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TString),-1,-1,4,"fDataMember=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_MParContainer),-1,-1,4,"fObject=",0,"! A pointer to the container from the paramater list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TMethodCall),-1,-1,4,"fCall=",0,"! The corresponding method call to the member function");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataMembercLcLdA),-1,-2,4,"kIsInt=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataValue */
static void G__setup_memvarMDataValue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataValue));
   { MDataValue *p; p=(MDataValue*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataList */
static void G__setup_memvarMDataList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataList));
   { MDataList *p; p=(MDataList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TOrdCollection),-1,-1,4,"fMembers=",0,"Container for the filters");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kENone=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEPlus=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEMinus=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEMult=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEDiv=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEModul=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),-1,-2,4,"kEPow=6LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLSignType_t),G__defined_typename("SignType_t"),-1,4,"fSign=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataListcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataChain */
static void G__setup_memvarMDataChain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataChain));
   { MDataChain *p; p=(MDataChain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_MData),-1,-1,4,"fMember=",0,"Filter");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kENoop=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kELog=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kELog2=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kELog10=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEAbs=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kESin=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kECos=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kETan=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kESinH=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kECosH=9LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kETanH=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEASin=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEACos=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEATan=13LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEASinH=14LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEACosH=15LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEATanH=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kESqrt=17LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kESqr=18LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEPow10=19LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEExp=20LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kESgn=21LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEPositive=22LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kENegative=23LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEFloor=24LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kECeil=25LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERound=26LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERad2Deg=27LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEDeg2Rad=28LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandom=29LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandomP=30LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandomE=31LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandomI=32LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandomG=33LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kERandomL=34LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEIsNaN=35LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),-1,-2,4,"kEFinite=36LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t),G__defined_typename("OperatorType_t"),-1,4,"fOperatorType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDataFormula */
static void G__setup_memvarMDataFormula(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataCintLN_MDataFormula));
   { MDataFormula *p; p=(MDataFormula*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TFormula),-1,-1,4,"fFormula=",0,"TFormula");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataCintLN_TOrdCollection),-1,-1,4,"fMembers=",0,"List of arguments");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDataCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMData(void) {
   /* MData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MData));
   G__memfunc_setup("GetValue",797,G__DataCint_172_0_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsValid",684,G__DataCint_172_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PreProcess",1030,G__DataCint_172_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRule",696,G__DataCint_172_0_4, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDataMember",1266,G__DataCint_172_0_5, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,G__DataCint_172_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AsciiWrite",1012,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_172_0_9, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_172_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_172_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_172_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_172_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_172_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_172_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_172_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_172_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MData", 581, G__DataCint_172_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataPhrase(void) {
   /* MDataPhrase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataPhrase));
   G__memfunc_setup("CheckForVariable",1579,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"u 'TString' - 11 - phrase i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Substitute",1084,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 8, 
"u 'TString' - 1 - phrase u 'TString' - 11 - expr "
"i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - phrase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataPhrase",1066,G__DataCint_177_0_4, 105, G__get_linked_tagnum(&G__DataCintLN_MDataPhrase), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' rule C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataPhrase",1066,G__DataCint_177_0_5, 105, G__get_linked_tagnum(&G__DataCintLN_MDataPhrase), -1, 0, 1, 1, 1, 0, "u 'MDataPhrase' - 1 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasValidRule",1188,G__DataCint_177_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Eval",392,G__DataCint_177_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eval",392,G__DataCint_177_0_14, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 '0' y "
"d - 'Double_t' 0 '0' z d - 'Double_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRuleRaw",994,G__DataCint_177_0_16, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBool",684,G__DataCint_177_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRule",708,G__DataCint_177_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - phrase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataCint_177_0_20, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataPhrase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_177_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataPhrase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_177_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataPhrase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_177_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataPhrase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_177_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_177_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataPhrase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_177_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataPhrase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_177_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataPhrase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_177_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataPhrase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataPhrase", 1192, G__DataCint_177_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataArray(void) {
   /* MDataArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataArray));
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MDataArray",966,G__DataCint_234_0_2, 105, G__get_linked_tagnum(&G__DataCintLN_MDataArray), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataArray",966,G__DataCint_234_0_3, 105, G__get_linked_tagnum(&G__DataCintLN_MDataArray), -1, 0, 3, 1, 1, 0, 
"u 'MDataArray' - 1 - a C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEntry",795,G__DataCint_234_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - rule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEntry",795,G__DataCint_234_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MData' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRule",793,G__DataCint_234_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "C - - 10 - rule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataCint_234_0_7, 117, G__get_linked_tagnum(&G__DataCintLN_MData), -1, 1, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DataCint_234_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__DataCint_234_0_9, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TVectorT<float>' 'TVector' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>>",1000,G__DataCint_234_0_10, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TVectorT<float>' 'TVector' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRule",696,G__DataCint_234_0_11, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,G__DataCint_234_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataMember",1266,G__DataCint_234_0_13, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("AsciiWrite",1012,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumEntries",1322,G__DataCint_234_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_234_0_20, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_234_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_234_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_234_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_234_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_234_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_234_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_234_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_234_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataArray", 1092, G__DataCint_234_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataElement(void) {
   /* MDataElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataElement));
   G__memfunc_setup("MDataElement",1169,G__DataCint_236_0_1, 105, G__get_linked_tagnum(&G__DataCintLN_MDataElement), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' member i - 'Int_t' 0 '-1' col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataElement",1169,G__DataCint_236_0_2, 105, G__get_linked_tagnum(&G__DataCintLN_MDataElement), -1, 0, 2, 1, 1, 0, 
"U 'MHMatrix' - 0 - mat i - 'Int_t' 0 '-1' col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,G__DataCint_236_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_236_0_10, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataElement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_236_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataElement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_236_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataElement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_236_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataElement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_236_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_236_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataElement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_236_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataElement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_236_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataElement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_236_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataElement::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataElement", 1295, G__DataCint_236_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataMember(void) {
   /* MDataMember */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataMember));
   G__memfunc_setup("CheckGet",766,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataMember",1055,G__DataCint_237_0_2, 105, G__get_linked_tagnum(&G__DataCintLN_MDataMember), -1, 0, 1, 1, 1, 0, "C - - 10 '0' member", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataMember",1055,G__DataCint_237_0_3, 105, G__get_linked_tagnum(&G__DataCintLN_MDataMember), -1, 0, 2, 1, 1, 0, 
"U 'MParContainer' - 0 - obj U 'TMethodCall' - 0 - call", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataMember",1055,G__DataCint_237_0_4, 105, G__get_linked_tagnum(&G__DataCintLN_MDataMember), -1, 0, 2, 1, 1, 0, 
"U 'MParContainer' - 0 - obj u 'TString' - 10 - call", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetString",919,G__DataCint_237_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataMember",1266,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInt",487,G__DataCint_237_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_237_0_14, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataMember::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_237_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataMember::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_237_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataMember::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_237_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataMember::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_237_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_237_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataMember::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_237_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataMember::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_237_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataMember::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_237_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataMember::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataMember", 1181, G__DataCint_237_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataValue(void) {
   /* MDataValue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataValue));
   G__memfunc_setup("MDataValue",964,G__DataCint_239_0_1, 105, G__get_linked_tagnum(&G__DataCintLN_MDataValue), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' v i - 'Int_t' 0 '-1' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_239_0_8, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataValue::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_239_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataValue::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_239_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataValue::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_239_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataValue::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_239_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_239_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataValue::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_239_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataValue::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_239_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataValue::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_239_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataValue::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataValue", 1090, G__DataCint_239_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataList(void) {
   /* MDataList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataList));
   G__memfunc_setup("MDataList",867,G__DataCint_243_0_1, 105, G__get_linked_tagnum(&G__DataCintLN_MDataList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataList",867,G__DataCint_243_0_2, 105, G__get_linked_tagnum(&G__DataCintLN_MDataList), -1, 0, 1, 1, 1, 0, "c - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataList",867,G__DataCint_243_0_3, 105, G__get_linked_tagnum(&G__DataCintLN_MDataList), -1, 0, 1, 1, 1, 0, "u 'MDataList' - 1 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__DataCint_243_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MData' - 0 - member", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOwner",823,G__DataCint_243_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", "{ return fMembers.GetSize() ? kTRUE : kFALSE; }", (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataMember",1266,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_243_0_13, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_243_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_243_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_243_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_243_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_243_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_243_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_243_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_243_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataList", 993, G__DataCint_243_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataChain(void) {
   /* MDataChain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataChain));
   G__memfunc_setup("ParseOperator",1351,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__DataCintLN_MDataChaincLcLOperatorType_t), G__defined_typename("MDataChain::OperatorType_t"), 0, 1, 1, 4, 8, "u 'TString' - 0 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAlNum",665,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "u 'TString' - 0 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBracket",988,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TString' - 0 - txt c - - 0 - open "
"c - - 0 - close", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimplifyString",1476,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TString' - 1 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParenthesis",1423,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TString' - 1 - test u 'TString' - 10 '\"^%*/+-\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseString",1138,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DataCintLN_MData), -1, 0, 2, 1, 4, 0, 
"u 'TString' - 0 - txt i - 'Int_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseDataMember",1485,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DataCintLN_MData), -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataChain",938,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__DataCintLN_MDataChain), -1, 0, 2, 1, 4, 0, 
"C - - 10 - rule u 'MDataChain::OperatorType_t' 'MDataChain::OperatorType_t' 0 - op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataChain",938,G__DataCint_246_0_9, 105, G__get_linked_tagnum(&G__DataCintLN_MDataChain), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' rule C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataMember",1266,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_246_0_18, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataChain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_246_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataChain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_246_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataChain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_246_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataChain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_246_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_246_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataChain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_246_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataChain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_246_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataChain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_246_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataChain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataChain", 1064, G__DataCint_246_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDataFormula(void) {
   /* MDataFormula */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataCintLN_MDataFormula));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 1, 1, 4, 0, "C - - 10 - rule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataFormula",1181,G__DataCint_248_0_2, 105, G__get_linked_tagnum(&G__DataCintLN_MDataFormula), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' rule C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDataFormula",1181,G__DataCint_248_0_3, 105, G__get_linked_tagnum(&G__DataCintLN_MDataFormula), -1, 0, 1, 1, 1, 0, "u 'MDataFormula' - 1 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", "{ return fFormula ? kTRUE : kFALSE; }", (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRule",696,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DataCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataCint_248_0_10, 85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDataFormula::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataCint_248_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataFormula::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataCint_248_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDataFormula::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataCint_248_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDataFormula::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataCint_248_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataCint_248_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataFormula::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataCint_248_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataFormula::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataCint_248_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDataFormula::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataCint_248_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDataFormula::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDataFormula", 1307, G__DataCint_248_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDataCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDataCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDataCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DataCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DataCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DataCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MData = { "MData" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MArrayD = { "MArrayD" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TFormula = { "TFormula" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataPhrase = { "MDataPhrase" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataArray = { "MDataArray" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MHMatrix = { "MHMatrix" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataElement = { "MDataElement" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataMember = { "MDataMember" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataMembercLcLdA = { "MDataMember::$" , 101 , -1 };
G__linked_taginfo G__DataCintLN_MDataValue = { "MDataValue" , 99 , -1 };
G__linked_taginfo G__DataCintLN_TOrdCollection = { "TOrdCollection" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataList = { "MDataList" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataListcLcLSignType_t = { "MDataList::SignType_t" , 101 , -1 };
G__linked_taginfo G__DataCintLN_MDataListcLcLdA = { "MDataList::$" , 101 , -1 };
G__linked_taginfo G__DataCintLN_MDataChain = { "MDataChain" , 99 , -1 };
G__linked_taginfo G__DataCintLN_MDataChaincLcLOperatorType_t = { "MDataChain::OperatorType_t" , 101 , -1 };
G__linked_taginfo G__DataCintLN_MDataFormula = { "MDataFormula" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDataCint() {
  G__DataCintLN_TClass.tagnum = -1 ;
  G__DataCintLN_TBuffer.tagnum = -1 ;
  G__DataCintLN_TMemberInspector.tagnum = -1 ;
  G__DataCintLN_TObject.tagnum = -1 ;
  G__DataCintLN_TString.tagnum = -1 ;
  G__DataCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataCintLN_TObjArray.tagnum = -1 ;
  G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DataCintLN_TEnv.tagnum = -1 ;
  G__DataCintLN_TArrayD.tagnum = -1 ;
  G__DataCintLN_TMethodCall.tagnum = -1 ;
  G__DataCintLN_MParContainer.tagnum = -1 ;
  G__DataCintLN_MParList.tagnum = -1 ;
  G__DataCintLN_MData.tagnum = -1 ;
  G__DataCintLN_MArrayD.tagnum = -1 ;
  G__DataCintLN_TFormula.tagnum = -1 ;
  G__DataCintLN_MDataPhrase.tagnum = -1 ;
  G__DataCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DataCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DataCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DataCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DataCintLN_MDataArray.tagnum = -1 ;
  G__DataCintLN_MHMatrix.tagnum = -1 ;
  G__DataCintLN_MDataElement.tagnum = -1 ;
  G__DataCintLN_MDataMember.tagnum = -1 ;
  G__DataCintLN_MDataMembercLcLdA.tagnum = -1 ;
  G__DataCintLN_MDataValue.tagnum = -1 ;
  G__DataCintLN_TOrdCollection.tagnum = -1 ;
  G__DataCintLN_MDataList.tagnum = -1 ;
  G__DataCintLN_MDataListcLcLSignType_t.tagnum = -1 ;
  G__DataCintLN_MDataListcLcLdA.tagnum = -1 ;
  G__DataCintLN_MDataChain.tagnum = -1 ;
  G__DataCintLN_MDataChaincLcLOperatorType_t.tagnum = -1 ;
  G__DataCintLN_MDataFormula.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDataCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DataCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TString);
   G__get_linked_tagnum_fwd(&G__DataCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__DataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TMethodCall);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MParList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MData),sizeof(MData),-1,323588,"A Base class for a generalized value",G__setup_memvarMData,G__setup_memfuncMData);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MArrayD);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TFormula);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataPhrase),sizeof(MDataPhrase),-1,325376,"MDataPhrase is basically a mapper for TFormula supporting Mars features",G__setup_memvarMDataPhrase,G__setup_memfuncMDataPhrase);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TVectorTlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataArray),sizeof(MDataArray),-1,324352,"An array of MData containers",G__setup_memvarMDataArray,G__setup_memfuncMDataArray);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MHMatrix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataElement),sizeof(MDataElement),-1,323840,"MData object corresponding to a element of an MHMatrix",G__setup_memvarMDataElement,G__setup_memfuncMDataElement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataMember),sizeof(MDataMember),-1,323840,"MData object corresponding to a single data member of a Mars container",G__setup_memvarMDataMember,G__setup_memfuncMDataMember);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MDataMembercLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataValue),sizeof(MDataValue),-1,323840,"MData object corresponding to a single value",G__setup_memvarMDataValue,G__setup_memfuncMDataValue);
   G__get_linked_tagnum_fwd(&G__DataCintLN_TOrdCollection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataList),sizeof(MDataList),-1,325376,"A concatenation of MData objects by one operator",G__setup_memvarMDataList,G__setup_memfuncMDataList);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MDataListcLcLSignType_t);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MDataListcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataChain),sizeof(MDataChain),-1,324864,"A chain/concatenation of MData objects",G__setup_memvarMDataChain,G__setup_memfuncMDataChain);
   G__get_linked_tagnum_fwd(&G__DataCintLN_MDataChaincLcLOperatorType_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataCintLN_MDataFormula),sizeof(MDataFormula),-1,325376,"A concatenation of MData objects by one operator",G__setup_memvarMDataFormula,G__setup_memfuncMDataFormula);
}
extern "C" void G__cpp_setupDataCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDataCint()");
  G__set_cpp_environmentDataCint();
  G__cpp_setup_tagtableDataCint();

  G__cpp_setup_inheritanceDataCint();

  G__cpp_setup_typetableDataCint();

  G__cpp_setup_memvarDataCint();

  G__cpp_setup_memfuncDataCint();
  G__cpp_setup_globalDataCint();
  G__cpp_setup_funcDataCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDataCint();
  return;
}
class G__cpp_setup_initDataCint {
  public:
    G__cpp_setup_initDataCint() { G__add_setup_func("DataCint",(G__incsetup)(&G__cpp_setupDataCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDataCint() { G__remove_setup_func("DataCint"); }
};
G__cpp_setup_initDataCint G__cpp_setup_initializerDataCint;

