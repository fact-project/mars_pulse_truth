//
// File generated by rootcint at Mon Nov 28 11:06:51 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME HftCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "HftCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MHexagonalFT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHexagonalFT(void *p = 0);
   static void *newArray_MHexagonalFT(Long_t size, void *p);
   static void delete_MHexagonalFT(void *p);
   static void deleteArray_MHexagonalFT(void *p);
   static void destruct_MHexagonalFT(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHexagonalFT*)
   {
      ::MHexagonalFT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHexagonalFT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHexagonalFT", ::MHexagonalFT::Class_Version(), "./MHexagonalFT.h", 18,
                  typeid(::MHexagonalFT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHexagonalFT::Dictionary, isa_proxy, 4,
                  sizeof(::MHexagonalFT) );
      instance.SetNew(&new_MHexagonalFT);
      instance.SetNewArray(&newArray_MHexagonalFT);
      instance.SetDelete(&delete_MHexagonalFT);
      instance.SetDeleteArray(&deleteArray_MHexagonalFT);
      instance.SetDestructor(&destruct_MHexagonalFT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHexagonalFT*)
   {
      return GenerateInitInstanceLocal((::MHexagonalFT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHexagonalFT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHexagonFreqSpace_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHexagonFreqSpace(void *p = 0);
   static void *newArray_MHexagonFreqSpace(Long_t size, void *p);
   static void delete_MHexagonFreqSpace(void *p);
   static void deleteArray_MHexagonFreqSpace(void *p);
   static void destruct_MHexagonFreqSpace(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHexagonFreqSpace*)
   {
      ::MHexagonFreqSpace *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHexagonFreqSpace >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHexagonFreqSpace", ::MHexagonFreqSpace::Class_Version(), "./MHexagonFreqSpace.h", 17,
                  typeid(::MHexagonFreqSpace), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHexagonFreqSpace::Dictionary, isa_proxy, 4,
                  sizeof(::MHexagonFreqSpace) );
      instance.SetNew(&new_MHexagonFreqSpace);
      instance.SetNewArray(&newArray_MHexagonFreqSpace);
      instance.SetDelete(&delete_MHexagonFreqSpace);
      instance.SetDeleteArray(&deleteArray_MHexagonFreqSpace);
      instance.SetDestructor(&destruct_MHexagonFreqSpace);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHexagonFreqSpace*)
   {
      return GenerateInitInstanceLocal((::MHexagonFreqSpace*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHexagonFreqSpace*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHexagonalFTCalc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHexagonalFTCalc(void *p = 0);
   static void *newArray_MHexagonalFTCalc(Long_t size, void *p);
   static void delete_MHexagonalFTCalc(void *p);
   static void deleteArray_MHexagonalFTCalc(void *p);
   static void destruct_MHexagonalFTCalc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHexagonalFTCalc*)
   {
      ::MHexagonalFTCalc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHexagonalFTCalc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHexagonalFTCalc", ::MHexagonalFTCalc::Class_Version(), "./MHexagonalFTCalc.h", 19,
                  typeid(::MHexagonalFTCalc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHexagonalFTCalc::Dictionary, isa_proxy, 4,
                  sizeof(::MHexagonalFTCalc) );
      instance.SetNew(&new_MHexagonalFTCalc);
      instance.SetNewArray(&newArray_MHexagonalFTCalc);
      instance.SetDelete(&delete_MHexagonalFTCalc);
      instance.SetDeleteArray(&deleteArray_MHexagonalFTCalc);
      instance.SetDestructor(&destruct_MHexagonalFTCalc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHexagonalFTCalc*)
   {
      return GenerateInitInstanceLocal((::MHexagonalFTCalc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHexagonalFTCalc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGeomCamMagicXT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MGeomCamMagicXT(void *p = 0);
   static void *newArray_MGeomCamMagicXT(Long_t size, void *p);
   static void delete_MGeomCamMagicXT(void *p);
   static void deleteArray_MGeomCamMagicXT(void *p);
   static void destruct_MGeomCamMagicXT(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGeomCamMagicXT*)
   {
      ::MGeomCamMagicXT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGeomCamMagicXT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGeomCamMagicXT", ::MGeomCamMagicXT::Class_Version(), "./MGeomCamMagicXT.h", 9,
                  typeid(::MGeomCamMagicXT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGeomCamMagicXT::Dictionary, isa_proxy, 4,
                  sizeof(::MGeomCamMagicXT) );
      instance.SetNew(&new_MGeomCamMagicXT);
      instance.SetNewArray(&newArray_MGeomCamMagicXT);
      instance.SetDelete(&delete_MGeomCamMagicXT);
      instance.SetDeleteArray(&deleteArray_MGeomCamMagicXT);
      instance.SetDestructor(&destruct_MGeomCamMagicXT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGeomCamMagicXT*)
   {
      return GenerateInitInstanceLocal((::MGeomCamMagicXT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGeomCamMagicXT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGeomCamMagicEnhance_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MGeomCamMagicEnhance(void *p = 0);
   static void *newArray_MGeomCamMagicEnhance(Long_t size, void *p);
   static void delete_MGeomCamMagicEnhance(void *p);
   static void deleteArray_MGeomCamMagicEnhance(void *p);
   static void destruct_MGeomCamMagicEnhance(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGeomCamMagicEnhance*)
   {
      ::MGeomCamMagicEnhance *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGeomCamMagicEnhance >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGeomCamMagicEnhance", ::MGeomCamMagicEnhance::Class_Version(), "./MGeomCamMagicEnhance.h", 12,
                  typeid(::MGeomCamMagicEnhance), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGeomCamMagicEnhance::Dictionary, isa_proxy, 4,
                  sizeof(::MGeomCamMagicEnhance) );
      instance.SetNew(&new_MGeomCamMagicEnhance);
      instance.SetNewArray(&newArray_MGeomCamMagicEnhance);
      instance.SetDelete(&delete_MGeomCamMagicEnhance);
      instance.SetDeleteArray(&deleteArray_MGeomCamMagicEnhance);
      instance.SetDestructor(&destruct_MGeomCamMagicEnhance);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGeomCamMagicEnhance*)
   {
      return GenerateInitInstanceLocal((::MGeomCamMagicEnhance*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGeomCamMagicEnhance*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MHexagonalFT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHexagonalFT::Class_Name()
{
   return "MHexagonalFT";
}

//______________________________________________________________________________
const char *MHexagonalFT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHexagonalFT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHexagonalFT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHexagonalFT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHexagonFreqSpace::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHexagonFreqSpace::Class_Name()
{
   return "MHexagonFreqSpace";
}

//______________________________________________________________________________
const char *MHexagonFreqSpace::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonFreqSpace*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHexagonFreqSpace::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonFreqSpace*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHexagonFreqSpace::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonFreqSpace*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHexagonFreqSpace::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonFreqSpace*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHexagonalFTCalc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHexagonalFTCalc::Class_Name()
{
   return "MHexagonalFTCalc";
}

//______________________________________________________________________________
const char *MHexagonalFTCalc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFTCalc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHexagonalFTCalc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFTCalc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHexagonalFTCalc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFTCalc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHexagonalFTCalc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagonalFTCalc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGeomCamMagicXT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGeomCamMagicXT::Class_Name()
{
   return "MGeomCamMagicXT";
}

//______________________________________________________________________________
const char *MGeomCamMagicXT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicXT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGeomCamMagicXT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicXT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGeomCamMagicXT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicXT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGeomCamMagicXT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicXT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGeomCamMagicEnhance::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGeomCamMagicEnhance::Class_Name()
{
   return "MGeomCamMagicEnhance";
}

//______________________________________________________________________________
const char *MGeomCamMagicEnhance::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicEnhance*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGeomCamMagicEnhance::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicEnhance*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGeomCamMagicEnhance::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicEnhance*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGeomCamMagicEnhance::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGeomCamMagicEnhance*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MHexagonalFT::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHexagonalFT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHexagonalFT::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHexagonalFT::Class(),this);
   }
}

//______________________________________________________________________________
void MHexagonalFT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHexagonalFT.
      TClass *R__cl = ::MHexagonalFT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumRows", &fNumRows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPsi", &fPsi);
      R__insp.InspectMember(fPsi, "fPsi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", &fM);
      R__insp.InspectMember(fM, "fM.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fK", &fK);
      R__insp.InspectMember(fK, "fK.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.InspectMember(fP, "fP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdx", &fIdx);
      R__insp.InspectMember(fIdx, "fIdx.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHexagonalFT(void *p) {
      return  p ? new(p) ::MHexagonalFT : new ::MHexagonalFT;
   }
   static void *newArray_MHexagonalFT(Long_t nElements, void *p) {
      return p ? new(p) ::MHexagonalFT[nElements] : new ::MHexagonalFT[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHexagonalFT(void *p) {
      delete ((::MHexagonalFT*)p);
   }
   static void deleteArray_MHexagonalFT(void *p) {
      delete [] ((::MHexagonalFT*)p);
   }
   static void destruct_MHexagonalFT(void *p) {
      typedef ::MHexagonalFT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHexagonalFT

//______________________________________________________________________________
void MHexagonalFTCalc::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHexagonalFTCalc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHexagonalFTCalc::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHexagonalFTCalc::Class(),this);
   }
}

//______________________________________________________________________________
void MHexagonalFTCalc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHexagonalFTCalc.
      TClass *R__cl = ::MHexagonalFTCalc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameGeomCam", &fNameGeomCam);
      R__insp.InspectMember(fNameGeomCam, "fNameGeomCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalCamIn", &fNameSignalCamIn);
      R__insp.InspectMember(fNameSignalCamIn, "fNameSignalCamIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalCamOut", &fNameSignalCamOut);
      R__insp.InspectMember(fNameSignalCamOut, "fNameSignalCamOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtIn", &fEvtIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtOut", &fEvtOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFreq1", &fFreq1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFreq2", &fFreq2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxAmplitude", &fMaxAmplitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxRowFraction", &fMaxRowFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSkipBwdTrafo", &fSkipBwdTrafo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHFT", &fHFT);
      R__insp.InspectMember(fHFT, "fHFT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", &fMap);
      R__insp.InspectMember(fMap, "fMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.InspectMember(fOffset, "fOffset.");
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHexagonalFTCalc(void *p) {
      return  p ? new(p) ::MHexagonalFTCalc : new ::MHexagonalFTCalc;
   }
   static void *newArray_MHexagonalFTCalc(Long_t nElements, void *p) {
      return p ? new(p) ::MHexagonalFTCalc[nElements] : new ::MHexagonalFTCalc[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHexagonalFTCalc(void *p) {
      delete ((::MHexagonalFTCalc*)p);
   }
   static void deleteArray_MHexagonalFTCalc(void *p) {
      delete [] ((::MHexagonalFTCalc*)p);
   }
   static void destruct_MHexagonalFTCalc(void *p) {
      typedef ::MHexagonalFTCalc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHexagonalFTCalc

//______________________________________________________________________________
void MHexagonFreqSpace::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHexagonFreqSpace.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHexagonFreqSpace::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHexagonFreqSpace::Class(),this);
   }
}

//______________________________________________________________________________
void MHexagonFreqSpace::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHexagonFreqSpace.
      TClass *R__cl = ::MHexagonFreqSpace::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataRe", &fDataRe);
      R__insp.InspectMember(fDataRe, "fDataRe.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataIm", &fDataIm);
      R__insp.InspectMember(fDataIm, "fDataIm.");
      MParContainer::ShowMembers(R__insp);
      MCamEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHexagonFreqSpace(void *p) {
      return  p ? new(p) ::MHexagonFreqSpace : new ::MHexagonFreqSpace;
   }
   static void *newArray_MHexagonFreqSpace(Long_t nElements, void *p) {
      return p ? new(p) ::MHexagonFreqSpace[nElements] : new ::MHexagonFreqSpace[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHexagonFreqSpace(void *p) {
      delete ((::MHexagonFreqSpace*)p);
   }
   static void deleteArray_MHexagonFreqSpace(void *p) {
      delete [] ((::MHexagonFreqSpace*)p);
   }
   static void destruct_MHexagonFreqSpace(void *p) {
      typedef ::MHexagonFreqSpace current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHexagonFreqSpace

//______________________________________________________________________________
void MGeomCamMagicXT::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGeomCamMagicXT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGeomCamMagicXT::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGeomCamMagicXT::Class(),this);
   }
}

//______________________________________________________________________________
void MGeomCamMagicXT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGeomCamMagicXT.
      TClass *R__cl = ::MGeomCamMagicXT::IsA();
      if (R__cl || R__insp.IsA()) { }
      MGeomCamDwarf::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MGeomCamMagicXT(void *p) {
      return  p ? new(p) ::MGeomCamMagicXT : new ::MGeomCamMagicXT;
   }
   static void *newArray_MGeomCamMagicXT(Long_t nElements, void *p) {
      return p ? new(p) ::MGeomCamMagicXT[nElements] : new ::MGeomCamMagicXT[nElements];
   }
   // Wrapper around operator delete
   static void delete_MGeomCamMagicXT(void *p) {
      delete ((::MGeomCamMagicXT*)p);
   }
   static void deleteArray_MGeomCamMagicXT(void *p) {
      delete [] ((::MGeomCamMagicXT*)p);
   }
   static void destruct_MGeomCamMagicXT(void *p) {
      typedef ::MGeomCamMagicXT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MGeomCamMagicXT

//______________________________________________________________________________
void MGeomCamMagicEnhance::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGeomCamMagicEnhance.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGeomCamMagicEnhance::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGeomCamMagicEnhance::Class(),this);
   }
}

//______________________________________________________________________________
void MGeomCamMagicEnhance::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGeomCamMagicEnhance.
      TClass *R__cl = ::MGeomCamMagicEnhance::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalCamIn", &fNameSignalCamIn);
      R__insp.InspectMember(fNameSignalCamIn, "fNameSignalCamIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalCamOut", &fNameSignalCamOut);
      R__insp.InspectMember(fNameSignalCamOut, "fNameSignalCamOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtIn", &fEvtIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtOut", &fEvtOut);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MGeomCamMagicEnhance(void *p) {
      return  p ? new(p) ::MGeomCamMagicEnhance : new ::MGeomCamMagicEnhance;
   }
   static void *newArray_MGeomCamMagicEnhance(Long_t nElements, void *p) {
      return p ? new(p) ::MGeomCamMagicEnhance[nElements] : new ::MGeomCamMagicEnhance[nElements];
   }
   // Wrapper around operator delete
   static void delete_MGeomCamMagicEnhance(void *p) {
      delete ((::MGeomCamMagicEnhance*)p);
   }
   static void deleteArray_MGeomCamMagicEnhance(void *p) {
      delete [] ((::MGeomCamMagicEnhance*)p);
   }
   static void destruct_MGeomCamMagicEnhance(void *p) {
      typedef ::MGeomCamMagicEnhance current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MGeomCamMagicEnhance

/********************************************************
* HftCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableHftCint();

extern "C" void G__set_cpp_environmentHftCint() {
  G__cpp_reset_tagtableHftCint();
}
#include <new>
extern "C" int G__cpp_dllrevHftCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MHexagonalFT */
static int G__HftCint_167_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagonalFT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonalFT[n];
     } else {
       p = new((void*) gvp) MHexagonalFT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonalFT;
     } else {
       p = new((void*) gvp) MHexagonalFT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagonalFT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MHexagonalFT((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MHexagonalFT((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFT*) G__getstructoffset())->Prepare((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHexagonalFT*) G__getstructoffset())->TransformFastFWD(*(MArrayD*) libp->para[0].ref, *(MArrayD*) libp->para[1].ref
, *(MArrayD*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHexagonalFT*) G__getstructoffset())->TransformFastBWD(*(MArrayD*) libp->para[0].ref, *(MArrayD*) libp->para[1].ref
, *(MArrayD*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MHexagonalFT*) G__getstructoffset())->TransformSlow(*(MArrayD*) libp->para[0].ref, *(MArrayD*) libp->para[1].ref
, *(MArrayD*) libp->para[2].ref, *(MArrayD*) libp->para[3].ref
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MHexagonalFT*) G__getstructoffset())->TransformSlow(*(MArrayD*) libp->para[0].ref, *(MArrayD*) libp->para[1].ref
, *(MArrayD*) libp->para[2].ref, *(MArrayD*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHexagonalFT*) G__getstructoffset())->GetNumKnots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHexagonalFT*) G__getstructoffset())->GetNumRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHexagonalFT*) G__getstructoffset())->M((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MHexagonalFT*) G__getstructoffset())->K((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MHexagonalFT*) G__getstructoffset())->GetRow((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MHexagonalFT*) G__getstructoffset())->GetCol((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHexagonalFT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHexagonalFT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHexagonalFT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonalFT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonalFT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HftCint_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MHexagonalFT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MHexagonalFT(*(MHexagonalFT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHexagonalFT G__TMHexagonalFT;
static int G__HftCint_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHexagonalFT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHexagonalFT*) (soff+(sizeof(MHexagonalFT)*i)))->~G__TMHexagonalFT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHexagonalFT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHexagonalFT*) (soff))->~G__TMHexagonalFT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HftCint_167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagonalFT* dest = (MHexagonalFT*) G__getstructoffset();
   *dest = *(MHexagonalFT*) libp->para[0].ref;
   const MHexagonalFT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHexagonFreqSpace */
static int G__HftCint_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagonFreqSpace* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonFreqSpace((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHexagonFreqSpace((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonFreqSpace((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHexagonFreqSpace((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHexagonFreqSpace[n];
       } else {
         p = new((void*) gvp) MHexagonFreqSpace[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHexagonFreqSpace;
       } else {
         p = new((void*) gvp) MHexagonFreqSpace;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonFreqSpace*) G__getstructoffset())->Set(*(MArrayD*) libp->para[0].ref, *(MArrayD*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MHexagonFreqSpace*) G__getstructoffset())->GetAbs((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHexagonFreqSpace::NewGeomCam((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHexagonFreqSpace*) G__getstructoffset())->NewGeomCam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHexagonFreqSpace::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonFreqSpace::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHexagonFreqSpace::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHexagonFreqSpace::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonFreqSpace*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonFreqSpace::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonFreqSpace::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonFreqSpace::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonFreqSpace::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHexagonFreqSpace G__TMHexagonFreqSpace;
static int G__HftCint_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHexagonFreqSpace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHexagonFreqSpace*) (soff+(sizeof(MHexagonFreqSpace)*i)))->~G__TMHexagonFreqSpace();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHexagonFreqSpace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHexagonFreqSpace*) (soff))->~G__TMHexagonFreqSpace();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHexagonalFTCalc */
static int G__HftCint_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagonalFTCalc* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonalFTCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHexagonalFTCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagonalFTCalc((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHexagonalFTCalc((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHexagonalFTCalc[n];
       } else {
         p = new((void*) gvp) MHexagonalFTCalc[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHexagonalFTCalc;
       } else {
         p = new((void*) gvp) MHexagonalFTCalc;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHexagonalFTCalc*) G__getstructoffset())->SetSkipBwdTrafo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHexagonalFTCalc*) G__getstructoffset())->SetSkipBwdTrafo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MHexagonalFT& obj = ((const MHexagonalFTCalc*) G__getstructoffset())->GetHFT();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFTCalc*) G__getstructoffset())->SetNameGeomCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFTCalc*) G__getstructoffset())->SetNameSignalCamIn((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MHexagonalFTCalc*) G__getstructoffset())->SetNameSignalCamOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MHexagonalFTCalc*) G__getstructoffset())->SetNameSignalCamOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFTCalc*) G__getstructoffset())->SetMaxAmplitude((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFTCalc*) G__getstructoffset())->SetMaxRowFraction((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHexagonalFTCalc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFTCalc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHexagonalFTCalc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHexagonalFTCalc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagonalFTCalc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFTCalc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonalFTCalc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagonalFTCalc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_186_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagonalFTCalc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHexagonalFTCalc G__TMHexagonalFTCalc;
static int G__HftCint_186_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHexagonalFTCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHexagonalFTCalc*) (soff+(sizeof(MHexagonalFTCalc)*i)))->~G__TMHexagonalFTCalc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHexagonalFTCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHexagonalFTCalc*) (soff))->~G__TMHexagonalFTCalc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGeomCamMagicXT */
static int G__HftCint_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGeomCamMagicXT* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGeomCamMagicXT((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MGeomCamMagicXT((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGeomCamMagicXT[n];
       } else {
         p = new((void*) gvp) MGeomCamMagicXT[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGeomCamMagicXT;
       } else {
         p = new((void*) gvp) MGeomCamMagicXT;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGeomCamMagicXT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicXT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGeomCamMagicXT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGeomCamMagicXT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGeomCamMagicXT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicXT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGeomCamMagicXT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicXT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGeomCamMagicXT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGeomCamMagicXT G__TMGeomCamMagicXT;
static int G__HftCint_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGeomCamMagicXT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGeomCamMagicXT*) (soff+(sizeof(MGeomCamMagicXT)*i)))->~G__TMGeomCamMagicXT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGeomCamMagicXT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGeomCamMagicXT*) (soff))->~G__TMGeomCamMagicXT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGeomCamMagicEnhance */
static int G__HftCint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGeomCamMagicEnhance* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGeomCamMagicEnhance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MGeomCamMagicEnhance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGeomCamMagicEnhance((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MGeomCamMagicEnhance((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGeomCamMagicEnhance[n];
       } else {
         p = new((void*) gvp) MGeomCamMagicEnhance[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGeomCamMagicEnhance;
       } else {
         p = new((void*) gvp) MGeomCamMagicEnhance;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGeomCamMagicEnhance*) G__getstructoffset())->SetNameSignalCamIn((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGeomCamMagicEnhance*) G__getstructoffset())->SetNameSignalCamOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGeomCamMagicEnhance::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicEnhance::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGeomCamMagicEnhance::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGeomCamMagicEnhance::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGeomCamMagicEnhance*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicEnhance::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGeomCamMagicEnhance::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGeomCamMagicEnhance::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HftCint_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGeomCamMagicEnhance::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGeomCamMagicEnhance G__TMGeomCamMagicEnhance;
static int G__HftCint_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGeomCamMagicEnhance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGeomCamMagicEnhance*) (soff+(sizeof(MGeomCamMagicEnhance)*i)))->~G__TMGeomCamMagicEnhance();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGeomCamMagicEnhance*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGeomCamMagicEnhance*) (soff))->~G__TMGeomCamMagicEnhance();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MHexagonalFT */

/* MHexagonFreqSpace */

/* MHexagonalFTCalc */

/* MGeomCamMagicXT */

/* MGeomCamMagicEnhance */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncHftCint {
 public:
  G__Sizep2memfuncHftCint(): p(&G__Sizep2memfuncHftCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncHftCint::*p)();
};

size_t G__get_sizep2memfuncHftCint()
{
  G__Sizep2memfuncHftCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceHftCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT))) {
     MHexagonalFT *G__Lderived;
     G__Lderived=(MHexagonalFT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT),G__get_linked_tagnum(&G__HftCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace))) {
     MHexagonFreqSpace *G__Lderived;
     G__Lderived=(MHexagonFreqSpace*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace),G__get_linked_tagnum(&G__HftCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace),G__get_linked_tagnum(&G__HftCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MCamEvent *G__Lpbase=(MCamEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace),G__get_linked_tagnum(&G__HftCintLN_MCamEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc))) {
     MHexagonalFTCalc *G__Lderived;
     G__Lderived=(MHexagonalFTCalc*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc),G__get_linked_tagnum(&G__HftCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc),G__get_linked_tagnum(&G__HftCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc),G__get_linked_tagnum(&G__HftCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc),G__get_linked_tagnum(&G__HftCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT))) {
     MGeomCamMagicXT *G__Lderived;
     G__Lderived=(MGeomCamMagicXT*)0x1000;
     {
       MGeomCamDwarf *G__Lpbase=(MGeomCamDwarf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT),G__get_linked_tagnum(&G__HftCintLN_MGeomCamDwarf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MGeomCam *G__Lpbase=(MGeomCam*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT),G__get_linked_tagnum(&G__HftCintLN_MGeomCam),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT),G__get_linked_tagnum(&G__HftCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT),G__get_linked_tagnum(&G__HftCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance))) {
     MGeomCamMagicEnhance *G__Lderived;
     G__Lderived=(MGeomCamMagicEnhance*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance),G__get_linked_tagnum(&G__HftCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance),G__get_linked_tagnum(&G__HftCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance),G__get_linked_tagnum(&G__HftCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance),G__get_linked_tagnum(&G__HftCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableHftCint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HftCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HftCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HftCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HftCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__HftCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__HftCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MHexagonalFT */
static void G__setup_memvarMHexagonalFT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT));
   { MHexagonalFT *p; p=(MHexagonalFT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumRows=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayF),-1,-1,4,"fPsi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayI),-1,-1,4,"fM=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayI),-1,-1,4,"fK=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayF),-1,-1,4,"fP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayI),-1,-1,4,"fIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHexagonFreqSpace */
static void G__setup_memvarMHexagonFreqSpace(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace));
   { MHexagonFreqSpace *p; p=(MHexagonFreqSpace*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayD),-1,-1,4,"fDataRe=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayD),-1,-1,4,"fDataIm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHexagonalFTCalc */
static void G__setup_memvarMHexagonalFTCalc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc));
   { MHexagonalFTCalc *p; p=(MHexagonalFTCalc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNameGeomCam=",0,"Default name of used geometry");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNameSignalCamIn=",0,"Default name of used input MSignalCam");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNameSignalCamOut=",0,"Default name of used output MSignalCam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_TString),-1,-1,4,"fNameGeomCam=",0,"name of used geometry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_TString),-1,-1,4,"fNameSignalCamIn=",0,"name of used input MSignalCam");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_TString),-1,-1,4,"fNameSignalCamOut=",0,"name of used output MSignalCam");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MSignalCam),-1,-1,4,"fEvtIn=",0,"input MSignalCam");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MSignalCam),-1,-1,4,"fEvtOut=",0,"output MSignalCam");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace),-1,-1,4,"fFreq1=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace),-1,-1,4,"fFreq2=",0,"!");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMaxAmplitude=",0,"Maximum amplitude to cut");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMaxRowFraction=",0,"Maximum fraction of rows (frequency space) to remove");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSkipBwdTrafo=",0,"flag whether backward trafo should be done");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT),-1,-1,4,"fHFT=",0,"Fourier transformation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayI),-1,-1,4,"fMap=",0,"! Pixel mapping between space space and frequency space");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_MArrayD),-1,-1,4,"fOffset=",0,"! Fourier transformation of a constant 1 for all 'valid' pixels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGeomCamMagicXT */
static void G__setup_memvarMGeomCamMagicXT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT));
   { MGeomCamMagicXT *p; p=(MGeomCamMagicXT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGeomCamMagicEnhance */
static void G__setup_memvarMGeomCamMagicEnhance(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance));
   { MGeomCamMagicEnhance *p; p=(MGeomCamMagicEnhance*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNameSignalCamIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNameSignalCamOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_TString),-1,-1,4,"fNameSignalCamIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HftCintLN_TString),-1,-1,4,"fNameSignalCamOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MSignalCam),-1,-1,4,"fEvtIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_MSignalCam),-1,-1,4,"fEvtOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HftCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarHftCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMHexagonalFT(void) {
   /* MHexagonalFT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT));
   G__memfunc_setup("Delta",490,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 8, "i - - 0 - i", "Delta(i) = kronecker(i%(fNumRows-1), 0)", (void*) NULL, 0);
   G__memfunc_setup("P",80,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 8, 
"i - - 0 - j i - - 0 - n", "Definition of P(i,j) see paper", (void*) NULL, 0);
   G__memfunc_setup("MHexagonalFT",1150,G__HftCint_167_0_3, 105, G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHexagonalFT",1150,G__HftCint_167_0_4, 105, G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prepare",719,G__HftCint_167_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransformFastFWD",1579,G__HftCint_167_0_6, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'MArrayD' - 11 - inre u 'MArrayD' - 1 - outre "
"u 'MArrayD' - 1 - outim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransformFastBWD",1575,G__HftCint_167_0_7, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'MArrayD' - 11 - inre u 'MArrayD' - 11 - inim "
"u 'MArrayD' - 1 - outre", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransformSlow",1377,G__HftCint_167_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'MArrayD' - 11 - inre u 'MArrayD' - 11 - inim "
"u 'MArrayD' - 1 - outre u 'MArrayD' - 1 - outim "
"g - 'Bool_t' 0 'kTRUE' fwd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumKnots",1119,G__HftCint_167_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "Return number of knots in triangle", (void*) NULL, 0);
   G__memfunc_setup("GetNumRows",1019,G__HftCint_167_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "return number of rows in triangle", (void*) NULL, 0);
   G__memfunc_setup("M",77,G__HftCint_167_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 - i", "return m-axis-index of absolute index i", (void*) NULL, 0);
   G__memfunc_setup("K",75,G__HftCint_167_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 - i", "return k-axis-index of absolute index i", (void*) NULL, 0);
   G__memfunc_setup("GetRow",600,G__HftCint_167_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 - i", "return row-index of absolute index i", (void*) NULL, 0);
   G__memfunc_setup("GetCol",574,G__HftCint_167_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 - i", "return col-index of absolute index i", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HftCint_167_0_15, 85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHexagonalFT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HftCint_167_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HftCint_167_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHexagonalFT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HftCint_167_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHexagonalFT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HftCint_167_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HftCint_167_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HftCint_167_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonalFT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HftCint_167_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HftCint_167_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonalFT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MHexagonalFT", 1150, G__HftCint_167_0_27, (int) ('i'), G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT), -1, 0, 1, 1, 1, 0, "u 'MHexagonalFT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MHexagonalFT", 1276, G__HftCint_167_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HftCint_167_0_29, (int) ('u'), G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT), -1, 1, 1, 1, 1, 0, "u 'MHexagonalFT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHexagonFreqSpace(void) {
   /* MHexagonFreqSpace */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace));
   G__memfunc_setup("MHexagonFreqSpace",1681,G__HftCint_185_0_1, 105, G__get_linked_tagnum(&G__HftCintLN_MHexagonFreqSpace), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__HftCint_185_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MArrayD' - 11 - re u 'MArrayD' - 11 - im", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbs",566,G__HftCint_185_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewGeomCam",963,G__HftCint_185_0_4, 85, G__get_linked_tagnum(&G__HftCintLN_MGeomCam), -1, 0, 1, 3, 1, 0, "r - 'UShort_t' 0 - num", (char*)NULL, (void*) G__func2void( (MGeomCam* (*)(UShort_t))(&MHexagonFreqSpace::NewGeomCam) ), 0);
   G__memfunc_setup("NewGeomCam",963,G__HftCint_185_0_5, 85, G__get_linked_tagnum(&G__HftCintLN_MGeomCam), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixelContent",1533,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPixelContent",1643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HftCint_185_0_8, 85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHexagonFreqSpace::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HftCint_185_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonFreqSpace::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HftCint_185_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHexagonFreqSpace::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HftCint_185_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHexagonFreqSpace::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HftCint_185_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HftCint_185_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonFreqSpace::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HftCint_185_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonFreqSpace::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HftCint_185_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonFreqSpace::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HftCint_185_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonFreqSpace::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHexagonFreqSpace", 1807, G__HftCint_185_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHexagonalFTCalc(void) {
   /* MHexagonalFTCalc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CleanFreqSpace",1373,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'MArrayD' - 1 - re u 'MArrayD' - 1 - im", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHexagonalFTCalc",1521,G__HftCint_186_0_4, 105, G__get_linked_tagnum(&G__HftCintLN_MHexagonalFTCalc), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSkipBwdTrafo",1500,G__HftCint_186_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "Don't do a backward transoformation", (void*) NULL, 0);
   G__memfunc_setup("GetHFT",514,G__HftCint_186_0_6, 117, G__get_linked_tagnum(&G__HftCintLN_MHexagonalFT), -1, 1, 0, 1, 1, 9, "", "return the MHexagonalFT object used", (void*) NULL, 0);
   G__memfunc_setup("SetNameGeomCam",1350,G__HftCint_186_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", "name of camera geometry used ", (void*) NULL, 0);
   G__memfunc_setup("SetNameSignalCamIn",1747,G__HftCint_186_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", "name of input MSignalCam used", (void*) NULL, 0);
   G__memfunc_setup("SetNameSignalCamOut",1876,G__HftCint_186_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' n", "name of ouput MSignalCam used", (void*) NULL, 0);
   G__memfunc_setup("SetMaxAmplitude",1527,G__HftCint_186_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - max", "amplitude to cut at", (void*) NULL, 0);
   G__memfunc_setup("SetMaxRowFraction",1728,G__HftCint_186_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - max", "row (frequency) to cut at", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HftCint_186_0_12, 85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHexagonalFTCalc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HftCint_186_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFTCalc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HftCint_186_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHexagonalFTCalc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HftCint_186_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHexagonalFTCalc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HftCint_186_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HftCint_186_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFTCalc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HftCint_186_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonalFTCalc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HftCint_186_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagonalFTCalc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HftCint_186_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagonalFTCalc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHexagonalFTCalc", 1647, G__HftCint_186_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGeomCamMagicXT(void) {
   /* MGeomCamMagicXT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT));
   G__memfunc_setup("MGeomCamMagicXT",1395,G__HftCint_233_0_1, 105, G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicXT), -1, 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HftCint_233_0_2, 85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGeomCamMagicXT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HftCint_233_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicXT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HftCint_233_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGeomCamMagicXT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HftCint_233_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGeomCamMagicXT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HftCint_233_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HftCint_233_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicXT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HftCint_233_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGeomCamMagicXT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HftCint_233_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicXT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HftCint_233_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGeomCamMagicXT::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MGeomCamMagicXT", 1521, G__HftCint_233_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGeomCamMagicEnhance(void) {
   /* MGeomCamMagicEnhance */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance));
   G__memfunc_setup("Convert",737,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__HftCintLN_MArrayD), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CleanFreqSpace",1373,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'MArrayD' - 1 - re u 'MArrayD' - 1 - im", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MGeomCamMagicEnhance",1913,G__HftCint_234_0_5, 105, G__get_linked_tagnum(&G__HftCintLN_MGeomCamMagicEnhance), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameSignalCamIn",1747,G__HftCint_234_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameSignalCamOut",1876,G__HftCint_234_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HftCint_234_0_8, 85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGeomCamMagicEnhance::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HftCint_234_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicEnhance::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HftCint_234_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGeomCamMagicEnhance::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HftCint_234_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGeomCamMagicEnhance::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HftCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HftCint_234_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HftCint_234_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicEnhance::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HftCint_234_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGeomCamMagicEnhance::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HftCint_234_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGeomCamMagicEnhance::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HftCint_234_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGeomCamMagicEnhance::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MGeomCamMagicEnhance", 2039, G__HftCint_234_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncHftCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalHftCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcHftCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__HftCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__HftCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__HftCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__HftCintLN_MArrayF = { "MArrayF" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MArrayI = { "MArrayI" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MArrayD = { "MArrayD" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MHexagonalFT = { "MHexagonalFT" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MSignalCam = { "MSignalCam" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MHexagonFreqSpace = { "MHexagonFreqSpace" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MHexagonalFTCalc = { "MHexagonalFTCalc" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MCamEvent = { "MCamEvent" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MGeomCamDwarf = { "MGeomCamDwarf" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MGeomCamMagicXT = { "MGeomCamMagicXT" , 99 , -1 };
G__linked_taginfo G__HftCintLN_MGeomCamMagicEnhance = { "MGeomCamMagicEnhance" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableHftCint() {
  G__HftCintLN_TClass.tagnum = -1 ;
  G__HftCintLN_TBuffer.tagnum = -1 ;
  G__HftCintLN_TMemberInspector.tagnum = -1 ;
  G__HftCintLN_TObject.tagnum = -1 ;
  G__HftCintLN_TString.tagnum = -1 ;
  G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__HftCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__HftCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__HftCintLN_MArrayF.tagnum = -1 ;
  G__HftCintLN_MArrayI.tagnum = -1 ;
  G__HftCintLN_MArrayD.tagnum = -1 ;
  G__HftCintLN_MGeomCam.tagnum = -1 ;
  G__HftCintLN_MHexagonalFT.tagnum = -1 ;
  G__HftCintLN_MParContainer.tagnum = -1 ;
  G__HftCintLN_MInputStreamID.tagnum = -1 ;
  G__HftCintLN_MParList.tagnum = -1 ;
  G__HftCintLN_MTask.tagnum = -1 ;
  G__HftCintLN_MSignalCam.tagnum = -1 ;
  G__HftCintLN_MHexagonFreqSpace.tagnum = -1 ;
  G__HftCintLN_MHexagonalFTCalc.tagnum = -1 ;
  G__HftCintLN_MCamEvent.tagnum = -1 ;
  G__HftCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__HftCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__HftCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__HftCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__HftCintLN_MGeomCamDwarf.tagnum = -1 ;
  G__HftCintLN_MGeomCamMagicXT.tagnum = -1 ;
  G__HftCintLN_MGeomCamMagicEnhance.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableHftCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__HftCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TString);
   G__get_linked_tagnum_fwd(&G__HftCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MArrayF);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MArrayI);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MArrayD);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MGeomCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HftCintLN_MHexagonalFT),sizeof(MHexagonalFT),-1,323840,"general hexagonal fourier transformation",G__setup_memvarMHexagonalFT,G__setup_memfuncMHexagonalFT);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MSignalCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HftCintLN_MHexagonFreqSpace),sizeof(MHexagonFreqSpace),-1,324864,"Generalized storage class for camera data in hexagonal frequency space (triangle)",G__setup_memvarMHexagonFreqSpace,G__setup_memfuncMHexagonFreqSpace);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HftCintLN_MHexagonalFTCalc),sizeof(MHexagonalFTCalc),-1,323840,"Task to calculate Hexagonal Fourier Transformation",G__setup_memvarMHexagonalFTCalc,G__setup_memfuncMHexagonalFTCalc);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MCamEvent);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__HftCintLN_MGeomCamDwarf);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HftCintLN_MGeomCamMagicXT),sizeof(MGeomCamMagicXT),-1,323840,"Geometry class for the 'extended' Magic camera",G__setup_memvarMGeomCamMagicXT,G__setup_memfuncMGeomCamMagicXT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HftCintLN_MGeomCamMagicEnhance),sizeof(MGeomCamMagicEnhance),-1,323840,"Task to convert MSignalCam from MGeomCamMagic to MGeomCamMagicXT",G__setup_memvarMGeomCamMagicEnhance,G__setup_memfuncMGeomCamMagicEnhance);
}
extern "C" void G__cpp_setupHftCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupHftCint()");
  G__set_cpp_environmentHftCint();
  G__cpp_setup_tagtableHftCint();

  G__cpp_setup_inheritanceHftCint();

  G__cpp_setup_typetableHftCint();

  G__cpp_setup_memvarHftCint();

  G__cpp_setup_memfuncHftCint();
  G__cpp_setup_globalHftCint();
  G__cpp_setup_funcHftCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncHftCint();
  return;
}
class G__cpp_setup_initHftCint {
  public:
    G__cpp_setup_initHftCint() { G__add_setup_func("HftCint",(G__incsetup)(&G__cpp_setupHftCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initHftCint() { G__remove_setup_func("HftCint"); }
};
G__cpp_setup_initHftCint G__cpp_setup_initializerHftCint;

