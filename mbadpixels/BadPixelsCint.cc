//
// File generated by rootcint at Mon Nov 28 11:05:57 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BadPixelsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BadPixelsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MBadPixelsPix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MBadPixelsPix(void *p = 0);
   static void *newArray_MBadPixelsPix(Long_t size, void *p);
   static void delete_MBadPixelsPix(void *p);
   static void deleteArray_MBadPixelsPix(void *p);
   static void destruct_MBadPixelsPix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBadPixelsPix*)
   {
      ::MBadPixelsPix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MBadPixelsPix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MBadPixelsPix", ::MBadPixelsPix::Class_Version(), "./MBadPixelsPix.h", 13,
                  typeid(::MBadPixelsPix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MBadPixelsPix::Dictionary, isa_proxy, 4,
                  sizeof(::MBadPixelsPix) );
      instance.SetNew(&new_MBadPixelsPix);
      instance.SetNewArray(&newArray_MBadPixelsPix);
      instance.SetDelete(&delete_MBadPixelsPix);
      instance.SetDeleteArray(&deleteArray_MBadPixelsPix);
      instance.SetDestructor(&destruct_MBadPixelsPix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBadPixelsPix*)
   {
      return GenerateInitInstanceLocal((::MBadPixelsPix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBadPixelsPix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MBadPixelsCam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MBadPixelsCam(void *p = 0);
   static void *newArray_MBadPixelsCam(Long_t size, void *p);
   static void delete_MBadPixelsCam(void *p);
   static void deleteArray_MBadPixelsCam(void *p);
   static void destruct_MBadPixelsCam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBadPixelsCam*)
   {
      ::MBadPixelsCam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MBadPixelsCam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MBadPixelsCam", ::MBadPixelsCam::Class_Version(), "./MBadPixelsCam.h", 20,
                  typeid(::MBadPixelsCam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MBadPixelsCam::Dictionary, isa_proxy, 4,
                  sizeof(::MBadPixelsCam) );
      instance.SetNew(&new_MBadPixelsCam);
      instance.SetNewArray(&newArray_MBadPixelsCam);
      instance.SetDelete(&delete_MBadPixelsCam);
      instance.SetDeleteArray(&deleteArray_MBadPixelsCam);
      instance.SetDestructor(&destruct_MBadPixelsCam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBadPixelsCam*)
   {
      return GenerateInitInstanceLocal((::MBadPixelsCam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBadPixelsCam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MBadPixelsMerge_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MBadPixelsMerge(void *p);
   static void deleteArray_MBadPixelsMerge(void *p);
   static void destruct_MBadPixelsMerge(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBadPixelsMerge*)
   {
      ::MBadPixelsMerge *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MBadPixelsMerge >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MBadPixelsMerge", ::MBadPixelsMerge::Class_Version(), "./MBadPixelsMerge.h", 11,
                  typeid(::MBadPixelsMerge), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MBadPixelsMerge::Dictionary, isa_proxy, 4,
                  sizeof(::MBadPixelsMerge) );
      instance.SetDelete(&delete_MBadPixelsMerge);
      instance.SetDeleteArray(&deleteArray_MBadPixelsMerge);
      instance.SetDestructor(&destruct_MBadPixelsMerge);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBadPixelsMerge*)
   {
      return GenerateInitInstanceLocal((::MBadPixelsMerge*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBadPixelsMerge*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MBadPixelsCalc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MBadPixelsCalc(void *p = 0);
   static void *newArray_MBadPixelsCalc(Long_t size, void *p);
   static void delete_MBadPixelsCalc(void *p);
   static void deleteArray_MBadPixelsCalc(void *p);
   static void destruct_MBadPixelsCalc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBadPixelsCalc*)
   {
      ::MBadPixelsCalc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MBadPixelsCalc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MBadPixelsCalc", ::MBadPixelsCalc::Class_Version(), "./MBadPixelsCalc.h", 17,
                  typeid(::MBadPixelsCalc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MBadPixelsCalc::Dictionary, isa_proxy, 4,
                  sizeof(::MBadPixelsCalc) );
      instance.SetNew(&new_MBadPixelsCalc);
      instance.SetNewArray(&newArray_MBadPixelsCalc);
      instance.SetDelete(&delete_MBadPixelsCalc);
      instance.SetDeleteArray(&deleteArray_MBadPixelsCalc);
      instance.SetDestructor(&destruct_MBadPixelsCalc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBadPixelsCalc*)
   {
      return GenerateInitInstanceLocal((::MBadPixelsCalc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBadPixelsCalc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MBadPixelsTreat_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MBadPixelsTreat(void *p = 0);
   static void *newArray_MBadPixelsTreat(Long_t size, void *p);
   static void delete_MBadPixelsTreat(void *p);
   static void deleteArray_MBadPixelsTreat(void *p);
   static void destruct_MBadPixelsTreat(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBadPixelsTreat*)
   {
      ::MBadPixelsTreat *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MBadPixelsTreat >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MBadPixelsTreat", ::MBadPixelsTreat::Class_Version(), "./MBadPixelsTreat.h", 14,
                  typeid(::MBadPixelsTreat), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MBadPixelsTreat::Dictionary, isa_proxy, 4,
                  sizeof(::MBadPixelsTreat) );
      instance.SetNew(&new_MBadPixelsTreat);
      instance.SetNewArray(&newArray_MBadPixelsTreat);
      instance.SetDelete(&delete_MBadPixelsTreat);
      instance.SetDeleteArray(&deleteArray_MBadPixelsTreat);
      instance.SetDestructor(&destruct_MBadPixelsTreat);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBadPixelsTreat*)
   {
      return GenerateInitInstanceLocal((::MBadPixelsTreat*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBadPixelsTreat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MMcBadPixelsSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MMcBadPixelsSet(void *p = 0);
   static void *newArray_MMcBadPixelsSet(Long_t size, void *p);
   static void delete_MMcBadPixelsSet(void *p);
   static void deleteArray_MMcBadPixelsSet(void *p);
   static void destruct_MMcBadPixelsSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MMcBadPixelsSet*)
   {
      ::MMcBadPixelsSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MMcBadPixelsSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MMcBadPixelsSet", ::MMcBadPixelsSet::Class_Version(), "./MMcBadPixelsSet.h", 12,
                  typeid(::MMcBadPixelsSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MMcBadPixelsSet::Dictionary, isa_proxy, 4,
                  sizeof(::MMcBadPixelsSet) );
      instance.SetNew(&new_MMcBadPixelsSet);
      instance.SetNewArray(&newArray_MMcBadPixelsSet);
      instance.SetDelete(&delete_MMcBadPixelsSet);
      instance.SetDeleteArray(&deleteArray_MMcBadPixelsSet);
      instance.SetDestructor(&destruct_MMcBadPixelsSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MMcBadPixelsSet*)
   {
      return GenerateInitInstanceLocal((::MMcBadPixelsSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MMcBadPixelsSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHBadPixels_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHBadPixels(void *p = 0);
   static void *newArray_MHBadPixels(Long_t size, void *p);
   static void delete_MHBadPixels(void *p);
   static void deleteArray_MHBadPixels(void *p);
   static void destruct_MHBadPixels(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHBadPixels*)
   {
      ::MHBadPixels *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHBadPixels >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHBadPixels", ::MHBadPixels::Class_Version(), "./MHBadPixels.h", 17,
                  typeid(::MHBadPixels), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHBadPixels::Dictionary, isa_proxy, 4,
                  sizeof(::MHBadPixels) );
      instance.SetNew(&new_MHBadPixels);
      instance.SetNewArray(&newArray_MHBadPixels);
      instance.SetDelete(&delete_MHBadPixels);
      instance.SetDeleteArray(&deleteArray_MHBadPixels);
      instance.SetDestructor(&destruct_MHBadPixels);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHBadPixels*)
   {
      return GenerateInitInstanceLocal((::MHBadPixels*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHBadPixels*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MBadPixelsPix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MBadPixelsPix::Class_Name()
{
   return "MBadPixelsPix";
}

//______________________________________________________________________________
const char *MBadPixelsPix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsPix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MBadPixelsPix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsPix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MBadPixelsPix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsPix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MBadPixelsPix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsPix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MBadPixelsCam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MBadPixelsCam::Class_Name()
{
   return "MBadPixelsCam";
}

//______________________________________________________________________________
const char *MBadPixelsCam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MBadPixelsCam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MBadPixelsCam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MBadPixelsCam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MBadPixelsMerge::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MBadPixelsMerge::Class_Name()
{
   return "MBadPixelsMerge";
}

//______________________________________________________________________________
const char *MBadPixelsMerge::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsMerge*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MBadPixelsMerge::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsMerge*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MBadPixelsMerge::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsMerge*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MBadPixelsMerge::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsMerge*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MBadPixelsCalc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MBadPixelsCalc::Class_Name()
{
   return "MBadPixelsCalc";
}

//______________________________________________________________________________
const char *MBadPixelsCalc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCalc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MBadPixelsCalc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCalc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MBadPixelsCalc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCalc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MBadPixelsCalc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsCalc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MBadPixelsTreat::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MBadPixelsTreat::Class_Name()
{
   return "MBadPixelsTreat";
}

//______________________________________________________________________________
const char *MBadPixelsTreat::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsTreat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MBadPixelsTreat::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsTreat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MBadPixelsTreat::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsTreat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MBadPixelsTreat::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MBadPixelsTreat*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MMcBadPixelsSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MMcBadPixelsSet::Class_Name()
{
   return "MMcBadPixelsSet";
}

//______________________________________________________________________________
const char *MMcBadPixelsSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcBadPixelsSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MMcBadPixelsSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcBadPixelsSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MMcBadPixelsSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcBadPixelsSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MMcBadPixelsSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcBadPixelsSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHBadPixels::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHBadPixels::Class_Name()
{
   return "MHBadPixels";
}

//______________________________________________________________________________
const char *MHBadPixels::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHBadPixels*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHBadPixels::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHBadPixels*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHBadPixels::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHBadPixels*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHBadPixels::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHBadPixels*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MBadPixelsPix::Streamer(TBuffer &R__b)
{
   // Stream an object of class MBadPixelsPix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MBadPixelsPix::Class(),this);
   } else {
      R__b.WriteClassBuffer(MBadPixelsPix::Class(),this);
   }
}

//______________________________________________________________________________
void MBadPixelsPix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MBadPixelsPix.
      TClass *R__cl = ::MBadPixelsPix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInfo", &fInfo);
      R__insp.InspectMember(fInfo, "fInfo.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MBadPixelsPix(void *p) {
      return  p ? new(p) ::MBadPixelsPix : new ::MBadPixelsPix;
   }
   static void *newArray_MBadPixelsPix(Long_t nElements, void *p) {
      return p ? new(p) ::MBadPixelsPix[nElements] : new ::MBadPixelsPix[nElements];
   }
   // Wrapper around operator delete
   static void delete_MBadPixelsPix(void *p) {
      delete ((::MBadPixelsPix*)p);
   }
   static void deleteArray_MBadPixelsPix(void *p) {
      delete [] ((::MBadPixelsPix*)p);
   }
   static void destruct_MBadPixelsPix(void *p) {
      typedef ::MBadPixelsPix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBadPixelsPix

//______________________________________________________________________________
void MBadPixelsCam::Streamer(TBuffer &R__b)
{
   // Stream an object of class MBadPixelsCam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MBadPixelsCam::Class(),this);
   } else {
      R__b.WriteClassBuffer(MBadPixelsCam::Class(),this);
   }
}

//______________________________________________________________________________
void MBadPixelsCam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MBadPixelsCam.
      TClass *R__cl = ::MBadPixelsCam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MParContainer::ShowMembers(R__insp);
      MCamEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MBadPixelsCam(void *p) {
      return  p ? new(p) ::MBadPixelsCam : new ::MBadPixelsCam;
   }
   static void *newArray_MBadPixelsCam(Long_t nElements, void *p) {
      return p ? new(p) ::MBadPixelsCam[nElements] : new ::MBadPixelsCam[nElements];
   }
   // Wrapper around operator delete
   static void delete_MBadPixelsCam(void *p) {
      delete ((::MBadPixelsCam*)p);
   }
   static void deleteArray_MBadPixelsCam(void *p) {
      delete [] ((::MBadPixelsCam*)p);
   }
   static void destruct_MBadPixelsCam(void *p) {
      typedef ::MBadPixelsCam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBadPixelsCam

//______________________________________________________________________________
void MBadPixelsCalc::Streamer(TBuffer &R__b)
{
   // Stream an object of class MBadPixelsCalc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MBadPixelsCalc::Class(),this);
   } else {
      R__b.WriteClassBuffer(MBadPixelsCalc::Class(),this);
   }
}

//______________________________________________________________________________
void MBadPixelsCalc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MBadPixelsCalc.
      TClass *R__cl = ::MBadPixelsCalc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomCam", &fGeomCam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedPhotCam", &fPedPhotCam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadPixels", &fBadPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalLevel", &fPedestalLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalLevelVarianceLo", &fPedestalLevelVarianceLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalLevelVarianceHi", &fPedestalLevelVarianceHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedPhotCam", &fNamePedPhotCam);
      R__insp.InspectMember(fNamePedPhotCam, "fNamePedPhotCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckInProcess", &fCheckInProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckInPostProcess", &fCheckInPostProcess);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MBadPixelsCalc(void *p) {
      return  p ? new(p) ::MBadPixelsCalc : new ::MBadPixelsCalc;
   }
   static void *newArray_MBadPixelsCalc(Long_t nElements, void *p) {
      return p ? new(p) ::MBadPixelsCalc[nElements] : new ::MBadPixelsCalc[nElements];
   }
   // Wrapper around operator delete
   static void delete_MBadPixelsCalc(void *p) {
      delete ((::MBadPixelsCalc*)p);
   }
   static void deleteArray_MBadPixelsCalc(void *p) {
      delete [] ((::MBadPixelsCalc*)p);
   }
   static void destruct_MBadPixelsCalc(void *p) {
      typedef ::MBadPixelsCalc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBadPixelsCalc

//______________________________________________________________________________
void MBadPixelsTreat::Streamer(TBuffer &R__b)
{
   // Stream an object of class MBadPixelsTreat.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MBadPixelsTreat::Class(),this);
   } else {
      R__b.WriteClassBuffer(MBadPixelsTreat::Class(),this);
   }
}

//______________________________________________________________________________
void MBadPixelsTreat::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MBadPixelsTreat.
      TClass *R__cl = ::MBadPixelsTreat::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomCam", &fGeomCam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvt", &fEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadPixels", &fBadPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedPhot1", &fPedPhot1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedPhot2", &fPedPhot2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalCam", &fNameSignalCam);
      R__insp.InspectMember(fNameSignalCam, "fNameSignalCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedPhotCams", &fPedPhotCams);
      R__insp.InspectMember(fPedPhotCams, "fPedPhotCams.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlags", &fFlags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumMinNeighbors", &fNumMinNeighbors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxArrivalTimeDiff", &fMaxArrivalTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedPhotCams", &fNamePedPhotCams);
      R__insp.InspectMember(fNamePedPhotCams, "fNamePedPhotCams.");
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MBadPixelsTreat(void *p) {
      return  p ? new(p) ::MBadPixelsTreat : new ::MBadPixelsTreat;
   }
   static void *newArray_MBadPixelsTreat(Long_t nElements, void *p) {
      return p ? new(p) ::MBadPixelsTreat[nElements] : new ::MBadPixelsTreat[nElements];
   }
   // Wrapper around operator delete
   static void delete_MBadPixelsTreat(void *p) {
      delete ((::MBadPixelsTreat*)p);
   }
   static void deleteArray_MBadPixelsTreat(void *p) {
      delete [] ((::MBadPixelsTreat*)p);
   }
   static void destruct_MBadPixelsTreat(void *p) {
      typedef ::MBadPixelsTreat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBadPixelsTreat

//______________________________________________________________________________
void MBadPixelsMerge::Streamer(TBuffer &R__b)
{
   // Stream an object of class MBadPixelsMerge.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MBadPixelsMerge::Class(),this);
   } else {
      R__b.WriteClassBuffer(MBadPixelsMerge::Class(),this);
   }
}

//______________________________________________________________________________
void MBadPixelsMerge::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MBadPixelsMerge.
      TClass *R__cl = ::MBadPixelsMerge::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDest", &fDest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSource", &fSource);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MBadPixelsMerge(void *p) {
      delete ((::MBadPixelsMerge*)p);
   }
   static void deleteArray_MBadPixelsMerge(void *p) {
      delete [] ((::MBadPixelsMerge*)p);
   }
   static void destruct_MBadPixelsMerge(void *p) {
      typedef ::MBadPixelsMerge current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBadPixelsMerge

//______________________________________________________________________________
void MMcBadPixelsSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class MMcBadPixelsSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MMcBadPixelsSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(MMcBadPixelsSet::Class(),this);
   }
}

//______________________________________________________________________________
void MMcBadPixelsSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MMcBadPixelsSet.
      TClass *R__cl = ::MMcBadPixelsSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadPixels", &fBadPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomCam", &fGeomCam);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MMcBadPixelsSet(void *p) {
      return  p ? new(p) ::MMcBadPixelsSet : new ::MMcBadPixelsSet;
   }
   static void *newArray_MMcBadPixelsSet(Long_t nElements, void *p) {
      return p ? new(p) ::MMcBadPixelsSet[nElements] : new ::MMcBadPixelsSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_MMcBadPixelsSet(void *p) {
      delete ((::MMcBadPixelsSet*)p);
   }
   static void deleteArray_MMcBadPixelsSet(void *p) {
      delete [] ((::MMcBadPixelsSet*)p);
   }
   static void destruct_MMcBadPixelsSet(void *p) {
      typedef ::MMcBadPixelsSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MMcBadPixelsSet

//______________________________________________________________________________
void MHBadPixels::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHBadPixels.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHBadPixels::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHBadPixels::Class(),this);
   }
}

//______________________________________________________________________________
void MHBadPixels::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHBadPixels.
      TClass *R__cl = ::MHBadPixels::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCam", &fCam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedPhot", &fPedPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPos", &fPointPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedPhotCam", &fNamePedPhotCam);
      R__insp.InspectMember(fNamePedPhotCam, "fNamePedPhotCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBinsTheta", &fBinsTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBinsPix", &fBinsPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadId", &fBadId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadN", &fBadN);
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHBadPixels(void *p) {
      return  p ? new(p) ::MHBadPixels : new ::MHBadPixels;
   }
   static void *newArray_MHBadPixels(Long_t nElements, void *p) {
      return p ? new(p) ::MHBadPixels[nElements] : new ::MHBadPixels[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHBadPixels(void *p) {
      delete ((::MHBadPixels*)p);
   }
   static void deleteArray_MHBadPixels(void *p) {
      delete [] ((::MHBadPixels*)p);
   }
   static void destruct_MHBadPixels(void *p) {
      typedef ::MHBadPixels current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHBadPixels

/********************************************************
* BadPixelsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBadPixelsCint();

extern "C" void G__set_cpp_environmentBadPixelsCint() {
  G__cpp_reset_tagtableBadPixelsCint();
}
#include <new>
extern "C" int G__cpp_dllrevBadPixelsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MBadPixelsPix */
static int G__BadPixelsCint_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsPix* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsPix((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MBadPixelsPix((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsPix((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MBadPixelsPix((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsPix[n];
       } else {
         p = new((void*) gvp) MBadPixelsPix[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsPix;
       } else {
         p = new((void*) gvp) MBadPixelsPix;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsPix*) G__getstructoffset())->SetUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsPix*) G__getstructoffset())->SetUncalibrated((MBadPixelsPix::UncalibratedType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsPix*) G__getstructoffset())->SetHardware((MBadPixelsPix::HardwareType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsUncalibrated((MBadPixelsPix::UncalibratedType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsHardwareBad((MBadPixelsPix::HardwareType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsUnsuitable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsUnreliable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsUncalibrated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsBad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsLoGainBad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsPix*) G__getstructoffset())->IsHiGainBad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MBadPixelsPix*) G__getstructoffset())->GetUnsuitableCalLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MBadPixelsPix::GetUnsuitableName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsPix::GetNumUnsuitable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MBadPixelsPix*) G__getstructoffset())->GetUnreliableCalLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MBadPixelsPix::GetUnreliableName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsPix::GetNumUnreliable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsPix*) G__getstructoffset())->Merge(*(MBadPixelsPix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayI& obj = ((const MBadPixelsPix*) G__getstructoffset())->GetInfo();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MBadPixelsPix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsPix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MBadPixelsPix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MBadPixelsPix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsPix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsPix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsPix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsPix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_173_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsPix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BadPixelsCint_173_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MBadPixelsPix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MBadPixelsPix(*(MBadPixelsPix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBadPixelsPix G__TMBadPixelsPix;
static int G__BadPixelsCint_173_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBadPixelsPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBadPixelsPix*) (soff+(sizeof(MBadPixelsPix)*i)))->~G__TMBadPixelsPix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBadPixelsPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBadPixelsPix*) (soff))->~G__TMBadPixelsPix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BadPixelsCint_173_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsPix* dest = (MBadPixelsPix*) G__getstructoffset();
   *dest = *(MBadPixelsPix*) libp->para[0].ref;
   const MBadPixelsPix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MBadPixelsCam */
static int G__BadPixelsCint_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsCam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MBadPixelsCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsCam((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MBadPixelsCam((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsCam[n];
       } else {
         p = new((void*) gvp) MBadPixelsCam[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsCam;
       } else {
         p = new((void*) gvp) MBadPixelsCam;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsCam* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MBadPixelsCam(*(MBadPixelsCam*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MBadPixelsCam(*(MBadPixelsCam*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MBadPixelsPix& obj = ((MBadPixelsCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MBadPixelsPix& obj = ((const MBadPixelsCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsCam*) G__getstructoffset())->Merge(*(MBadPixelsCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), (MGeomCam*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), (MGeomCam*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumUnsuitable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumSuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), (MGeomCam*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumSuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), (MGeomCam*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumSuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumIsolated((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), *(MGeomCam*) libp->para[1].ref
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumIsolated((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), *(MGeomCam*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumIsolated(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumIsolated(*(MGeomCam*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumMaxCluster((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), *(MGeomCam*) libp->para[1].ref
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 115, (long) ((const MBadPixelsCam*) G__getstructoffset())->GetNumMaxCluster((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]), *(MGeomCam*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 115, (long) ((MBadPixelsCam*) G__getstructoffset())->GetNumMaxCluster(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 115, (long) ((MBadPixelsCam*) G__getstructoffset())->GetNumMaxCluster(*(MGeomCam*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const TArrayC* pobj;
         const TArrayC xobj = ((const MBadPixelsCam*) G__getstructoffset())->GetUnsuitable((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0]));
         pobj = new TArrayC(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const TArrayC* pobj;
         const TArrayC xobj = ((const MBadPixelsCam*) G__getstructoffset())->GetUnsuitable();
         pobj = new TArrayC(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayC* pobj;
         const TArrayC xobj = ((const MBadPixelsCam*) G__getstructoffset())->GetUncalibrated((MBadPixelsPix::UncalibratedType_t) G__int(libp->para[0]));
         pobj = new TArrayC(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MBadPixelsCam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MBadPixelsCam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MBadPixelsCam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsCam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsCam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_181_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsCam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBadPixelsCam G__TMBadPixelsCam;
static int G__BadPixelsCint_181_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBadPixelsCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBadPixelsCam*) (soff+(sizeof(MBadPixelsCam)*i)))->~G__TMBadPixelsCam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBadPixelsCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBadPixelsCam*) (soff))->~G__TMBadPixelsCam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BadPixelsCint_181_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsCam* dest = (MBadPixelsCam*) G__getstructoffset();
   *dest = *(MBadPixelsCam*) libp->para[0].ref;
   const MBadPixelsCam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MBadPixelsMerge */
static int G__BadPixelsCint_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsMerge* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsMerge(
(MBadPixelsCam*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MBadPixelsMerge(
(MBadPixelsCam*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsMerge((MBadPixelsCam*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MBadPixelsMerge((MBadPixelsCam*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsMerge((MBadPixelsCam*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MBadPixelsMerge((MBadPixelsCam*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MBadPixelsMerge::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsMerge::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MBadPixelsMerge::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MBadPixelsMerge::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsMerge*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsMerge::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsMerge::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsMerge::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsMerge::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BadPixelsCint_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MBadPixelsMerge* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MBadPixelsMerge(*(MBadPixelsMerge*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBadPixelsMerge G__TMBadPixelsMerge;
static int G__BadPixelsCint_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBadPixelsMerge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBadPixelsMerge*) (soff+(sizeof(MBadPixelsMerge)*i)))->~G__TMBadPixelsMerge();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBadPixelsMerge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBadPixelsMerge*) (soff))->~G__TMBadPixelsMerge();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BadPixelsCint_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsMerge* dest = (MBadPixelsMerge*) G__getstructoffset();
   *dest = *(MBadPixelsMerge*) libp->para[0].ref;
   const MBadPixelsMerge& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MBadPixelsCalc */
static int G__BadPixelsCint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsCalc* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MBadPixelsCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsCalc((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MBadPixelsCalc((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsCalc[n];
       } else {
         p = new((void*) gvp) MBadPixelsCalc[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsCalc;
       } else {
         p = new((void*) gvp) MBadPixelsCalc;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevel((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVariance((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVariance();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVarianceLo((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVarianceLo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVarianceHi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->SetPedestalLevelVarianceHi();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsCalc*) G__getstructoffset())->SetNamePedPhotCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsCalc*) G__getstructoffset())->SetGeomCam((MGeomCam*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->EnableCheckInProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->EnableCheckInProcess();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsCalc*) G__getstructoffset())->EnableCheckInPostProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsCalc*) G__getstructoffset())->EnableCheckInPostProcess();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsCalc*) G__getstructoffset())->CheckPedestalRms((MBadPixelsPix::UnsuitableType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MBadPixelsCalc*) G__getstructoffset())->CheckPedestalRms(*(MBadPixelsCam*) libp->para[0].ref, *(MPedPhotCam*) libp->para[1].ref
, (MBadPixelsPix::UnsuitableType_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MBadPixelsCalc*) G__getstructoffset())->CheckPedestalRms(*(MBadPixelsCam*) libp->para[0].ref, *(MPedPhotCam*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MBadPixelsCalc*) G__getstructoffset())->CheckPedestalRms(*(MBadPixelsCam*) libp->para[0].ref, *(MPedestalCam*) libp->para[1].ref
, (MBadPixelsPix::UnsuitableType_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MBadPixelsCalc*) G__getstructoffset())->CheckPedestalRms(*(MBadPixelsCam*) libp->para[0].ref, *(MPedestalCam*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MBadPixelsCalc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCalc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MBadPixelsCalc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MBadPixelsCalc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsCalc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCalc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsCalc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsCalc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsCalc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BadPixelsCint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MBadPixelsCalc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MBadPixelsCalc(*(MBadPixelsCalc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBadPixelsCalc G__TMBadPixelsCalc;
static int G__BadPixelsCint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBadPixelsCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBadPixelsCalc*) (soff+(sizeof(MBadPixelsCalc)*i)))->~G__TMBadPixelsCalc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBadPixelsCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBadPixelsCalc*) (soff))->~G__TMBadPixelsCalc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MBadPixelsTreat */
static int G__BadPixelsCint_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBadPixelsTreat* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsTreat((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MBadPixelsTreat((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBadPixelsTreat((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MBadPixelsTreat((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsTreat[n];
       } else {
         p = new((void*) gvp) MBadPixelsTreat[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MBadPixelsTreat;
       } else {
         p = new((void*) gvp) MBadPixelsTreat;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetUseInterpolation((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetUseInterpolation();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetUseCentralPixel((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetUseCentralPixel();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestalRun((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestalRun();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestalEvt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestalEvt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestal((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessPedestal();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessTimes((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetProcessTimes();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetHardTreatment((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetHardTreatment();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsHardTreatment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsProcessPedestalRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsProcessPedestalEvt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsProcessTimes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsUseCentralPixel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MBadPixelsTreat*) G__getstructoffset())->IsUseInterpolation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsTreat*) G__getstructoffset())->SetNumMinNeighbors((Byte_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsTreat*) G__getstructoffset())->SetMaxArrivalTimeDiff((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->SetNameSignalCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->SetNameSignalCam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MBadPixelsTreat*) G__getstructoffset())->AddNamePedPhotCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MBadPixelsTreat*) G__getstructoffset())->AddNamePedPhotCam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsTreat*) G__getstructoffset())->SetNamePedPhotCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MBadPixelsTreat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsTreat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MBadPixelsTreat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MBadPixelsTreat::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBadPixelsTreat*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsTreat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsTreat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MBadPixelsTreat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_193_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MBadPixelsTreat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBadPixelsTreat G__TMBadPixelsTreat;
static int G__BadPixelsCint_193_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBadPixelsTreat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBadPixelsTreat*) (soff+(sizeof(MBadPixelsTreat)*i)))->~G__TMBadPixelsTreat();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBadPixelsTreat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBadPixelsTreat*) (soff))->~G__TMBadPixelsTreat();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MMcBadPixelsSet */
static int G__BadPixelsCint_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcBadPixelsSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcBadPixelsSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MMcBadPixelsSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcBadPixelsSet((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MMcBadPixelsSet((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcBadPixelsSet[n];
       } else {
         p = new((void*) gvp) MMcBadPixelsSet[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcBadPixelsSet;
       } else {
         p = new((void*) gvp) MMcBadPixelsSet;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MMcBadPixelsSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcBadPixelsSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MMcBadPixelsSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMcBadPixelsSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MMcBadPixelsSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcBadPixelsSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcBadPixelsSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcBadPixelsSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcBadPixelsSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BadPixelsCint_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MMcBadPixelsSet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MMcBadPixelsSet(*(MMcBadPixelsSet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MMcBadPixelsSet G__TMMcBadPixelsSet;
static int G__BadPixelsCint_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MMcBadPixelsSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MMcBadPixelsSet*) (soff+(sizeof(MMcBadPixelsSet)*i)))->~G__TMMcBadPixelsSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MMcBadPixelsSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MMcBadPixelsSet*) (soff))->~G__TMMcBadPixelsSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BadPixelsCint_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcBadPixelsSet* dest = (MMcBadPixelsSet*) G__getstructoffset();
   *dest = *(MMcBadPixelsSet*) libp->para[0].ref;
   const MMcBadPixelsSet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHBadPixels */
static int G__BadPixelsCint_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHBadPixels* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHBadPixels((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHBadPixels((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHBadPixels((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHBadPixels((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHBadPixels[n];
       } else {
         p = new((void*) gvp) MHBadPixels[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHBadPixels;
       } else {
         p = new((void*) gvp) MHBadPixels;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHBadPixels*) G__getstructoffset())->SetNamePedPhotCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHBadPixels*) G__getstructoffset())->GetBadId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHBadPixels*) G__getstructoffset())->GetBadId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHBadPixels*) G__getstructoffset())->GetBadN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MHBadPixels*) G__getstructoffset())->GetBadN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHBadPixels*) G__getstructoffset())->GetBadIdByName(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MHBadPixels*) G__getstructoffset())->GetBadNByName(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHBadPixels::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHBadPixels::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHBadPixels::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHBadPixels::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHBadPixels*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHBadPixels::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHBadPixels::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHBadPixels::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BadPixelsCint_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHBadPixels::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BadPixelsCint_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MHBadPixels* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MHBadPixels(*(MHBadPixels*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHBadPixels G__TMHBadPixels;
static int G__BadPixelsCint_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHBadPixels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHBadPixels*) (soff+(sizeof(MHBadPixels)*i)))->~G__TMHBadPixels();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHBadPixels*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHBadPixels*) (soff))->~G__TMHBadPixels();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BadPixelsCint_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHBadPixels* dest = (MHBadPixels*) G__getstructoffset();
   *dest = *(MHBadPixels*) libp->para[0].ref;
   const MHBadPixels& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MBadPixelsPix */

/* MBadPixelsCam */

/* MBadPixelsMerge */

/* MBadPixelsCalc */

/* MBadPixelsTreat */

/* MMcBadPixelsSet */

/* MHBadPixels */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBadPixelsCint {
 public:
  G__Sizep2memfuncBadPixelsCint(): p(&G__Sizep2memfuncBadPixelsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBadPixelsCint::*p)();
};

size_t G__get_sizep2memfuncBadPixelsCint()
{
  G__Sizep2memfuncBadPixelsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBadPixelsCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix))) {
     MBadPixelsPix *G__Lderived;
     G__Lderived=(MBadPixelsPix*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam))) {
     MBadPixelsCam *G__Lderived;
     G__Lderived=(MBadPixelsCam*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MCamEvent *G__Lpbase=(MCamEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),G__get_linked_tagnum(&G__BadPixelsCintLN_MCamEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge))) {
     MBadPixelsMerge *G__Lderived;
     G__Lderived=(MBadPixelsMerge*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge),G__get_linked_tagnum(&G__BadPixelsCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge),G__get_linked_tagnum(&G__BadPixelsCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc))) {
     MBadPixelsCalc *G__Lderived;
     G__Lderived=(MBadPixelsCalc*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc),G__get_linked_tagnum(&G__BadPixelsCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc),G__get_linked_tagnum(&G__BadPixelsCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat))) {
     MBadPixelsTreat *G__Lderived;
     G__Lderived=(MBadPixelsTreat*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat),G__get_linked_tagnum(&G__BadPixelsCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat),G__get_linked_tagnum(&G__BadPixelsCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet))) {
     MMcBadPixelsSet *G__Lderived;
     G__Lderived=(MMcBadPixelsSet*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet),G__get_linked_tagnum(&G__BadPixelsCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet),G__get_linked_tagnum(&G__BadPixelsCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels))) {
     MHBadPixels *G__Lderived;
     G__Lderived=(MHBadPixels*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels),G__get_linked_tagnum(&G__BadPixelsCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels),G__get_linked_tagnum(&G__BadPixelsCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels),G__get_linked_tagnum(&G__BadPixelsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBadPixelsCint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BadPixelsCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MBadPixelsPix */
static void G__setup_memvarMBadPixelsPix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix));
   { MBadPixelsPix *p; p=(MBadPixelsPix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TArrayI),-1,-1,4,"fInfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnsuitableRun=%lldLL",(long long)MBadPixelsPix::kUnsuitableRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnsuitableEvt=%lldLL",(long long)MBadPixelsPix::kUnsuitableEvt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnsuitable=%lldLL",(long long)MBadPixelsPix::kUnsuitable).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnreliableRun=%lldLL",(long long)MBadPixelsPix::kUnreliableRun).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnreliableEvt=%lldLL",(long long)MBadPixelsPix::kUnreliableEvt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t),-1,-2,1,G__FastAllocString(2048).Format("kUnreliable=%lldLL",(long long)MBadPixelsPix::kUnreliable).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("fgRunMask=%lldLL",(long long)MBadPixelsPix::fgRunMask).data(),0,"All types which are not event wise determined");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kPreviouslyExcluded=%lldLL",(long long)MBadPixelsPix::kPreviouslyExcluded).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kHiGainNotFitted=%lldLL",(long long)MBadPixelsPix::kHiGainNotFitted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kLoGainNotFitted=%lldLL",(long long)MBadPixelsPix::kLoGainNotFitted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kRelTimeNotFitted=%lldLL",(long long)MBadPixelsPix::kRelTimeNotFitted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kHiGainOscillating=%lldLL",(long long)MBadPixelsPix::kHiGainOscillating).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kLoGainOscillating=%lldLL",(long long)MBadPixelsPix::kLoGainOscillating).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kRelTimeOscillating=%lldLL",(long long)MBadPixelsPix::kRelTimeOscillating).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kLoGainSaturation=%lldLL",(long long)MBadPixelsPix::kLoGainSaturation).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kChargeIsPedestal=%lldLL",(long long)MBadPixelsPix::kChargeIsPedestal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kChargeErrNotValid=%lldLL",(long long)MBadPixelsPix::kChargeErrNotValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kChargeRelErrNotValid=%lldLL",(long long)MBadPixelsPix::kChargeRelErrNotValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kChargeSigmaNotValid=%lldLL",(long long)MBadPixelsPix::kChargeSigmaNotValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kMeanTimeInFirstBin=%lldLL",(long long)MBadPixelsPix::kMeanTimeInFirstBin).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kMeanTimeInLast2Bins=%lldLL",(long long)MBadPixelsPix::kMeanTimeInLast2Bins).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeviatingNumPhes=%lldLL",(long long)MBadPixelsPix::kDeviatingNumPhes).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeviatingNumPhots=%lldLL",(long long)MBadPixelsPix::kDeviatingNumPhots).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeviatingFFactor=%lldLL",(long long)MBadPixelsPix::kDeviatingFFactor).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeviatingRelTimeResolution=%lldLL",(long long)MBadPixelsPix::kDeviatingRelTimeResolution).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kConversionHiLoNotValid=%lldLL",(long long)MBadPixelsPix::kConversionHiLoNotValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kHiGainOverFlow=%lldLL",(long long)MBadPixelsPix::kHiGainOverFlow).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kLoGainOverFlow=%lldLL",(long long)MBadPixelsPix::kLoGainOverFlow).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kHiLoNotFitted=%lldLL",(long long)MBadPixelsPix::kHiLoNotFitted).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kHiLoOscillating=%lldLL",(long long)MBadPixelsPix::kHiLoOscillating).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeadPedestalRms=%lldLL",(long long)MBadPixelsPix::kDeadPedestalRms).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kDeviatingAbsTimeResolution=%lldLL",(long long)MBadPixelsPix::kDeviatingAbsTimeResolution).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t),-1,-2,1,G__FastAllocString(2048).Format("kLoGainBlackout=%lldLL",(long long)MBadPixelsPix::kLoGainBlackout).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPixcLcLHardwareType_t),-1,-2,1,G__FastAllocString(2048).Format("kHVNotNominal=%lldLL",(long long)MBadPixelsPix::kHVNotNominal).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MBadPixelsCam */
static void G__setup_memvarMBadPixelsCam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam));
   { MBadPixelsCam *p; p=(MBadPixelsCam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClonesArray),-1,-1,4,"fArray=",0,"-> ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MBadPixelsMerge */
static void G__setup_memvarMBadPixelsMerge(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge));
   { MBadPixelsMerge *p; p=(MBadPixelsMerge*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_TString),-1,-2,4,"fgDefName=",0,"!");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_TString),-1,-2,4,"fgDefTitle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),-1,-1,4,"fDest=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),-1,-1,4,"fSource=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MBadPixelsCalc */
static void G__setup_memvarMBadPixelsCalc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc));
   { MBadPixelsCalc *p; p=(MBadPixelsCalc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MGeomCam),-1,-1,4,"fGeomCam=",0,"! Input container storing the pixel sizes");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MPedPhotCam),-1,-1,4,"fPedPhotCam=",0,"! Input container storing the pedestal and pedestal rms of all pixels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"! Output container holding the bad pixels");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestalLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestalLevelVarianceLo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestalLevelVarianceHi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TString),-1,-1,4,"fNamePedPhotCam=",0,"name of the 'MPedPhotCam' container");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCheckInProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCheckInPostProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MBadPixelsTreat */
static void G__setup_memvarMBadPixelsTreat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat));
   { MBadPixelsTreat *p; p=(MBadPixelsTreat*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MGeomCam),-1,-1,4,"fGeomCam=",0,"! Camera geometry to get the area scaling factors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MSignalCam),-1,-1,4,"fEvt=",0,"! Signal Event to be interpolated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"! Bad Pixels to be interpolated");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MPedPhotCam),-1,-1,4,"fPedPhot1=",0,"! Pedestal from extractor used for \"no-signal\" in InterpolateTimes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MPedPhotCam),-1,-1,4,"fPedPhot2=",0,"! Pedestal from extractor used for \"no-signal\" in InterpolateTimes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TString),-1,-1,4,"fNameSignalCam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TList),-1,-1,4,"fPedPhotCams=",0,"List of PedPhotCams to be treated");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fFlags=",0,"flag for the method which is used");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fNumMinNeighbors=",0,"Number of neighbors required");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMaxArrivalTimeDiff=",0,"Maximum allowed arrival time difference of neighboring pixels");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TList),-1,-1,4,"fNamePedPhotCams=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kUseInterpolation=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kUseCentralPixel=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kProcessPedestalRun=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kProcessPedestalEvt=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kProcessTimes=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA),-1,-2,4,"kHardTreatment=6LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MMcBadPixelsSet */
static void G__setup_memvarMMcBadPixelsSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet));
   { MMcBadPixelsSet *p; p=(MMcBadPixelsSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MGeomCam),-1,-1,4,"fGeomCam=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHBadPixels */
static void G__setup_memvarMHBadPixels(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels));
   { MHBadPixels *p; p=(MHBadPixels*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MGeomCam),-1,-1,4,"fCam=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MPedPhotCam),-1,-1,4,"fPedPhot=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MPointingPos),-1,-1,4,"fPointPos=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TString),-1,-1,4,"fNamePedPhotCam=",0,"! name of the 'MPedPhotCam' container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBinning),-1,-1,4,"fBinsTheta=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_MBinning),-1,-1,4,"fBinsPix=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D),-1,-1,4,"fBadId=",0,"2D-histogram : pixel Id vs. Theta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D),-1,-1,4,"fBadN=",0,"2D-histogram : no.of bad pixels vs. Theta");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BadPixelsCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBadPixelsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMBadPixelsPix(void) {
   /* MBadPixelsPix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix));
   G__memfunc_setup("MBadPixelsPix",1274,G__BadPixelsCint_173_0_1, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - object", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUnsuitable",1352,G__BadPixelsCint_173_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MBadPixelsPix::UnsuitableType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUncalibrated",1530,G__BadPixelsCint_173_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MBadPixelsPix::UncalibratedType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHardware",1114,G__BadPixelsCint_173_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i 'MBadPixelsPix::HardwareType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUnsuitable",1240,G__BadPixelsCint_173_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UnsuitableType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUncalibrated",1418,G__BadPixelsCint_173_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UncalibratedType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHardwareBad",1265,G__BadPixelsCint_173_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::HardwareType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUnsuitable",1240,G__BadPixelsCint_173_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUnreliable",1215,G__BadPixelsCint_173_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUncalibrated",1418,G__BadPixelsCint_173_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOK",342,G__BadPixelsCint_173_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBad",451,G__BadPixelsCint_173_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoGainBad",1021,G__BadPixelsCint_173_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHiGainBad",1011,G__BadPixelsCint_173_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnsuitableCalLevel",2116,G__BadPixelsCint_173_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnsuitableName",1725,G__BadPixelsCint_173_0_19, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_TString), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - lvl", (char*)NULL, (void*) G__func2void( (TString (*)(Int_t))(&MBadPixelsPix::GetUnsuitableName) ), 0);
   G__memfunc_setup("GetNumUnsuitable",1644,G__BadPixelsCint_173_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&MBadPixelsPix::GetNumUnsuitable) ), 0);
   G__memfunc_setup("GetUnreliableCalLevel",2091,G__BadPixelsCint_173_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnreliableName",1700,G__BadPixelsCint_173_0_22, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_TString), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - lvl", (char*)NULL, (void*) G__func2void( (TString (*)(Int_t))(&MBadPixelsPix::GetUnreliableName) ), 0);
   G__memfunc_setup("GetNumUnreliable",1619,G__BadPixelsCint_173_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&MBadPixelsPix::GetNumUnreliable) ), 0);
   G__memfunc_setup("Merge",496,G__BadPixelsCint_173_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MBadPixelsPix' - 11 - pix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfo",684,G__BadPixelsCint_173_0_25, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_TArrayI), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BadPixelsCint_173_0_26, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MBadPixelsPix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_173_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsPix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_173_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MBadPixelsPix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_173_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MBadPixelsPix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_173_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_173_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsPix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_173_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsPix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_173_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsPix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_173_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsPix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MBadPixelsPix", 1274, G__BadPixelsCint_173_0_38, (int) ('i'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix), -1, 0, 1, 1, 1, 0, "u 'MBadPixelsPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MBadPixelsPix", 1400, G__BadPixelsCint_173_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BadPixelsCint_173_0_40, (int) ('u'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix), -1, 1, 1, 1, 1, 0, "u 'MBadPixelsPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMBadPixelsCam(void) {
   /* MBadPixelsCam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam));
   G__memfunc_setup("GetNumSuitableNeighbors",2346,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 4, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type u 'MGeom' - 11 - pix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMaxCluster",1624,(G__InterfaceMethod) NULL, 115, -1, G__defined_typename("Short_t"), 0, 4, 1, 4, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type u 'TObjArray' - 1 - list "
"i - 'Int_t' 0 - idx i - 'Int_t' 0 - aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintBadPixels",1417,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"i 'MBadPixelsPix::UncalibratedType_t' - 0 - typ C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MBadPixelsCam",1242,G__BadPixelsCint_181_0_4, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MBadPixelsCam",1242,G__BadPixelsCint_181_0_5, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam), -1, 0, 1, 1, 1, 0, "u 'MBadPixelsCam' - 11 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - object", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSize",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__BadPixelsCint_181_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BadPixelsCint_181_0_12, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BadPixelsCint_181_0_13, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsPix), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Merge",496,G__BadPixelsCint_181_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MBadPixelsCam' - 11 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUnsuitable",1644,G__BadPixelsCint_181_0_15, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type U 'MGeomCam' - 10 - geom "
"i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUnsuitable",1644,G__BadPixelsCint_181_0_16, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UnsuitableType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUnsuitable",1644,G__BadPixelsCint_181_0_17, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSuitable",1417,G__BadPixelsCint_181_0_18, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type U 'MGeomCam' - 10 - geom "
"i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSuitable",1417,G__BadPixelsCint_181_0_19, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UnsuitableType_t' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumIsolated",1413,G__BadPixelsCint_181_0_20, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type u 'MGeomCam' - 11 - geom "
"i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumIsolated",1413,G__BadPixelsCint_181_0_21, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"u 'MGeomCam' - 11 - geom i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMaxCluster",1624,G__BadPixelsCint_181_0_22, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"i 'MBadPixelsPix::UnsuitableType_t' - 0 - type u 'MGeomCam' - 11 - geom "
"i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMaxCluster",1624,G__BadPixelsCint_181_0_23, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom i - 'Int_t' 0 '-1' aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnsuitable",1340,G__BadPixelsCint_181_0_24, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_TArrayC), -1, 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UnsuitableType_t' - 0 'MBadPixelsPix::kUnsuitable' typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUncalibrated",1518,G__BadPixelsCint_181_0_25, 117, G__get_linked_tagnum(&G__BadPixelsCintLN_TArrayC), -1, 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UncalibratedType_t' - 0 - typ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AsciiRead",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AsciiWrite",1012,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPixelContent",1533,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPixelContent",1643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BadPixelsCint_181_0_30, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MBadPixelsCam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_181_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_181_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MBadPixelsCam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_181_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MBadPixelsCam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_181_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_181_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_181_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsCam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_181_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_181_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsCam::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MBadPixelsCam", 1368, G__BadPixelsCint_181_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BadPixelsCint_181_0_43, (int) ('u'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCam), -1, 1, 1, 1, 1, 0, "u 'MBadPixelsCam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMBadPixelsMerge(void) {
   /* MBadPixelsMerge */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge));
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MBadPixelsMerge",1465,G__BadPixelsCint_188_0_2, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge), -1, 0, 3, 1, 1, 0, 
"U 'MBadPixelsCam' - 0 - bad C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BadPixelsCint_188_0_3, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MBadPixelsMerge::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_188_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsMerge::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_188_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MBadPixelsMerge::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_188_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MBadPixelsMerge::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_188_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_188_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsMerge::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_188_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsMerge::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_188_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsMerge::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_188_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsMerge::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MBadPixelsMerge", 1465, G__BadPixelsCint_188_0_15, (int) ('i'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge), -1, 0, 1, 1, 1, 0, "u 'MBadPixelsMerge' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MBadPixelsMerge", 1591, G__BadPixelsCint_188_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BadPixelsCint_188_0_17, (int) ('u'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsMerge), -1, 1, 1, 1, 1, 0, "u 'MBadPixelsMerge' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMBadPixelsCalc(void) {
   /* MBadPixelsCalc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MBadPixelsCalc",1340,G__BadPixelsCint_191_0_5, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalLevel",1622,G__BadPixelsCint_191_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '-1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalLevelVariance",2431,G__BadPixelsCint_191_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '-1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalLevelVarianceLo",2618,G__BadPixelsCint_191_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '-1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalLevelVarianceHi",2608,G__BadPixelsCint_191_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '-1' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedPhotCam",1650,G__BadPixelsCint_191_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeomCam",965,G__BadPixelsCint_191_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MGeomCam' - 10 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableCheckInProcess",1979,G__BadPixelsCint_191_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableCheckInPostProcess",2401,G__BadPixelsCint_191_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPedestalRms",1602,G__BadPixelsCint_191_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'MBadPixelsPix::UnsuitableType_t' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPedestalRms",1602,G__BadPixelsCint_191_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MBadPixelsCam' - 1 - cam u 'MPedPhotCam' - 11 - ped "
"i 'MBadPixelsPix::UnsuitableType_t' - 0 'MBadPixelsPix::kUnsuitableRun' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPedestalRms",1602,G__BadPixelsCint_191_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MBadPixelsCam' - 1 - cam u 'MPedestalCam' - 11 - ped "
"i 'MBadPixelsPix::UnsuitableType_t' - 0 'MBadPixelsPix::kUnsuitableRun' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BadPixelsCint_191_0_17, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MBadPixelsCalc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_191_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCalc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_191_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MBadPixelsCalc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_191_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MBadPixelsCalc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_191_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_191_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCalc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_191_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsCalc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_191_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsCalc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_191_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsCalc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MBadPixelsCalc", 1340, G__BadPixelsCint_191_0_29, (int) ('i'), G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsCalc), -1, 0, 1, 1, 1, 0, "u 'MBadPixelsCalc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MBadPixelsCalc", 1466, G__BadPixelsCint_191_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMBadPixelsTreat(void) {
   /* MBadPixelsTreat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat));
   G__memfunc_setup("Pow2",360,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 4, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterpolateTimes",1673,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterpolateSignal",1765,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterpolatePedestals",2092,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'MPedPhotCam' - 1 - pedphot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InterpolatePedestals",2092,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unmap",513,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPixelBad",965,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MBadPixelsTreat",1481,G__BadPixelsCint_193_0_13, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MBadPixelsTreat), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseInterpolation",1985,G__BadPixelsCint_193_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseCentralPixel",1828,G__BadPixelsCint_193_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcessPedestalRun",2162,G__BadPixelsCint_193_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcessPedestalEvt",2156,G__BadPixelsCint_193_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcessPedestal",1853,G__BadPixelsCint_193_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcessTimes",1549,G__BadPixelsCint_193_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHardTreatment",1631,G__BadPixelsCint_193_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHardTreatment",1519,G__BadPixelsCint_193_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProcessPedestalRun",2050,G__BadPixelsCint_193_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProcessPedestalEvt",2044,G__BadPixelsCint_193_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProcessTimes",1437,G__BadPixelsCint_193_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUseCentralPixel",1716,G__BadPixelsCint_193_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUseInterpolation",1873,G__BadPixelsCint_193_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumMinNeighbors",1825,G__BadPixelsCint_193_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxArrivalTimeDiff",2091,G__BadPixelsCint_193_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameSignalCam",1564,G__BadPixelsCint_193_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"MSignalCam\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNamePedPhotCam",1615,G__BadPixelsCint_193_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"MPedPhotCam\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedPhotCam",1650,G__BadPixelsCint_193_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "Deprecated! Use AddNamePedPhotCam instead (directly)", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BadPixelsCint_193_0_32, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MBadPixelsTreat::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_193_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsTreat::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_193_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MBadPixelsTreat::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_193_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MBadPixelsTreat::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_193_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_193_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsTreat::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_193_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsTreat::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_193_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MBadPixelsTreat::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_193_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MBadPixelsTreat::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MBadPixelsTreat", 1607, G__BadPixelsCint_193_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMMcBadPixelsSet(void) {
   /* MMcBadPixelsSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MMcBadPixelsSet",1445,G__BadPixelsCint_195_0_3, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BadPixelsCint_195_0_4, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MMcBadPixelsSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_195_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcBadPixelsSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_195_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MMcBadPixelsSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_195_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MMcBadPixelsSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_195_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_195_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcBadPixelsSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_195_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcBadPixelsSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_195_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcBadPixelsSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_195_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcBadPixelsSet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MMcBadPixelsSet", 1445, G__BadPixelsCint_195_0_16, (int) ('i'), G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet), -1, 0, 1, 1, 1, 0, "u 'MMcBadPixelsSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MMcBadPixelsSet", 1571, G__BadPixelsCint_195_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BadPixelsCint_195_0_18, (int) ('u'), G__get_linked_tagnum(&G__BadPixelsCintLN_MMcBadPixelsSet), -1, 1, 1, 1, 1, 0, "u 'MMcBadPixelsSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHBadPixels(void) {
   /* MHBadPixels */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels));
   G__memfunc_setup("MHBadPixels",1041,G__BadPixelsCint_246_0_1, 105, G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedPhotCam",1650,G__BadPixelsCint_246_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadId",724,G__BadPixelsCint_246_0_3, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadId",724,G__BadPixelsCint_246_0_4, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadN",629,G__BadPixelsCint_246_0_5, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadN",629,G__BadPixelsCint_246_0_6, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadIdByName",1296,G__BadPixelsCint_246_0_7, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBadNByName",1201,G__BadPixelsCint_246_0_8, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TH2), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFill",920,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 10 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BadPixelsCint_246_0_12, 85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHBadPixels::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BadPixelsCint_246_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHBadPixels::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BadPixelsCint_246_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHBadPixels::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BadPixelsCint_246_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHBadPixels::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BadPixelsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BadPixelsCint_246_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BadPixelsCint_246_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHBadPixels::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BadPixelsCint_246_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHBadPixels::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BadPixelsCint_246_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHBadPixels::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BadPixelsCint_246_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHBadPixels::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MHBadPixels", 1041, G__BadPixelsCint_246_0_24, (int) ('i'), G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels), -1, 0, 1, 1, 1, 0, "u 'MHBadPixels' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MHBadPixels", 1167, G__BadPixelsCint_246_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BadPixelsCint_246_0_26, (int) ('u'), G__get_linked_tagnum(&G__BadPixelsCintLN_MHBadPixels), -1, 1, 1, 1, 1, 0, "u 'MHBadPixels' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBadPixelsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBadPixelsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBadPixelsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BadPixelsCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsPix = { "MBadPixelsPix" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t = { "MBadPixelsPix::UnsuitableType_t" , 101 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t = { "MBadPixelsPix::UncalibratedType_t" , 101 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsPixcLcLHardwareType_t = { "MBadPixelsPix::HardwareType_t" , 101 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MCamEvent = { "MCamEvent" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TArrayC = { "TArrayC" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MGeom = { "MGeom" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsCam = { "MBadPixelsCam" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsMerge = { "MBadPixelsMerge" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MPedPhotCam = { "MPedPhotCam" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MPedestalCam = { "MPedestalCam" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsCalc = { "MBadPixelsCalc" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MSignalCam = { "MSignalCam" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsTreat = { "MBadPixelsTreat" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBadPixelsTreatcLcLdA = { "MBadPixelsTreat::$" , 101 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MMcBadPixelsSet = { "MMcBadPixelsSet" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MBinning = { "MBinning" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MH = { "MH" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MPointingPos = { "MPointingPos" , 99 , -1 };
G__linked_taginfo G__BadPixelsCintLN_MHBadPixels = { "MHBadPixels" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBadPixelsCint() {
  G__BadPixelsCintLN_TClass.tagnum = -1 ;
  G__BadPixelsCintLN_TBuffer.tagnum = -1 ;
  G__BadPixelsCintLN_TMemberInspector.tagnum = -1 ;
  G__BadPixelsCintLN_TObject.tagnum = -1 ;
  G__BadPixelsCintLN_TString.tagnum = -1 ;
  G__BadPixelsCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BadPixelsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BadPixelsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BadPixelsCintLN_TList.tagnum = -1 ;
  G__BadPixelsCintLN_TObjArray.tagnum = -1 ;
  G__BadPixelsCintLN_TClonesArray.tagnum = -1 ;
  G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BadPixelsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BadPixelsCintLN_TEnv.tagnum = -1 ;
  G__BadPixelsCintLN_MParContainer.tagnum = -1 ;
  G__BadPixelsCintLN_TArrayI.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsPix.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsPixcLcLHardwareType_t.tagnum = -1 ;
  G__BadPixelsCintLN_MGeomCam.tagnum = -1 ;
  G__BadPixelsCintLN_MCamEvent.tagnum = -1 ;
  G__BadPixelsCintLN_TArrayC.tagnum = -1 ;
  G__BadPixelsCintLN_MGeom.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsCam.tagnum = -1 ;
  G__BadPixelsCintLN_MInputStreamID.tagnum = -1 ;
  G__BadPixelsCintLN_MParList.tagnum = -1 ;
  G__BadPixelsCintLN_MTask.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsMerge.tagnum = -1 ;
  G__BadPixelsCintLN_MPedPhotCam.tagnum = -1 ;
  G__BadPixelsCintLN_MPedestalCam.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsCalc.tagnum = -1 ;
  G__BadPixelsCintLN_MSignalCam.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsTreat.tagnum = -1 ;
  G__BadPixelsCintLN_MBadPixelsTreatcLcLdA.tagnum = -1 ;
  G__BadPixelsCintLN_MMcBadPixelsSet.tagnum = -1 ;
  G__BadPixelsCintLN_TH2.tagnum = -1 ;
  G__BadPixelsCintLN_MBinning.tagnum = -1 ;
  G__BadPixelsCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BadPixelsCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BadPixelsCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BadPixelsCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BadPixelsCintLN_TH2D.tagnum = -1 ;
  G__BadPixelsCintLN_MH.tagnum = -1 ;
  G__BadPixelsCintLN_MPointingPos.tagnum = -1 ;
  G__BadPixelsCintLN_MHBadPixels.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBadPixelsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TString);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TList);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsPix),sizeof(MBadPixelsPix),-1,323840,"Storage Container for bad pixel information of a single pixel",G__setup_memvarMBadPixelsPix,G__setup_memfuncMBadPixelsPix);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsPixcLcLUnsuitableType_t);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsPixcLcLUncalibratedType_t);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsPixcLcLHardwareType_t);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MGeomCam);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MCamEvent);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TArrayC);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsCam),sizeof(MBadPixelsCam),-1,325376,"Storage container to store bad pixel of the camera...",G__setup_memvarMBadPixelsCam,G__setup_memfuncMBadPixelsCam);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsMerge),sizeof(MBadPixelsMerge),-1,324608,"Merge extra- and intra-loop pixels",G__setup_memvarMBadPixelsMerge,G__setup_memfuncMBadPixelsMerge);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MPedPhotCam);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MPedestalCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsCalc),sizeof(MBadPixelsCalc),-1,323840,"Task to find bad pixels (star, broken pixels, etc)",G__setup_memvarMBadPixelsCalc,G__setup_memfuncMBadPixelsCalc);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MSignalCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsTreat),sizeof(MBadPixelsTreat),-1,323840,"Task to treat bad pixels (interpolation, unmapping)",G__setup_memvarMBadPixelsTreat,G__setup_memfuncMBadPixelsTreat);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBadPixelsTreatcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MMcBadPixelsSet),sizeof(MMcBadPixelsSet),-1,323840,"Task to deal with known MC star-fields",G__setup_memvarMMcBadPixelsSet,G__setup_memfuncMMcBadPixelsSet);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TH2);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MBinning);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MH);
   G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MPointingPos);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BadPixelsCintLN_MHBadPixels),sizeof(MHBadPixels),-1,324864,"Histogram of bad pixel Id vs. Theta",G__setup_memvarMHBadPixels,G__setup_memfuncMHBadPixels);
}
extern "C" void G__cpp_setupBadPixelsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupBadPixelsCint()");
  G__set_cpp_environmentBadPixelsCint();
  G__cpp_setup_tagtableBadPixelsCint();

  G__cpp_setup_inheritanceBadPixelsCint();

  G__cpp_setup_typetableBadPixelsCint();

  G__cpp_setup_memvarBadPixelsCint();

  G__cpp_setup_memfuncBadPixelsCint();
  G__cpp_setup_globalBadPixelsCint();
  G__cpp_setup_funcBadPixelsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBadPixelsCint();
  return;
}
class G__cpp_setup_initBadPixelsCint {
  public:
    G__cpp_setup_initBadPixelsCint() { G__add_setup_func("BadPixelsCint",(G__incsetup)(&G__cpp_setupBadPixelsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBadPixelsCint() { G__remove_setup_func("BadPixelsCint"); }
};
G__cpp_setup_initBadPixelsCint G__cpp_setup_initializerBadPixelsCint;

