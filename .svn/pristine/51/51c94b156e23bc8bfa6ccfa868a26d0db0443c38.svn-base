 
Please  do  not write behind the end of line tag so that it is  possible
to   send  a   Changelog   file  to  a  line  printer  directly.  Thanks.

For your entries please follow EXACTLY this style:

_yyyy/mm/dd:_[Your Name]
_
___*_filename:
_____-_description
_
___*_filename2, filename3:
_____-_description
_
_
_

While an underscore is a placeholder for a white-space or an empty line.


                                                 -*-*- END OF LINE -*-*-


 2004/12/27 Thomas Bretz

   * macros/CCDataCheck.C:
     - fixed some warnings: Wrong data access operator

   * manalysis/MCerPhotPix.h:
     - added to possibility to reset the core-flag

   * mcalib/MCalibColorSet.[h,cc]:
     - moved some common code to a new function CheckAndSet for
       simplicity of the color decoding
     - added an include for stdlib.h (needed for some compilers and atoi)

   * mcalib/MCalibrationIntensityChargeCam.cc:
     - fixed a warning about a invalid escape sequence -- seems that
       not all compilers do display this warning...
     - corrected order of includes

   * mfbase/MFEventSelector2.[h,cc]:
     - some cosmetic fixes
     - some adpations to standard output (eg. Separator() instead of ***)
     - added a check whether 'filter' inherits from MFilter
     - fixed the return of ReadDistribution
     - made comments for data members in cleass header 'one line'

   * mimage/MImgCleanStd.[h,cc]:
     - added fNameGeomCam for parameter list access
     - added fNameCerPhotEvt for parameter list access
     - fixed a typo in an output
     - NO change to ANY algorithm!
     - changed class version from 1 to 2

   * mjobs/MJCalibrateSignal.cc:
     - added a rule to replace .raw by .root in MWriteRootFile

   * mranforest/MRanForestCalc.[h,cc]:
     - fixed missing data member initialization in constructor
     - added ReadEnv which is able to read a random forest from a file
     - added an owner flag for the random forest tree



 2004/12/22 Markus Gaug

    * mraw/MRawEvtHeader.[h,cc]:
      - added some new Getter-functions for the calibration conf. 
        pattern
 
    * mcalib/MCalibrationChargeCalc.[h,cc],
      mcalib/MCalibrationRelTimeCalc.[h,cc],
      mcalib/MCalibrationColorSteer.cc:
      - use the new functions

    * mhcalib/MHCalibrationCam.[h,cc],
      mhcalib/MHCalibrationRelTimeCam.[h,cc],
      mhcalib/MHCalibrationChargeCam.[h,cc]:
      - centralize the decision about the probability limit to be 
        taken inside these classes.
 
    * mhcalib/MHCalibrationPix.cc
      - fix a bug in the calculation of outliers. Standard analyses  
        not affected!



 2004/12/22 Eva Domingo

    * mtemp/mifae/library/MImageParDisp.[cc,h]
      - Container for the estimated distance to source position DISP.

    * mtemp/mifae/library/MDisp.[cc,h]
      - Container holding the parameters used for the DISP expression.
        The current DISP parameterization is defined in MDisp::Calc.

    * mtemp/mifae/library/MDispCalc.[cc,h]
      - Task calculating DISP with the expression and parameter values
        stored in MDisp. Training and test matrix of variables to be 
        used in the DISP optimization are also defined within 
        MDispCalc::InitMapping.

    * mtemp/mifae/library/MHDisp.[cc,h]
      - Container for the histograms to judge the quality of the DISP 
        estimate. MHDisp::GetChi2 returns the value of the quantity 
        requested to be minimized by Minuit, which is defined and 
        computed in MHDisp::Fill and MHDisp::Finalize. 
        MHDisp::GetSkymapXY returns the reconstructed map of source 
        positions. MHDisp::SetSelectedPos function to choose the 
        selection method of the DISP source position solution.

    * mtemp/mifae/library/MFDisp.[cc,h]
      - Filter to select a sample of events to do the DISP optimization.
       Use MFDisp::SetCuts function.

    * mtemp/mifae/library/MFindDisp.[cc,h]
      - Main class for DISP optimization:
         ::DefineTrainMatrix, ::DefineTestMatrix, ::DefineTrainTestMatrix
        generate the training and test samples (in the form of matrices)
        from the input file.
	 ::FindParams is the function steering the optimization (over the
        training sample), calling Minuit, passing the fcn function to be 
        minimize and defining the event loop to be executed in each step.
	 ::TestParams tests the quality of the DISP estimate using the 
        test matrix sample

    * mtemp/mifae/macros/OptimizeDisp.C
      - macro for estimating the DISP parameter: create training and test
        matrix; optimize DISP; test quality optimization; calculate DISP
        and construct skymap for an input file.

    * mtemp/mifae/library/Makefile, mtemp/mifae/library/IFAELinkDef.h
      - include DISP classes.



 2004/12/22: Eva Domingo (for Wolfgang Wittek)

   * mfbase/MFEventSelector2.[h,cc]:
     - the 'original' distribution, a subsample of which wants
       to be selected, now can be determined with some previous
       selection cuts. When determing the 'original' distribution
       in PreProcess() not only the 'read' object but also the 
       'filter' object (with the name "FilterSelector2") of the 
       current event loop is used.



 2004/12/22: Abelardo Moralejo

   * mtemp/mpadova/macros/MRanForestPD.C:
     - added parentheses in the expressions inside the calls to
       AddColumn() regarding the scaled Width and Length, otherwise
       they are not interpreted correctly. However, there is no
       difference in the outcome: the "scaling" seems to be done
       internally by RF in any case... 



 2004/12/17: Markus Gaug

   * mcalib/MCalibColorSet.cc:
     - added missing runs where run number does not appear any more in 
       project-name and is not yet set in the digital modules.

   * mcalib/MCalibrationIntensityCam.[h,cc],
     mcalib/MCalibrationIntensityChargeCam.[h,cc],
     mcalib/MCalibrationIntensityRelTimeCam.[h,cc]:
     - added some new functions to display the results of the intensity
       calibration



 2004/12/17: Thomas Bretz

   * showplot.cc:
     - added the error debug-level to some output

   * mcalib/MCalibColorSet.cc:
     - replaced arbitrary number for run type by correct enum

   * mbase/MStatusDisplay.[h,cc]:
     - changed DrawClonePad such that
       + before cloning we change into the pad (necessary for 
         GetDrawOption)
       + removed SetSelectedPad (seems not necessary at all)
       + SetBit(kCanDelete) for all cloned object
       + copy bits kMustCleanup, kCannotPick and kNoContextMenu
       + oldc is not const anymore (cd()!)

   * mhbase/MH3.[h,cc]:
     - removed fNameProfX, fNameProfY - didn't work with a more accurate
       scheme to get the handle to the profile histograms
     - moved most code from Draw to Paint so that a more accurate handling
       of read pads containing these histograms is possible

   * mhvstime/MHVsTime.[h,cc]:
     - moved most code from Draw to Paint so that a more accurate handling
       of read pads containing these histograms is possible

   * mhflux/MHEffectiveOnTime.[h,cc]:
     - removed fNameProj* - didn't work with a more accurate
       scheme to get the handle to the profile histograms
     - set no option for default AppendPad (istead of "fit" which 
       didn't work for saved files - for unknown reasons)



 2004/12/16: Markus Gaug

   * msignal/MExtractTimeAndChargeDigitalFilter.h
     - set the class number up from 1 to 2

   * msignal/MExtractTimeAndChargeSpline.cc
     - another bugfix for the low-gain extraction

   * mhcalib/MHCalibrationRelTimeCam.[h,cc]
     - fixed bug in display of the averaged cams.



 2004/12/15: Thomas Bretz (important bugfixes for callisto)

   * callisto.rc:
     - fixed wrong names in comments

   * mjobs/MJCalibrateSignal.cc:
     - fixed naming of the two MPedCalcFromLoGain
     - set correct pedestal container for extractor

   * msignal/MArrivalTimeCam.h:
     - added Reset() function

   * msignal/MExtractTime.cc:
     - replaced parts of the common PreProcess by new function PreProcessStd

   * msignal/MExtractTimeAndCharge.cc:
     - removed Clear() in Process() -- this is automatically done by 
       Reset()

   * msignal/MExtractedSignalCam.h:
     - added Reset() function

   * msignal/MExtractor.[h,cc]:
     - moved some common parts of PreProcess to new function PreProcessStd
       this fixed the problem that searching for fPedestals was
       overwritten in MExtractTime

   * macros/readrep.C:
     - added the missing '.' dot to MTime in a comment

   * mhbase/MH3.cc:
     - draw profile by default not in blue but in the same color as the
       histogram. Use 'BLUE' option to get the old behaviour
     - fixed handling of 'same' option
     - propagate title of axis to profile histogram



 2004/12/15: Abelardo Moralejo

   * mmc/MMcConfigRunHeader.h
     - added data member fPmtTimeJitter, sigma of gaussian of the time
       jitter introduced in the time of each photoelectron.



 2004/12/14: Markus Gaug

   * msignal/MExtractor.[h,cc]
     - add possibility to set pedestal pointer from outside

   * msignal/MExtractTimeAndCharge.[h,cc]
     - make modification of extraction window only for case of now 
       high-gain saturation.

   * msignal/MExtractTimeAndChargeSpline.cc
     - fixed some smaller bugs for special cases

   * mcalib/MCalibrationIntensityChargeCam.[h,cc]
     - implemented automatic plotting of Razmik plot and others



 2004/12/14: Markus Gaug and Abelardo Moralejo

   * msignal/MExtractFixedWindowPeakSearch.cc
     - adjusted the offset from peak search window to extraction window
       such that they start at the same slice for the case: 
       fOffsetFromWindow=0. This was the original intention of the 
       extractor and had been lost at some place. Instead, the default 
       (fOffsetFromWindow=1) did before correspond to an offset of 2 
       slices which gave wrong results for the calibration and further
       default settings. 
     - Changed one comparison: (Byte_t - Byte_t) > 0 to (Byte_t > Byte_t)
       since the first mode is always true (a negative "byte" simply gives 
       256-difference. The version before could have lead to crashes from 
       time to time.



 2004/12/12: Abelardo Moralejo

  * mpoitning/MPointingPosCalc.cc
    - Changed recently added sanity check in PreProcess so that it is 
      done only for real data files and not for MC. Corrected typo in
      warning.



 2004/12/09: Markus Gaug
  
   * mhcalib/MHCalibrationPix.[h,cc]
     - fixed a bug in Reset(), fSaturation was not resetted before. 
       Affects only intensity calibraion.
   * mhcalib/MHGausEvents.cc
     - fixed bug in Reset(), histogram ranges were not reset before.
       Affects only intensity calibraion.



 2004/12/09: Thomas Bretz

  * mbadpixels/MBadPixelsTreat.cc:
    - set default in constructor to UseInterpolation, ProcessPedestalEvt
      and ProcessTimes which is the callisto default
    - enhanced comments in output



 2004/12/08: Thomas Bretz

  * mraw/MRawRunHeader.cc:
    - changed maximum allowed format version from 4 to 5

  * mraw/MRawEvtHeader.[h,cc]:
    - added correct decoding of the 200ns information as proposed by
      Florian to DecodeTime

   * callisto.cc:
     - more fixes to make calibration of signal (Y) work again

   * callisto.rc:
     - adapted to changes in callisto
     - changed such that the digital filter is used as a default

   * mcalib/MCalibrateData.cc:
     - allow calibration of Mean and Rms from different input
       containers

   * mjobs/MJCalibrateSignal.[h,cc]:
     - removed SetNoiseCalculation -- now in its correct location
     - added a second MPedCalcFromLoGain
     - some more default setup
     - added some new tabs with histograms
     - ProcessFile now takes too input containers

   * mjobs/MJCalibration.cc:
     - set rel-time-calibration kTRUE by default
     - removed SetNoiseCalculation -- now in its correct location
     - enhanced writing extractors

   * mjobs/MJPedestal.[h,cc]: 
     - if cloning extractor - don't use name

   * mpedestal/MExtractPedestal.[h,cc]:
     - some minor changes to output
     - fixed order or arguments of FindObject

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - handle SetNoiseCalculation when calculating noise!

   * msignal/MExtractTimeAndCharge.cc:
     - some minor changes to output

   * msignal/MExtractTimeAndChargeDigitalFilter.[h,cc]:
     - some minor changes to output
     - do not write fNameWeightsFile
     - do not write fWeightsSet
     - do not write fRandomIter

   * mpointing/MPointingPosCalc.cc:
     - added a sanity check in Process



 2004/12/06: Abelardo Moralejo

  * macros/starmc.C
    - Added container MConcentration to output. Added MPointingPosCalc
      to tasklist, and MPointingPos to output.

  * mtemp/mpadova/macros/resize.C
    - Added containers MConcentration and MPointingPos to output.



 2004/12/06: Thomas Bretz

  * mpedestal/MPedCalcPedRun.cc:
    - fixed bug which I introdued on friday (PostProcess was
      defined twice)

   * macros/RanForest.C:
     - replaced kGAMMA by MMcEvt::kGAMMA

   * mhist/MHCamEvent.[h,cc]:
     - allow to set name for MGeomCam

   * mjobs/MJCalibration.cc:
     - removed some obsolete comments
     - reset SetNoiseCalculation for both extractors
     - do not allow 'wrong' time&charge calibration (without
       extractors cam)
     - removed kTimeAndCharge flag because it is obsolete (nowhere used)
       and not correctly handled at all

   * callisto.cc, star.cc:
     - added '--debug-mem' option

   * callisto.rc:
     - changed such to make it work with the new double-pedestal-loop
       callisto
     - default extractor now is Digital Filter




 2004/12/02: Thomas Bretz

   * mbase/MLog.cc:
     - fixed some warning about a missing return if __REENTRANT is not
       defined (like in MAC OS X)

   * mcalib/MCalibrationChargeCalc.[h,cc]:
     - added possibility to set fPedestals directly by pointer
     - unfolded some Form statements

   * callisto.cc:
     - changed callisto to support second pedestal loop -- WORK IN PROGRESS

   * mbase/MParContainer.[h,cc]:
     - moved code from GetDescriptor to a static function GetDescriptor
      
   * mbase/MStatusDisplay.cc:
     - removed a oboslete debug output

   * mbase/MTaskEnv.h:
     - made ReadEnv public

   * mcalib/MCalibrationChargeCam.[h,cc]:
     - changed some returned TArrayF* to TArrayF

   * mimage/MImgCleanStd.cc:
     - changed point of output of name of MPedPhotCam

   * mjobs/MJCalibration.cc:
     - don't use MParList to hand ExtractorCam over
     - some changes to the structur for Writing (only consmetics)

   * mjobs/MJPedestal.[h,cc]:
     - ordered includes correctly
     - for the moment removed fNameExtractorCam -- simplifies thing a lot
     - make a clone of the extractor given by the user - for sanity
     - correct handling of the allocated memory for fExtractor
     - replaced counts/slice by cts/slice for space reasons
     - changed name of new tabs for space reasons
     - added possibility to CheckEnv to set extractor from resource-file
     - outsourced some code to SetupExtractor
     - given a name to MFillH
     - changed handling of SetNoiseCalculation which is now set correctly all
       the time
     - Writing must still be checked!!!

   * mjobs/MJob.[h,cc]:
     - allow WriteContainer to use any TObject
     - added Getter-functions for the TEnv stuff

   * mpedestal/MExtractPedestal.[h,cc]:
     - allow setting of fPedestalIn by pointer directly
     - fixed handling of fPedestalIn accordingly
     - changed some arguments from pointer to reference
     - changed some accesses to TArrays from At to []-operator
     - shortened and enhanced output
     - fixed place and type of screen output

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - removed GetSlice -> replaced by a array with a copy of the data
     - changed some loops to pointer arithmetic for speed reasons
       in this case

   * mpedestal/MPedCalcPedRun.[h,cc]:
     - changed handling of first pedestal run for simplicity
     - replaced some Form calls
     - changed direct handling of single bits to correct enums
     - fixed wrong 'all' in output
     - simplified output
     - fixed some stuff in the output

   * mpedestal/MPedestalCam.[h,cc]:
     - fixed the Copy function - WITHOUT this fix the calibration could
       not have worked properly at all.
     - changed some function names to Mars standrad names
     - removed some obsolete loops - replaced by ForEach
     - changed some TArrayF* returnes to TArrayF

   * msignal/MExtractTime.cc, msignal/MExtractTimeAndCharge.cc,
     msignal/MExtractTimeAndChargeDigitalFilter.cc, 
     msignal/MExtractor.cc
     - fixed some wrong debug levels in output
     - some simplification and shortening to output




 2004/12/02: Markus Gaug
 
   * mpedestal/MPedCalcPedRun.[h,cc]
     - replaced CallPostProcess by public member function Finalize()



 2004/12/02: Thomas Bretz

   * msignal/MExtractTime.cc, msignal/MExtractTimeAndCharge.cc,
     msignal/MExtractor.cc:
     - removed obsolete output after FindCreateObj

   * msignal/MExtractor.h:
     - don't write fNoiseCalculation to file



 2004/12/01: Markus Gaug and Thomas Schweizer
 
   * mpedestal/MPedCalcFromLoGain.cc
     - introduce a check which does not allow the last slice of the 
       check window to be smaller than the last slice of the 
       extraction window.



 2004/12/01: Markus Gaug

   * msignal/MExtractTimeAndChargeSpline.[h,cc]:
     - introduced a random iterator for the "pedestal" calculation of 
       the amplitude spline.

   * msignal/MExtractTimeAndChargeDigitalFilter.cc:
     - fixed bug in the loop over the weights which can cause a call to 
       an array index out of range. Since MArrays are used, this call 
       could simply produce a segmentation violation (or not), at any 
       place. This bug was there since the beginning, but should have 
       happened only in very rare cases.



 2004/11/30: Thomas Bretz
 
   * msignal/MExtractTimeAndChargeDigitalFilter.cc:
     - InitArrays: added missing return statement



 2004/11/30: Markus Gaug

   * macros/calibration.C
     - new version incorporating the possibility to calculate the 
       extractor resolution

   * msignal/cosmics_weights_logaintest.dat
   * msignal/cosmics_weights4_logaintest.dat
   * msignal/calibration_weights_UV_logaintest.dat
     - High-low-gain inverted weights files for the TDAS-Extractor 
       nr. 29, 31, 33. Only to be used for the TDAS-test. The correct 
       low-gain weights are already included in the "cosmics_weights.dat",
       "cosmics_weights4.dat" and "calibration_weights_UV.dat".

   * mjobs/MJCalibration.cc
     - updated to new version of MPedCalcPedRun (only important for 
       intensity calibration)
     - installed the new possible handling of two MPedestalCam's - one 
       for the signal extractor and another one (with the extractor 
       resolution) for MCalibrationChargeCalc.
      
   * msignal/MExtractTimeAndCharge.cc
     - fixed bug for very high saturating signals setting the low-gain 
       range wrong. 

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - added variable containing the name of the requested MPedestalCam

   * mpedestal/MPedestalCam.[h,cc]
     - added in Copy-function call to MParContainer::Copy
     - removed now obsolete ReCalc()-function

   * mpedestal/MExtractPedestal.cc
     - added reading of ExtractWindow in ReadEnv

   * callisto.rc
     - updated pedestal initializations



 2004/11/30: Wolfgang Wittek

   * mtemp/PaddingExample.C
     - example macro for the padding



 2004/11/29: Markus Gaug

   * mjobs/MJPedestal.[h,cc]
     - implemented the possibility to extract the pedestal with a 
       signal extractor. In order to do so, two new commands have to
       be executed: 
       1) MJPedestal::SetExtractorResolution()
       2) MJPedestal::SetPedestals(MPedestalCam& )
       In the second case, a fully filled PedestalCam has to be 
       given, which will remained unchanged, however. This cam is 
       used only to subtract the (AB-noise corrected) pedestals with
       the signal extractor. 
     
       The newly created pedestal Cam can be retrieved via: 
       MJPedestal::GetPedestals()
       (like in the other cases as well). 
    
       The name of the extractor-filled pedestal cam can be set with:
       MJPedestal::SetNameExtractorCam()



 2004/11/28: Markus Gaug

   * mpedestal/MPedestalPix.cc
     - removed (fPedestal>=0) in the IsValid() function since now, there 
       can be valid pedestal Pix's with negative "pedestal".

   * msignal/MExtractor.cc
   * msignal/MExtractTime.cc
     - add a check for the pointers fSignal and fArrTime to be initialized

   * msignal/MExtractTimeAndChargeDigitalFilter.[h,cc]
     - fixed documentation of data members
     - Introduced setter and getter for name of weights file
     - modified way to use the NoiseCalculation(). Now more compatible
       with MPedCalcFromLoGain

   * msignal/MExtractFixedWindowPeakSearch.cc
     - fixed a bug which affects the extractor used with:
       SetRange(hifirst,hilast,lofirst,lolast) where hilast is bigger
       than the number of high-gain samples minus 1 (e.g. 14 in case of 
       MAGIC). While other extractors treat this case by setting a 
       steering variable ("fHiLoLast") in the ReInit(), this
       extractor allocates this variable dynamically. However, the 
       setting in ReInit() was also kept such that in the case that the 
       peak-search-window did NOT exceed the number of high-gain samples, 
       the part of the low-gain samples corresponding to fHILoLast was 
       still extracted. This behaviour is corrected now, I hope it 
       does not affect any current analysis!

   * mbase/MStatusDisplay.[h,cc]
     - added GetterFunction for one dedicated pad in the status display.
       The pad gets resized to normal size, then. 



 2004/11/26: Markus Gaug

   * mbase/MRunIter.[h,cc]
     - fixed the missing initialization of kIsStandardFile to kFALSE. 
 
   * msignal/MExtractTimeAndChargeSpline.h
     - added Getter Functions for the variables fRiseTime and fFallTime     

   * msignal/MExtractTimeAndChargeSlidingWindow.h
   * msignal/MExtractFixedWindowPeakSearch.h
     - added Getter Functions for the variables fWindowSizeHiGain and 
       fWindowSizeLoGain

   * mpedestal/MHPedestalPix.[h,cc]
     - removed 

   * mcalib/MCalibrationPix.h
     - added two new Getters

   * mpedestal/MHPedestalCam.[h,cc]
     - moved to directory mhcalib. 
       I'm sorry for this moving around of classes. The important reason
       is that this class derives from another class in mhcalib/, namely 
       MHCalibrationCam. It ocurred that compiling this class in a 
       job-class (e.g. MJPedestalCam), the Cint-Compiler got completely 
       confused when a TArray or an MArray is part of MHPedestalCam. 
       Then, the ClassName()'s of some OTHER classes got overwritten. 
       This happens with a no other data-members and functions except 
       for a TArray or and MArray. 
       I have tried different versions of root, always compiling 
       everything from the beginning, but only this moving solved the 
       problem (see also a bugreport in mantis).
     - added a direct calculation of mean's and RMS's stored in the 
       "LoGain"-variables of MCalibrationPedCam

   * mcalib/MCalibrationPedCam.cc
     - added new flags in the GetPixelContent called the "low-gain" 
       entries (s.a.)

   * mcalib/MCalibColorSteer.[h,cc]
     - removed pointer to MRawRunHeader
  
   * mpedestal/MExtractPedestal.[h,cc]
     - new base class for pedestal extractor.
     - incorporates possibility to have an incoming pedestal Container 
       and an outgoing
     - incorporates possibility to extract pedestals from an extractor

   * mpedestal/MPedCalcPedRun.[h,cc]
     - derives from MExtractPedestal now 
     - Add two functions looking for the pedestal bit in the trigger
       pattern
     - Add the possibility to skip an event if: 
       a) the run is not a pedestal run or
       b) the trigger bit is set to pedestal
     These modifications allow to use this class for interlaced pedestal
     events.

   * mpedestal/MPedCalcFromLoGain.[h,cc]
     - derives from MExtractPedestal now 

   * manalysis/Makefile
     - removed inclusion of directory mhcalib/



 2004/11/23: Markus Gaug
 
   * mbadpixels/MBadPixelsCam.[h,cc]
     - improved the Print() function such that the individual pixels 
       matching a certain badness-criterion are listed.

   * mpedestal/MPedestalPix.[h,cc]
   * mpedestal/MPedestalCam.[h,cc]
     - introduced Copy-function



 2004/11/23: Raquel de los Reyes

   * mbase/MRunIter.[h,cc]
     - changed the format of the read file to allow the processing of
       standard F0/F1 (pedestal/calibration) files.
     - Included a Set function.



 2004/11/22: Markus Gaug

   * mcalib/MCalibrationPix.h
     - new data member fHiGainRms and fLoGainRms requested by Florian  
       a long time ago to be used for the data check.
     - set the version number from 1 to 2.

   * mcalib/MCalibrationChargeCam.cc
     - introduced new flag in GetPixelContent which returns the RMS  
       divided by mean, to be called by MJCalibration in the datacheck.

   * mhcalib/MHGausEvents.h
     - new function GetHistRms() returning the RMS of the histogram

   * mhcalib/MHCalibrationCam.cc
     - stores the histogram RMS in MCalibrationPix in function 
       FitHiGainHists and FitLoGainHists

   * mjobs/MJCalibration.cc
     - display in the datacheck the RMS per Mean instead of the reduced
       sigma per mean which is anyhow reflected by the number of photo-
       electrons.
     - put a class MPedCalcPedRun in the tasklist for the intensity 
       calibration (does not affect normal calibration).



 2004/11/22: Marcos Lopez

   * mhist/MHFindSignificance.h:
     - fixed the return type of some getter functions. Some was returning 
       Float_t instead of Int_t and other Float_t instead of Double_t.
     - added more getter functions.



 2004/11/22: Markus Gaug
 
   * mcalib/MCalibColorSet.cc
     - added runs 44768, 44976 and 45368 as blue runs
     - added patch to work until the lecture of the .run files is 
       synchronized with this class: All calibration runs are assumed 
       to be 10Led_UV. This has to be removed immediately when the 
       synchronization is done and serves especially the data-check.  



 2004/11/22: Thomas Bretz

   * msignal/MExtractTimeAndChargeDigitalFilter.cc:
     - added check for \015 character in filename



 2004/11/22: Abelardo Moralejo

   * mfbase/MFEventSelector2.cc
     - Fixed error in Process: calls to Select and SelectProb were 
       exchanged.
     - Added example to documentation on how to use the "probability"
       option.

   * mfbase/MFEventSelector.h
     - Fixed typo in comment

   * mfilter/MFSize.[h,cc]
     - removed class. The same kind of filtering can now be done, in  
       a more versatile way, with MFEventSelector2

   * mfilter/Makefile, FilterLinkDef.h
     - removed class MFSize

   * mtemp/mpadova/macros/resize.C
     - Now the class MFEventSelector2 is used instead of the removed
       MFSize. Behaviour is the same. Default probabilities have been 
       slightly changed (but this is just an example).



 2004/11/18: Hendrik Bartko

   * msignal/MC_weights_2GSamples.dat:
     - new weights file for MC simulations of the 2 GSamples FADCs



 2004/11/18: Wolfgang Wittek

   * mbadpixels/MHBadPixels.[h,cc]
     - include 'fCam' to set the size of MPedPhotCam;
       why is the size of MPedPhotCam equal to 0 ???
     - use "UseCurrentStyle()" when drawing a histogram
     - in SetupFill() the binnings of the histograms may be changed 

   * mbadpixels/MBadPixelsCalc.[h,cc]
     - print name of MPedPhotCam container in PreProcess

   * mhist/MHSigmaTheta.[h,cc]
     - use iterator for looping over MCerPhotPix
     - use "UseCurrentStyle()" when drawing a histogram
     - in SetupFill() the binnings of the histograms may be changed 
     - plot also Theta versus phi

   * macros/ONOFFAnalysis.C
     - replaced part of the code by calls to 
                - MMakePadHistograms
                - and to new member functions of MPad

   * manalysis/MMakePadHistograms.[h,cc]
     - new class; it generates histograms which are needed for the 
       padding 

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h
     - add MMakePadHistograms

   * manalysis/MPad.[h,cc]
     - add member function ReadPadHistograms()  

   * mfilter/MFSelBasic.[h,cc], mfilter/MFSelStandard.[h,cc],
     mfilter/MFSelFinal.[h,cc]:
     - move printout of cut values from SetCuts() to PreProcess()

   * mimage/MImgCleanStd.[h,cc]
     - print name of MPedPhotCam container in PreProcess()



 2004/11/18: Thomas Bretz

   * mjobs/MJPedestal.cc:
     - fixed a bug in the handling of kUsePed which caused the MTaskEnv
       to be set incorrectly

   * mfbase/MFEventSelector2.[h,cc]:
     - added possibility to set a propability distribution

   * mgeom/MGeomCam.[h,cc]:
     - enhanced the Print function
     - fixed the Clone function for the class being MGeomCam
     - made InitGeometry public to support unsupported geometries

   * mgeom/MGeomPix.h:
     - added Copy function

   * mhbase/MH3.[h,cc]:
     - added a constructor taking a TH1 as argument



 2004/11/18: Markus Gaug

   * msignal/MExtractor.[h,cc]
     - introduce possibility to choose name of MExtractedSignalCam. Need
       access to different MExtractedSignalCams for comparative extractor
       studies. Analogues to MPedestalCam in MPedCalcFromLoGain. Default 
       is "MExtractedSignalCam", like before. 
     - set version number by one higher because of new data member 
       "fNameSignalCam"

   * msignal/MExtractTime.[h,cc]
     - introduce possibility to choose name of MArrivalTimeCam. Need
       access to different MArrivalTimeCams for comparative extractor
       studies. Analogues to MPedestalCam in MPedCalcFromLoGain. Default 
       is "MArrivalTimeCam", like before. 
     - set version number by one higher because of new data member 
       "fNameTimeCam"

   * msignal/MExtractTimeAndCharge.[h,cc]
     - initialize MExtractedSignalCam with the name chosen in the base 
       class.


 2004/11/17: Abelardo Moralejo

   * mmc/MMcEvt.hxx
     - Added getter method for fMuonCphFraction



 2004/11/17: Raquel de los Reyes

   * mhist/MHFindSignificance.cc
     - commented the creation of a canvas in the DrawFit function. Now it is 
       allowed the option of display the result in a canvas, previously 
       created, or in a new one if it doesn't exit.



 2004/11/16: Markus Gaug

   * mcalib/MCalibrationRelTimeCalc.cc
     - make pixels with deviating time resolution unreliable instead of 
       unsuitable. This should take out 1 or 2 more unsuitable pixels. 

   * mcalib/MCalibColorSet.cc
     - introduce treatment of the case that one file in between the 
       sequence of calibration runs is a pedestal file (run type == 1)
       and return kCONTINUE in the process. As this task is at the 
       beginning of the tasklist, the calibration tasks will be skipped
       for these events. This treats now an interlaced pedestal run. 
       Next will follow an interleaved pedestal event and finally an 
       interleaved data event.

   * mhcalib/MHCalibrationChargeCam.cc
     - adapt the histogram ranges slightly because I have found high 
       intensity calibration events creating non desired overflows.

   * msignal/MExtractTimeAndChargeSlidingWindow.cc
     - fixed a bug in the setting of the window which set always the
       default before.

   * mcalib/MCalibrationChargePINDiode.[h,cc]
     - updated numbers to the currently installed pin diode



 2004/11/16: Abelardo Moralejo

   * mmc/MMcEvt.hxx
     - Added comment regarding change in version 4.

   * mmc/MMcFadcHeader.hxx
     - Added data member fNoiseGainFluctuations. Updated class version
       to 6

   * mmc/MMcTrigHeader.hxx
     - Added data members fGainFluctuations and fNoiseGainFluctuations.
       Will contain same values as the corresponding members in the
       MMcFadcHeader of MC camera files. We just put them in both 
       headers because the fluctuations affect both the trigger 
       signal and the FADC signal.



 2004/11/16: Markus Gaug

   * mcalib/MCalibrationQEPix.[h,cc]
     - give as argument to UpdateBlindPixelMethod() and 
       UpdateFFactorMethod() the transmission of the plexiglass and the 
       its rel. variance. 
       This divides the normalization factor by those numbers and fixes a 
       bug in the absolute normalization.

   * mcalib/MCalibrationChargeCalc.cc
     - give the new arguments to MCalibrationQEPix



 2004/11/15: Thomas Bretz

   * mcalib/MCalibrationChargeCalc.cc:
     - reset logging stream to CORRECT one after redirection
     - do not redirect the logging stream if no output file is
       selected

   * mhist/MHHadronness.cc:
     - fixed a type in the class description

   * mjobs/MJCalibration.cc:
     - do not write miracle appearance files by MCalivrationChargeCalc



 2004/11/13: Hendrik Bartko

   * msignal/cosmics_weights.dat:
     - implemented low gain weights from pulpo data

   * msignal/cosmics_weights4.dat:
     - implemented low gain weights from pulpo data



 2004/11/12: Thomas Bretz

   * mraw/MRawEvtData.[h,cc]:
     - fixed a bug in the initialisation of the arrays (in both
       cases - hi- and lo-gain - the number of hi gain samples were
       used
     - do not try to read lo gains if poslo==NULL
     - changed return type of GetNum[Hi,Lo]GainSamples from
       Byte_t to UShort_t to support up to 65535 samples

   * mraw/MRawRunHeader.cc:
     - updated Print()



 2004/11/11: Markus Gaug

   * mcalib/MCalibrationBlindPix.[h,cc]
     - introduced new data member: fAreaErr which is not zero for the
       third blind pixel

   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
   * mcalib/MCalibrationBlindCamThreeNewStyle.[h,cc]
     - new class describing the blind pixel camera with three blind 
       pixels.

   * mjobs/MJCalibration.cc
     - fixed a typo in the draw command of the blind pixel 
       (MHCalibrationChargeChargeBlindCam -> MHCalibrationChargeBlindCam)
     - introduced the new blind pixels initialization

   * msignal/MExtractBlindPixel.cc
     - added MRawEvtData2 to BranchList



 2004/11/11: Thomas Bretz

   * callisto.cc:
     - fixed a typo in the screen output
     - added setting of input path to second call to MJPedestal
       to get the extraction window from the calibration file

   * mastro/MAstroCamera.cc:
     - made a simple simplification

   * mmuon/MMuonSearchParCalc.cc:
     - changed some log-output to be standard

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - Updated fTitle
     - Fixed AddToBranchList entries
     - invented a new function (ResetArrays)
     - added a return value to SetCheckRange
     - added a return value to SetCheckRange
     - changed arguments of SetExtractWindow to UShort_t which is more
       intuitive
     - changed arguments of SetExtractWindow to UShort_t which is more
       intuitive
     - changed some log-output to be more standard
     - changed return type of GetSlice to UShort_t
     - fixed names of resources to fit variable names
     - implemented Print()
     - changed types of default to UShort_t
     - changed derivement from MExtractor to MTask

   * mraw/MRawRead.cc:
     - fixed a bug which caused the special pixel indices to be 2,3,4,...
       instead of 0,1,2,3,...

   * msignal/MExtractor.[h,cc]:
     - changed non intuitive default argument of SetNoiseCalculation
       from kFALSE to kTRUE

   * mjobs/MJCalibrateSignal.cc:
     - automatically get correct range for pedestal extraction 
       (MPedCalcFromLoGain) from Signal Extractor

   * mjobs/MJPedestal.cc:
     - simplified a complicated if-else-construction towards a
       correct setting of ranges also for the calibration of the signal.
     - added reading of extraction window from calibration file
       (ReadCalibration)
     - made sure that in the case of an extractor from a calibration file
       the extraction window for pedestals is correctly set
     - set SetPedestalUpdate(kFALSE) as default for MPedCalcFromLoGain

   * mbase/MEvtLoop.cc:
     - updated a comment

   * msignal/MExtractor.cc:
     - added printing hi-gain samples



 2004/11/10: Abelardo Moralejo

   * mhist/MHHadronness.cc
     - Changed upper limit of hadronness histograms from 1. to 1.0001.
       Before, events with hadronness=1 were put in the overflow bin,
       and they were not counted in the calculation of hadron efficiency
       or of the quality factors that were displayed in the plots and 
       on the text messages. At high energies the underestimation of Q
       could be as large as a 20%.



 2004/11/10: Markus Gaug

   * mhcalib/MHCalibrationRelTimeCam.cc
     - reduced nr of bins from 900 to 200 which is sufficient. 
       Apparently, Nadia had got some problems with the high memory 
       needed. 

   * msignal/MExtractTimeAndChargeDigitalFilter.cc
     - updated the effective number of slices (CAN be used for a rude 
       pedestal RMS estimation) from 2.5 to 4. (e.g. in case of 6 slices 
       used by the weights file) after getting the equivalent result 
       from Hendrik. This should approximate the real pedestal RMS to a 
       relatively good precision although still the extensive test with 
       the noise calculation from the extractor directly is missing.
     - subtract the pedestal right at the beginning instead of twice 
       during execution of the filter.

   * msignal/MExtractTimeAndChargeSpline.cc
     - added treatment of IsNoiseCalculation() for the "integral" 
       method.

   * msignal/MExtractTimeAndChargeSlidingWindow.cc
     - added treatment of IsNoiseCalculation().



 2004/11/10: Abelardo Moralejo

   * mfbase/MFEventSelector2.cc
     - Added some comments in class description.



 2004/11/09: Abelardo Moralejo

   * mfilter/MFSize.cc
     - Eliminated allocation of histogram fProb in constructor. Now
       it has to be supplied by the user.



 2004/11/09: Hendrik Bartko

   * msignal/MExtractTimeAndChargeDigitalFilter.cc
     - implemented an unbiased application of the digital filter in the
       case of MExtractor::IsNoiseCalibration() is true. Thereby the
       weights are quasi randomly chosen and applied to the first slices
       available in the set range

   * msignal/MC_weights.dat
    - new weights file using 6 slices for the digital filter, especially
      made for MC pulses



 2004/11/09: Markus Gaug

   * mjobs/MJPedestal.[h,cc]
     - implemented the possibility to use the extractor to calculate the 
       pedestals. Now, there are three possibilities: 

       1) SetUseData(): will use MPedCalcFromLoGain together with a data
                        file (and possibly a signal extractor to 
                        determine the ranges)
       2) SetUsePedRun(): will use MPedCalcPedRun together with a 
                          pedestal run (and possibly a signal extractor
                          to determine the ranges)
       3) SetUseExtractor(): Will use the extractor itself and checks 
                          that the flag IsNoiseCalculation() is set.

   * msignal/MExtractor.[h,cc] 
     - introduced flag "fNoiseCalculation" to be used by the 
       deriving classes to calculate the noise from a fixed window in 
       time.

   * mpedestal/MPedCalcFromLoGain.[h,cc]
     - corrected the documentation of the indiv. functions
     - some cosmetic changes

   * mpedestal/MPedCalcPedRun.cc
     - previously the variable fNumLoGainSize was automatically set to
       2 in case that it was initialized to 0. This is a bugfix, since 
       the default uses 0 slices (see e.g. MJPedestal) for the low-gain.
       The effect is rather small since the ped. RMS PER SLICE does not 
       change so much by going up 2 slices, maybe 1-2% depending on the 
       extraction window. The smaller the window, the bigger the 
       relative error.



 2004/11/08: Abelardo Moralejo

   * mpedestal/MPedPhotCalc.cc
     - In ReInit: removed check of whether file is MC file. Now fSumx
       and fSumx2 are initialized also for MC files. This is needed to
       run some parts of the calibration over pedestal and calibration 
       MC files.



 2004/11/06: Abelardo Moralejo

   * mbase/MTask.cc
     - Fixed typo in PrintSkipped: "%5.1f" instead of wrong "5.1f", 
       which resulted in the percentage of skipped events not being
       displayed.

   * mimage/MHillasCalc.cc
     - Changed, in constructor, initialization of size of fErrors from
       6 to 7, since there are 6 error codes (+ succesful operation)
       for the Hillas calculations. 
     - Changed in PostProcess calls to TestBit by calls to TestFlag. 
       With TestBit, return value was always false and statistics of 
       the Hillas calculations were never shown!



 2004/11/04: Markus Gaug

   * macros/calibration.C
     - updated comments



 2004/11/04: Abelardo Moralejo

   * mmc/MMcConfigRunHeader.h
     - Added member fMirrorFraction to keep the active fraction of the
       mirror dish set in the camera simulation. Added Getter & Setter.
       Added some comments. Update class version to 4.

   * mmc/MMcRunHeader.[hxx,cxx]
     - Removed member fTelesTheta, fTelesPhi. They make no sense since
       telescope orientation can change from event to event in MC too.
       Added getter and setter for fShowerThetaMin and fShowerThetaMax.

   * mmontecarlo/MMcCollectionAreaCalc.[h,cc]
     - Changed consistency check on MMcRunHeader.fTelesTheta to check
       on fShowerThetaMin and fShowerThetaMax

   * mfileio/MReadMarsFile.cc
     - Removed obsolete check of old MC files, which needed the removed
       data member MMcRunHeader.fTelesTheta.



 2004/11/04: Markus Gaug

   * mjobs/MJPedestal.cc
     - adapted to changes in MPedCalcFromLoGain



 2004/11/04: Nepomuk Otte

   * mpedestal/MPedCalFromLoGain
     - Class interface changed s. MPedCalcFromLoGain.cc
     - It can now be searched for a signal in all slices 0..29 prior
       pedestal extraction. This is recommended to do.



 2004/11/02: Abelardo Moralejo

   * mfilter/MFSize.[h,cc]
     - added. A filter to modify the Size spectrum of a sample through
       cutting out events as a function of their Size.

   * mfilter/Makefile, FilterLinkDef.h 
     - added new class MFSize.

   * mtemp/mpadova/macros/resize.C
     - Added. Example of how to use the new filter.



 2004/11/01: Markus Gaug

   * msignal/MExtractTimeAndChageDigitalFilter.cc
     - delete the pointer to derivativelo and derivativehi at the end of 
       the function
     - reduce the effective number of high-gain samples (used for the 
       calculation of the pedestal RMS in the calibration) from 6. to 
       2.5



 2004/11/01: Markus Meyer and Keiichi Mase

   * mmuon/MMuonCalibParCalc.[h,cc]
     - changed according to Thomas Bretz's suggestion.
       The main part of the calculation is moved from MMuonCalibPar to 
       MMuonCalibParCalc.
     - changed. The function of the UseCleanForWidth is removed since we found 
       that we should get the Arc Width with uncleaned images.

   * mmuon/MMuonCalibPar.[h,cc]
     - changed according to Thomas Bretz's suggestion as written above.

   * mmuon/MMuonSearchPar.[h,cc]
     - changed according to Thomas Bretz's suggestion.
       The pointer of the funciotn is changed to the reference.



 2004/11/01: Abelardo Moralejo

   * mtemp/mpadova/macros/RanForestPD.C
     - Just some cleaning up of old (commented) code.



 2004/11/01: David Paneque

   * mtemp/mmpi/SupercutsONOFFClasses/MHFindSignificanceONOFF.cc
     - Condition to assume a constant background in the fit 
       of the ON and OFF data is softened: 
	  1) Bins with zero content are allowed (if they are less than 10%
	  of the total number of bins used). Yet their error is set to 
	  a huge number 10E19; which means that they are not taken into account 
	  in the fit.
	  2) Maximum number of bins with low content (less than 9) is increased 
	  from 5% to 20%. The error of these bins is set to 3.

       The motivation of these changes is to allow the fitting procedures also 
       in those cases where the background rejection is that large that very few 
       events remain in the background region of the alpha plot. This situation 
       is occuring quite often when using the Random Forest and SPECIALLY, when 
       making large SIZE cuts.



 2004/10/30: Markus Gaug

   * msignal/MExtractor.h
   * msignal/MExtractTime.h
     - set the version number by 1 higher due to the changes on 12.10.



 2004/10/29: Abelardo Moralejo

   * mtemp/mpadova/macros/RanForestPD.C
     - corrected an error which made a few hadrons get into the gamma
       training sample.



 2004/10/28: Thomas Bretz

   * mjobs/MJCalibrateSignal.cc:
     - fixed a bug which caused all files to be added and processed
       twice

   * mmuon/MMuonCalibParCalc.cc, mmuon/MMuonSearchParCalc.cc:
     - changed output in PreProcess to fit standards

   * mmuon/MMuonCalibPar.cc:
     - changed title and axis-title of histograms to fit the Mars
       titles better



 2004/10/26: Abelardo Moralejo

   * mmc/MMcEvt.[hxx,cxx], MMcFadcHeader.hxx
     - added new data members fFadcTimeJitter and fGainFluctuations for 
       new camera simulation options. Updated class versions to 4 and 5 
       respectively



 2004/10/22: Thomas Bretz

   * callisto.cc, star.cc:
     - commented out some checks which became obsolete with some new 
       features. I'll think of a more convinient check in the future

   * mbase/MDirIter.[h,cc]:
     - added MakeRegexp which is used instead of TRegexp::MakeWildcard
       to support better handling of regular expressions

   * mbase/MRunIter.cc:
     - a small simplification

   * mbase/MStatusDisplay.cc:
     - fixed a bug in CloseWindow (never use a data member after you 
       delete 'this')

   * mbase/MTaskEnv.cc:
     - call ReadEnv also if task is the 'external' one

   * mcalib/MCalibrateRelTimes.cc:
     - check for unsuitability for run AND event

   * mhist/MHCamera.cc:
     - fixed the cases in which GetBinError returned NaN

   * mjobs/MJCalibrateSignal.[h,cc]:
     - implemented reading raw-data
     - implemented new scheme to setup MDirIter by MSequence

   * mjobs/MJCalibration.[h,cc]:
     - fixed workaround
     - implemented new scheme to setup MDirIter by MSequence

   * mjobs/MJPedestal.cc:
     - implemented new scheme to setup MDirIter by MSequence

   * mjobs/MSequence.[h,cc]:
     - changed SetupCalls to new scheme allowing to set the file type id

   * mmain/MEventDisplay.cc:
     - fixed a crash if file is invalid

   * mraw/MRawFileRead.[h,cc]:
     - replaced default name MRawFileRead by MRead to support MJ*
     - added IsFileValid

   * msignal/MExtractTime.cc:
     - fixed call to base ReInit (return value was ignored)

   * msignal/MExtractTimeAndCharge.[h,cc]:
     - fixed some output
     - added Print
     - fixed call to base ReInit (return value was ignored)
     - set Version Number to 1

   * msignal/MExtractTimeAndChargeDigitalFilter.[h,cc]:
     - added Print



 2004/10/21: Thomas Bretz

   * star.cc:
     - added a missing 'return -1'

   * mbase/MLog.cc:
     - expanded path before opening ofstream

   * mfbase/MF.cc:
     - added a comment

   * mhbase/MH3.cc:
     - fixed behaviour of projections in status-display

   * mhflux/MHAlpha.cc:
     - fixed TLatex output

   * mhflux/MHFalseSource.[h,cc]:
     - replaced cut in L/D by D/W (which is more physical)



 2004/10/21: Markus Gaug

   * mcalib/MCalibrationChargeCalc.cc:
     - fixed a bug occurring in the case that the colour changes in one 
       same MRunIter. Returns now kFALSE instead of kCONTINUE



 2004/10/20: Thomas Bretz

   * msignal/MExtractTimeFastSpline.cc:
     - fixed a compiler warning: Unused variable

   * mjob/MJPedestal.cc:
     - added "DisableOutput" as a resource option

   * mbase/MArrayF.h:
     - added a new Reset(Float_t) member function

   * msignal/MExtractTimeAndChargeDigitalFilter.[h,cc]:
     - enrolled some if-else blocks
     - fixed includes
     - enhanced error handling when a file is read
     - moved output from PostProcess to PreProcess
     - fixed and enhanced ReadEnv

   * mjob/MJCalibrateSignal.cc:
     - enabled variance display for tabs showing signal

   * mhist/MHCamera.cc:
     - fixed returning GetBinError for kProfile mode switched on

   * mbase/MDirIter.cc:
     - fixed a bug in the Sort function: AddDirectory was incorrectly used


 2004/10/20: Markus Gaug

   * msignal/MExtractTimeAndChargeSpline.cc
     - fixed a small bug concerning the way the second derivatives are 
       calculated. The effect is less than 1% on the time resolution

   * msignal/MExtractTimeFastSpline.cc
     - comment the search for the half maximum and use the maximum again. 
       The half maximum fails sometimes by 0.5 slices which seems to be 
       some intrinsic behavior of the calibration pulses. 
       The maximum seems to be OK, though. 



 2004/10/19: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.cc
     - adapted to latest version of Camera simulation, which for stereo
       configurations creates one MMcConfigRunHeader per telescope,
       instead of a single one, as it used to be. So now we add the
       serial number when looking for the container in ReInit.



 2004/10/12: Markus Gaug 

   * msignal/MExtractor.h, msignal/MExtractTime.h
     - put fOffSetLoGain from MExtractTime to MExtractor. Like this, it 
       is accessible for all extractor classes.



 2004/10/12: Abelardo Moralejo

   * mmc/Mdefine.h
     - Removed #define FADC_SLICES (was duplicated)

   * mmc/MTriggerDefine.h, MFadcDefine.h
     - Changed names of a few #defines used by the camera simulation 
       code, to make their meanings clearer.



 2004/10/12: Markus Gaug

   * mjobs/MJPedestal.[h,cc]
     - fixed documentation of data members
     - implemented option kNoStorage for neither reading nor writing 
       the F0-files to disk.

   * mjobs/MJCalibration.[h,cc]
     - implemented option SetTimeAndCharge() in order to use the 
       extractor deriving from MExtractTimeAndCharge, like e.g. the 
       digital filter.

   * mhcalib/MHCalibrationCam.cc
     - fixed a bug in the binning of the low-gain events, affected 
       the relative times in case of high-gain saturation.

   * msignal/MExtractTimeAndCharge.[h,cc]
     - fix the range for the low-gain extraction dynamically by 
       using the calculated time of the high-gain extraction. This 
       should solve the problem reported by Nuria for the extractors
       deriving from this class.   



 2004/10/11: Markus Gaug

   * mpedestal/MPedCalcPedRun.[h,cc]
     - calculate addtionally to the usual pedestal the ABOffset, like 
       in MPedCalcFromLoGain. 

   * msignal/MExtractTimeAndChargeSpline.[h,cc]
     - fixed class documentation and some last bugs.

   * msignal/MExtractTimeAndChargeSlidingWindow.[h,cc]
   * msignal/Makefile
   * msignal/SignalLinkDef.h
     - the combined extractor class sliding window and highest integral
       with pedestal-AB-flag corrected, to be used for the TDAS-extractor



 2004/10/08: Markus Meyer and Keiichi Mase
 
   * mmuon/MMuonSearchPar.[h,cc], mmuon/MMuonCalibPar.[h,cc],
     - changed according to Thomas's suggestion. The main changes are the
       followings;
        1. The parameter name is changed in order to make the name self
           descriptive.
        2. The version come back to 1.
        3. The TH1 objects are changed to pointers.
        4. The fixed value of the pre cuts now can be set by yourself.

   * mmuon/MMuonSearchParCalc.[h,cc], mmuon/MMuonCalibParCalc.[h,cc],
     - added. In principle, you can work out, but these classes has to be
       checked by Thomas. Therefore, remind that this class may be changed.



 2004/10/08: R. DelosReyes

  * mbase/MRunIter.h
    - changed the name of the Sort() function name by SortRuns() 
      to avoid conflicts with the Sort() function in the MDirIter class.



 2004/10/07: Markus Gaug

  * mhcalib/MHCalibrationRelTimeCam.[h,cc]
    - uncommented the Clone() function (which otherwise causes 150MB to 
      be cloned). It is from now on working exactly equal like in 
      MHCalibrationChargeCam which behaved fine until now. 

  * mpedestal/MPedCalcFromLoGain.cc
    - fixed the case that a window size of 1. is handed over which 
      previously set the window size to the next smaller even number, 
      which is 0. Now, it sets it to 2. This makes this class usable 
      together with the amplitude spline.
       
  * msignal/MExtractTimeAndChargeSpline.[h,cc]
    - combined extractor: MExtractTimeFastSpline 
      and MExtractAmplitudeSpline, to be used like Hendrik's filter, 
      i.e. in combination with: MJCalibration::SetTimeAndCharge()



 2004/10/06: Hendrik Bartko

  * msignal/cosmics_weights4.dat
    - new weights file using 4 slices for the digital filter



 2004/10/05: Markus Gaug
   
  * mcalib/MCalibrationChargePix.[h,cc]
  * mcalib/MCalibrationChargeCalc.cc
    - after talking with Florian, we reduced the electronic noise for the 
      low-gain pedestal calculation from 1.5 to 1.0, independent from
      inner or outer pixels. 
    - additionally found a small bug in the calculation of the low-gain 
      pedestal RMS which amounts to about the same size as the difference 
      in the assumed electronic noise.

  * mcalib/MCalibrationChargeCalc.cc
    - fixed small bug for the case that multiple colours are found, but 
      no intensity calibration is used.

  * msignal/MExtractTimeAndCharge.cc
    - fixed small bug in the calculation of the low-gain AB flag.

  * mcalib/MCalibrateData.cc
    - fixed bug nr. ID 144



 2004/10/05: Thomas Bretz

   * mjobs/MJStar.cc:
     - removed rate cut from eventloop because its highly untested and
       unstable

   * macros/tar.C:
     - removed mtemp-directory from tarball

   * macros/rootlogon.C, macros/dohtml.C:
     - added mmuon
     - added mtrigger
     - added mhflux



 2004/10/05: Markus Meyer and Keiichi Mase
 
   * mmuon/MMuonSearchPar.[h,cc], mmuon/MMuonCalibPar.[h,cc],
     mmuon/Makfile, mmuon/MuonLinkDef.h, mmuon/MuonIncl.h:
     - added: Finally our muon classes are merged and commited.
       These are container classes and will not work only by themselves.
       After Thomas's check, we will commit the task classes, then
       you can use it.


 2004/10/04: Markus Gaug 
 
   * mjobs/MJPedestal.h
     - added function SetPedContainerName() 



 2004/10/04: Hendrik Bartko

   * msignal/MExtractTimeAndChargeDigitalFilter.cc
     - fixed a bug in the weights calculation



 2004/10/01: Thomas Bretz

   * mcalib/MCalibrationChargeCalc.cc, 
     mcalib/MCalibrationRelTimeCalc.cc,
     mhcalib/MHCalibrationChargeCam.cc.
     mhcalib/MHCalibrationRelTimeCam.cc:
     - changed some output to fit into a standard 80-col
       console

   * mhist/MHCamEvent.[h,cc]:
     - added the option to count 'above threshold'
       (former MHTrigger)

   * mhist/MHCamEventRot.[h,cc]:
     - added the option to count 'above threshold'

   * mhist/MHCamera.[h,cc]:
     - fixed filling of thresholded events (CntCamContent)
       such that it takes the 'used'flag into account

   * mjobs/MJStar.cc:
     - added plots showing how often a pixel survived image 
       cleaning and the corresponding derotated 2D plot

   * mjobs/MJCalibrateSignal.cc:
     - display in all plots in which we expect a stable value
       the variance instead of the rms

   * mjobs/MJPedestal.cc, mjobs/MJCalibration.cc:
     - fixed usage of raw-data files and AddDatRuns

   * mjobs/MJob.cc:
     - fixed a typo in an output

   * callisto.cc:
     - removed "-mc" option (now autodetected)
       --> to be done in the other jobs, too

   * mfileio/MRead.[h,cc], mfileio/MReadMarsFile.[h,cc],
     mfileio/MReadTree.[h,cc], mjobs/MJCalibrateSignal.[h,cc],
     mraw/MRawFileRead.[h,cc]:
     - implemented IsFileValid as a first step to file auto-detection



 2004/09/30: Hendrik Bartko, Markus Gaug

   * msignal/MExtractFixedWindowSpline.cc
     - corrected a small bug for the case that the high-gain extraction 
       window ranges into the low-gain

   * mjobs/MJPedestal.cc
     - use MPedCalcFromLoGain if IsUseData() is set



 2004/09/29: Hendrik Bartko, Diego Tescaro, Markus Gaug

   * msignal/MExtractTimeAndChargeDigitalFilter.[h,cc]
     - Hendriks digital filter finally implemented

   * msignal/cosmics_weights.root msignal/calibration_weights_UV.root
     - needed weights for the digital filter

   * msignal/Makefile
   * msignal/SignalLinkDef.h
     - added MExtractTimeAndChargeDigitalFilter and 
       MExtractTimeAndCharge

   * msignal/MExtractTime.h
     - made PreProcess, ReInit and Process protected

   * msignal/MExtractTimeAndCharge.[h,cc]
     - added variable abflag in function FindTimeAndChargeHiGain and 
       FindTimeAndChargeLoGain



 2004/09/29: Thomas Bretz

   * mhist/MHEvent.[h,cc]:
     - enhanced display

   * mmain/MEventDisplay.cc:
     - adapted to changes in MEventDisplay



 2004/09/28: Thomas Bretz

   * mbase/MGMap.h:
     - added Clear() function

   * mfileio/MReadReports.[h,cc]:
     - added GetReader member function

   * mhbase/MBinning.h:
     - set a default for a constructor argument

   * mhbase/MH.cc:
     - do not treat errors when enhancing histograms
       if errors are not set

   * mhflux/MHEffectiveOnTime.cc:
     - changed conditions for fit:
       + 5% - 95%  --->  60% - 99%
       + start value 200Hz
       + ok if chi2<3*NDF
     - resturn chi2 as result of fit
     - changed some text output in pads

   * mhflux/MHFalseSource.cc:
     - made work without MPointingPos
     - fixed crash if star-display is used
     - fixed dissapearing alpha plot

   * mhist/MHCamEvent.[h,cc]:
     - removed rms histogram
     - enhanced display
     - fixed handling of title

   * mhist/MHCamera.[h,cc]:
     - simplified projection functions a bit
     - simplified profile functions a bit
     - added default for binning
     - added binning to Profiles

   * mimage/MConcentration.c:
     - fixed author list

   * mimage/MHHillas.cc:
     - display size as logy

   * mimage/MHHillasExt.cc, mimage/MHHillasSrc.cc:
     - fixed binnings
     - removed obsolete pad->Update in Draw

   * mimage/MHImagePar.cc:
     - fixed setting of log-scale

   * mjobs/MJCalibrateSignal.cc:
     - fixed histogram titles and axis titles

   * mjobs/MJStar.cc:
     - added EventRate cut which cuts out events with extremely
       changing rates

   * mmain/MEventDisplay.cc:
     - unlock event display

   * msignal/MArrivalTime.cc:
     - fixed GetPixelContent

   * mastro/MAstroCamera.cc:
     - replaced "unknown" by "n/a"

   * mbase/MDirIter.[h,cc]:
     - added Sort function (not yet fully tested)

   * mgeom/MGeomCam.cc:
     - removed automatic setting of ReadyToSave in constructor
       PLEASE contact me if you have trouble with this

   * mraw/MRawFileRead.cc:
     - SetReadyToSave for run-header after reading

   * msignal/MExtractSlidingWindow.cc:
     - fixed ReInit-output



 2004/09/28: Raquel de los Reyes

   * mbase/MRunIter.cc
     - Changes in the AddRun function to read the old and the new DAQ 
       numbering format. Changes took place between runs 35487 and 
       00035488 (2004_08_30)



 2004/09/27: Abelardo Moralejo

   * mtemp/mpadova/macros/plotnoise.C
     - Added. Macro to compare the piled-up signals for many pixels and
       events together, intended to check the noise fluctuations.



 2004/09/23: Markus Gaug
 
   * mhcalib/MHCalibration*Cam.[h,cc]
     - replaced the TObjArrays by TOrdCollections because the TObjArrays
       do not enter the streamer. In case, the histograms want to be 
       stored, need to use an TOrdCollection, instead, like in the 
       MCalibration*Cam classes. 
     - simplified the naming of the histograms somewhat

   * msignal/MExtractBlindPixel.[h,cc]
     - added enum DataType_t to set in which MRawEvtData container the 
       blind pixel is found. The container of the blind pixel has changed 
       from MRawEvtData to MRawEvtData2

   * mcalib/MCalibrationBlindCam.[h,cc]
     - added function SetPulserColor which was only available in 
       MCalibrationBlindPix. 

   * mcalib/MCalibrationChargeBlindCam.[h,cc]
   * mcalib/MCalibrationChargeBlindPix.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - removed the two classes since obsolete

   * mcalib/MCalibrationCam.h
     - make SetPulserColor virtual

   * mcalib/MCalibrationQECam.[h,cc]
     - added new functions to display cornings vs. quantum efficiencies

   * mcalib/MCalibrationQEPix.cc
     - changed transmission probability of plexiglass from 0.96 to 0.92

   * mcalib/MCalibrationChargeCalc.[h,cc]
   * mcalib/MCalibrationRelTimeCalc.[h,cc]
     - added a CallPostProcess() function in order to avoid setting 
       back the fPreProcessed flag which otherwise impedes the linearity
       calibration to be performed

   * mhcalib/MHGausEvents.[h,cc]
     - added function SimulateGausEvents()



 2004/09/23: Abelardo Moralejo
   * mtemp/mpadova/macros/area.C, RanForestPD.C, gammarate.C
     - Added

   * macros/starmc.C
     - Added some missing RunHeaders in the output



 2004/09/19: Thomas Bretz

   * mbadpixels/MBadPixlesCam.[h,cc]:
     - added Reset-function. This makes sure, that the event-wise
       bad pixels determined by MBadPIxelsCalc are deleted after
       one execution of the event-loop and don't remain for all
       following data

   * mpointing/MPointingPos.cc, mreport/MReportDrive.cc:
     - initialize the variables in the constructor



 2004/09/17: Markus Gaug

   * mjobs/MJCalibration.[h,cc]
     - introduced two flags to avoid storage of containers or to 
       store also the histogram containers. Default is like it always
       was. 



 2004/09/17: Thomas Bretz

   * mhcalib/MH*.[h,cc]:
     - redone some changes from yesterday - for unknown reason they
       were lost

   * mbase/MTask.cc:
     - make sure that the correct number of executions is returned
       counter which cannot be reset properly)
     - added GetNumExecutionsTotal

   * mdata/MDataArray.cc:
     - some changes to Print-output

   * mfbase/MF.[h,cc]:
     - added GetRule

   * mfileio/MReadTree.cc:
     - some improvements to output

   * mhbase/MHMatrix.cc:
     - some improvements in Print

   * mhflux/MAlphaFitter.[h,cc]:
     - calculate the significance also from the first bins
     - added Copy
     - added print

   * mhflux/MHAlpha.[h,cc]:
     - added some fFit.Print to keep track of what's going on
     - give a name to the function, no name results in weired
       behaviour of the whole system. root people were already informed

   * mhflux/MHFalseSource.cc:
     - made lines of 2D-Gauss smaller

   * star.cc:
     - fixed handling of commandline arguments in batch mode

   * mhist/MHEvent.[h,cc], mmain/MEventDisplay.cc:
     - remove non working signal/ped rms



 2004/09/16: Abelardo Moralejo

     WARNING: Today 16/9, between 19.00 and 20.00 aprox, I accidentally 
     removed and/or changed some classes in mbase/ while updating the 
     camera simulation code in the CVS. I have put back everything to
     its original status as soon as I realized this. I am sorry! You 
     may have encountered compilation problems if you downloaded Mars 
     during that period. Everything should be OK now, please report
     otherwise.



 2004/09/16: Markus Gaug

   * mhcalib/MHCalibrationChargeBlindPix.cc
   * mhcalib/MHGausEvents.cc
     - added call to gROOT->GetListOfFunctions->Remove(f) in destructor

   * mhcalib/MHCalibrationBlindCam.[h,cc]
     - re-installed the Clone-function. Without, DrawClone() does not 
       Clone()



 2004/09/16: Thomas Bretz

   * mimage/MHillasCalc.[h,cc]
     - removed obsolete PrintSkipped

   * mhbase/MH.cc, mfilter/MFDeltaT.cc:
     - Form %5.1 when printing statistics

   * mfilter/MFDeltaT.cc:
     - enhaced filter criterias

   * mbase/MTime.h:
     - added IsMidnight

   * mbase/MTask.cc:
     - changed setw(3) to Form %5.1f

   * mjobs/MJCalibration.[h,cc]:
     - set default to 'nice' data-check display
     - removed obsolete FindColor

   * mjobs/MJPedestal.cc:
     - enhanced output

   * mjobs/MJob.cc:
     - small changes to output

   * mhflux, mhflux/Makefile, mhflux/FluxLinkDef.h mhflux/FluxIncl.h:
     - added

   * mhist/MHFalseSource.[h,cc], mhist/MHAlpha.[h,cc], 
     mhist/MHEffectiveOnTime.[h,cc]:
     - moved to mhflux

   * mhflux/MAlphaFitter.[h,cc]:
     - added

   * Makefile:
     - added mhflux

   * mhist/MHEffOnTimeTime.[h,cc], mhist/MHEffOnTimeTheta.[h,cc],
     mhist/MHEffOnTime.[h,cc], mhist/MHTimeDiffTime.[h,cc],
     mhist/MHTimeDiffTheta.[h,cc], mhist/MHFalseSource.[h,cc], 
     mhist/MHAlpha.[h,cc], mhist/MHEffectiveOnTime.[h,cc]:
     - removed

   * mhist/Makefile, mhist/HistLinkDef.h:
     - removed MHEffectiveOnTime
     - removed MHAlpha
     - removed MHFalseSource
     - removed MHFlux (temporary until adapted to MHEffectiveOnTime)
     - removed MHEffOnTimeTime  (use MHEffectiveOnTime instead)
     - removed MHEffOnTimeTheta (use MHEffectiveOnTime instead)
     - removed MHEffOnTime      (use MHEffectiveOnTime instead)
     - removed MHTimeDiffTime   (use MHEffectiveOnTime instead)
     - removed MHTimeDiffTheta  (use MHEffectiveOnTime instead)
     * If you need help to get MHEffectiveOnTIme working please ask me!

   * star.rc:
     - use scaled image cleaning by default

   * mmontecarlo/MMcCollectionAreaCalc.cc:
     - fixed some possible crashes

   * mhflux/MAlphaFitter.h:
     - remove function from global list

   * mhflux/MHFalseSource.cc:
     - added a 2D Gauss-Fit

   * mimage/MHillasSrc.[h,cc]:
     - fixed a bug in the output of DCA (wrong units)

   * mhcalib/MHCalibrationChargeBlindCam.[h,cc],
     mhcalib/MHCalibrationChargeBlindPix.cc,
     mhcalib/MHCalibrationChargeCam.[h,cc],
     mhcalib/MHCalibrationChargePINDiode.[h,cc],
     mhcalib/MHCalibrationRelTimeCam.[h,cc],
     mhcalib/MHGausEvents.[h,cc]:
     - took out the Clone-functions. Everything here seems to be
       a lot more stable without. I guess it is due to the change
       away from the TClonesArrays which makes the automatic
       streamed cloning work fine.
     - moved the removing of TF1 from the destructor to the 
       allocation of the objects. It seems that already before the
       destructor can remove the objects from these list 'shit happens'



 2004/09/15: Thomas Bretz

   * callisto.rc:
     - added new line for intensity calibration
     - fixed MJPedestalY.ExtractPedestal.PedestalUpdate (should be 'no')
     
   * mbase/MEvtLoop.cc:
     - changed such that returning kCONTINUE in MTaskList::Process
     is allowed

   * mbase/MTaskList.cc:
     - changed to return kCONTINUE if Task returned kCONTINUE

   * mcalib/MCalibrate.cc, mcalib/MCalibrationChargeCalc.cc:
     - cosmetics to output

   * mcalib/MCalibrateData.[h,cc]:
     - added an output/skip in case more than 90% of all pixels have
       been skipped

   * mjobs/MJCalibrateSignal.[h,cc]:
     - fixed to read the MJCalibration output
     - simplified reading container

   * mjobs/MJCalibration.[h,cc]:
     - simplified writing container

   * mjobs/MJob.[h,cc]:
     - added WriteContainer
     - added ReadContainer

   * mpedestal/MPedCalcFromLoGain.cc:
     - initialize default number of dump events (500)
     - log status of task in PreProcess

   * mimage/MHillasSrcCalc.cc:
     - fixed
     - THE USE OF THIS TASK IS DEPRICATED. PLEASE USE MHillasCalc INSTEAD!!!

   * mimage/MHillas.cc:
     - enhanced Paint



 2004/09/15: Markus Gaug

   * mcalib/MCalibrationQEPix.[h,cc]
     - replaced TArrays by MArrays
     - added Copy function

   * mcalib/MCalibration*Cam.[h,cc]
     - replace TObjArray by TOrdCollection, otherwise the streamer does not work

   * mimage/MHillasCalc.[h,cc]
     - move PrintSkipped(int,const char*) to PrintSkipped(UInt_t, const char*)
       otherwise always warnings about hidden function from MTask
  
   * mjobs/MJCalibration.cc
     - data check plot for the rel. time calibration

   * mhcalib/MHCalibrationCam.cc
     - set MBadPixelsPix::kLoGainNotFitted only if High-Gain Saturation
       had occurred. 

   * mhcalib/MHCalibrationChargeCam.cc
   * mcalib/MCalibrationChargeCalc.cc
     - simply calls to IntensityCam somewhat

   * mcalib/MCalibrationBlindCam.[h,cc]
     - added function GetFluxInsidePlexiglass() and variances



 2004/09/15: Abelardo Moralejo

   * macros/starmc.C, mccalibrate.C, starmc2.C
     - adapted to changes in MHillasCalc from August 23. The macros
       did no longer work, but only today did someone report it... 
       Sorry!



 2004/09/14: Antonio Stamerra

   * mtrigger/MTriggerIPR.h:
     - added "=" to (idx >= gsNTrigPix) in GetPixelContent

   * macros/readIPR.C:
     - new macro to read and display the IPRs

   * macro/dohtml.C:
     - added readIPR
		



 2004/09/14: Markus Gaug

   * mcalib/MCalibChargeCalc.[h,cc]
     - added IntensityBadPixelsCam and IntensityQECam

   * mhcalib/MHCalibration*Cam.[h,cc]
   * mcalib/MCalibColorSteer.[h,cc]
     - added MBadpixelsIntenstiyCam

   * mbadpixels/MBadPixelsIntensityCam.[h,cc]
   * mcalib/MCalibrationIntensity*Cam.[h,cc]
   * mcalib/MCalibration*Cam.[h,cc]
     - replace TClonesArray by TObjArray

   * mjobs/MJCalibration.cc
     - took out FindColor() which is now taken care of by 
       MCalibColorSet
     - introduced MBadPixelsIntensityCam

   * mhcalib/MHGausEvents.cc
     - some changes in Draw for the case that there is no histogram

   * manalysis/MHPedestalPix.[h,cc]
   * manalysis/MHPedestalCam.[h,cc]
     - moved to mpedestal/

   * mpedestal/PedestalLinkDef.h
   * msignal/SignalLinkDef.h
     - replaced some '++' by '+'s.

   * mhbase/MH.cc
     - removed an infinite loop created some hours before.

   * mhcalib/MHGausEvents.[h,cc]
     - put fEventFrequency back from MHCalibraionPix.
     - always delete fHPowerProbability, if existing. 
 
   * mhcalib/MHCalibrationPix.[h,cc]
     - take out fEventFrequency



 2004/09/14: Thomas Bretz

   * mbase/MFilter.[h,cc]:
     - added PrintSkipped

   * mbase/MTask.[h,cc]:
     - added PrintSkipped

   * mfilter/FilterLinkDef.h, mfilter/Makefile:
     - added MFDeltaT

   * mhbase/MFillH.[h,cc]:
     - added forwarding of number of executions

   * mhbase/MH.[h,cc]:
     - simplified the new Projection functions
     - added PrintSkipped
     - increased ClassDef version number to 2

   * mhcalib/HCalibLinkDef.h:
     - removed second + from MHGausEvents

   * mjobs/MJCalibration.cc:
     - fixed a comment

   * mjobs/MJStar.cc:
     - added MFDeltaT

   * mpedestal/MPedCalcFromLoGain.cc: 
     - fixed a typo in a comment


 
 2004/09/13: Antonio Stamerra

   * mtrigger/MTrigger*.h:
     - removed inheritance from MCamEvent (except MTriggerIPR).
     - Added Get... functions to retrieve the data members

   * mreport/MReportTrigger.[h,cc]
     - added fTriggerTable, fL1(L2)Triggertable to the data members



 2004/09/13: Markus Gaug 
  
   * mjobs/MJCalibration.[h,cc]
     - added MCalibrationIntensityBlindCam
     - replaced MCalibrationChargeBlindCam by MCalibrationBlindCam

   * mcalib/MCalibrationPix.[h,cc]
     - added Copy function

   * mcalib/MCalibrationIntensityBlindCam.[h,cc]
     - new class for Intensity calibration

   * mcalib/MCalibrationBlindCam.[h,cc]
   * mcalib/MCalibrationBlindPix.[h,cc]
     - new containers based on MCalibrationCam and MCalibrationPix. 
     - similiar to MCalibrationChargePix and MCalibrationChargeCam, but 
       slightly different data members. In order not to get confused with
       already stored data, this is for the moment a second, equivalent 
       class. 
  
   * mcalib/MCalibrationChargeCalc.[h,cc]
     - added Intenisty Calibration for blind pixel
     - take new MCalibrationBlindCam instead of MCalibrationChargeBlindCam

   * mcalib/MCalibrationCam.cc
   * mcalib/MCalibrationChargeCam.cc
   * mcalib/MCalibrationQECam.cc
   * mcalib/MCalibrationRelTimeCam.cc
     - initialize fAverageBadPixels in derived classes

   * mhcalib/MHCalibrationChargeBlindCam.[h,cc]
   * mhcalib/MHCalibrationChargeBlindPix.[h,cc]
     - derive class from MHCalibrationCam now and treat pointers 
       like done in MHCalibrationChargeCam
     - implement Intensity Calibration
     - write results to MCalibrationBlindCam instead of 
       MCalibrationChargeBlindCam 

   * mhcalib/MHCalibrationCam.h
     - took out the "->" for all pointers
     - introduce new steering flags: 
       kLoGain, kOscillations, kAverageing, kSizeCheck

   * mhcalib/MHCalibrationChargeCam.[h,cc]
     - wrote a ReadEnv function

   * mbase/MFilter.[h,cc]:
     - added PrintSkipped

   * mbase/MTask.[h,cc]:
     - added PrintSkipped

   * mfilter/FilterLinkDef.h, mfilter/Makefile:
     - added MFDeltaT

   * mhbase/MFillH.[h,cc]:
     - added forwarding of number of executions

   * mhbase/MH.[h,cc]:
     - simplified the new Projecttion functions
     - added PrintSkipped
     - increased ClassDef version number to 2

   * mhcalib/HCalibLinkDef.h:
     - removed second + from MHGausEvents

   * mjobs/MJCalibration.cc:
     - fixed a comment

   * mjobs/MJStar.cc:
     - added MFDeltaT

   * mpedestal/MPedCalcFromLoGain.cc: 
     - fixed a typo in a comment



 2004/09/13: Thomas Bretz

   * merpp.cc:
     - added MTrigger* containers to output

   * mastro/MAstro.[h,cc]:
     - added member function GetDistOnPlain

   * mbase/MDirIter.[h,cc]:
     - renamed Check to CheckEntry

   * mbase/MMath.[h,c]:
     - added functions for parabolic interpolation

   * mbase/MStatusArray.[h,cc]:
     - added functions to access contents

   * mhbase/MBinning.[h,cc]:
     - added RemoveFirstEdge
     - added RemoveLastEdge
     - removed some obsolete const-casts

   * mhbase/MH.[h,cc]:
     - added RemoveFirstBin

   * mhist/MHEffectiveOnTime.[h,cc]:
     - fixed number of bins
     - remove first edge when finalizing
     - added plots for lambda and NDF

   * mjobs/MJStar.cc:
     - removed a duplicate line

   * mpointing/MPointing.[h,cc]:
     - added support for TVector3
     - added ClassDef and ClassImp for AltAz
     - added ClassDef and ClassImp for ZdAz

   * mpointing/MSrcPosFromModel.[h,cc]:
     - changed to directly calculate the source position 
       from a pointing model

   * mpointing/PointingLinkDef.h:
     - added AltAz
     - added ZdAz
     
   * mreport/MReportTrigger.[h,cc]:
     - removed '!' from data members
     - increased ClassDef to 2

   * mstarcam/MStarCamTrans.cc:
     - added a single line of comment

   * mtrigger/MTrigger*.[h,cc]:
     - updated class description and title

   * mcalib/MCalibrationCam.h:
     - removed -> from fPixels, fAverageArea/Sectors

   * mcalib/MCalibrationChargeCalc.cc:
     - small changes to output
     - simplification of an if-else block

   * mcalib/MCalibrationIntensityCam.cc:
     - removed double deletion of fCams - caused a crash

   * mcalib/MCalibrationIntensityCam.h:
     - removed -> from fCams

   * mcalib/MCalibration*.h:
     - removed some obsolete (empty) destructors

   * mastro/MVector3.[h,cc]:
     - added from MAstroCatalog

   * mastro/MAstroCatalog.[h,cc]:
     - removed MVector3

   * mastro/Makefile:
     - added MVector3



 2004/09/11: Markus Gaug
 
   * mbase/MArray.[h,cc]
     - moved function StripZeros(TArrayD &arr) to MArrayD
     - moved function StripZeros(TArrayF &arr) to MArrayF

   * mbase/MArrayD.[h,cc]
     - new function StripZeros() 

   * mbase/MArrayF.[h,cc]
   * mbase/Makefile
   * mbase/BaseLinkDef.h
     - new class analogously to MArrayD

   * mhbase/MH.[h,cc]
     - added functions ProjectArray(MArrayD,...) 
       and ProjectArray(MArrayF,...)

   * mtools/MFFT.[h,cc]
     - added functions:
	  MArrayF* PowerSpectrumDensity(const MArrayI *array);  
	  MArrayF* PowerSpectrumDensity(const MArrayF *array);
	  MArrayD* PowerSpectrumDensity(const MArrayD *array);

   * mhcalib/MHGausEvents.[h,cc]
     - made fEvents an MArrayF

   * mhcalib/MHCalibrationPix.[h,cc]
     - changed function name SetSaturated to AddSaturated

   * mhcalib/MHCalibrationChargeCam.cc
   * mhcalib/MHCalibrationRelTimeCam.cc
     - take cloning of averaged sectors out of the Clone() function

   * mbadpixels/MBadPixelsIntensityCam.[h,cc]
   * mbadpixels/Makefile
   * mbadpixels/BadPixelsLinkDef.h
     - new class for the intensity calibration



 2004/09/10: Markus Gaug

   * mhcalib/
   * mcalib/
     moved all MHCalibration* classes to new directory mhcalib/

   * mhcalib/MHCalibrationCam.[h,cc]
     - New base function InitHiGainArrays and InitLoGainArrays
       Initializing the histograms in a standard way
     - ReadEnv: added NBins, First and Last

   * mhcalib/MHCalibrationRelTimeCam.[h,cc]
   * mhcalib/MHCalibrationChargeCam.[h,cc]
   * mhcalib/MHCalibrationTestCam.[h,cc]
   * mhcalib/MHCalibrationTestTimeCam.[h,cc]
     - use new functions InitHiGainArrays and InitLoGainArrays
 
   * mhcalib/MHCalibrationRelTimePix.[h,cc]
   * mhcalib/MHCalibrationTestPix.[h,cc]
   * mhcalib/MHCalibrationTestTimePix.[h,cc]
     - removed



 2004/09/10: Antonio Stamerra

   * mreport/MReportTrigger.[h,cc]:
     - updated to read IPRs and to fill MTrigger{xxx} containers

   * mreport/Makefile:
     - added include for mtrigger   

   * Makefile:
     - added mtrigger directory

   * NEWS:
     - updated



 2004/09/10: Thomas Bretz

   * mhist/MHCamera.cc:
     - removed some obsolete const_casts
     - fixed an (un)signed comparison warning

   * mbase/MArray*.h:
     - added const &operator[](UInt_t i) const

   * mhist/MHEffectiveOnTime.[h,cc]:
     - changed to support variable bin-sizes in time to keep
       the statistic per bin constant

   * mhbase/MBinning.[h,cc]:
     - added function to enhance the number of bins by one

   * mbase/MTime.[h,cc]:
     - added function to add one NanoSecond

   * mjobs/MJStar.cc:
     - removed Histogram of effective on-time vs time

   * mhist/Makefile, mhist/HistLinkDef.h:
     - added MHEffectiveOnTime

   * mhbase/MH3.[h,cc]:
     - fixed a bug in SetupFill which was introduced when I allowed
       set the axis titles from the object title
     - added support for unique-profile names

   * Makefile:
     - added new dir mhcalib

   * mhcalib/HCalibIncl.h:
     - added - was missing

   * mcalib/CalibLinkDef.h:
     - fixed some typos



 2004/09/09: Markus Gaug
 
   * mcalib/MHCalibrationChargeCam.[h,cc]
     - initialize bins directly here. Remove MHCalibraitonChargeHiGainPix
       and MHCalibrationChargeLoGainPix classes

   * mcalib/MHCalibrationChargeHiGainPix.[h,cc]
   * mcalib/MHCalibrationChargeLoGainPix.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - removed first two classes

   * mcalib/MCalibrationCam.[h,cc]
     - make default for GetNumUnsuitable and GetNumUnreliable

   * mcalib/MCalibrationIntensityCam.[h,cc]
   * mcalib/MCalibrationIntensityChargeCam.[h,cc]
   * mcalib/MCalibrationIntensityQECam.[h,cc]
   * mcalib/MCalibrationIntensityRelTimeCam.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - new classes for the intensity calibration. First is base class, 
       other derive from it.

   * mcalib/MHGausEvents.[h,cc]
   * mcalib/MHCalibrationPix.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - put typical calibration members into new base class MHCalibrationPix
       and leave only typical Gaussian behaviour members in MHGausEvents.
     - all MHCalibration*Pix classes derive now from MHCalibrationPix

   * mcalib/MHCalibrationCam.[h,cc]
     - operators return MHCalibrationPix instead of MHGausEvents
     - new function ResetHists() needed by MCalibColorSteer
     - removed TArrayI *Overflow.
       
   * mcalib/MCalibColorSet.[h,cc]
     - finished

   * mcalib/MCalibColorSteer.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - new task to be executed before the calibration tasks. Steers the 
       occurrance of multiple intensities and the new *Intensity* 
       containers

   * mcalib/MHCalibrationChargePix.[h,cc]
   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
   * mcalib/MHCalibrationChargePINDiode.[h,cc]
   * mcalib/MHCalibrationRelTimePix.[h,cc]
   * mcalib/MHCalibrationTestPix.[h,cc]
   * mcalib/MHCalibrationTestTimePix.[h,cc]
   * manalysis/MHPedestalPix.[h,cc]
     - derive from MHCalibrationPix
     - new functions Reset()

   * mcalib/MHCalibrationChargeCam.cc
   * mcalib/MHCalibrationRelTimeCam.cc
   * mcalib/MHCalibrationTestCam.cc
   * mcalib/MHCalibrationTestTimeCam.cc
     - able to recognize an *Intensity*Cam if in MParList

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - able to recognize an *Intensity*Cam if in MParList
     - set pulser pattern accordingly in Process from MRawEvtHeader     
     - add switches to perform types of checks or not

   * mcalib/MCalibrationRelTimeCalc.[h,cc]
     - able to recognize an *Intensity*Cam if in MParList

   * mjobs/MJCalibration.[h,cc] 
     - fixed flags
     - included intensity calibration (MJCalibration::SetIntensity())
       (default is standard calibration like before)

   * msignal/MExtractor.cc
   * msignal/MExtractTimeHighestIntegral.cc
   * msignal/MExtractSlidingWindow.cc
   * msignal/MExtractPINDiode.cc
   * msignal/MExtractFixedWindow.cc
   * msignal/MExtractFixedWindowSpline.cc
   * msignal/MExtractBlindPixel.cc
   * msignal/MExtractAmplitudeSpline.cc
     - removed some possible bugs in the case that no LoGain is 
       available at all.



 2004/09/09: Thomas Bretz

   * mhvstime/MHPixVsTime.[h,cc], mhvstime/MHVsTime.[h,cc],
     mhvstime/MHSectorVsTime.[h,cc], mhbase/MH3.[h,cc]:
     - changed such that the axis titles can be set via the 
       title or (if available) a MBinning

   * mhbase/MBinning.cc:
     - added HasTitle

   * mjobs/MJPedestal.cc:
     - added lost UseData again to CheckEnvLocal

   * mjobs/MJStar.cc:
     - fixed handling of Axis titles of histograms

   * mjobs/Makefile:
     - added path to mhvstime

   * manalysis/MParameters.[h,cc]:
     - added Print() functions

   * mfileio/MReadReports.[h,cc], mfileio/MReadTree.[h,cc]:
     - moved setting of StreamId from MReadReports To MReadTree

   * mhbase/MH.cc:
     - workaround all the this which are reset in TAxis::Set
  
   * mfileio/MReadRflFile.[h,cc]:
     - added missing abstract functions

   * star.cc, callisto.cc, mjobs/MJStar.[h,cc], 
     mjobs/MJCalibrateSignal.[h,cc]:
     - added option to process monte carlo files

   * mhist/MHEffectiveOnTime.[h,cc]:
     - added a histogram taking the on-time vs time
     - fixed handling of Draw/Project/Paint



 2004/09/08: Thomas Bretz
 
   * mbadpixels/MBadPixelsCam.[h,cc], mbase/MParContainer.[h,cc],
     mhvstime/MHPixVsTime.cc, mhvstime/MHSectorVsTime.cc:
     - replaces ifstream by istream in AsciiRead

   * mbase/MTime.[h,cc]:
     - fixed comment about SetTimeFormat
     - added AsciiRead
     - added AsciiWrite
     - added Minus1ns

   * mfileio/MWriteAsciiFile.cc:
     - write all containers if one has its SetReadyToSaveFlag set

   * mhist/MHEffectiveOnTime.[h,cc]:
     - for MEffectiveOnTime fit the whole projection instead
       of using the sum of the theta-bins

   * mhvstime/MHVsTime.[h,cc]:
     - replaces ifstream by istream in AsciiRead
     - fixed to support MStatusDisplay
     - do not fill the same time twice
     - added support for error bars

   * mjobs/MJStar.cc:
     - replaced MReadMarsFile by MReadReports
     - added MEventRateCalc and corresponding histogram
     - added MHEffectiveOnTime



 2004/09/07: Thomas Bretz

   * merpp.cc:
     - added lost update-option

   * mjobs/MJCalibrateSignal.cc:
     - fixed a compiler error geom.ClassName() --> geom

   * mraw/MRawRunHeader.cc:
     - added 'header' option to Print-function

   * msql/MSQLServer.[h,cc]:
     - added new onstructors taking TEnv as argument

   * macros/sql/*.C:
     - updated to use sql.rc

   * macros/sql/sql.rc:
     - added

   * mcalib/MCalib*.[h,cc]:
     - simplified the includes a little bit to accelerate compiling
       and maybe to secure everything from compiler bugs a bit more

   * callisto.cc, star.cc:
     - do not allow implicit batch-mode

   * showlog.cc:
     - removed an unused variable

   * manalysis/MEventRateCalc.[h,cc]:
     - started implementing a corrsponding time

   * manalysis/MParameters.[h,cc], manalysis/AnalysisLinkDef.h:
     - added MParameterDerr

   * mbadpixels/MHBadPixels.[h,cc]:
     - removed obsolete fPedPhotCam

   * mbase/MTime.[h,cc]:
     - added AddMilliSeconds
     - added SetMean




 2004/09/07: Markus Gaug

   * mcalib/MHGausEvents.[h,cc]
     - added function IsOnlyUnderflow()

   * mcalib/MHCalibrationCam.[h,cc]
   * mcalib/MHCalibrationChargeCam.cc
   * mcalib/MHCalibrationRelTimeCam.cc
     - added bool kLoGain which is set if number of LoGain Slices in 
       MRawRunHeader is not 0. This excludes the low gain calculations 
       in case that there is no lowgain at all. 

   * mcalib/MCalibrationQECamMagic.cc
     - implemented Nicola's solution for the compiling problem of the 
       TArrayD's 

   * mcalib/MCalibColorSet.cc
     - implemented intensity recognition

   * mhist/MHCamera.[h,cc]
     - included functions AddCamContent(MArrayD...) and 
       SetCamContent(MArrayD... )



 2004/09/06: Thomas Bretz

   * mjobs/MJCalibrateSignal.[h,cc]:
     - read camera geometry from calib-file

   * mjobs/MJCalibration.[h,cc]:
     - write camera geometry to calib-file

   * macros/sql/filldotraw.C, macros/sql/fillcalib.C:
     - added

   * macros/sql/filldot*.C
     - fixed some comments

   * mpointing/MPointingPosCalc.cc:
     - removed some obsolete comments



 2004/09/05: Markus Gaug

   * mcalib/MCalibColorSet.[h,cc]
     - finished setting of the asumed pulse pattern



 2004/09/03: Markus Gaug

   * mcalib/MCalibrationChargeBlindCamTwoNewStyle.cc
     - small modification in QE of new blind pixel

   * mcalib/MCalibrationChargeCam.[h,cc]
     - new functions:
       GetAveragedConvFADC2PhotPerArea,  
       GetAveragedConvFADC2PhotPerSector, 
       GetAveragedArrivalTimeMeanPerArea,  
       GetAveragedArrivalTimeMeanPerSector, 
       GetAveragedArrivalTimeRmsPerArea,  
       GetAveragedArrivalTimeRmsPerSector, 
       to be used by the data check.

   * mcalib/MCalibrationChargePix.cc
     - found small bug concerning the MBadPixelpix::kChargeSigmaNotValid
       pixels which are recovered since last week. 

   * mcalib/MCalibrationQEPix.[h,cc]
   * mcalib/MCalibrationChargeCalc.[h,cc]
     - fixed UpdateCombinedMethod, removed AddAverageCombinedQEs

   * mcalib/MCalibrationQECam.[h,cc]
     - new array with cornings, not included in the I/O
     - added copy function

   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
   * mcalib/MCalibrationQECamMagic.[h,cc]
   * htmldoc/images/Cornings.gif
     - new class derived from MCalibrationQECam which intialized the 
       cornings for the Magic camera



 2004/09/03: Wolfgang Wittek

   * mbadpixels/MHBadPixels.[h,cc]
     - new class; histograms for bad pixels

   * mbadpixels/Makefile, mbaspixels/BadPixelsLinkdef.h
     - MHBadPixels added

   * mhist/MHSigmaTheta.[h,cc]
     - remove MSigmabar stuff

   * mhist/Makefile, mhist/HistLinkdef.h
     - MHSigmaTheta added
   
   * manalysis/Makefile, manalysis/AnalysisLinkdef.h
     - remove MPedestalWorkaround and MSourcePosFromStarPos
     - add MPad

   * manalysis/MPad.[h,cc]
     - remove *BlindPixel* stuff
     - remove MSigmabar stuff



 2004/09/03: Thomas Bretz

   * manalysis/MCameraData.[h,cc], mimage/MImgCleanStd.[h,cc]:
     - implemeted cleaning in absolute number of photons
     - moved output of setup of image cleaning to PreProcess
 
   * mhbase/MBinning.[h,cc]:
     - added const-qualifier to Apply

   * mhist/MHAlpha.cc:
     - let TLatex use NDC coordinates

   * mimage/MHHillasSrc.cc:
     - cosmetics

   * mreport/MReportDrive.[h,cc]:
     - added Print member function

   * mpointing/MSrcPosFromModel.cc:
     - removed an obsolete include

   * mraw/MRawEvtHeader.h:
     - added SetCalibrationPattern as a workaround for the runs
       which don't have the correct pattern set

   * mcalib/MCalibColorSet.[h,cc]:
     - added as a workaround for the runs which don't have the
       correct pattern set

   * mcalib/Makefile, mcalib/CalibLinkDef.h:
     - added MCalibColorSet



 2004/09/02: Thomas Bretz

   * star.cc:
     - fixed treatment of batch-mode

   * mbase/MParContainer.h:
     - added a comment

   * mbase/MParList.[h,cc]:
     - added FindTaskListWithTask

   * mbase/MTaskList.[h,cc]:
     - added sanity checks in AddToList
     - added FindTaskList

   * mhbase/MH3.[h,cc]:
     - moved some drawing code from Draw to Paint
     - added possibility to set logarithmic axis manually
     - fixed a bug which caused MH3s in MFillH::Finalize to disappear

   * mhist/MHAlpha.cc:
     - paint significance and othe rinformations
     - unified fit in Finalize and Paint
     - replaced significance calculation by Li/Ma

   * mhvstime/MHVsTime.[h,cc]:
     - added option to average data

   * mjobs/MJCalibrateSignal.cc:
     - added MPointingPosCalc for "Drive"

   * mmain/MEventDisplay.cc:
     - fixed some problems with the display

   * msignal/MArrivalTime.[h,cc]:
     - added Print()

   * manalysis/MEventRateCalc.[h,cc]:
     - added the difference in time between two events into the output
     - made setup more flexible

   * mbase/MContinue.cc:
     - fixed a bug which caused a problem if MContinue was not in the
       main tasklist

   * mimage/MHImagePar.[h,cc], mimage/MHNewImagePar.[h,cc]:
     - added Paint function to support logarithmic y-axis scles



 2004/09/01: Thomas Bretz

   * mfileio/MWriteRootFile.[h,cc]:
     - do not add a container which is already in the list
     - replaced fNameCont by fTitle in MRootFileBranch

   * mgeom/MGeomPix.[h,cc]:
     - declared tan(30)
     - added GetL member function

   * mhist/MHAlpha.cc:
     - added a logging output

   * mhist/MHFalseSource.[h,cc]:
     - shift by MSrcPosCam introduced
     - fixed on-off plot
     - fixed changed return value MHillasSrc::Calc
     - as a workaround for some crashes removed SetBit(kCanDelete)
       of catalog

   * mimage/MHHillasSrc.cc, mimage/MHillasSrc.cc:
     - some small fixes to new plots
     - some cosmetics to the code

   * mimage/MHillas.cc, mimage/MHillasExt.cc, 
     mimage/MImagePar.cc, mimage/MImgCleanStd.cc,
     mimage/MNewImagePar.cc:
     - removed obsolete include of fstream

   * mpointing/Makefile, mpointing/PointingLinkDef.h:
     - added new class MPointingPosFromModel
     
   * mpointing/MPointingPosFromModel.[h,cc]:
     - added



 2004/08/31: Daniel Mazin

   * manalysis/MSigmabarCalc.h:
     - added function SetNamePedPhotCam to set the name of the 
       MPedPhotCam container



 2004/08/31: Thomas Bretz

   * star.cc:
     - implemented batch- and quit-mode

   * mastro/MAstroCatalog.h:
     - implemented default argument for magnitude in MVector3
       setters

   * mbase/MDirIter.cc:
     - fixed a typo

   * mfileio/MWriteRootFile.cc:
     - fixed a typo

   * mimage/MHHillasSrc.[h,cc], mimage/MHillasSrc.[h,cc]:
     - added DCA and DCADelta as discussed with the ETH people
     - incrementes version number of MHillasSrc
     - changed return type of MHillasSrc::Calc from Bool_t to Int_t

   * mimage/MHillasCalc.cc:
     - changed to support error code 6

   * mpointing/MPointingPos.h:
     - added Getter for ZdA7Az in rad

   * mpointing/MPointingPosCalc.cc:
     - fixed a bug which converted Ra/Dec wrongly to rad

   * mmain/MEventDisplay.cc:
     - switched on usage of context menu in constructor



 2004/08/30: Markus Gaug

   * mcalib/MCalibrationChargeCalc.cc
   * mcalib/MCalibrationTestCalc.cc
   * mcalib/MCalibrationRelTimeCalc.cc
   * mcalib/MHCalibrationTestCam.cc
   * mcalib/MHCalibrationTestTimeCam.cc
     - exchanged all arrays by TArray's

   * mcalib/MHCalibrationChargeCam.[h,cc]
   * mcalib/MHCalibrationRelTimeCam.[h,cc]
     - exchanged all arrays by MArray's



 2004/08/30: Thomas Bretz

   * showlog.cc, showplot.cc:
     - enhanced functionality

   * callisto.cc, mjobs/MSequence.cc:
     - enhanced comments



 2004/08/29: Markus Gaug
 
   * mbadpixels/MBadPixelsPix.[h,cc] 
   * mbadpixels/MBadPixelsCam.cc
   * mjobs/MJCalibration.cc 
     - introduced new calibration bits: kHiGainOverFlow 
       and kLoGainOverFlow being filled when the calibration histograms 
       overflow. Will cause an kUnsuitableRun afterwards. 
     - added in datacheck-display of MJCalibration

   * mcalib/MHCalibrationChargeHiGainPix.[h,cc]
   * mcalib/MHCalibrationChargeLoGainPix.[h,cc]
     - default lower histogram limit moved to -100.5

   * mcalib/MHCalibrationCam.h
   * mcalib/MHCalibrationChargeCam.cc
     - make TArrayI out of fOverFlowHiGain and fOverFlowLoGain

   * mjobs/MJCalibration.[h,cc]
     - finished datacheck display with the arrival times.



 2004/08/27: Florian Goebel

   * mpedestal/MPedestalPix.h
     - correct calculation of error of RMS



 2004/08/27: Hendrik Bartko

   * msignal/MExtractTime.cc
     - check that the pixel has a low gain before calculating the time 
       for the low gain in case of a saturated high gain.



 2004/08/27: Markus Gaug

   * mcalib/MCalibrationChargeCalc.cc
     - adapted to possible use of MPedCalcFromLoGain

   * mjobs/MJPedestal.h
     - added function SetUseData() and IsUseData()

   * mcalib/MCalibrationQEPix.cc
     - changed initialization of fNorm... variables from 1. to -1. 
       Like this, an accidental not-filling of MCalibrationQECam will
       be recognized easier.

   * mcalib/MCalibrationChargeCalc.cc
   * mcalib/MCalibrationChargePix.[h,cc]
     - change treatment of pixels with kSigmaNotValid

   * mpedestal/MPedestalCam.cc
     - added functions GetAveragedPedPerArea  
                       GetAveragedPedPerSector
                       GetAveragedRmsPerArea  
                       GetAveragedRmsPerSector
       to be used for the datacheck.

     - fixed a small bug in the calculation of the PedestalRms Error 
       in GetPixelContent()

   * macros/bootcampstandardanalysis.C 
   * macros/mccalibrate.C 
   * macros/pedphotcalc.C
   * macros/starmc.C:
     - replace MCalibrate by MCalibrateData

   * mjobs/MJCalibration.h
     - re-added function SetInput which had been removed recently 
       (probably by accident)

   * mjobs/MJCalibration.cc
     - return kTRUE in function FindColor() if the colour has already 
       been set (e.g. by the macro).

   * mcalib/MHGausEvents.cc
     - removed one call to fHPowerProbability->SetDirectory(0) which was
       at a completely wrong place in CreateEventXaxis(). Probably a 
       slip of the emacs-pen.
 
   * mcalib/MJExtractSignal.cc
     - replace MCalibrate by MCalibrateData



 2004/08/27: Thomas Bretz

   * Makefile:
     - added comments how to link statically
     - added star again

   * callisto.cc: 
     - fixed some output
     - fixed batch mode

   * mbadpixels/Makefile:
     - added a comment

   * mbase/BaseLinkDef.h, mbase/Makefile:
     - added MArrayI

   * mbase/MArrayI.[h,cc]:
     - added

   * mbase/MArrayD.cc:
     - fixed some comments

   * mcalib/MCalibrateData.[h,cc]:
     - unified CalibratePedestal and CalibrateData. Calling GetConvFactor twice
       took a lot of time.

   * mjobs/MJCalibrateSignal.cc, mjobs/MJPedestal.cc, MJCalibration.cc:
     - added two empty lines to output if finished
     - added a sanity check around the call to CheckEnv

   * mpedestal/MPedPhotCam.cc:
     - use faster MArrays in ReCalc
     - accelerated GetPixelContent

   * msignal/MExtractTimeFastSpline.cc:
     - accelerated a bit by defining
          Float_t higainklo = fHiGainSecondDeriv[klo];
          Float_t higainkhi = fHiGainSecondDeriv[khi];
       instead of accesing the arrays many times inside the loops.
       Somebody should do the same for logain.

   * mraw/MRawEvtData.cc:
     - fixed a bug in InitArrays

   * showlog.cc:
     - added some more functionality

   * star.cc:
     - changed to use new MJStar

   * mfileio/MChain.cc:
     - added namespace

   * mfileio/MReadTree.cc:
     - added a call to ResetTree as first call in PreProcess. Using
       MReadReports with a tree missing in the file mysteriously
       crashed because TChain::fTreeNumber was set already by
       a root-miracle.

   * mjobs/JobsLinkDef.h, mjobs/Makefile:
     - added MJStar

   * mjobs/MJCalibrateSignal.cc:
     - replaced MReadMarsFile by MReadReports

   * mmain/MEventDisplay.cc:
     - fixed reading of resource file

   * mbase/MStatusDisplay.cc:
     - made Reset() batch-mode safe

   * mcalib/MCalibrateData.cc:
     - simplified a calculation

   * mfileio/MReadReports.[h,cc]:
     - implemented GetEntries()
     - implemented GetFileName()
     - changed kHasMaster from BIT(15) to BIT(14)
     - fixed a bug in AddTree which caused the Master-Bit to be
       set for the wrong object

   * mfileio/MReadTree.cc:
     - return 0 entries if entrie==TChain::kBigNumber

   * msignal/MExtractFixedWindow.cc:
     - updated output to fitz into a std 80-col console

   * mars.rc, star.rc:
     - added



 2004/08/26: Wolfgang Wittek

   * mstarcam/MStarCamTrans.[h,cc]
     - include optical aberration when plotting the grid

   * mtemp/MTelAxisFromStars.[h,cc]
     - add member functions SetPointingPosition and SetSourcePosition



 2004/08/26: Markus Gaug

   * mjobs/MJExtractCalibTest.[h,cc]
     - derived from MJob
     - removed obsolete code (which has been moved to MJob)

   * macros/calibration.C
     - adapt code to changes done in MJob



 2004/08/26: Thomas Bretz

   * mbase/MMath.cc:
     - changed calculation of sign of SignificanceLiMaSigned due to
       bug #131

   * readdaq.cc, readraw.cc:
     - updated to support MRawEvtData2
     
   * mraw/MRawEvtData.[h,cc], mraw/MRawFileRead.cc, 
     mraw/MRawFileWrite.[h,cc], mraw/MRawRead.[h,cc], 
     mraw/MRawSocketRead.cc:
     - updated to support negative pixel ids

   * mraw/MRawRunHeader.[h,cc]:
     - increased max format version to 4
     - added GetNumNormalPixels
     - added GetNumSpecialPixels
     - added GetMinPixId
     - added GetMaxPixId

   * merpp.cc: 
     - added a new option --auto-time to get the time range for 
       cc and/or caco data from the run header of the raw data

   * callisto.cc: 
     - some additional checks
     - more comments

   * mfileio/MReadReports.h:
     - overwrote GetFileName - otherwise CINT refuses to create an object

   * mbadpixels/MBadPixelsTreat.[h,cc]:
     - added an primitive interpolation of arrival times which
       tries to keep the random arrival time for pixels without
       signal
     - fixed a bug which could cause a crash
     - added more control over the pedestal treatment



 2004/08/25: Thomas Bretz

   * callisto.cc:
     - updated handling of command line parameters
     - added MJPedestal in second loop
     - changed MJ* to support new MJob base class

   * mjobs/JobsLinkDef.h, mjobs/Makefile:
     - added MJob

   * mjobs/MJob.[h,cc]:
     - added

   * mjobs/MJCalibrateSignal.[h,cc], mjobs/MJCalibrateSignal.[h,cc],
     mjobs/MJCalibration.[h,cc], mjobs/MJPedestal.[h,cc]:
     - derived from MJob
     - removed obsolete code (which has been moved to MJob)

   * mjobs/MSequence.[h,cc]:
     - use MDirIter::GetEntries in SetupRuns
     - implemented raw-file mode
     - added GetNum*Runs

   * callisto.rc:
     - fixed

   * showlog.cc, mbase/MTime.cc, mreport/MReportFileReadCC.cc:
     - some fixes for gcc 2.95.3

   * mbase/MEvtLoop.cc:
     - allow prefix argument in ReadEnv

   * mbase/MLog.cc:
     - added options for log-file and html-file

   * mbase/MTaskEnv.[h,cc]:
     - added comment
     - implemented dummy/skip-mode

   * mjobs/MJCalibrateSignal.cc:
     - removed non existance check from reading extractors (MTaskEnv dummy mode!)
     - small changed to output

   * mjobs/MJCalibration.cc:
     - added a cast for gcc 2.95.3
     - allow dummy mode MTaskEnvs

   * mjobs/MJPedestal.[h,cc]:
     - implemented CheckEnv

   * msignal/MExtractTime.cc:
     - fixed Print()-output

   * msignal/MExtractTimeFastSpline.[h,cc]:
     - added ReadEnv
     - added Print



 2004/08/25: Wolfgang Wittek

   * mpointing/MPointingPos.h
     - add member function GetHa()



 2004/08/24: Thomas Bretz

   * Makefile:
     - added callisto
     - added showplot
     - removed star
     - removed status

   * merpp.cc:
     - updated Usage()
     - use some new feature or MArgs

   * callisto.cc:
     - a new program to calculate the calibration

   * callisto.rc:
     - resource file for callisto

   * showplot.cc:
     - a new program to show data check plots from a file

   * mbase/MArgs.[h,cc]:
     - added Get*AndRemove with a default argument

   * mbase/MDirIter.[h,cc]:
     - added Add(MDirIter &)

   * mbase/MEvtLoop.cc:
     - check for the existance of the resource file

   * mbase/MLog.[h,cc]:
     - added Usage()

   * mbase/MTaskEnv.cc:
     - added output in ReInit

   * mjobs/MJCalibration.cc, mjobs/MJPedestal.cc:
     - added Overwrite option
     - maintained CheckEnv
     - added InputPath

   * mjobs/MSequence.cc:
     - added return value to Setup*
     - added comments

   * mmain/MEventDisplay.cc:
     - added tab for cleaning data

   * msignal/MExtractFixedWindowPeakSearch.[h,cc]:
     - added ReadEnv
     - for consistency renamed fWindowSize* to f*WindowSize

   * msignal/MExtractTimeHighestIntegral.[h,cc]:
     - added ReadEnv

   * mcalib/MCalibrationRelTimeCalc.cc:
     - do not write to a log file if logging is not enabled
     - replaced some arrays by TArrays

   * mjobs/JobsLinkDef.h, mjobs/Makefile:
     - added MJCalibrateSignal

   * mjobs/MJCalibrateSignal.[h,cc]:
     - added

   * msignal/MExtractFixedWindow.[h,cc], msignal/MExtractFixedWindowPeakSearch.[h,cc],
     msignal/MExtractSlidingWindow.[h,cc], msignal/MExtractTime.[h,cc],
     msignal/MExtractTimeAndCharge.[h,cc], msignal/MExtractTimeHighestIntegral.[h,cc]
     msignal/MExtractor.[h,cc]:
     - added Print
     - added ReadEnv
     - changed version number to 1



 2004/08/23: Wolfgang Wittek

    * mtemp/MTelAxisFromStars.[h,cc]
      - replace MStarLocalCam by MStarCam
      - replace MStarLocalPos by MStarPos

    * mtemp/MHTelAxisFromStars.[h,cc]
      - replace MStarLocalCam by MStarCam
      - replace MStarLocalPos by MStarPos

    * mstarcam/MStarPos.[h,cc]
      - remove data members containing 'CG' ('correlated Gauss');
        put results from uncorrelated and correlated Gauss fit 
        into the same area

    * mtemp/MFindStars.h[cc]
      - changes due to the changes in MStarPos
      - remove fit with fixed correlation

    * mtemp/MSourceDirections.[h,cc]
      - changes due to the changes in MStarPos

    * mtemp/findTelAxisFromStars.C
      - changes due to changes in MTelAxisFromStars and MFindStars



 2004/08/23: Thomas Bretz

   * mbadpixels/MBadPixelsTreat.[h,cc]:
     - changed missleading ProcessRMS to ProcessPedestal

   * mfileio/MReadTree.h:
     - added AddFiles(MDirIter&) which is overloaded by another function
       which resulted in some trouble

   * mfileio/MWriteRootFile.[h,cc]:
     - added cd() member function

   * mimage/MHHillas.[h,cc]:
     - added display of camera on top of MeanXY-plot

   * mraw/MRawSocketRead.h:
     - added GetFileName()

   * manalysis/MCerPhotEvt.[h,cc]:
     - added new data member fNumIslands
     - added new functions (CalcIsland/CalcIslands to calculate islands)
     - added new member function to sort pixels by index
     - added island index in GetPixelContent
     - increased version number

   * manalysis/MCerPhotPix.[h,cc]:
     - added fIdxIsland data member
     - overloaded Compare function to be able to sort by pixel index
     - increased version number

   * mhist/MHEvent.[h,cc]:
     - added new option for island index
     - added kEvtCleaningData

   * mimage/MImgCleanStd.[h,cc]:
     - added island calculation after image cleaning
     - fixed some output to be consistent
     - added ReadEnv
     - updated StreamPrimitive
     - added new cleaning method (probability cleaning)

   * mimage/Makefile:
     - added mhist

   * mmain/MEventDisplay.cc:
     - added display of island index
     - changed to support files with calibrated data, too

   * mhvstime/MHVsTime.[h,cc]:
     - implemented the possibility to set a maximum number of points

   * mbase/MParContainer.h:
     - changed StreamPrimitive to public

   * mcalib/MMcCalibrationCalc.[h,cc]:
     - added fPar data member (MImagePar) to get number of 
       saturating hi gain pixels

   * mimage/Makefile, mimage/ImageLinkDef.h:
     - added MImagePar
     - added MHImagePar

   * mimage/MConcentration.[h,cc]:
     - removed obsolete destructor

   * mimage/MHillas.[h,cc]:
     - added a check for island index to calculation

   * mimage/MHillasCalc.cc:
     - added option kCalcImagePar
     - added option kCalcHillasSrc
     - added Print function
     - added StreamPrimitive function
     - added resource support (ReadEnv)

   * mimage/MHillasExt.[h,cc]:
     - added a check for island index to calculation
     - replaced for-loop by iterator

   * mimage/MHillasSrc.[h,cc]:
     - changed argument to Calc from pointer to reference

   * mimage/MHillasSrcCalc.[h,cc]:
     - fixed StreamPrimitive
     - added some const-qualifiers to data members
     - adapted to change in MHillasSrc

   * mimage/MNewImagePar.[h,cc]:
     - moved saturating pixels to new class MImagePar
     - added a check for island index to calculation
     - increased version number

   * mpointing/MSrcPosCam.h:
     - made StreamPrimitive public

   * msignal/MArrivalTime.h:
     - removed operator()
     - added operator[] const

   * manalysis/MCameraData.[h,cc]:
     - added algorithm for 'Probability cleaning'

   * mbase/MMath.[h,cc]:
     - added GaussProb

   * mjobs/MSequence.h:
     - added IsValid



 2004/08/20: Thomas Bretz

   * mjobs/MSequence.[h,cc]:
     - added path-option to SetupRuns

   * mjobs/MJCalibration.cc, mjobs/MJExtractSignal.cc, MJPedestal.cc:
     - changed file "UPDATE" to "RECREATE"
 
   * macros/sql/filldotrbk.C:
     - removed obsolete output

   * macros/sql/filldotrun.C:
     - removed obsolete output
     - updated to support ExcludedFDA-table

   * mbase/MParList.[h,cc]:
     - added FindTask-member function

   * mcalib/MHCalibrationChargeBlindCam.cc:
     - fixed a 'comparison between signed and unsigned'

   * mfileio/MRead.h:
     - added GetFileName()
     - removed const-qualifier from CheckAndWrite

   * mfileio/MReadMarsFile.cc:
     - changed some logiing output

   * mfileio/MWriteAsciiFile.[h,cc], mfileio/MWriteFile.[h,cc]:
     - removed const-qualifier from CheckAndWrite
     
   * mfileio/MWriteRootFile.[h,cc]:
     - simplified the constructor by adding Init() function
     - added ReInit function to support file splitting
     - added file splitting support (GetNewFileName, ChangeFile)
     - added new constructor for file splitting
     - made gsDef* a static member
     - slight changed to PreProcess to support file-splitting
     - if file-spliiting is enabled return always kTRUE in IsFileOpen
     - added many new outputs in case of possible problems

   * mraw/MRawFileRead.[h,cc]:
     - changed return type of GetFileName()

   * mraw/MRawFileWrite.[h,cc]:
     - removed obsolete pParList data member
     - by default write all events to the 'Events' tree

   * msql/MSQLServer.[h,cc]:
     - enhanced Query function



 2004/08/19: Marcos Lopez

   * mjobs/MJCalibration.cc:
     - In the function FindColor(), when looking for the calibration color in 
       the calibration file name, ignore the case, to deal with colors
       written in capital letters.



 2004/08/19: Thomas Bretz

   * mastro/MTransCelLocCam.[h,cc]:
     - renamed to MStarCamTrans and moved to mstarcam

   * mastro/Makefile, mastro/AstroLinkDef.h:
     - removed MTransCelLocCam

   * mstarcam/Makefile, mstarcam/AstroLinkDef.h:
   - cleaned up includes in Makefile
   - added MStarCamTrans



 2004/08/19: Robert Wagner

   * mtemp/MFindStars.[cc,h], mastro/MAstroCamera.cc,
     mtemp/MSourceDirections.[cc,h]
     - Changes to reflect the change of name of MStarPos, MStarCam



 2004/08/18: Thomas Bretz

   * mbadpixels/MBadPixelsCam.[h,cc]:
     - implemented function to calculate max cluster sizes

   * macros/sql/filldotrbk.C, macros/sql/filldotrun.C:
     - added return value

   * mjobs/MJCalibration.cc:
     - simplified FindColor by 1000% for later move to a new location

   * mpedestal/MPedCalcFromLoGain.cc:
     - output the range only if it has changed



 2004/08/18: Wolfgang Wittek

   * mastro/MTransCelLocCam.[h,cc]
     - new class; allows to calculate for any point (X, Y) in the 
       camera the local (celestial) coordinates if the local 
       (celestial) coordinates are known for some fixed point (X0, Y0) 
       in the camera
     - for given local (celestial) coordinates of the camera center,
       the meber function PlotGrid draws the lines of constant theta 
       and phi (and of constant dec and hourangle) onto the camera 
       plane 

   * mastro/Makefile, mastro/AstroLinkDef.h
     - MTransCelLocCam added

   * macros/testMTrans.C
     - macro to test the class MTransCelLocCam



 2004/08/17: Markus Gaug
 
   * msignal/MExtractBlindPixel.[h,cc]
     - remove fModified which is taken care of in MJCalibration by the 
       correct initialization

   * mcalib/MCalibrationChargeBlindCam.[h,cc]
     - now a base class for different types of blind pixels cams. 
     - moved fBlindPixels away from pointer, analogue to MGeomCam

   * mcalib/MHCalibrationChargeBlindCam.[h,cc]
     - updated to new call to GetNumBlindPixels()

   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
   * mcalib/MCalibrationChargeBlindCamOneOldStyle.[h,cc]
   * mcalib/MCalibrationChargeBlindCamTwoNewStye.[h,cc]
     - new classes deriving from and intializing 
       MCalibrationChargeBlindCam 

   * mcalib/MCalibrationChargeBlindPix.[h,cc]
     - derive from MCalibrationPix instead of MCalibrationChargePix
     - create possibility to intialize QE's, etc. from outside
     - fix default to previous behaviour such that old code can still 
       run on old files without changes
     - create copy function

   * macros/calibration.C
     - updated macro to use of MCalibrationTestCam

   * mcalib/MCalibrationCam.[h,cc]
     - comment the static variable gkNumPulserColors
     - take the pulser color enum and gkNumPulserColors out of the streamer
     - set the version nr from 3 to 4
     - Simplify a piece of the code dealing with the ForEach macro

   * mcalib/MCalibrationChargeCam.[h,cc]
     - removed Init() function which is already fulfilled by the Init() 
       function of MCalibrationCam

   * mcalib/MCalibrationChargeCalc.cc
     - some changes to the output
     - call to MCalibrationChargeBlindCam->IsValid() removed

   * mbadpixels/MBadPixelsCam.cc
     - included kDeviatingNumPhots in GetPixelContent()

   * mjobs/MJCalibration.[h,cc]
     - some small modifications in the data-check display, discussed 
       with Florian
     - found that the MFillH for the MHCalibrationChargeBlindCam had 
       been replaced to MHCalibrationChargeBlindPix -> redone
     - adapted InitBlindPixel() to new classes initializing the right 
       MCalibrationChargeBlindCam's

   * mcalib/MCalibrationTestPix.[h,cc]
   * mcalib/MCalibrationTestCam.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - new container class to store results of MCalibrationTestCalc
       and MHCalibrationTestCam

   * mcalib/MCalibrationTestCalc.[h,cc]
     - adapted to use of MCalibrationTestCam

   * mcalib/MHCalibrationTestCam.[h,cc]
     - adapted to use of MCalibrationTestCam



 2004/08/17: Thomas Bretz

   * mcalib/MCalibrateData.[h,cc]:
     - unrolled some if-else statements to accelerate the algorithm a
       bit (it is just the bottelneck of calibrating the signal)
     - made sure that code which in not needed is not executed in
       this case

   * mbadpixels/MBadPixelsCam.cc:
     - unrolled if-else statements in GetPixelContent

   * mcalib/MHCalibrationChargeBlindPix.cc:
     - commented out unsused variable

   * mjobs/MJCalibration.cc:
     - some more output when writing the file

   * mjobs/MJPedestal.[h,cc]:
     - added more resources
     - added fMaxEvents

   * mraw/MRawEvtPixelIter.[h,cc]:
     - fixed behaviour or fABFlags in case the array is empty
     - changed Char_t data member to Byte_t according to change
       in MRawEvtData

   * mraw/MRawEvtData.[h,cc]:
     - changed TArrayC data member to MArrayB to get rid of a memory
       leak which resulted in huge memory usage when reading
       MRawEvtData
     - changed version number from 4 to 5
     - changed size of fABFlag array to a more reasonable size
       (maxid/8+1)

   * mraw/MRawEvtHeader.[h,cc]:
     - implemeted Getter for calibration pattern

   * mhbase/MHMatrix.[h,cc], mranforest/MRanTree.cc,
     mtools/MHSimmulatedAnnealing.h, mtools/MSimmulatedAnnealing.h:
     - changed to compile with root-4.00/08

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - changed SetDumpEvents to SetNumEventsDump to fit roots naming
       convention
     - fixed crashes in case nothing has beendone
     - do not process abflag if it is not existing
     - for the moment do no call to ReCalc in Process
     - added some const-qualifiers

   * mhist/MHCamera.h:
     - changed the definition of FetMinimum/GetMaximum such that
       it compiles with root 4.00/08



 2004/08/17: Robert Wagner

   * mstarcam, mstarcam/Makefile, mstarcam/StarcamLinkDef.h,   
     mstarcam/StarcamIncl.h, macros/dohtml.C, macros/rootlogon.C
     - Added directory mstarcam for holding all classes related to
       studies of stars

   * mstarcam/MStarPos.[cc,h], mstarcam/MStarCam.[cc,h],
     mstarcam/StarcamLinkDef.h, mstarcam/Makefile, Makefile
     - moved mtemp/MStarLocalPos.[cc,h], mtemp/MStarLocalCam.[cc,h]

   * mastro/MAstroCamera.cc, mtemp/MFindStars.[cc,h],
     mtemp/MSourceDirections.[cc,h]
     - changed references to MStarLocalPos to MStarPos



 2004/08/16: Thomas Bretz

   * mcalib/MCalibrateData.[h,cc]:
     - change to support also 'No calibration of data'
     - removed obsolete dependancie on *'FromData' containers

   * mcalib/MCalibrateData.[h,cc], mbadpixels/MBadPixelsCalc.[h,cc]:
     - added member function ReadEnv

   * mbase/MTime.[h,cc]:
     - added new member function SetStringFmt

   * mcalib/MHCalibrationChargeBlindPix.cc:
     - removed unused variable

   * mcalib/MHCalibrationChargeBlindPix.cc:
     - removed unused variable



 2004/08/16: Markus Gaug
 
   * mcalib/MHCalibrationCam.cc
     - add a criterion to stop the Finalize() if both fHiGainArray 
       and fLoGainArray have not been expanded. 
     - replace two gLog by *fLog
     - add the pulser color (needed for the datacheck histograms)
     - some modifications in the data-check display, discussed with Florian

   * mjobs/MJCalibration.[h,cc]
     - some small modifications in the data-check display, discussed 
       with Florian

   * mcalib/MHGausEvents.[h,cc]
     - make fSaturated Int_t and set to 0 in the Clean() function

   * mcalib/MHCalibrationChargePix.[h,cc]
     - remove the Clean() function

   * mbadpixels/MBadPixelsPix.h
   * mbadpixels/MBadPixelsCam.cc
     - new functions GetUnsuitableCalibration() and 
       GetUnreliableCalibration() to denote the reason for unsuitability
       and unreliability. 
     - in GetPixelContent flags 6 and 7.
     - will be used for the datacheck display



 2004/08/14: Markus Gaug

   * msignal/MExtractor.cc:
     - documented data members
     - included default for SetNamePedContainer()

   * mjobs/MJPedestal.[h,cc]
     - some small modifications in the data-check display, discussed 
       with Florian



 2004/08/13: Thomas Bretz
 
   * macros/readraw.C:
     - updated to get it working with MC data

   * mbase/MTaskEnv.cc:
     - fixed a typo

   * mcalib/MCalibrationChargeCalc.[h,cc], 
     mcalib/MHCalibrationCam.[h,cc]:
     - added ReadEnv
     - changed some output slightly to match into a typical
       80-column console

   * mjobs/MJCalibration.[h,cc]:
     - changed to support Sequences
     - added SetEnv
     - added possibility to change extractors from a resource file
     - put MBadPixelsMerge into the tasklist - for strange reasons
       it was missing

   * mjobs/MJPedestal.[h,cc]:
     - fixed the output name for sequences
     - added possibility to set output from resource file

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - changed handling of sanity check for setup 
     - removed obsolete variables
     - changed output slightly to fit into a typical 80-column
       console
     - added some sanity checks to PostProcess
     - added some info-output to PostProcess
     - calculate a mean number of total events
     - call ReCalc to calc mean values of sectors and areas

   * mpedestal/MPedCalcPedRun.[h,cc]:
     - changed to use ReCalc instead of doing the calculation itself
       for convinience I left the old code as a comment inside -
       will be removed later

   * mpedestal/MPedPhotCam.[h,cc]:
     - slight changes in ReCalc

   * mpedestal/MPedestalCam.[h,cc]:
     - added ReCalc function (maily taken from PedPhotCamReCalc)

   * mpedestal/MPedestalPix.h:
     - added Getter for fNumEvents

   * mraw/MRawEvtHeader.[h,cc]:
     - started adding support for calibration pattern. Please don't
       take the current implementation to serious



 2004/08/12: Hendrik Bartko

   * msignal/MExtractor.cc:
     - corrected the setting of AddSerialNumber for Find(Create)Object

   * msignal/MExtractTime.cc:
     - corrected the setting of AddSerialNumber for FindObject

   * mbadpixels/MBadPixelsCalc.cc
     - corrected the setting of AddSerialNumber for FindObject

   * mbadpixels/MBadPixelsTreat.cc
     - corrected the setting of AddSerialNumber for FindObject

   * mimage/MImgCleanStd.cc
     - corrected the setting of AddSerialNumber for FindObject



  2004/08/12: Markus Gaug

   * msignal/MExtractBlindPixel.[h,cc]
     - Set the method from outside
     - unified the defaults to new blind pixels

   * mjobs/MJCalibration.[h,cc]
     - implementation of MHCalibrationChargeCam

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
     - adapt Draw() and DrawLegend() for the datacheck display

   * mcalib/MHCalibrationChargeBlindCam.[h,cc]
     - new member function fFitFunc, can be set from outside and is 
       further passed onto the MHCalibrationChargeBlindPix's

   * mcalib/MHCalibrationChargeCalc.[h,cc]
     - improved readability of output
     - set default fPheErrLimit to 4.5 sigma

   * mcalib/MCalibrateData.[h,cc]
     - give defaults to the Setter functions
     - change default calibration mode from blindpixel to ffactor
     - change exclusion of bad pixels from unsuitable run to unsuitable.
     - some cosmetic changes
     - remove fNumHiGainFADCSamples and fNumLoGainFADCSamples as 
       data members    
     - remove fConversionHiLo which is not used in the class
     - write a StreamPrimitive()


  2004/08/12: Thomas Bretz

   * mreport/MReportFileReadCC.cc:
     - fixed a bug in CheckFileHeader which caused a condition to
       be wrongly evaluated

   * mbase/MStatusDisplay.cc:
     - small modification to postscript output

   * showlog.cc:
     - added

   * Makefile:
     - added showlog

   * macros/sql/filldotrbk.C, macros/sql/filldotrun.C:
     - update of comments

   * mbase/MEvtLoop.cc:
     - first interprete environment for fLog

   * mbase/MEvtLoop.[h,cc], mbase/MParContainer.[h,cc],
     mbase/MParList.[h,cc], mbase/MTaskList.[h,cc],
     mfileio/MRead.[h,cc], mhbase/MHMatrix.[h,cc],
     mpedestal/MPedCalcFromLoGain.[h,cc],
     mpedestal/MPedCalcFromPedRun.[h,cc],
     msignal/MExtractor.[h,cc]:
     - changed type of ReadEnv from Bool_t to Int_t

   * mbase/MLog.cc:
     - fixed ReadEnv

   * mbase/MParContainer.[h,cc]:
     - added TestEnv

   * mbase/MParList.cc, mbase/MTaskList.cc:
     - moved some code to MParContainer::TestEnv

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MTaskEnv

   * mhist/MHCamera.cc:
     - removed some output (Draw function don't write something
       to the console) - it is displayed anyhow
     - added some SetBorderMode(0)

   * mjobs/JobsLinkDef.h, mjobs/Makefile:
     - added MSequence

   * mjobs/MJPedestal.[h,cc]:
     - changed to allow a sequence as input
     - changed to allow setting up the extractor from a TEnv

   * mpedestal/MPedCalcFromLoGain.[h,cc]:
     - moved a common block of code to a new Calc function
     - fixed ReadEnv

   * mpedestal/MPedCalcPedRun.cc, msignal/MExtractor.cc:
     - fixed ReadEnv

   * mraw/MRawCrateData.cc:
     - updated Print()

   * mraw/MRawFileRead.h:
     - added default to first constructor argument




  2004/08/12: Hendrik Bartko

   * msignal/MExtractor.[h,cc]:
     - add SetNamePedContainer to set the name of the pedestal
       container

   * msignal/MExtractTime.[h,cc]:
     - add SetNamePedContainer to set the name of the pedestal
       container

   * mbadpixels/MBadPixelsCalc.[h,cc]
     - add SetNamePedPhotContainer to set the name of the pedphot
       container

   * mbadpixels/MBadPixelsTreat.[h,cc]
     - add SetNamePedPhotContainer to set the name of the pedphot
       container

   * mimage/MImgCleanStd.[h,cc]
     - add SetNamePedPhotContainer to set the name of the pedphot
       container



  2004/08/12 : Wolfgang Wittek

   * manalysis/MSourcPosFromStarPos.[h,cc]
     - replace MMcEvt by MPointingPos

   * manalysis/MSigmabarCalc.[h,cc]
     - replace MMcEvt by MPointingPos

   * manalysis/MSigmabar.[h,cc]
     - in member function Calc() return fSigmabarInner,
       not fSigmabar
     - update comments
     - sigmabar is the sqrt of the average (pedRMS^2/area)

   * manalysis/MPad.[h,cc]
     - replace MMcEvt by MPointingPos
     - remove bugs

   * mfilter/MFSelBasic.[h,cc]
     - replace MMcEvt by MPointingPos

   * mfilter/Makefile
     - add -I../mpointing

   * mhist/MHSigmaTheta.[h,cc]
     - replace MMcEvt by MPointingPos     
     - replace 'MCerPhotPix cerpix' by 'MCerPhotPix &cerpix'
     - add plot "Sigmabar(Outer) versus Theta"

   * macros/ONOFFAnalysis.C
     - Job A : got the padding working, work in progress



 2004/08/11: Hendrik Bartko

   * mcalib/MCalibrateData.[h,cc]:
     - add SetPedestalType to choose whether to calibrate the pedestal 
       for each run or each event
     - add EnablePedestalType to enable to calibrate the pedestal for 
       each run or each event
     - add DisablePedestalType to disable to calibrate the pedestal for 
       each run or each event
     - add TestFlag test whether to do the run and / or event pedestal
       calculation
     - add SetNamePedADCRunContainer to change name of pedestal input 
       container for run pedestals
     - add SetNamePedADCEventContainer to change name of pedestal input 
       container for event pedestals
     - add SetNamePedPhotRunContainer to change name of pedestal output 
       container for run pedestals
     - add SetNamePedPhotEventContainer to change name of pedestal output 
       container for run pedestals
     - add CalibratePedestal, function to calibrate the chosen pedestal 
     - added the calibration types kFlatCharge, kDummy as in MCalibrate

   * mbadpixels/MBadPixelsCalc.cc:
     - in MBadPixelsCalc::Process() called the MPedPhotCam::ReCalc to
       calculate the mean values of the pedestal and RMS for the areas
       and sectors of the camera.



 2004/08/10: Thomas Bretz

   * mreport/MReportFileReadCC.[h,cc]:
     - added

   * mreport/Makefile, mreport/ReportsLinkDef.h:
     - added MReportFileReadCC

   * mreport/MReport*.[h,cc]:
     - prpagate file version number to all Interpreters

   * merpp.cc:
     - added new commandline options to support different CC files
     - changed help-output
     - temporarily removed SQL option

   * readraw.cc:
     - a small fix (a '.' was missing)

   * mraw/MRawEvtData.cc:
     - fixed bug in Print

   * manalysis/MGeomApply.cc:
     - changed to Init all MCamEvents in the parlist

   * mbase/MParList.[h,cc]:
     - added a cast operator to TIterator*
     - check whether a automatic created class inherits from MParConatiner

   * mgui/MCamEvent.[h,cc]:
     - added Init
     - added InitSize

   * mmc/MMcTrig.cxx:
     - added a new option to Print()

   * mraw/MRawEvtData.[h,cc], mraw/MRawEvtHeader.[h,cc],
     mraw/MRawFileRead.cc, mraw/MRawSocketRead.cc
     - changed Init() to InitRead()

   * msignal/MArrivalTime.[h,cc]:
     - changed argument of InitSize according to MCamEvent

   * msql/MSQLServer.[h,cc]:
     - small changes to interface

   * mimage/MHillasCalc.[h,cc]:
     - changed names of TString data members



 2004/08/10: Robert Wagner

   * mreport/MReportCamera.[h,cc]
     - added function InterpreteHOT which interprete the HOT* part of 
       the report. The variable HVs_modified_by_HOT_Pixels is 
       extracted, but not yet written in the corresponding MARS
       parameter container 



 2004/08/10: Markus Gaug

   * mcalib/MCalibrationTestCalc.[h,cc]
     - added calculation and output of maximum not-interpolatable 
       cluster.

   * macros/bootcampstandardanalysis.C 
     - added MBadPixelsTreat


   * mcalib/MCalibrate.cc
     - implemented different way to calculate error of signal 
       in method kFlatCharge (as discussed with Keiichi).



 2004/08/10: Florian Goebel

   * mpedestal/MPedCalcFromLoGain.[h,cc]
     - add SetPedContainerName() to change name
       of output container
     - fix bug affecting behaviour when running twice
       over the same run
     - change format of "Format"
     - change default value for fgMaxHiGainVar to 40



 2004/08/10: Nadia Tonello

   * mbadpixels/MBadPixelsTreat.[h,cc]
     - replaced flag SetSloppyTreatment() with SetHardTreatment() 
       Now the default behaviour consists on treating only the 
       unsuitable pixels, and not also the ureliable, as it was 
       before. If you want to keep on treating both unsuitable and
       unreliable pixels, please set the new flag on in your macro. 

   * mjobs/MJExtractCalibTest.cc
     - removed line containing SetSloppyTreatment()



 2004/08/10: Thomas Bretz

   * mpedestal/MPedestalPix.[h,cc]:
     - as discussed removed fValid

   * mpedestal/MPedCalcFromPedRun.[h,cc], 
     mpedestal/MPedCalcFromLoGain.[h,cc]:
     - removed dependancy on MBadPixelsCam

   * mastro/MAstro.[h,cc]:
     - implemented GetMoonPeriod
     - implemented GetMoonPhase

   * mbase/MTime.cc:
     - Fixed a floating point problem in Set(&tv)
     - added GetDateOfSunrise



 2004/08/09: Markus Gaug

   * mcalib/MHGausEvents.[h,cc]
     - added function IsOnlyOverflow()

   * mcalib/MHCalibrationChargeBlindCam.[h,cc]
     - put default arguments in the Clone() and the Draw() function 
       (needed by e.g. TObject::DrawClone())
     - added name and title to the class (was forgotten)

   * mjobs/MJPedestal.[h,cc]
     - set the possibility to have the datacheck display with the 
       function SetDataCheckDisplay()



  2004/08/09: Wolfgang Wittek

   * mtemp/MStarLocalCam.[h,cc], mtemp/MStarLocalPos.[h,cc]
     - new variables added for the fit of a 2dim Gaussian with 
       correlations
     - the corresponding Set and Get functions were added
     - the Paint function was extended correspondingly

   * mtemp/MTelAxisFromStars.[h,cc]
     - new class (task) which determines the source position from star 
       positions in the camera
   
   * mtemp/MHTelAxisFromStars.[h,cc]
     - new class (container); produce plots for MTelAxisFromStars

   * mtemp/MSkyCamTrans.[h,cc]
     - new class (task) ; container holding the parameters for the 
       transformation from sky coordinates (projected onto the camera) 
       to camera coordinates

   * mtemp/Makefile, mtemp/TempLinkDef.h
     - MTelAxisFRomStars  added
     - MHTelAxisFromStars added
     - MSkyCamTrans       added

   * mtemp/findTelAxisFromStars.C
     - new macro: extended version of findstars.C 
       (in mtemp/mifae/macros/)
     - call to MTelAxcisFromStars and MHTelAxisFromStars
       was added

   * mtemp/MFindStars.[h,cc]
     - add correlated Gauss fit



 2004/08/06: Markus Gaug
 
   * mcalib/MCalibrationTestCalc.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - new class to retrieve the results of MHCalbirationTestCam 
     - outputs the results of the bad pixels interpolation and the 
       new relative flat-fielding of the camera.

   * mjobs/MJExtractCalibTest.cc
     - uncomment (and use) the interpolation of bad pixels
     - use the class MCalibrationTestCalc

   * mcalib/MHCalibrationChargeLoGainPix.cc
     - increase the default upper histogram limits for the 
       large extraction windows.

   * msignal/MExtractor.cc
     - fixed a bug in one possible output using Form() 
       which produced a segm.violation in that case.

   * mcalib/MHCalibrationTestCam.cc
     - adapt class for the interpolation of pixels.

   * mcalib/MCalibrationChargeCalc.cc
     - fixed a small bug in the calculation of average number of 
       photo-electrons


 2004/08/06: Nadia Tonello

   * mimage/MImgCleanStd.cc:
     - in the Process, the Step3 (that checks the boundary pixels) 
       is skipped when no action is espected, i.e. if lvl1 <= lvl2.
       This will accelerate the cleaning process in such cases.

   * mbadpixels/MBadPixelsCalc.[h,cc]:
     - removed dependence on MSigmabar 



 2004/08/05: Thomas Bretz

   * mastro/MAstroCatalog.[h,cc]:
     - changed return type of AddObject to Bool_t
     - changed Reading member function to use AddObject

   * msignal/MArrivalTime.h:
     - Added missing ClassDef

   * mhist/MHEvent.h:
     - Removed strange MCameraSignal



 2004/08/05: Robert Wagner

   * mastro/MAstroCatalog.[h,cc]
     - Added MAstroCatalog::AddObject, functionality to insert single
       objects manually; needed for mtemp/mmpi/MSourceDirections



 2004/08/05: Thomas Bretz

   * manalysis/MGeomApply.cc, mimage/MCameraSmooth.[h,cc]:
     - removed dependancy on MBlindPixel

   * macros/sql/readrbk.C, msql/MSQLServer.cc:
     - fixed some memory leaks - the result of TSQLServer::Query
       must be deleted

   * mbase/MTaskInteractive.cc:
     - added some comments

   * mmain/MBrowser.cc:
     - fixed a bug which caused '/data/MAGIC' not to be shown in
       the dir-list

   * mmc/MMcEvt.hxx:
     - added some more particle ids

   * msql/MSQLServer.[h,cc]:
     - some improvements to the user interface

   * macros/sql/filldotrun.C:
     - added



 2004/08/04: Markus Gaug

   * msignal/MExtractFixedWindowSpline.cc
     - replaced delete's of the array by a delete [].

   * mjobs/MJCalibration.cc
     - replaced default time extractor by MExtractTimeFastSpline

   * mbadpixels/MBadPixelsPix.cc
     - updated the class description



 2004/08/04: Thomas Bretz

   * manalysis/MBlindPixels.[h,cc], manalysis/MBlindPixelCalc.[h,cc], 
     manalysis/MBlindPixelCalc2.[h,cc]:
     - as discussed some weeks ago the classes have been removed

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - removed the MBlind* entries

   * star.cc, mmain/MEventDisplay.cc, mmain/MOnlineDisplay.cc, 
     mmain/MAnalysis.cc, mfileio/MCT1ReadPreProc.[h,cc]:
     - removed usage of MBlind*
     - MBadPixel* TO BE ADDED

   * merpp.cc:
     - moved interpretation of command line options to MLog
     - added a check for unknown options

   * manalysis/MCameraData.[h,cc]:
     - added some comments
     - fixed some errors in the documentation
     - changed ClassDef to 1
     - changed the new algorithms such that any number of different
       pixel-sizes are supported
     - small modifications to the sanity checks

   * mbadpixels/MBadPixelsTreat.h:
     - fixed the argument type of SetNumMinNeighbors

   * mbase/MArgs.cc:
     - comment updated

   * mbase/MEvtLoop.cc:
     - added reading and writing of fLog environment

   * mbase/MLog.[h,cc]:
     - added Reading and writing Environment (ReadEnv, WriteEnv)
     - added a function to setup MLog from command line arguments

   * mbase/MTaskInteractive.[h,cc]:
     - added an example

   * mbase/MTime.cc:
     - added a warning for the SetTimeFormat usage

   * mimage/MImgCleanStd.[h,cc]:
     - some updates to the old comments
     - NEW COMMENTS FOR SCALED CLEANING STILL MISSING!
     - implemented scaled image cleaning
     - replaced usage of MSigmabar by MPedPhotCam for democratic cleaning

   * manalysisct1, manalysisct1/Makefile, 
     manalysisct1/AnalysisCT1LinkDef.h:
     - new

   * manalysis/MCT1*, mfileio/structures.h, mfileio/MCT1Read*.[h,cc]:
     - moved to new directory manalysisct1

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - updated
     - removed MPad because long time ago changed discuseed were not made
       (it doesn't compile anymore, because MBlindPixels is missing now)

   * mfileio/Makefile, mfileio/FileIOLinkDef.h:
     - updated

   * mbase/MLog.cc:
     - added missing kMustCleanup bit of fPlugins

   * mbadpixels/MBadPixelsPix.h:
     - added easier access to the information whether a pixel is unsuitable
       or unreliable

   * mbadpixels/MBadPixelsTreat.[h,cc]:
     - added SloppyTreatment



 2004/08/03: Hendrik Bartko

   * manalysis/MCameraData.[h,cc]
     - Added new function CalcCleaningLevel2 to take into account that
       the pedestal RMS does not scale with the inverse square root of
       the pixel area for the calculation of the cleaning levels.
     - Added new function CalcCleaningLevelDemocratic. It calculates
       the cleaning levels for the democratic image cleaning directly
       from the average values of MPedPhotCam instead of using 
       MSigmabar.



 2004/08/03: Thomas Bretz

   * macros/sql:
     - new directory

   * macros/sql/readrbk.C:
     - new macro

   * mjobs/MJExtractSignal.cc:
     - fixed missing initialisation of fExtractor, fExtractorTime



 2004/07/30: Robert Wagner

   * mastro/MAstroCamera.[h,cc]
     - Added method FillStarList() which fills a TList with objects
       of type MStarLocalPos for all stars found from the catalog
       matching specified criteria (FOV, magnitude limit, position)
     - Lines involving MStarLocalPos have been commented out for
       the time being since MStarLocalPos is not part of standard
       MARS yet!

   * mtemp/MStarLocalPos.[h,cc]
     - Added handling of the minuit error matrix elements to
       MStarLocalPos::MSetFitValues
     - Added member variables to hold error matrix elements
     - Added getters for error matrix elements
     - Expected star position is painted by Paint, too.
     - Error matrix elements are printed by Print, too.



 2004/07/28: Javi Lopez

   * mhist/MHCamera.[h,cc]
     - Added new argument to CntCamContent() funtion to select to count
       the events above or bellow a certain discriminator level.



 2004/07/20: Florian Goebel

   * mpedestal/MPedestalPix.[h,cc]
     - added: 
      + fPedestalABoffset: difference between pedestal mean of odd slices
                           and the total pedestal mean (fPedestal)                
      + fNumEvents:        number of times, the Process was executed          
                           (to estimate the error of pedestal)

   * mpedestal/MPedestalCam.cc
     - calculate error using pixel vise fNumEvents

   * mpedestal/MPedCalcFromLoGain.[h,cc]
   * mpedestal/Makefile
   * mpedestal/PedestalLinkDef.h
     - added class which calculates pedestal values from the low gain
       slices of a data run
     - it also calculates the ABoffset values and fills MPedestalPix
       accordingly

   * macros/ScanPulseABPed.C
     - macro plotting the pulse shape using MPedCalcFromLoGain
       and correcting for the AB 150 MHz clock noise.

   * msignal/MExtractSignalABcorr.[h,cc]
   * msignal/Makefile
   * msignal/SignalLinkDef.h
     - example for signal extractor class similar to MExtractSignal 
       correcting for ABoffset which allows to use odd number of slices

   * macros/ScanExtractSignalABCorr.C
     - macro using MExtractSignalABcorr



 2004/07/16: Markus Gaug

   * msignal/MExtractFixedWindowSpline.cc
     - replace the delete's by delete [].

   * mcalib/MHCalibrationChargeCam.cc
     - remove some obsolete commented code

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
     - derive only from MHGausEvents and not additionally from 
       MHCalibrationChargePix
     - Additional setter for MCalibrationChargeBlindPix, used by 
       MHCalibrationChargeBlindCam
     - Getter for fSinglePheCut
     - adapted Draw for the "datacheck" option
     - use variable histogram range depending on whether amplitude
       or integral has been extracted

   * mcalib/MCalibrationChargeBlindCam.[h,cc]
   * mcalib/MHCalibrationChargeBlindCam.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - two new classes for the treatment of various blind pixels in the 
       camera

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - adapted to use of various blind pixels



 2004/07/15: Markus Gaug

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - hard coded the reference lines for the DataCheck Display. 
       Should be faster and easier to read than the TArrayF's. 

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - removed obsolete pointer to MEvtTime
     - fixed bug in calculation of RMS for FFactor of inner pixels
       in case that the fit does not converge. 
     - introduced blind pixel and PIN Diode result flags for later
       output or storage in DB.



 2004/07/14: Hendrik Bartko

   * mpedestal/MPedPhotCam.[h,cc]
     - added average areas and sectors (in analogy MPedestalCam)
     - added new function InitAreas(const UInt_t i)
     - added new function InitSectors(const UInt_t i)
     - added new function GetNumAreas()
     - added new function GetNumSectors()
     - added new function ReCalc, computes the average values for the
       sectors from all pixels which are not marked 
       MBadPixelsPix::kUnsuitableRun

   * mpedestal/MPedPhotPix.[h,cc]
     - added a variable for the number of events from which the 
       pedestals are computed

   * manalysis/MGeomApply.cc
     - changed initialization of MPedPhotCam

   * msignal/MExtractTimeHighestIntegral.cc
     - implemented the time calculation respective to the zero FADC
       time sample, not respective to the first sample of the chosen
       range

   * msignal/MArrivalTimeCalc2.cc
     - implemented the time calculation respective to the zero FADC
       time sample, not respective to the first sample of the chosen
       range



 2004/07/14: Markus Gaug

   * msignal/MExtractedSignalBlindPixel.[h,cc]
     - added new function GetNumBlindPixels()
     - added more comments

   * msignal/MExtractBlindPixel.[h,cc]
     - adapted to new configuration of now three blind pixels
     - runs with run number smaller than 31693 are treated in the old way
     - runs with run number higher than 31693 have no more NSB filter, 
       but possibility to choose between integral or amplitude (with spline) 
       extraction. Default is amplitude.

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
     - use the variable fPixId to design an ID to the class. 
       Later, a new class MHCalibrationChargeBlindCam can host 
       the different blind pixels as individual 
       MHCalibrationChargeBlindPix. 
     - Default ID is 0 which is also default in MExtractedSignalBlindPix
     - for current code, nothing has thus changed so far...

   * msignal/MExtractAmplitudeSpline.cc
     - fixed a bug causing a segmentation violation in the destructor 
       (array dimension was not respected correctly)

   * mcalib/MHGausEvents.cc
     - removed an inconsistency in the naming of fHPowerProbability which 
       can cause a memory leak (I hope, this was the cause of some of the 
       leaks we had, but I'm not sure).
     - removed the setting of fPixId to -1 in the Clear()



 2004/06/30: Thomas Bretz

   * mbase/MEvtLoop.[h,cc]:
     - overwrite ReadEnv with a new function taking the
       name of the setup file as argument

   * mjobs/MJPedestal.[h,cc]:
     - added setup file name as argument to 

   * mjobs/MJPedestal.[h,cc]:
     - implemented a new data member fEnv
     - implemented new setter SetEnv
     - some small changes towards setup files
     - some simplifications to line drawing

   * msignal/MExtractor.[h,cc]:
     - added ReadEnv member function
     - removed obsolete virtual qualifiers in header
     - simplified usage of Form()

   * mraw/MRawFileWrite.[h,cc]:
     - moved writing of RunHeaders from PreProcess to new ReInit



 2004/06/29: Thomas Bretz

   * mpedestal/MPedCalcFromData.[h,cc]
     - changed data member names according to coding rules



 2004/06/25: Pepe Flix

   * mpedestal/MPedCalcFromData.[h,cc]
     - added class to evaluate pedestal mean/RMS from real data events.
       Low Gain samples used when no switch to LG happened.

   * macros/PedCalcFromData.C
     - added macro that uses the class to evaluate pedestals from real
       data.



 2004/06/23: Markus Gaug

   * macros/calibration.C
     - added flag to skip the testing
     - added calibration of pedestal files and creation of F2-files.

   * macros/bootcampstandardanalysis.C
     - updated to use MJExtractSignal

   * mcalib/MHGausEvents.cc
     - give a unique name to fHPowerProbability, otherwise 
       MH::ProjectArray will use an existing one. 
 


 2004/06/18: Markus Gaug

   * manalysis/MHPedestalCam.[h,cc]
     - use flag to choose if one wants to re-normalize the histogram 
       results

   * mhist/MHCamera.[h,cc]
     - added one argument to CntCamContent to tell if event above or 
       below threshold have to be counted. Default is above, like before
     - added one argument to Projection and ProjectionS giving the number 
       of bins as argument (default 50 like before)

   * mcalib/MCalibrationChargeCalc.cc
     - replaced extraction of mean number of photo-electrons and mean 
       F-Factor by a Gauss fit (instead of mean and RMS). Set the 
       limit for deviating F-Factor from 3.5 to 4.5. This should reduce 
       the number of uncalibrated pixels below 50 again (which was not 
       the case in the last weeks). 

   * mcalib/MHGausEvents.h
     - make DrawEvents() public

   * mcalib/MHCalibrationChargeLoGainPix.cc
     - upper histogram limit lowered for the better visibility in the 
       data check.

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - adapted Draw for the datacheck

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
     - adapted for various blind pixels
     - adapted Draw for the datacheck

   * msignal/MExtractor.[h,cc]
   * msignal/MExtractFixedWindow.[h,cc]
   * msignal/MExtractSlidingWindow.[h,cc]
   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
   * msignal/MExtractFixedWindowSpline.[h,cc]
     - made sum in FindSignal() float which is now the variable used by 
       the majority of the extractors.

   * msignal/MExtractAmplitudeSpline.[h,cc]
     - new extractor calculating the amplitude using a spline. 

   * mcalib/MCalibrationPix.[h,cc]
   * mcalib/MCalibrationChargePix.[h,cc]
   * mcalib/MCalibrationChargeCalc.[h,cc]
     - added debug flags and output on debug

   * mbadpixels/MBadPixelsCam.cc
     - enlarged the Print-function



 2004/06/17: Markus Gaug

   * mjobs/MJPedestal.[h,cc]
     - adapted display for the datacheck

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - new function Draw for the datacheck
     - new clone function for the DrawClone
  
   * mcalib/MHCalibrationCam.h
     - make clone function virtual

   * mjobs/MJCalibration.cc
     - adapted display for the datacheck    
  
   * mcalib/MHGausEvents.h
     - two new getters for fFirst and fLast

   * mhist/MHCamera.h
     - make SetUsed() and Fill(x,w) public. It is now possible to use the 
       Fill-function together with the SetUsed(idx), when no 
       SetCamContent(...) is available. 
       Previously, only a Fill(x,y,w) was public, with x and y positions 
       in the camera. 

  * mjobs/MJPedestal.[h,cc]
    - updated the data-check display



 2004/06/12: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.cc
   * mcalib/MMcCalibrationCalc.[h,cc]
     - Fixed mistake in the calibration which occurred only when 
       different light collection efficiency was simulated for outer 
       pixels.

   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Adapted to the possibility of having different light collection
       efficiencies in inner and outer pixels. For now we assume that the
       dependence with incidence angle on the camera plane is the same
       for both types of pixels.



 2004/06/12: Markus Gaug

   * msignal/MExtractFixedWindow.cc 
     - output the number and exact range of extraction to *fLog in the 
       ReInit(), like it is done by MPedCalcPedRun

   * macros/bootcampstandardanalysis.C
     - exchanged MArrivalTimeCalc2 in 4th loop by timeext (defined 
       in the beginning)



 2004/06/11: Markus Gaug

   * mpedestals/MPedCalcPedRun.cc
     - set the default upper range to 29, because otherwise the extraction
       window will be made too small in case that more than 14 "high-gain" 
       slices shall be extracted. This is a bugfix! It calculated wrong 
       pedestals in case that the user says: SetRange(a,b), where b is 
       bigger than 14 in combination with SetWindowSize(x) where x is bigger 
       than 14 as well (instead of : SetRange(a,b,c,d), where 
       everything went fine). However, the intention of the last months 
       changes was to allow exactly also the first possibility. 

   * mjobs/MJCalibration.cc
     - put run 27474 in list of unavailable runs (see runbook)



 2004/06/08: Markus Gaug

   * mhist/MHCamera.cc
     - reduce number of default bins in AzimuthProfile
     - use MatchSector in AzimuthProfile, like in RadialProfile

   * mcalib/MCalibrationChargeCalc.cc
     - fix lower limit for deviation F-Factor to 1.1. This discarts a 
       smaller number of especially outer pixels in some runs taken with
       the CT1 pulser box.



 2004/06/07: Markus Gaug

   * mcalib/MHCalibrationCam.h
     - add a function GetSize()

   * msignal/MExtractTimeFastSpline.cc
     - fixed a bug introduced on 1.6. and accelerate it a bit. 



 2004/06/04: Markus Gaug

   * mcalib/MHGausEvents.cc
     - some small modifications in the way the axes are drawn and their
       titles are drawn.



 2004/06/03: Martin Merck

   * msignal/MArrivalTimeCam.h
   * msignal/MArrivalTime.h
   * msignal/MArrivalTimePix.h
   * msignal/MExtractedSignalCam.h
   * msignal/MExtractedSignalPix.h
   * msignal/MExtractedSignalPINDiode.h
   * msignal/MExtractedSignalBlindPixel.h
     - Set version in ClassDef to 1 for the streamer.

   * msignal/SignalLinkDef.h
     - Added a + at the pragma for MExtractedSignalCam and 
       MExtractedSignalPix for consistency.

   * msjobs/MExtractSignal.[h,cc]
     - Added methods to set the Extractor and TimeExtractor to be
       used when extracting the signal.


 
 2004/06/03: Markus Gaug

   * mhist/MHCamera.[h,cc]
   * mjobs/MJCalibration.cc
     - added functions AzimuthProfile and DrawAzimuthProfile, same 
       like the RadialProfile functions, only with azimuth instead of 
       radius.

   * mcalib/MCalibrationCam.[h,cc]
     - replace fNumHiGainFADCSlices and fNumLoGainFADCSlices by a 
       TArrayF and increment ClassDef by 1 for the streamer.

   * mcalib/MCalibrationChargeCalc.cc
     - found a small bug making a difference in the number of valid 
       pixels with the blind PIxel method and the ffactor method. Now
       fixed. (The difference was usually a couple of pixels)

   * msignal/MExtractTime.h
     - make members protected instead of private in order to allow 
       classes to derive from it

   * msignal/MExtractFixedWindow.cc
     - added some documentation

   * msignal/MExtractFixedWindowSpline.[h,cc]
   * msignal/Makefile
   * msignal/SignalLinkDef.h
     - new fast spline signal extractor


 
 2004/06/02: Antonio Stamerra

   * mtrigger/*:
     - added directory and new classes to correctly handle the 
	trigger-report string from report file. 
	Not yet into the Makefile.



 2004/06/01: Thomas Bretz

   * mbase/MLog.[h,cc]:
     - some changes to Lock/UnLock of mutices. Necessary for Cosy.



 2004/06/01: Abelardo Moralejo

   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
     - Added variable fLowGainPeakShift and setter. It allows to shift
       the integration window for low gain with respect to the one of
       the high gain. By default its value is 0 (corresponding to a 
       total delay of 15 slices) so that default behaviour of the
       extractor is the same as before.



 2004/06/01: Markus Gaug
 
   * mjobs/MJCalibration.cc
     - small change in the way the "full display" is displayed

   * mcalib/MHCalibrationChargeBlindPix.cc
   * mcalib/MHCalibrationChargePix.cc
     - replace Draw(opt) by Draw(). This make the histograms reappear 
       again, although I have no idea why. A printout of the opt gives 
       always empty. 

   * mcalib/MCalibrationQEPix.cc
     - put Eckarts transmission of the plexiglass into the class 
       documentation

   * msignal/MExtractTimeFastSpline.cc
     - fixed some smaller bugs affecting a small part of the signals


 2004/05/31: Hendrik Bartko

   * msignal/MArrivalTimeCalc2.cc
     - fixed a bug in pointer arithmetics found by Florian.



 2004/05/31: Raquel de los Reyes

   * macros/DAQDataCheck.C
     - committed the macro to check the raw data and display the quality
       plots.



 2004/05/30: Markus Gaug

   * mcalib/MCalibrationQEPix.[h,cc]
     - added more documentation (plots)
     - separated calls for light guides eff. , QE, and coll. eff.
   
   * mcalib/MCalibrationChargeCalc.[h,cc]
     - fixed a small bug in the calculation of the error on the number 
       of photons with the F-Factor method, did not include the division
       by number of pixels for the precision of the QE. This does not 
       affect the general analysis. 

   * mjobs/MJCalibration.cc
     - added runnumber 26924 to list of runs without clear colour in 
       the file name. 



 2004/05/28: Markus Gaug

   * macros/calibration.C
     - make the macro compilable with possibility to run it in batch 
       mode. 

   * msignal/MExtractor.cc
     - put an additional check in case that the number of FADC slices 
       in the run header is smaller or equal to 0.



 2004/05/27: Javier Rico

   * mbase/MDirIter.h 
     - remove unneeded ResetIter method (Reset does all the job)

   * mjobs/MJCalibration.cc
     - change call to the removed MDirIter::ResetIter for Reset
	


 2004/05/27: Markus Gaug

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]
     - put some protection against zero-division in fitFuncMichele

   * mcalib/MCalibrationChargeBlindPix.[h,cc]
     - set flag to distinguish between coated and un-coated blind pixel
     - increase ClassDef number by one.

   * mcalib/MCalibrationQEPix.[h,cc]
     - set a global variable CollEfficiency and LightguidesEfficiency. 
       The more precise result for the QE calculated with 
       the F-Factor method differs now by about 5% (while the statistical
       error remains around 20%). 

   * mcalib/MCalibrationChargeCalc.cc
     - write the number of photons directy into MCalibrationChargeCam. 
       These numbers would otherwise have to be assembled by different 
       parts in separate code. 



 2004/05/27: Thomas Bretz
 
   * mastro/MAstroCatalog.cc
     - removed a statement after '#endif'

   * mastro/MAstroCamera.h
     - removed obsolete empty function which (believing the Changelog)
       are not there at all!

   * mbase/MDirIter.[h,cc]:
     - moved code of Reset() funtion to source file
     - added more comments to Reset function



 2004/05/26: Martin Merck

   * mbase/MDirIter.cc
     - changed MatchFilter to allow for filenames containing a '+'
       character.



 2004/05/26: Markus Gaug

   * mjobs/MJCalibration.[h,cc]
     - set MCalibrationChargeBlindPix and MCalibrationChargePINDiode as 
       data members and store them in the output of WriteResult()

   * mcalib/MCalibrationQEPix.cc
   * mcalib/MCalibrationChargeCalc.cc
     - several small bugs fixed concerning calibration with the blind
       pixel or the PIN Diode

   * mjobs/MGCamDisplays.[h,cc]
   * mhist/MHCamera.[h,cc]
     - put the last function (CamDraw) of MGCamDisplays into MHCamera
       and removed MGCamDisplays.

   * mjobs/MJPedestal.[h,cc]
   * mjobs/MJCalibration.[h,cc]
   * mjobs/MJExtractCalibTest.[h,cc]
     - don't derive from MGCamDisplays any more.

   * msignal/MExtractBlindPixel.cc
     - adjusted some default numbers for the current blind pixel

   * msignal/MExtractedSignalBlindPixel.[h,cc]
     - set extracted signal from UInt_t to Int_t (sometimes, less
       than 0)

   * mcalib/MCalibrationCam.h
   * mcalib/MHCalibrationCam.h
     - make destructors virtual. 

   * mcalib/MHCalibrationCam.[h,cc]
     - create a copy contructor



 2004/05/26: Javier Rico

   * mbase/MDirIter.h
     - Add method to reset the internal TIter iterator 

   * mjobs/MJCalibration.cc
     - In FindColorReset method, reset the file iterator before looping

   * mimage/MNewImagePar.cc
     - Add output lines in Print(const MGeomCam &geom) method for 
       fInnerLeakage1, fInnerLeakage2 and fInnerSize



 2004/05/25: Raquel de los Reyes and Thomas Bretz

   * mjobs/MJCalibration.cc
     - uncommented the line to read .raw files.

   * mraw/MRawFileRead.cc
     - changed the PreProcess and Process functions to allow the analysis
       of .raw files.

   * mfileio/MReadReports.cc
     - changed the Process function to read the updated root files.



 2004/05/25: Markus Gaug

   * mjobs/MJCalibration.[h,cc]
     - add possibility to switch on and off the blind pixel or pin diode
       calibration
     - fixed a small bug in reading the MCalibrationRelTimeCam when the
       times calibration has been switched off.

   * mjobs/MExtractSignal.[h,cc]
     - made changes in MProcessFileP such that it fits with the new 
       calibration. THIS IS ONLY A TEMPORARY SOLUTION. PEDESTALS AND 
       DATA FILES MUST BE TREATED EQUALLY! OTHERWISE THERE IS NOT 
       MATCHING FOR THE HIT CLEANING!!!

   * mjobs/MJExtractCalibTest.[h,cc]
     - implement switch to use or not the cosmics filter

 
   * mcalib/MHCalibrationTestPix.cc
     - enlarged the dynamic range of the histograms for the high-int. 
       pulses



 2004/05/24: Javier Rico

   * mpedestal/MPedPhotCalc.cc
     - Correct a bug that made pedestals be assigned to the wrong pixel

   * mimage/MNewImagePar.[h,cc]
     - add getters and output lines in Print() method for 
       fInnerLeakage1, fInnerLeakage2 and fInnerSize



 2004/05/24: Markus Gaug

   * mcalib/MCalibrationChargePix.cc
     - reduce limit in number of phe's from 5 to 1. since some pulses 
       have less than 5 phe's now.

   * mcalib/MHCalibrationTestCam.[h,cc]
     - number of photons/area are now stored in TArray's in order to 
       retrieve them easier in later processing from stored files.

   * mcalib/MCalibrationCam.cc
     - initialize AverageAreas and AverageSectors with the number of 
       aidx and sector as SetPixId()

   * mcalib/MCalibrationChargeCam.[h,cc]
     - small modification in the Print()
     - introduce data members to store the average number of photons by 
       the three methods

   * mcalib/MCalibrationChargeCalc.cc
     - calculate the limits for acceptance of number of photo-electrons
       for the calculation of the mean by normal mean instead of weighted 
       mean. There were too many outliers still present in the weighted
       mean such to modify the result by a sizeable amount.
     - do not discard unreliable pixels any more in calculation of 
       mean number of phe.s In some runs, there is simply too many of 
       them in order to get reliable results.

   * mpedestals/MPedCalcPedRun.cc
     - put a condition if number of pixels in area index or in sector 
       is zero, don't calculate av. pedestal and av. pedRMS of this part.



 2004/05/22: Markus Gaug

   * mjobs/MJPedestal.[h,cc]
   * mjobs/MJCalibration.[h,cc]
   * mjobs/MJExtractCalibTest.[h,cc]
     - replaced the TString GetOutputFile() functions by const char* 
       GetOutputFile(). This apparenty caused a memory leak which is now 
       removed.

   * mcalib/MCalibrationChargePix.cc
     - fixed bug calculating the reduced sigma for low-gain events: 
       the electronics Ped.RMS was taken from Hi-gain pedestal events and 
       too high. It is now divided by the factor 10. conversion between 
       both samples, but this value is probably too optimistic. Needs 
       more detailed studies, but does not exclude as many pixels as 
       before. 

   * mcalib/MHCalibrationChargePix.h
   * mcalib/MHGausEvents.h
     - put fSaturated from MHCalibrationChargePix into MHGausEvents

   * mcalib/MHCalibrationChargeCam.[h,cc]
   * mcalib/MHCalibrationCam.h
     - put fNumHiGainSaturated and fNumLoGainSaturated from 
       MHCalibrationChargeCam into MHCalibrationCam

   * mcalib/MHCalibrationRelTimeCam.[h,cc]
     - set flags fSaturated in order to distinguish if the hi-gain or 
       the low-gain time has been extracted. 

   * mcalib/MHCalibrationCam.cc
     - remove cloning of all pixels on the Clone() function. This caused 
       the need for three times more memory during runtime than now. It 
       should not affect the current macros.

   * macros/calibration.C
     - added a debug switch with which you can print out Object
       Allocation (like suggested by TBretz).

   * mcalib/MCalibrationRelTimeCalc.[h,cc]
     - replaced the relative limit for acceptance of the time resolution 
       by an absolute limit
     - set up output statistics logging (data written into DB)

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - moved limit for acceptance of number of phe;s from 5 to 8
     - set up output statistics logging (data written into DB)

   * mjobs/MJCalibration.cc
     - set up output statistics logging (data written into DB)



 2004/05/22: Abelardo Moralejo

   * macros/calibrate_data.C
     - removed wrong call to MPedCalcPedRun::SetExtractor, which does
       not exist (should use MJPedestal like calibration.C, instead of 
       a normal loop)

   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
     - changed name of variable fOffsetFromPeak to fOffsetFromWindow
       to avoid confusion.
     - introduced initialization to 0 of startslice and sat in FindPeak
     - changed initialization of maxsumhi in Process from 0 to -1e6



 2004/05/20: Raquel de los Reyes
 
   * mraw/MRawRead.h
   * mraw/Makefile
   * msql/Makefile
     - changed the inheritance of MRawRead class from MTask to MRead to
       implement the AddFiles(MDirIter &) function in MRawFileRead class.

   * mraw/MRawFileRead.[h,cc]
     - implemented a second argument to the AddFile function and skip 
       adding NULL files in the constructor.

   * mjobs/MJPedestal.cc
     - uncommented the line to allow the analysis of .raw files.



 2004/05/20: Markus Gaug
 
   * mjobs/MJPedestal.cc
     - put MGeomCamMagic into the plist (MGeomApply complained not to 
       find the GeomCam(

   * msignal/MExtractFixedWindowPeakSearch.cc
     - fixed a bug affecting signals with late arrival times which use 
       the variable fHiLoLast. 
     - set back fgOffsetFromPeak from peak to 1 (instead of 2). Abelardo 
       explained that this variable is not strictly the offset from the 
       peak but the offset from the peak search window. 



 2004/05/19: Markus Gaug
 
   * mcalib/MCalibrationChargeCam.cc
     - replaced a small bug in Print() which gave a segmentation 
       violation	

   * mjobs/MJCalibration.cc
     - use cosmics filter only for CT1 pulser runs



 2004/05/19: Abelardo Moralejo

   * mbase/MGMap.cc
     - replaced rint by TMath::Nint() (my Mac did not recognize the 
       former)



 2004/05/19: Abelardo Moralejo

   * macros/starmc2.C
     - added third argument in adding MPointingPos to the output:
       write.AddContainer("MPointingPos",  "Events", kFALSE);
       If not exisiting in the input file, it is simply ignored.



 2004/05/15: Thomas Bretz

   * mastro/MAstroCatalog.[h,cc]:
     - changed Form to MString for thread safty
     - fixed a bug which caused the construtor to crash in batch-mode
     - added option argument to PaintImg

   * mbase/MGMap.[h,cc]:
     - added many new static member function to draw figures

   * mbase/MParContainer.cc:
     - changed Form to MString for thread safty

   * mbase/MString.[h,cc]:
     - added

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MString



 2004/05/15: Markus Gaug

   * msignal/MArrivalTimePix.h
   * msignal/MArrivalTimeCam.cc
     - introduced functin GetHiGainSaturation() in MArrivalTimePix.h
     - added type in GetPixelContent() which asks for Hi-Gain saturation
       and return the hi-gain time or the low-gain time, correspondingly.

   * mbase/MGMap.cc
     - fixed two bugs which did not complile under gcc 3.3.x introduced
       by TB.



 2004/05/12: Markus Gaug

   * msignal/MExtractTime.[h,cc]
     - introduced intrinsic delay of low-gain, as measured by Florian. 

   * mjobs/MJCalibration.cc
   * mjobs/MJExtractCalibTest.cc
     - fixed some errors in the storage of the rel. times.

   * mjobs/MJExtractCalibTest.cc
     - put the cosmics filter which was forgotten

   * mcalib/MCalibrate.h
     - changed default from Blindpixel to Ffactor     



 2004/05/12: Thomas Bretz

   * mona.cc:
     - changed names

   * macros/sumcurrents.C:
     - changed units from nA to \\mu A

   *: mastro/MAstroCamera.[h,cc]:
     - added '=' Draw option
     - use fMapG directly

   * mastro/MAstroCatalog.[h,cc]:
     - added support to read and write a compressed catalog
     - changed TExMap to new MGMap
     - added support for HeasarcPPM catalog
     - added PaintImg to paint catalog into a bitmap (used in
       starguider software)
     - don't clone MObservatory copy the contents
     - changed type of dx and dy in DrawLine from Double to Int
     - fixed drawig of the tooltip corresponding to the grid
       (some were missing, some were existing twice)
     - Now AddPrimitives takes fLimMag into account

   * mhbase/MFillH.cc:
     - added a const-qualifier

   * mhist/MHCamera.cc:
     - fixed a bug which caused SetPalette in the constructor to crash

   * mbase/MGMap.[h,cc]:
     - added

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MGMap



 2004/05/11: Thomas Bretz

   * mraw/MRawEvtHeader.cc:
     - added a check whether the file has finished or not after
     reading the first bytes.



 2004/05/10: Marcos Lopez

   * mmontecarlo/MMcEnergyEst.cc: 
     - In static void fcn(...), fixed the following bugs which caused a
       "segmentation violation":
     - Replace: MTaskList *tlist  = evtloop->GetTaskList()
       by:      MTaskList *tlist = (MTaskList*)plist->FindObject("MTaskList")
     - And get the pointer *eval to MParamterD("MFitResult"), after 
       the excution of the Eventloop and not before it (since that object is 
       created when calling the PreProcess).



 2004/05/10: Thomas Bretz

   * mraw/MRawEvtHeader.[h,cc]:
     - changed return type of ReadEvt from int to Int_t
     - Enhanced output in case of invalid time

   * mraw/MRawRead.cc:
     - fixed the return type of ReadEvt (was bool instead of int)
       which confused merpp completely in case of invalid times



 2004/05/10: Markus Gaug

   * macros/calibrate_data.C
     - updated setting of arr. time extractor



 2004/05/09: Thomas Bretz

   * Makefile:
     - added workaround for Mac to create so- and dynlib-object

   * Makefile.conf.darwin:
     - added necessary option to create both kind of files

   * Makefile.conf.linux:
     - changed the options to create so-object only

   * Makefile.rules:
     - added DYLIB to rmbin

   * mraw/MRawEvtData.cc:
     - changed some output

   * mraw/MRawEvtHeader.[h,cc]:
     - skip the rest of the header if the time is invalid. Otherwise
       merpps force-mode will corrupt the data when further processing
     - implemented GetNumBytes returning the size of the header



 2004/05/08: Thomas Bretz

   * mona.cc:
     - some changes to make it work again

   * mraw/MRawSocketRead.cc:
     - fixed the sync with what DAQ sends



 2004/05/07: Markus Gaug

   * mcalib/MHCalibrationChargeHiGainPix.cc
   * mcalib/MHCalibrationChargeLoGainPix.cc
     - take out half of the bins for the hists in order to save memory  

   * mjobs/MExtractCalibTest.cc
     - include write-out of the containers in the loop

   * mjobs/MJCalibration.cc
     - take runs 20660 and 20661 into the list of known runs with colour
       green.

   * mpedestal/MPedCalcPedRun.[h,cc]
     - make the arrays fSum and fSum2 doubles. This is necessary since 
       rounding errors of the floats introduced significant errors in the 
       RMS! 
     - introduced one condition about possible window sizes of 0.



 2004/05/06: Markus Gaug

   * htmldoc/images/PedestalStudyInner.gif
   * htmldoc/images/PedestalStudyOuter.gif
     - two gifs used for the documentation of MPedCalcPedRun  

   * mpedestal/MPedCalcPedRun.cc
     - updated documentation

   * macros/pedestalstudies.C
     - updated to the latest version of MPedCalcPedRun

   * macros/bootcampstandardanalysis.C
     - updated to the latest changes in the ArrivalTime Extraction



 2004/05/05: Markus Gaug

   * mcalib/MHGausEvents.cc
     - removed some warning saying "Cannot create Fourier spectrum"

   * mcalib/MCalibrationChargePix.cc
     - loosened the limits somewhat for calibration with the low-gain
     - introduced different electronic noise for inner and outer pixels
       (like seen in the data)

   * mpedestal/MPedCalcPedRun.cc
     - fixed a small inconsistency in case that the range goes out of 
       the high-gain samples and reaches into the low-gain samples. In 
       that case, the last slice of the high-gain was not taken (but the 
       window size correctly)
 
   * mjobs/MJExtractCalibTest.[h,cc]
     - included setters for the time extractor

   * mcalib/MCalibrationChargeCalc.cc
     - set default of fgPheErrLimit from 4 sigma to 5.

   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
   * mcalib/MHCalibrationTestTimeCam.[h,cc]
   * mcalib/MHCalibrationTestTimeCam.[h,cc]
     - analogue to MHCalibrationTestCam, two classes to test the 
       output of the calibration.

   * mcalib/MHCalibrationCam.cc
     - in InitHists, exclude only pixels with kUnsuitableRun, instead of 
       all (IsBad())

   * msignal/Makefile
   * msignal/SignalLinkDef.h
   * msignal/MExtractTimeFastSpline.[h,cc]
     - new fast spline extractor for the equally spaced time slices. 
       Searches for the position of the half maximum between maximum and 
       pedestal. About 6 times faster than MArrivalTimeCalc

   * mjobs/MJCalibration.cc
     - changed names of the MHCameras to contain run name



 2004/05/04: Raquel de los Reyes
 
   * mbase/MRunIter.[h,cc]
     - Added a flag and a set function to read .raw files. 
       The default option is set to read .root files.



 2004/05/04: Javier Rico
 
   * mcalib/MCalibrate.cc
     - when calibrating using kNONE, weight by the pixel area



 2004/05/04: Thomas Bretz
 
   * macros/MagicHillas.C, macros/comprob.C, macros/derotatedc.C, 
     macros/dohtml.C, macros/evtrate.C, macros/merpp.C, 
     macros/pixfirerate.C, macros/pixsatrate.C, macros/plot.C, 
     macros/plot2.C, macros/pointing.C, macros/readMagic.C, 
     macros/rootlogon.C, macros/runbook.C, macros/sectorvstime.C, 
     macros/star.C, macros/sumcurrents.C, macros/tar.C, 
     macros/testenv.C, macros/weights.C:
     - updated documentation

   * mastro/MAstroCamera.[h,cc]:
     - added member function to read MC .def files for mirror geometry
     - added GetDiffZdAz

   * mastro/MObservatory.[h,cc]:
     - added Copy-member function

   * mbase/MLog.[h,cc]:
     - updated handling of mutices
     - added a new mutex to lock the stream

   * mhist/MHCamera.[h,cc]:
     - added functionality to linear deform the camera display
       (to correct for abberation)

   * mtools/MFFT.cc:
     - added more documentation

   * mbase/MTime.[h,cc]:
     - renamed overloaded Set-function to SetMjd. There were some
       trouble with the interpreter and the new naming is more
       intuitive.



 2004/05/04: Markus Gaug
 
   * mcalib/MHCalibrationChargeBlindPix.cc
     - intialized the 2 vectors differently, now they don't give 
       warnings any more.

   * msignal/MExtractor.cc
   * msignal/MExtractFixedWindow.cc
     - put one initialization to 0 into the MExtractor

   * mastro/MAstroCatalog.h
     - make AlignCoordinates() protected, in order to compile

   * mcalib/MHGausEvents.cc
     - took out fEvents(0) and fHGausHist() from constructor

   * msignal/MExtractor.cc
   * msignal/MExtractPINDiode.cc
     - fixed StreamPrimitive

   * msignal/MExtractBlindPixel.[h,cc]
     - deriving from MExtractor, possibility to filter NSB events

 

 2004/05/03: Thomas Bretz

   * mbase/MRunIter.cc:
     - AddRuns(char*) added some const-qualifiers
     - replaced deprecated if-else-if by continue- and return-
       constructions



 2004/05/03: Javier Lopez
 
   * mbadpixels/MBadPixelsPix.[h,cc]
     - put another enum for hardware malfunctionning. Started to be 
       filled with kHVNotNominal



 2004/05/03: Markus Gaug

   * mcalib/MHCalibrationBlindPix.[h,cc]
     - removed a "->" behind the comment
     - Create a TVector in Draw only if the array is not zero

   * mraw/MRawEvtPixelIter.cc
     - corrected bug in GetIdxMaxLoGainSamples() which looped over 
       one slice too much 
	end = fLoGainPos + fNumLoGainSamples + 1 replaced by:
	end = fLoGainPos + fNumLoGainSamples

   * msignal/MTimeExtractor.[h,cc]
   * msignal/MExtractTime.[h,cc]
     - changed name for alphabetical display in dox

   * mjobs/MJCalibration.[h,cc]
   * msignal/MExtractTimeSpline.h
   * msignal/MExtractTimeHighestIntegral.h
     - changed name of base class to MExtractTime

   * mcalib/MCalibrationCam.[h,cc]
   * mcalib/MCalibrationChargeCam.[h,cc]
   * mcalib/MCalibrationRelTimeCam.[h,cc]
     - put the number of unsuitable and unreliable pixels in the base
       class

   * mcalib/MCalibrationRelTimeCalc.[h,cc]
     - fixed a bug calculating the average time resolution
 
   * mpedestals/MPedestalPix.[h,cc]
     - add a dedicated fValid flag in order to be able to discard pixels 	 
       from outside (e.g. from MBadPixelsCam)

   * mpedestals/MPedCalcPedRun.[h,cc]
     - catch badpixels cam from parameter list, if existing and set 
       corresponding pixels to not valid in MPedestalPix

   * mjobs/MGCamDisplays.[h,cc]
   * mhist/MHCamera.[h,cc]
     - put DrawProjection and DrawRadialProfile in MHCamera

   * macros/dohtml.C
     - include directory mfit and macros calibration.C and 
       bootcampstandardanalysis.C
     - take out pixvstime.C which does not exist

   * msignal/MExtractFixedWindow.[h,cc]
   * msignal/MExtractSlidingWindow.[h,cc]
   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
   * msignal/MExtractor.[h,cc]
   * msignal/MExtractPINDiode.[h,cc]
   * msignal/MExtractTime.[h,cc]
     - set number of slices not in base class, but in derived one. 
       Like this, extractors setting their signal in other containers 
       don't have a conflict with the ReInit() in MExtractor.



 2004/05/01: Thomas Bretz

   * macros/rootlogon.C:
     - ignore MARSSYS if libmars.so is found in the current path

   * mastro/MObservatory.cc:
     - small change to coordinates

   * mbase/MLog.[h,cc]:
     - enhanced output in case of problem with mutices

   * mtemp/TempIncl.h, mtemp/TemlLinkDef.h:
     - removed everything

   * Makefile*, */Makefile
     - changed all to support mtemp/mifae and similar



 2004/05/01: Abelardo Moralejo

   * mmain/MEventDisplay.cc
     - changed back integration range for MC to 0-14 slices to avoid 
       confusions.



 2004/05/01: Markus Gaug

   * macros/dohtml.C
     - include directory mpedestal

   * msignal/MExtractFixedWindow.[h,cc]
   * msignal/MExtractSlidingWindow.[h,cc]
   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
   * msignal/MExtractor.[h,cc]
     - include the possibility to set the range for the hi-gain outside
       the range of MRawEvtPixelIter::GetNumHiGainSamples() and to take 
       the "low-gain" slices instead. This is necessary for the March 
       data!

   * mjobs/MJCalibration.[h,cc]
     - accept arrival time extractors deriving from MTimeExtractor



 2004/04/30: Thomas Bretz

   * mastro/MAstroCamera.[h,cc]:
     - removed obsolete TList data member (use a argument in
       GetStarList instead)

   * mbase/MTime.h:
     - added 'istream &operator<<(istream &in, MTime &t)'

   * mbase/BaseLinkDef.h:
     - added new operator



 2004/04/30: Daniela Dorner
  
   * macros/pointing.C
     - implemented plot: Control Deviation vs Time
     - rearranged plots



 2004/04/30: Markus Gaug

   * mcalib/MCalibrationRelTimeCalc.[h,cc]
     - new class to treat rel. times after fits

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - search for outliers in the total F-Factor and set a flag in 
       MBadPixelsPix

   * mcalib/MCalibrationRelTimeCam.h
     - new TArrayIs to store number of unsuitable and unreliable pixels
   

   * mbadpixels/MBadPixelsPix.h
     - two new flags added: kDeviatingFFactor and kDeviationTimeResolution
  
   * mcalib/MHCalibrationRelTimePix.[h,cc]
     - take out commented part of code related to re-normalization

   * mcalib/MHCalibrationCam.[h,cc]
     - retrieve the used run numbers in order to store them in teh 
       histogram titles to help transparency of the displays

   * mcalib/MHCalibrationRelTimeCam.[h,cc]
     - Getter and Setter for the reference pixel

   * mcalib/MCalibrate.cc
     - make error of nphot to be taken from square root of absolute 
       number of photons instead of number of photons, otherwise 
       NaN's are obtained

   * msignal/MExtractPINDiode.[h,cc]
     - now deriving from MExtractor

   * msignal/Makefile
   * msignal/SignalLinkDef.h
   * msignal/MExtractTimeSpline.[h,cc]
   * msignal/MExtractTimeHighestIntegral.[h,cc]
     - replacements for MArrivalTimeCalc and MArrivalTimeCalc2

   * mjobs/MJCalibration.[h,cc]
     - Set time extractor by pointer 



 2004/04/29: Thomas Bretz

   * mbase/MTask.cc:
     - fixed behaviour of GetNumExecutions. Because of a root bug
       Count returns a number which is to high by 1.



 2004/04/29: Abelardo Moralejo

   * mmc/MMcEvt.hxx
     - Added minor comment (explanation of fPassPhotCone).

   * mmc/MMcRunHeader.[hxx,cxx]
     - Removed obsolete parameters fSourceOffsetTheta, fSourceOffsetPhi
     - Updated class version to 5.



 2004/04/29: Nadia Tonello

   * mbadpixels/MBadPixelsTreat.h
     - changed enums {.. BIT(1), ... BIT(2), ... BIT(3) } in {1,2,3}
       to have the right behaviour of the flags (and of SetProcessRMS)

   * manalysis/MCT1PointingCorrCalc.[h,cc]
     - added pointing correction for 1ES1959



 2004/04/29: Markus Gaug

   * msignal/MArrivalTimePix.[h,cc]
     - removed flag fLoGainUsed which is not used at all

   * msignal/MTimeExtractor.[h,cc]
     - new base class for arrival time extractors
   
   * msignal/Makefile
   * msignal/SignalLinkDef.h
   * msignal/MExtractTimeSpline.[h,cc]
     - replacement of MArrivalTimeCalc, derived from MTimeExtractor


   * msignal/MExtractor.h
     - make SetRange virtual
     - check for range w.r.t. ranges given in the run header in ReInit

   * msignal/MExtractFixedWindow.[h,cc]
   * msignal/MExtractSlidingWindow.[h,cc]
   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
     - overload the SetRange() function in order to do the necessary 
       checks of the range there. Slight differences in every extractor
       because of the floating windows.


   * mpedestals/MPedCalcPedRun.[h,cc]
     - add the possibility to set ranges and extraction windows. Default
       is what has always been


   * mjobs/MJPedestals.[h,cc]
     - add the possibility to set a signal extractor which gives the 
       extraction ranges to MPedCalcPedRun
     - derive from MHCamDisplays

   * mcalib/MCalibrationChargeCam.cc
     - updated the Print() a little


 2004/04/29: Javier Rico

   * mbase/MRunIter.cc
     - Remove AddRuns(const char*,const char*) dependence on length of 
       first character chain

	
 2004/04/28: Javier Rico

   * mbase/MRunIter.[h,cc]
     - include function to read runs specified in a character chain
       with the format, e.g., run1,run2-run3,run4-run5,...



 2004/04/28: Abelardo Moralejo

   * macros/starmc.C
     - adapted to change in MC calibration: replaced 
       MMcCalibrationCalc::GetHist by GetHistADC2PhotEl and 
       GetHistPhot2PhotEl.



 2004/04/28: Markus Gaug
 
   * mjobs/MGCamDisplays.cc
   * mjobs/MJCalibration.cc
     - introduced new "fit" flag in DrawProjection allowing to draw 
       two separate pad with the (fitted) histograms for inner and 
       outer pixels. This is displayed by MJCalibration if the 
       kNormalDisplay option is chosen (default).

   * mjobs/MJCalibration.h
     - took out the const of GetBadPixels() in order to allow compilation
       of macros/bootcampstandardanalysis.C. This will change again soon 
       when mjobs/MJExtraction is updated and used there. 

   * msignal/MArrivalTimeCalc.[h,cc]
     - remove the ReInit() which calls to an MGeomCam which is later not 
       used

   * macros/calibrate_data.C
     - fixed a bug in loop 3 taking the default QE Cam instead of the 
       one filled by MJCalibration 

   * msignal/MExtractor.[h,cc]
     - new base class for signal extractors

   * msignal/Makefile	
   * msignal/SignalLinkDef.h	
   * msignal/MExtractFixedWindow.[h,cc]
   * msignal/MExtractSlidindWindow.[h,cc]
   * msignal/MExtractFixedWindowPeakSearch.[h,cc]
     - replacements for MExtractSignal, MExtractSignal2, MExtractSignal3

   * macros/calibration.C
   * macros/calibrate_data.C
   * macros/pedphotcalc.C
   * macros/bootcampstandardanalysis.C
     - adapted to new extractors

   * mbadpixels/MBadPixelsPix.h
     - set back the old definition of IsOK(), namely no information 
       available



 2004/04/27: Raquel de los Reyes

   * mhvstime/MHVsTime.cc
     - added a line in the Fill function to avoid empty time events.



 2004/04/27: Abelardo Moralejo

   * mcalib/MMcCalibrationCalc.[h,cc]
     - added histogram which stores the conversion of photons before 
       the plexiglas to photoelectrons hitting first dynode.

   * macros/mccalibrate.C
     - added MPointingPosCalc to the tasklist to create and fill an 
       MPointingPos object, and later write it to the Events tree of 
       the calibrated MC files. Added some comments and simplified
       some lines. One more histogram from MMcCalibrationCalc (see
       above) is now written to the output.

   * macros/starmc2.C
     - added the writing of MPointingPos to output star file.



 2004/04/27: Markus Gaug

   * mjobs/MJCalibration.[h,cc]
     - put the three camera drawing facilities into a separate base 
       class MGCamDisplays

   * mjobs/MGCamDisplays.[h,cc]
   * mjobs/Makefile
   * mjobs/JobsLinkDef.h
     - camera drawing facilities: CamDraw, DrawProjection and 
       DrawRadialProfile, used by all jobs

   * mjobs/MJExtractCalibTest.[h,cc]
   * mjobs/Makefile
   * mjobs/MJobsLinkDef.h
     - new class to test the calibration results

   * mcalib/MCalibrationChargeCalc.cc
     - set unsuitable pixels to excluded in MCalibrationChargePix, which 
       will not display them in the status display

   * mjobs/MJCalibration.cc
     - take out display of previously excluded pixels 

   * mbadpixels/MBadPixelsCam.cc
     - set val to 1 in case that GetPixelContent is true, before display 
       was not correct

   * macros/calibration.C
     - added the test class MJExtractCalibTest



 2004/04/27: Abelardo Moralejo

   * mhistmc/MHMcCollectionArea.[h,cc]
     - Added fMCAreaRadius and setter to allow changing the radius of
       the circular area in which MC events are produced. Useful for
       instance for stereo configuration studies. By default it is 300 m
       as was assumed before.



 2004/04/26: Markus Gaug

   * mcalib/MHCalibrationTestPix.[h,cc]
   * mcalib/MHCalibrationTestCam.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - two new histogram classes to perform claibraion checks, will be 
       especially useful for the data-check.

   * mcalib/MCalibrationQEPix.cc
     - found a bug in the setting of validity flags of colours. This 
       made the QE used for calibration uncorrect by about a factor 1.5 
       for the outer pixels if only one colour is used for calibration.

   * mjobs/MJCalibration.[h,cc]
     - moved colour finder from the macros into this class with the 
       function FindColor()
     - had to add ~MJCalibration() {} because otherwise, I get a 
       segmentation violation in the destructor, the debugger says in 
       some TString. Maybe it's because of the GetDescriptor() in  
       ~MParContainer() ?

   * macros/calibration.C
   * macros/calibrate_data.C
   * macros/pedphotcalc.C
   * macros/bootcampstandardanalysis.C
     - removed function FindColor()

   * mcalib/MCalibrationCam.h
     - make Init() and InitSize() virtual

   * mcalib/MCalibrationChargeCam.[h,cc]
     - introduce two TArrayI's for the number of uncalibrated and 
       unreliable pixels.

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - calculate and store the above numbers.

   * mbadpixels/MBadPixelsPix.[h,cc]
   * mbadpixels/MBadPixelsCam.cc
     - removed bits: kHiGainNotCalibrated and kLoGainNotCalibrated
     - added bits: kDeviatingFFactor, kConversionHiLoNotValid
     - removed functions: IsCalibrationResultOK() 
	and IsCalibrationSignalOK()
     - changed function IsOK() such that it returns false only if 
       the pixels is not suitable (run or evt)

   * mcalib/MCalibrate.cc
   * mcalib/MCalibrateRelTime.cc
     - exchanged query for IsCalibrationResultOK() to 
       IsUnsuitableRun(MBadPixelsPix::kUnsuitableRun). This includes 
       now the oscillating pixels (which are sometimes many!!)

   * mcalib/MHCalibrationRelTimePix.cc
     - commented re-normalization to ns in Renorm()
     - introduced Getter to fFADCSliceWidth

   * mcalib/MHCalibrationRelTimeCam.cc
     - renorm to ns in GetPixelsContent()
     --> now, calibration in MCalibrateRelTimes is consistent



 2004/04/26: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.cc
     - changed from 1 to 10 the "dummy" value of conversion high to low 
       gain for old camera 0.6 files. Usually these files have no low 
       gain at all, but there was a patched version of the program 
       which did have low gain (with a gain 10 lower than hg).



 2004/04/25: Abelardo Moralejo

   * mbadpixels/MBadPixelsTreat.cc
     - Change in line 204:    if ((*fBadPixels)[i].IsBad()) by
       if ((*fBadPixels)[j].IsBad())   The way it was done, it never
       worked, because the check on whether the neighbour pixels
       were OK was performed on the same pixel to be treated (i), which 
       is obviously not OK. The same problem fixed in the interpolation 
       of pedestals. Amazingly, this error would have shown up in any
       test of the class.... I assume it must have been commited 
       completely untested.

     - In InterpolateSignal: moved division of summed charge over 
       number of pixels : put it after the check of the number of 
       valid neighbours to avoid division by 0.



 2004/04/23: Markus Gaug

   * mcalib/MHCalibrationCam.cc
     - fixed a bug in the ReInit() for the number of average events in 
       each area index and sector


 2004/04/23: Thomas Bretz

   * */Makefile:
     - added some more mpedestal

   * mreport/MReportRun.cc:
     - changed to work with the latest version of report-files
       --> This will make it incompatible with older report files
           (for this use older Mars versions for merpping)

   * mbase/MStatusDisplay.[h,cc]:
     - added combo-box to surf through tabs in MARS-tab



 2004/04/22: Nadia Tonello

   * mcalib/MCalibrateData.cc
     - changed request for MBadPixelsPix::IsCalibrationResultOK() for 
       MBadPixelsPix::IsUnsuitable(MBadPixelsPix::kUnsuitableRun)



 2004/04/22: Thomas Bretz

   * mhist/MHCamera.[h,cc]:
     - implemented SetUsed

   * merpp.cc:
     - added "-ff" and interleave mode - both not execcively tested yet

   * mhbase/MFillH.cc:
     - added a missing 'endl'

   * mraw/MRawCrateData.[h,cc], mraw/MRawEvtData.[h,cc],
     mraw/MRawEvtHeader.[h,cc]
     - added SkipEvt (the number of skipped bytes is untested)

   * mraw/MRawEvtHeader.[h,cc]
     - return kCONTINUE if time is invalid

   * mraw/MRawFileRead.[h,cc]:
     - implemented AddFile feature - first draft!
     - added feature to skip events

   * mraw/MRawFileWrite.h:
     - changed default compression level corresponding to merpp to 2

   * mraw/MRawRead.[h,cc]:
     - added fForceMode flag to be able to suppress event errors

   * mbadpixels/MBadPixelsTreat.[h,cc]:
     - changes such that the pedestal interpolation is now done
       only in ReInit. If you need the old behaviour call
       SetProcessRMS()

   Another step towards less mess:
   
   * MMcPedestalCopy.[h,cc], MMcPedestalNSBAdd.[h,cc],
     MPedPhotCalc.[h,cc], MPedPhotCam.[h,cc], MPedPhotPix.[h,cc],
     MPedCalcPedRun.[h,cc], MPedestalCam.[h,cc],
     MPedestalPix.[h,cc]:
     - moved from manalysis to mpedestal

   * mpedestal/Makefile, mpedestal/PedestalLinkDef.h,
     mpedestal/PedestalIncl.h:
     - added

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h,
     manalysis/AnalysisIncl.h:
     - removed files above

   * mbadpixels/Makefile:
     - added mpedestals

   * Makefile:
     - added mpedestals


 2004/04/22: Antonio Stamerra

   * mmain/MEventDisplay.cc
     - Added new tab "Trigger" adding a new MHEvent (evt9), 
	filled through the MMcTriggerLvl2 container.
	A new MFillH task for evt9 and MMcTriggerLvl2Calc task 
	have been added. 

   * mhist/MHEvent.[h,cc]
     - Added new event type kEvtTrigPix

   * manalysis/MMcTriggerLvl2.[h,cc]
     - The class now inherits from MCamEvent
     - Added the methods GetPixelContent and DrawPixelContent (from MCamEvent)
     - Added the method IsPixelInTrigger that returns kTRUE if a pixels 
	is in the trigger region

   * manalysis/MMcTriggerLvl2Calc.[h,cc]
     - Added the methods CheckRunType and ReInit to check if the file is MC.

   * mhistmc/Makefile
     - Added the include for mgui


 2004/04/22: Markus Gaug

   * mcalib/MCalibrate.[h,cc]
     - introduced flat-fielding of charges for the muon calibration, 
       accessible with SetCalibrationMode(kFlatCharge)

   * manalysis/MPedCalcPedRun.cc
     - added a SetReadyToSave() at the end of PostProcess
   
   * mjobs/Makefile
     - added include of mraw

   * mjobs/MJCalibration.cc
     - added MRawFileRead for option SetDataCheck()

   * mjobs/MJPedestal.cc
     - added MRawFileRead for option SetDataCheck()


 2004/04/21: Thomas Bretz

   * mbase/MTask.cc,  mbase/MTaskList.cc:
     - let MTask in list fTaskProcess to be used as a counter

   * mdata/MDataChain.[h,cc]:
     - added some treatments for combinations of +/- signs

   * mfbase/MFilterList.[h,cc]:
     - added a new constructor to simplyfy filter-inversions

   * mfileio/MReadReports.cc:
     - added comment

   * mhbase/MBinning.[h,cc]:
     - added new constructor to simplify calls in macros

   * mhbase/MFillH.[h,cc]:
     - added fDrawOption to be used in MStatusDisplay

   * mhist/MHFalseSource.cc:
     - added comment



 2004/04/20: Thomas Bretz

   * macros/derotatedc.C
     - added tutorial macro plotting derotated dc currents

   * mhist/MHCamEventRot.[h,cc]:
     - added histogram to be filled with derotated MCamEvents



 2004/04/18: Abelardo Moralejo

   * mgeom/MGeomCam.h
     - Update class version to 4 (necessary after M. Gaug's change 
       of the type of member fMaxRadius.



 2004/04/16: Abelardo Moralejo

   * mcalib/MCalibrationQEPix.[h,cc]
     - Added fAverageQE. Same role as gkDefaultAverageQE, but can be 
       changed via SetAverageQE. Made public GetAverageQE and 
       GetAverageQERelVar (this changes needed for MC).

   * mcalib/MMcCalibrationCalc.[h,cc]
   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Adapted to M. Gaug's changes in calibration classes. Behaviour
       has been tested to be the same as before those changes. Now the
       conversion factor from ADC counts to photoelectrons, and the
       average QE (photons->photoelectrons) are calculated independently 
       (and later combined by MCalibrate to obtain the conversion 
       ADC->photons).

   * mmain/MEventDisplay.cc, macros/mccalibrate.C, starmc.C
     - Added call to MExtractSignal::SetSaturationLimit(240)  Affects 
       only MC display. This was necessary because if electronic noise
       is simulated in the FADC, sometimes saturated slices look not
       saturated due to negative fluctuations, so it is better to set 
       the saturation limit at a safe value (240 ADC counts). Changed 
       signal integration range (only for MC), now from slices 5 to 10.

   * msignal/MExtractSignal3.[h,cc]
     - Changed name of function SetRange for the more adecquate 
       "SetWindows". No change in behaviour of the function.



 2004/04/16: Markus Gaug

   * msignal/MExtractSignal.cc
     - commited proposed larger default window from fgLast = 10 to 
       fgLast = 14, because in March the pulses have moved to later 
       arrival times.
     - removed some inconsistency with slice numbering in FindSignal() 
       from pixel.GetHiGainSamples()+fHiGainFirst-1 to 
       pixel.GetHiGainSamples()+fHiGainFirst and also for the low gain

   * msignal/MExtractSignal2.cc
     - committed the proposed smaller window egdes from fgFirst=0 to 
       fgFirst = 3, because in March some of the high-gain pulses reach 
       into the "low-gain samples" and mislead thus sliding window to 
       be maximized on the tail of the high-gain pulse.

   * mcalib/MHPedestalPix.cc
     - fixed a bug which made normalization to values per slice not happen

   * macros/pedestalstudies.C
     - fixed and documented



 2004/04/15: Markus Gaug

   * macros/calibration.C
     - added a function FindColor() to extract the colour by filename, 
       works if there is indeed a colour or if the run nubmer is smaller 
       than 20000 -> take ct1

   * macros/bootcampstandardanalysis.C
   * macros/pedphotcalc.C
   * macros/calibrate_data.C
     - updated the macro to the cvs-standard used at the Udine bootcamp

   * mcalib/MCalibrateRelTimes.[h,cc]
   * mcalib/Makefile
   * mcalib/CalibLinkDef.h
     - new class to calibrate the relative times

   * manalysis/MGeomApply.cc
     - added MArrivalTime::Init()

   * msignal/MArrivalTime.[h,cc]
     - added array fDataErr
 
   * macros/rootlogon.C
     - added directories mbadpixels and mjobs

   * mcalib/MCalibrationQEPix.cc 
     - set the fAvNorm variables to 1 in Clean()

   * manalysis/MPedPhotCalc.[h,cc]
     - included possibility to use an MBadPixelsCam



 2004/04/14: Thomas Bretz

   * manalysis/MCerPhotEvt.[h,cc]:
     - fixed a bug which caused a missing last pixel (in most cases
       Index 576)

   * manalysis/MCerPhotPix.cc:
     - fixed output in Print

   * macros/mccalibrate.C, mmain/MEventDisplay.cc:
     - added missing SetCalibrationMethod

   * mbadpixels/MBadPixelsCam.[h,cc]:
     - added copy constructor

   * mbadpixels/MBadPixelsMerge.cc:
     - added comments

   * mraw/MRawRunHeader.[h,cc]:
     - added new run-type (kRTPointRun=7)

   * mmain/MEventDisplay.cc:
     - fixed the broken cleaning levels



 2004/04/14: Markus Gaug
  
   * mcalib/MCalibrationQEPix.cc
     - found a bug in the calculation of the error, fixed

   * macros/mccalibrate.C, mmain/MEventDisplay.cc:
     - replaced SetCalibrationMethod by SetCalibrationMode

   * htmldoc/images/CalibClasses.gif
   * htmldoc/images/RelTimeClasses.gif
     - two schemes used in the class descriptions

   * mcalib/MHCalibrationCam.[h,cc]
     - included function GetAverageAreas() and GetAverageSectors() like 
       in MCalibrationCam

   * mjobs/MJCalibration.[h,cc]
     - included calibration of rel.Times, to be chosen with a flag 
       RelTimeCalibration()
     - signal extractor and arrival time extractor can be chosen by 
       flags as well (see Class description)


   * mbadpixels/MBadPixelsCam.cc
     - add two new types in GetPixelContent, add documentation of 
       GetPixelContent

   * msignal/MArrivalTimeCalc2.cc
     - commented the warning for pixels with lowgain saturation



 2004/04/13: Markus Gaug

   * macros/dohtml.C
     - included directory mbadpixels

   * mcalib/MCalibrationPix.[h,cc]
     - add functions GetHiLoMeansDivided(), GetHiLoSigmasDivided() and 
       errors

   * mcalib/MCalibrationChargeCam.[h,cc]
     - removed hi-vs.Lo histograms (come into a separate MIntensityCam) 
     - updated GetPixelContents
     - updated class documentation

   * mgeom/MGeomMirror.h
     - include <TVector3.h>, otherwise it does not compile on my machine  

   * mjobs/MJPedestals.cc
   * mjobs/MJCalibration.cc
     - replaced MBadPixelsMerge by MParList.AddToList(fBadPixels) until 
       bug in MBadPixelsMerge is resolved (see bugtracker).

   * mcalib/MHCalibrationChargePINDiode.cc
     - return in Draw() if histogram is empty (otherwise segm. violation 
       in eventloop

   * msignal/MExtractedSignalCam.cc
     - intialize variables by default to 0. 

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - pointer to fSig is not stored, somehow, when running MJCalibration
       Don't know why. Removed and stored some variables instead

   * mjobs/MJCalibration.[h,cc]
     - updated documentation, updated QE Cam
     - set the pulser colour (now obligatory)
     - set the possibility to choose different displays
 
   * mcalib/MCalibrationChargeCalc.cc
     - set the pulser colour (now obligatory)

   * mcalib/MCalibrationChargePix.[h,cc]
     - put GetRSigmaPerCharge into this class



 2004/04/13: Thomas Bretz

   * mastro/MAstroCamera.cc, mastro/MAstroCatalog.[h,cc]:
     - enhanced comments
     - added some new features
     
   * mbase/MAGIC.h:
     - removed some empty lines
     
   * mfileio/MWriteRootFile.cc:
     - fixed a compiler warning
     
   * mgeom/MGeomCorsikaCT.h:
     - removed obsolete include of TArrayF

   * mgeom/MGeomMirror.[h,cc]:
     - replaced fReflector by *fReflector

   * mmain/MGDisplayAdc.cc:
     - fixed a bug which caused the wrong histogram entry to be
       displayed



 2004/04/10: Markus Gaug
  
   * macros/dohtml.C
     - included directory mjobs

   * mjobs/MJCalibration.[h,cc]
     - added and updated documentation (not yet ready)

   * htmldoc/images/CalibClasses.gif
     - scheme of the calibration classes, used for documentation in 
       MJCalibration.cc



 2004/04/10: Thomas Bretz

   * mastro/MAstroCatalog.[h,cc], mastro/MAstroCamera.[h,cc]:
     - added comments

   * macros/starfield.C:
     - added

   * mastro/Makefile, mastro/AstroLinkDef.h
     - added MAstroCamera



 2004/04/09: Markus Gaug

   * mcalib/MHCalibrationChargePINDiode.[h,cc]	
   * mcalib/MHCalibrationChargeCam.[h,cc]	
   * mcalib/MHCalibrationChargeCalc.[h,cc]	
     - put abs. time consistency check from MCalibrationChargeCalc into 
       MHCalibrationChargePINDiode and MHCalibrationChargeCam

   * mcalib/MHCalibrationCam.[h,cc]	
   * mcalib/MHCalibrationChargeCalc.[h,cc]	
     - number of used FADC slices also stored in MHCalibrationCam, 
       MHCalibrationChargeCalc needs no pointer to the signal extractors
       any more -> removed

   * mcalib/MCalibrationChargePINDiode.[h,cc]	
   * mcalib/MCalibrationChargeBlindPix.[h,cc]	
   * mcalib/MCalibrationCam.[h,cc]	
     - put a default pulser color kNONE

   * manalysis/MPedestalCam.[h,cc]
   * manalysis/MPedCalcPedRun.[h,cc]
   * manalysis/MGeomApply.cc
     - added average pixels in the way like it is done in MCalibrationCam



 2004/04/08: Thomas Bretz

   * mfbase/MF.cc:
     - optimized output

   * mfbase/MFilterList.cc:
     - added some comments

   * mfileio/MReadMarsFile.[h,cc], mfileio/MReadTree.[h,cc]:
     - added SortFiled-option -- RAQUEL, this is for you!

   * mfileio/MWriteRootFile.cc:
     - class AddSerialNumber in AddContainer

   * mhist/MHFalseSource.[h,cc]:
     - optimized setting of hist maximum
     - added more source dependant cuts
     - changed display layout
     - scale number of entries to correct for different acceptance
       (not perfect, but the best I can currently do)

   * mimage/MHHillasExt.[h,cc]:
     - added new histogram for fMaxDist

   * mimage/MHNewImagePar.[h,cc]:
     - added new histograms for Used/CoreArea

   * mimage/MHillasCalc.cc:
     - optimized output

   * mimage/MHillasExt.cc:
     - fMaxDist got a sign

   * mimage/MNewImagePar.[h,cc]:
     - enhanced comments
     - added new Print() member function

   * macros/readCT1.C, macros/readMagic.C, mmain/MEventDisplay.cc:
     - forward geomcam to newimgepar.Print()



 2004/04/08: Markus Gaug

   * mcalib/MCalibrationChargeCalc.[h,cc]
   * mcalib/MCalibrationChargeCam.[h,cc]
   * mcalib/MCalibrationChargePix.[h,cc]
   * mcalib/MCalibrationChargeBlindPix.[h,cc]
   * mcalib/MCalibrationChargePINDiode.[h,cc]
     - put calculation of photon fluxes with the three methods into 
       MCalibrationChargeCalc
     - reorganized calculations in a better readable way (hopefully!)

   * mbase/MAGIC.h
   * mcalib/MCalibrationCam.[h,cc]
   * mcalib/MCalibrationQECam.[h,cc]
   * mcalib/MCalibrationQEPix.[h,cc]
     - put PulserColor_t away from MAGIC.h into MCalibrationCam
     - full implementation of the QE-calibration from MCalibrationQEPix

   * msignal/MExtractBlindPixel.cc
     - removed warning about low-gain saturation of Blind pixel

   * mcalib/MCalibrate.[h,cc]
   * mcalib/MCalibrateData.[h,cc]
   * mcalib/MMcCalibrationCalc.[h,cc]
   * manalysis/MMcCalibrationUpdate.[h,cc]
     - conversion factors now separated into FADC2phe and then into 
       call to average Quantum efficiency. 


 2004/04/07: Markus Gaug

   * mcalib/MHGausEvents.[h,cc]
     - added fBlackout events



 2004/04/06: Thomas Bretz

   * mcalib/MCalibrationCam.[h,cc]:
     - simplified call to initialization by new function Init()

   * mcalib/MH*.cc:
     - fixed some warnings (comparision between signed and unsigned)

   * manalysis/MGeomApply.cc:
     - use new Init-funtion of MCalibrationCam

   * mastro/MAstro.cc:
     - some fixes to the conversion functions

   * mastro/MAstroCamera.[h,cc]:
     - added comments
     - changed argument type of AddPrimitives
     
   * mastro/MAstroCatalog.[h,cc]:
     - many changes to make it possible to overlay the
       catalog on top of a 2D histogram
     
   * mbase/MEvtLoop.cc:
     - fixed estimation of run-time

   * mbase/MMath.[h,cc]:
     - added member functions for signed significances

   * mbase/MParContainer.cc:
     - changed GetterMethod() to support double reference data mebers

   * mbase/MStatusDisplay.cc:
     - removed some obsolete debug outputs

   * mbase/MTask.[h,cc]:
     - removed fNumExecutions, fStopwatch already counts the calls
     - slight chagnes to output of PrintStatistics

   * mbase/MTaskList.[h,cc]:
     - slight chagnes to output of PrintStatistics
     
   * mbase/MTime.cc:
     - removed +TwoPi from GetGmst

   * mcamera/MCameraAUX.h, mcamera/MCameraHV.h, mcamera/MCameraLV.h,
     mcamera/MCameraLid.h, mcamera/MCameraLids.h,
     mcamera/MCameraPowerSupply.h:
     - added missing Getter functions

   * mcamera/MCameraHV.h:
     - removed obsolete data-meber fMean

   * mdata/DataLinkDef.h:
     - added MDataFormula

   * mdata/MDataChain.cc, mdata/Makefile:
     - enhanced dosumentation
     - implemented use of multi argument functions
     - added ^-operator

   * mdata/MDataList.[h,cc]:
     - added ^-operator
     - enhanced IsValid

   * mfbase/MFilterList.cc:
     - changed a warn-output to inf

   * mgeom/MGeomCam.[h,cc]:
     - added getter returning index corresponding to XY

   * mgeom/MGeomPix.[h,cc]:
     - added getter IsInside

   * mhist/MHCamera.cc:
     - Return 0 in GetMean if no entries

   * mhist/MHFalseSource.[h,cc]:
     - removed conversion stuff (mm/deg) 
     - slight change to calculation of significance
     - added dist-cuts
     - added histogram showing number of entries
     - added display of catalog

   * mhist/MHStarMap.cc:
     - added comment
     
   * mimage/MHillasExt.[h,cc]:
     - changed class version to 3
     - added new data-member fMaxDist
     
   * mimage/MNewImagePar.[h,cc]:
     - added new data member fUsedArea and fCoreArea

   * mmc/MMcConfigRunHeader.h:
     - readded GetMirrors (WHY WAS IT GONE?)

   * mpointing/MPointingPos.[h,cc]
     - implemented Getter to get coordinates in rad
     
   * mpointing/MSrcPosCalc.[h,cc]:
     - fixed direction of rotation
     - for the moment do use fTime



 2004/04/06: Markus Gaug
 
   * mcalib/MCalibrationChargePix.[h,cc]
     - change names of the GetLoGain*() functions to 
       GetConvertedLoGain*() for better clarity

   * mcalib/MCalibrationChargeCam.[h,cc]
     - updated and enlarged documentation

   * mcalib/MHCalibrationChargeCam.cc
   * mcalib/MHCalibrationRelTimeCam.cc
     - set the arrays by use of memset
     - initialize TObjArrays with the Init-Function


 2004/04/05: Markus Gaug

   * msignal/MExtractedSignalPINDiode.h
     - new function GetLastUsedSlice()

   * mcalib/MCalibrationChargeCalc.[h,cc],
   * mcalib/MCalibrationChargeCam.cc:
     - holds also pointers to MExtractedSignalPINDiode and 
       MExtractedSignalBlindPixel and does the checks inside the task 
       (instead of inside the containers)

   * mcalib/MCalibrationChargeBlindPix.[h,cc],
   * mcalib/MCalibrationChargePINDiode.[h,cc]:
     - updated and enlarged documentation

   * mcalib/MHCalibrationChargePINDiode.cc
   * mcalib/MHCalibrationChargeCam.[h,cc]
     - rename Setter for fMeanVar from SetMeanErr() to SetMeanVar()
     - rename arrays of fAverageSigmaErr to AverageSigmaVar

   * mcalib/MCalibrationPix.[h,cc]
   * mcalib/MCalibrationChargePix.[h,cc]
   * mcalib/MCalibrationChargeBlindPix.[h,cc]
   * mcalib/MCalibrationChargePINDiode.[h,cc]
     - add Getters to the relative variance

   * mcalib/MHGausEvents.[h,cc]
   * mcalib/MCalibrationPix.[h,cc]
   * mcalib/MHCalibrationCam.cc
     - add to Pickup also Blackout events


 2004/04/05: Nadia Tonello

   * mbadpixels/MBadPixelsTreat.cc
     - In Unmap(): replaced SetPixelUnused with SetPixelUnmapped 



 2004/04/02: Markus Gaug

   * mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationCam.[h,cc],
     mcalib/MCalibrationQEPix.[h,cc], mcalib/MCalibrationQECam.[h,cc],
     mcalib/MCalibrationRelTimeCam.[h,cc],
     mcalib/MCalibrationRelTimePix.[h,cc]:
     - updated and enlarged documentation

   * mcalib/MHGausEvents.[h,cc], mcalib/MHPedestalPix.[h,cc],
     mcalib/MHCalibrationChargePix.[h,cc],
     mcalib/MHCalibrationChargeHiGainPix.[h,cc],
     mcalib/MHCalibrationChargeLoGainPix.[h,cc],
     mcalib/MHCalibrationChargeBlindPix.[h,cc],
     mcalib/MHCalibrationChargePINDiode.[h,cc]:
     - put fPixId, fPickup, fPickupLimt, CountPickup(), RepeatFit() and 
       ChangeHistId() into MHGausEvents (before in the derived classes)
     - put fChargeNbins, fChargeFirst, fChargeLast, 

   * mcalib/MHCalibrationRelTimePix.[h,cc]:
     - put fRelTimeNbins, fRelTimeFirst, fRelTimeLast together 
       into MHGausEvents as fNbins, fFirst and fLast

   * mcalib/MHCalibrationRelTimePix.[h,cc]:
     - remove Renormalization to time slices. Need to think about 
       more direct way to implement

   * mcalib/MHPedestalCam.[h,cc], mcalib/MHCalibrationCam.[h,cc],
     mcalib/MHCalibrationChargeCam.[h,cc],
     mcalib/MHCalibrationRelTimeCam.[h,cc]:
     - put most of the functionality into the base class MHCalibrationCam
     - derived classes overload the functions SetupHists, ReInitHists, 
       FillHists, FinalizeHists and FinalizeBadPixels. 
     - functions FitHiGainArrays, FitLoGainArrays, FitHiGainHists, 
       FitLoGainHists and InitHists can be used from base class. 

   * mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationChargePix.[h,cc],
     mcalib/MCalibrationRelTimePix.[h,cc]:
     - put most of the functionality into the base class MCalibrationPix
     - other two classes derive now from MCalibrationPix

   * mcalib/MCalibrationCam.[h,cc], mcalib/MCalibrationChargeCam.[h,cc]
     mcalib/MCalibrationRelTimeCam.[h,cc]:
     - put most of the functionality into the base class MCalibrationCam
     - other two classes derive now from MCalibrationCam
     - calls to MCalibration*Cam[i] now have to cast!

   * mcalib/MCalibrate.cc, mcalib/MCalibrateData.cc,
   * mcalib/MMcCalibrateCalc.cc, manalysis/MMcCalibrationUpdate.cc,
   * mcalib/MCalibrationChargeCalc.cc:
     - cast calls to MCalibration*Cam[i]

   * manalysis/MGeomApply.cc
     - add initialization MCalibrationRelTimeCam
     - add intialization of average pixels



 2004/04/02: Abelardo Moralejo

   * msignal/MExtractSignal3.[h,cc]
     - added. Alternative method for signal extraction. Uses sliding 
       window from event to event, but a common window for all pixels 
       in an event.

   * msignal/Makefile, SignalLinkDef.h
     - added MExtractSignal3.



 2004/04/02: Markus Gaug

   * mbadpixels/MBadPixelsPix.h
     - added kRelTimeNotFitted and kRelTimeOscillating to Calibration_t 
       enum
 
   * mcalib/MCalibrationCam.[h,cc], mcalib/MCalibrationPix.[h,cc],
     mcalib/Makefile, mcalib/CalibLinkDef.h:
     - two new base classes for general calibration storage containers,
       contain average pixel storage functionality

   * mcalib/MCalibrationRelTimeCam.[h,cc],
     mcalib/MCalibrationRelTimePix.[h,cc]:
     - new storage container for the rel. time calibration results, derive
       from MCalibrationPix, MCalibrationCam



 2004/04/01: Markus Gaug

   * msignal/MArrivalTimeCalc.[h,cc]
     - set fSaturationLimit as a variable with default (instead of 0xff)

   * mcalib/MHCalibrationChargeCam.[h,cc]
     mcalib/MCalibrationChargeCam.[h,cc]
     mcalib/MCalibrationChargeCalc.cc, manalysis/MGeomApply.cc:
     - add average pixels per sector

   * mcalib/MHGausEvents.[h,cc], mcalib/MHCalibrationChargePix.[h,cc],
     mcalib/MHCalibrationRelTimePix.[h,cc]:
     - moved BypassFit() function to MHGausEvents

   * mcalib/MHCalibrationChargeCam.[h,cc]:
     - updated and enlarged documentation
     - derives now from mcalib/MHCalibrationCam

   * mcalib/MCalibrationChargePix.[h,cc]:
     - removed flag kLoGainSaturation, because it is already in MBadPixelsPix

   * mcalib/MCalibrationCam.[h,cc], mcalib/Makefile, mcalib/CalibLinkDef.h:
     - new base class for all MHCalibration*Cam object, contains the average
       pixel functionality



 2004/03/31: Markus Gaug

   * mcalib/MHCalibrationChargeCam.[h,cc],
     mcalib/MCalibrationChargeCam.[h,cc],
     mcalib/MCalibrationChargeCalc.cc, manalysis/MGeomApply.cc:
     - make the average pixel independent on camera geometry, i.e.
       one average pixel per MGeomPix::Aidx



 2004/03/31: Abelardo Moralejo

   * mmc/MMcConfigRunHeader.[h,cc]
     - updated to current version (3) in camera program. Added member
       fLightCollectionFactorOuter so that we can store the data on 
       the simulatedlight collection efficiency (light guides + 
       plexiglas +...) as a function of incidence angle for outer and 
       inner pixels independently. Added getters for this information
       on light collection efficiency.



 2004/03/30: Markus Gaug
 
   * mcalib/MHGausEvents.[h,cc],
     mcalib/MHCalibrationChargePix.[h,cc],
     mcalib/MHCalibrationChargeHiGainPix.[h,cc],
     mcalib/MHCalibrationChargeLoGainPix.[h,cc],
     mcalib/MHCalibrationChargeBlindPix.[h,cc],
     mcalib/MHCalibrationChargePINDiode.[h,cc],
     mcalib/MHCalibrationRelTimeCam.[h,cc],
     mcalib/MHCalibrationRelTimePix.[h,cc],
     mcalib/MHPedestalPix.[h,cc],
     mcalib/MHPedestalCam.[h,cc]:
     - updated and enlarged documentation



 2004/03/30: Abelardo Moralejo

   * mmc/MMcFadcHeader.hxx
     - updated to current version (4) in camera program.



 2004/03/29: Markus Gaug
  
   * manalysis/MSourcePosFromStarPos.cc
     - replaced fabs(ival) by TMath::Abs(ival)

   * mbadpixels/MBadPixelsPix.h
     - adopt treatment of UnCalibrated_t like the one in Unsuitable_t 

   * mbadpixels/MBadPixelsPix.cc
     - put some documentation in the header

   * mcalib/MHCalibrationChargeCam.cc
     mcalib/MCalibrationChargeCam.cc
     mbadpixels/MBadPixelsCam.cc
     - adopt to new style in MBadPixelsPix.h

   * mcalib/MCalibrationChargeCalc.[h,cc]
     mcalib/MCalibrationChargePix.[h,cc]
     - move consistency checks from Pix to Calc

   * mcalib/MHGausEvents.[h,cc]
     - fixed axes for event and fourier spectrum Draw

   * mcalib/MHCalibrationChargePix.[h,cc] 
     mcalib/MHCalibrationChargeCam.[h,cc] 
     - moved definition of pulser frequency to MHCalibrationChargeCam



 2004/03/24: Thomas Bretz

   * mbase/MMath.cc:
     - now SignificanceLiMa returns 0 in case sum==0



 2004/03/23: Thomas Bretz

   * mbase/MContinue.cc, mhbase/MH.cc:
     - changed a warning message to an inf-message

   * mfileio/MReadTree.cc:
     - added an additional logging message when adding files to a
       chain successfully.

   * mbase/MProgressBar.cc:
     - fixed initial size

   * mastro/MAstro.[h,cc]:
     - changed the code for the rotation angle back to its original
       shape. The definition I tried to introduced was already
       correctly implemented (assuming that sin is the x-component
       of the vector I had it wrong in my mind twice, using
       atan2(y,x) everywhere I did recognize it...)

   * mreport/MReport.cc:
     - fixed a bug which caused a crash when the time is not valid

   * mhist/MHStarMap.cc, mpointing/MSrcPosCalc.cc:
     - fixed: v.Roatete() must be v=v.Rotate()
     - MHStarMap no waorks also without MSrcPosCam, MPointingPos
       or MObservatory (leaving out the corresponding translations)



 2004/03/22: Markus Gaug

   * mfileio/Makefile, mimage/Makefile
     - mpointing included



 2004/03/22: Thomas Bretz
 
   * mpointing/MSrcPosCalc.[h,cc], MSrcPosCam.[h,cc]: 
     - added
     
   * mastro/MAstro.[h,cc]:
     - added code to calculate rotationangle previously in MObservatory
     - changed definition of rotation angle such, that it is now 
       180deg if Ra and Az grid is parallel

   * mastro/MAstroCatalog.[h,cc]:
     - fixes and enhancements to the display (such as misscalculated
       number of grid lines, title display, etc)
     - enhancements to the output
     - generalized creation of grid - for further usage

   * mastro/MAstroSky2Local.[h,cc]:
     - replaced calculation of rotation angle by the function in
       MAstro

   * mastro/MObservatory.[h,cc]:
     - small changes to Print output
     - moved code for calculation of rotation angle to MAstro

   * mbase/MEvtLoop.cc:
     - do not output number of events per second if no events processed
     
   * mbase/MParList.cc:
     - updated some comments
     
   * mfileio/MCT1ReadAscii.cc, mfileio/MCT1ReadPreProc.cc,
     mfileio/MReadRflFile.cc, mraw/MRawFileRead.cc,
     mreport/MReportFileRead.cc:
     - output error string if file cannot be opened
     
   * mfileio/MReadTree.cc:
     - output name of chain which is scanned

   * mimage/MConcentration.cc:
     - replaced loop by iterator
     - removed obsolete (unused) variables
     
   * mimage/MHNewImagePar.[h,cc]:
     - fixed display colors

   * mpointing/MPointingPos.[h,cc]:
     - added member function to calculate rotation angle
     - added comments

   * mpointing/Makefile:
     - added include MAstro

   * manalysis/MSrcPosCam.[h,cc]:
     - moved to mpointing

   * mpointing/MSrcPosCalc.[h,cc]:
     - added: Derotates a star in the camera into MSrcPosCam

   * mpointing/Makefile, mpointing/PointingLinkDef.h:
     - added MSrcPosCam
     - added MSrcPosCalc

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - removed MSrcPosCam

   * mmain/Makefile:
     - added include for mpointing

   * manalysis/AnalysisIncl.h:
     - removed TVector2

   * mbase/MParContainer.h:
     - added new abstract virtual member function SetVariables
       (to be used in fits)
     - addeed some text to class description

   * mdata/MData.cc:
     - added comment
     
   * mdata/MDataArray.[h,cc], mdata/MDataElement.h,
     mdata/MDataList.[h,cc], mdata/MDataMember.h,
     mfbase/MFDataMember.[h,cc], mfbase/MFilterList.[h,cc]:
     - added SetVariables

   * mdata/MDataChain.[h,cc]:
     - added support for indexed variables [i]
     - added SetVariables

   * mdata/MDataValue.[h,cc]: 
     - added support for variable values (through SetVariables)
     - added support for an index
     - added SetVariables

   * mfbase/MF.[h,cc]:
     - removed support for {}. This case is now detected
       automatically
     - added SetVariables
     - added support for expressiond like 
       "MHillas.fLength<2*MHillas.fWidth"

   * mfbase/MFDataChain.[h,cc]:
     - added fCond data member
     - addednew constructor to support fCond
     - added support for new condition type
     - adapted Print and GetRule

   * mimage/MNewImagePar.[h,cc]:
     - added some comments

   * mhist/MHStarMap.[h,cc]: 
     - fixed to use the correct MPointingPos instead of the
       deprecated MMcEvt. Use MPointingPosCalc to copy the
       pointing position from MMcEvt to MPointingPos

   * mbase/MMath.[h,cc]:
     - added, which currently only implements calculation of
       significance and Li/Ma significance

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MMath



 2004/03/19: Markus Gaug

   * mcalib/MHCalibrationChargePix.cc
     - added some style to the default Draw in order to see the 
       label and axis titles better

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - store and display more information on the average pxiels

   * mcalib/MCalibrationCam.cc
     - the GetPixelContent flag were not correct any more, fixed them 
       
   * macros/calibration.C
     - fixed GetPixelContent flags
     - draw radial profile of the variables

   * mjobs/MJCalibration.cc
     - fixed GetPixelContent flags
     - introduced RadialProfile for some displays
     - removed some not so important displays

   * manalysis/MGeomApply.cc
     - included MCalibrationQECam to be initialized

   * mcalib/MCalibrationChargePix.[h,cc],
     mcalib/MCalibrationQEPix.[h,cc]:
     - replace DefinePixId by SetPixId
   
   * mcalib/MCalibrationChargeCalc.[h,cc]
     - added MCalibrationQECam
     - cleaned the code up a little
     - give more information at the end

   * mcalib/MCalibrationChargePix.[h,cc]
     - took out fNumLoGainSampels whihc is not needed any more because 
       conversion is only done in the getters
     - Canceled function ApplyLoGainConversion (for same reason)

   * msignal/MExtractSignal2.cc
     - remove uncommented piece of code

   * msignal/MExtractSignal.cc, msignal/MExtractSignal2.cc:
     - remove warning about pixel with low gain saturation, 
       now in MBadPixelsPix

   * mbadpixels/MBadPixelsPix.[h,cc], mcalib/MCalibrationChargeCam.cc:
     - added new flag: kDeviatingNumPhes

   * mcalib/MCalibrationChargePix.cc
     - check for mean arr. time in last bin replaced by check in last 
       two bins

   * mcalib/MCalibrationChargePix.[h,cc], 
     mcalib/MCalibrationChargeCam.cc,
     mcalib/MHCalibrationChargeCam.cc:
     - removed flag kHiGainFitted, kLoGainFitted, since they are
       available from MBadPixelsPix

   * macros/calibration.C, macros/calibrate_data.C
     - a few flags from MCalibrationChargeCam::GetPixelContent were wrong, 
       corrected them



 2004/03/18: Raquel de los Reyes

   * macros/DAQDataCheck.C
     - macro to check the data from the DAQ system (.raw files).



 2004/03/18: Thomas Bretz
 
   * manalysis/AnalysisIncl.h:
     - added TVector2

   * manalysis/MSrcPosCam.[h,cc]:
     - added Getter/Setter using TVector2

   * mhbase/MH.cc:
     - fixed GetMinimumGT for TH2 and TH3

   * mpointing/MPointingPos.h:
     - added Getter/Setter for Ra/Dec

   * mpointing/MPointingPosCalc.cc:
     - fill Ra/Dec into MPointingPos



 2004/03/18: Markus Gaug

   * mgeom/MGeomCam.[h,cc]
     - replace fMaxRadius by a TArrayF of pixel area types
     - new TArrayF fMinRadius of each pixel area type
     - backward compatibility should be given, 
       call to GetMaxRadius() returns the value for the whole camera
       (which corresponds to the previous value for the Magic camera)

   * mimage/MConcentration.cc
     - fixed on flog to fLog in order to compile



 2004/03/17: Thomas Bretz

   * mastro/MAstroCatalog.[h,cc]:
     - some simplifications and changes

   * mastro/MAstroCatalog.[h,cc]:
     - some simplifications and changes

   * mastro/MAstroSky2Local.[h,cc]:
     - rotation matrix from sky to local coordinates
     - added

   * mastro/Makefile, mastro/AstroLinkDef.h:
     - MAstroSky2Local added

   * mraw/MRawEvtPixelIter.cc:
     - GetIdxMaxLoGainSample(const Byte_t lofirst) const
       accelerated and fixed (the first slice was compared to itself
       and the last slice was not taken into account)

   * manalysis/MCerPhotAnal2.cc:
     - fixed a bug in the new treatment of lo-gains

   * mhvstime/MHPixVsTime.cc:
     - fixed missing initialization of fTypeErr in constructor

   * mimage/MHillas.[h,cc]:
     - implemented member function which returns MeanX/Y as TVector2

   * mimage/ImageIncl.h:
     - added TVector2

   * manalysis/MCerPhotEvt.[h,cc]:
     - fixed a bug in AddPixels which - in some special circumstances -
       cutted pixels with high pixel indices



 2004/03/17: Antonio Stamerra

   * macros/datatrigcheck.C
     - added macro for time and trigger data-checking



 2004/03/17: Abelardo Moralejo

   * manalysis/MSourcePosfromStarPos.cc
     - added cast fabs((Double_t)ival), line 703. Otherwise it does not
       compile.

   * macros/starmc.C
     - added parameter accepted_fraction to select fraction of events 
       to be processed (useful to make smaller outputs).



 2004/03/17: Wolfgang Wittek

   * manalysis/MSigmabar.[h,cc]
     - correct calculation of sector, which was wrong 



 2004/03/16: Markus Gaug
 
   * mhist/MHCamera.[h,cc]
     - added function RadialProfile which returns a TProfile of the 
       value along the radius from the camera center



 2004/03/16: Oscar Blanch Bigas

   * mimage/MConcentration.[h,cc]
     - new class for Concentration stuff.
     - It computes and stores Concentration 1-8

   * mimage/MNewImagePar.[h,cc]
     - New Concentration stuff is moved to MConcentration.

   * mimage/MHillasCalc.[h,cc], Makefile, ImageLinkDef.h
     - Modifications needed to support and compile new 
       MConcentration class.



 2004/03/16: Thomas Bretz

   * mjobs/MJ*.[h,cc]
     - removed some obsolete comments
     - removed projections from Directory (SetDirectory(0))



 2004/03/16: Wolfgang Wittek

   * manalysis/MSigmabar.[h,cc]
     - calculate sigmabar as mean of individual pedestalRMS
       instead of            sqrt of mean pedestalRMS^2



 2004/03/16: Oscar Blanch

   * mimage/MNewImagePar.[h,cc]
     - New variables members added: fInnerSize, fInnerLeakage[1,2],
       fConc[3-8].
     - It is only ready for Magic Camera geometry. It has to be done
       MGeomCam base.
     - The version ahs not been updated since it was done on the 
       2004/03/10 by Abelardo.



 2004/03/15: Markus Gaug 

   * mcalib/MCalibrationChargePix.[h,cc],
     mcalib/MCalibrationChargeCam.[h,cc],
     mcalib/MCalibrationChargeCalc.cc:
   - conversion from hi- to logain now not applied until the value is 
     exported outside the class. This is necessary for the error 
     propagation in the F-Factor method: In the calculation of the 
     number of Phe, the conversion factors cancel out and do not 
     enlarge the errors 
   - pixels with number of phe's outside the range defined by 
     fPheFFactorRelErrLimit are not any more declared as: 
     MCalibrationChargePix::IsFFactorMethodValid() == kFALSE , 
     but instead as:
     MBadPixelsPix::IsSuitableRun(MBadPixelsPix::kUnreliableRun) == kTRUE,
     Like this, everybody is allowed to calibrate pixels which give 
     no reasonable results in the calibration without bothering that
     too many pixels fall out. Enjoy!
   - In that procedure, the classes passed _internally_ from calculation
     of sigmas to calculation of variances which saves all the useless 
     square rooting.
   - took out pointers to MCalibrationChargeBlindPix and 
     MCalibrationChargePINDiode in MCalibrationChargeCam.



 2004/03/15: Abelardo Moralejo

   * mmc/MMcEvt.hxx
     - added getter function for fZFirstInteraction



 2004/03/15: Wolfgang Wittek

   * mastro/MObservatory.[h,cc]
     - remove bugs in RotationAngle(theta, phi, sin, cos)
       replaced
         cos = sinl + cosl*cosp /denom;
       by
         cos = (sinl - cosl*cosp) /denom;



 2004/03/15: Thomas Bretz

   * mastro/MObservatory.[h,cc]:
     - implemented RotationAngle(ra, dec, time)

   * mbase/MTask.[h,cc]:
     - implemented usage of a TStopwatch to retriev time consumtion
       informations
     - changed PrintStatistics not to print classes having no
       Process() function

   * mbase/MTaskList.[h,cc], mfileio/MReadReports.[h,cc]:
     - changed PrintStatistics according to changes in MTask

   * mraw/MRawEvtHeader.cc:
     - added a comment to Fill member function

   * manalysis/MCerPhotEvt.[h,cc]:
     - added fLut.Set to FixSize and resize fLut by a factor of 2
       instead of +1 which acelerates creation of all pixels a lot

   * mbadpixels/MBadPixelsPix.cc:
     - fixed a typo

   * mfilter/MFSoftwareTrigger.cc:
     - made statistics output meaning independant of usage of filter!

   * mhbase/MFill.[h,cc]:
     - added possibility to give tab a different name

   * mhist/MHCamera.cc:
     - fixed a bug when determin scale for same-option

   * mjobs/MJCalibration.cc:
     - changed tab names for MFillH

   * mjobs/MJExtactSignal.cc:
     - added MRawEvtHeader to output

   * mbase/MStatusDisplay.[h,cc]:
     - changed displayed year
     - read and store MStatusArray to and from files

   * mfileio/MReadTree.cc:
     - enhanced output

   * mmain/MCameraDisplay.cc, mmain/MEventDisplay.[h,cc]:
     - added preliminary mode to display F1/F2/F3-files

   * mbase/MStatusArray.[h,cc]:
     - added

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MStatusArray

   * mhits/MHCamera.[h,cc], mgui/MHexagon.[h,cc]:
     - improved drawing MHCamera with 'same' option



 2004/03/13: Markus Gaug 

   * mcalib/MCalibrationChargeCalc.cc, mcalib/MCalibrationChargeCam.cc,
     mcalib/MCalibrationChargePix.[h,cc], 
     mcalib/MHCalibrationChargeCam.cc,
     mcalib/MHCalibrationChargeLoGainPix.cc:
     - fixed Low Gain calibration

   * mcalib/MHGausEvents.cc:
     - changed default fit prob. limit from 0.005 to 0.001

   * mbadpixels/MBadPixelsPix.h :
     - IsCalibrationResultOK does not ask for FitOK any more

   * mcalib/MHCalibrationChargeCam.cc:
     - replaced Rel. Err. Limit for outliers in Phe's from 5 sigma to 7

   * mraw/MRawEvtPixelIter.[h,cc]:
     - function GetIdxMaxLoGainSamples can be called optionally with 
       offset (because first "loGain" samples are often in reality 
       hiGain with high values.



 2004/03/12: Sebastian Raducci

   * manalysis/Makefile
     - added mastro in the include directories



 2004/03/12: Thomas Bretz

   * merpp.cc:
     - added 'force' option

   * manalysis/MCerPhotAnal2.cc:
     - extract pedestal and pedestal rms from lo-gain if hi-gain not
       above a certain athreshold 

   * mastro/MAstroCatalog.[h,c]:
     - added text argument to DrawStar

   * mbase/MStatusDisplay.cc:
     - some small changes to output of SaveAsPS

   * mfilter/MFCosmics.cc:
     - changed output of filter statistics

   * mbadpixels/MBadPixelsTreat.[h,cc]:
     - fixed some problems with the code - now it should work like
       expected
     - added a new member function to be able to change the number
       of required neighbors



 2004/03/12: Wolfgang Wittek

   * manalysis/Makefile
     - include 'mastro'

   * manalysis/MSourcePosfromStarPos.[h,cc]
     - include MObservatory.h
     - call member function Rotationangle() of MObservatory



 2004/03/12: Markus Gaug

   * mjobs/MJCalibration.cc
     - updated call in displays to the corr. Cams.

   * macros/calibrate_data.C
     - macro to study calibrate and study data used in Munich and IFAE



 2004/03/12: Antonio Stamerra

   * mraw/MRawEvtHeader.[h,cc]
     - Added the method GetTriggerID() to decode the trigger pattern.



 2004/03/11: Abelardo Moralejo

   * mimage/MHillasCalc.cc
     - Added some printout in PostProcess, to better express the reasons
       for which the reconstruction of some events did not succeed.



 2004/03/11: Thomas Bretz

   * status.cc:
     - updated

   * manalysis/MCerPhotAnal2.cc:
     - removed an obsolete debug output

   * mhist/MHCamera.[h,cc]:
     - added same-option to camera display

  * mbadpixels/MBadPixelsCalc.[h,cc], mbadpixels/MBadPixelsTreat.[h,cc]:
     - implemented functionality of MBlindPixelsCalc2

   * mbadpixels/MBadPixelsCam.[h,cc], mbadpixels/MBadPixelsPix.[h,cc],
     mbadpixels/MMcBadPixelsSet.cc, mcalib/MCalibrationChargeCalc.cc,
     mcalib/MCalibrationChargePix.cc, mcalib/MHCalibrationChargeCam.cc:
     - replaced several Set/GetUnsuitable* by a single member function



 2004/03/11: Markus Gaug

   * mbadpixels/MBadPixelsPix.h
     - removed bits about validity of calibration methods
     - IsCalibrationResultOK asks also from IsSuitableRun

   * mbadpixels/MBadPixelsCam.cc
     - updated GetPixelContent
     - added Print function

   * mcalib/MCalibrationChargeCam.[h,cc]
     mcalib/MCalibrationChargePix.h, mcalib/MCalibrationChargeCalc.cc:
     - removed pointers to MGeomCam and MBadPixelsCam in MCalibrationChargeCam
     - use two loops over pixels in order to determine mean flux of phe;s to 
       discard pixels far outside the normal distribution

   * mcalib/MCalibrate.cc
     - added case that no MBadPixelsCam is available.

   * mcalib/MHCalibrationChargeCam.cc
     - adapted to new MBadPixelsPix::SetUnsuitable function


 2004/03/10: Abelardo Moralejo

   * manalysis/MCerPhotPix.[h,cc]
     - Added member fIsHGSaturated, and setter/getter functions. 
       Updated class version to 4.

   * mcalib/MCalibrate.cc, MCalibrateData.cc
     - Added setting of MCerPhotPix.fIsHGSaturated if one or more HG
       slices saturate.

   * mimage/MNewImagePar.[h,cc]
     - Added member fNumHGSaturatedPixels to count the number of pixels 
       in which high gain saturates. Added getter funciton for it. 
       Updated class version to 3.



 2004/03/10: Markus Gaug

   * mcalib/MCalibrationChargeCalc.cc,
     mcalib/MCalibrationChargePix.[h,cc],
     mcalib/MCalibrationChargeCam.[h,cc]:
     - calculation of conversion factor with F-Factor method from 
       same mean number of photons, derived from weighted mean number 
       of photo-electrons from inner and outer pixels, respectively

   * mjobs/MJPedestal.cc, mjobs/MJCalibration.cc, macros/calibration.C:
     - fixed the projections (did only display inner pixels up to now)

   * macros/calibration.C
     - small bug fixed in display of rel. arrival times
       ( used MArrivalTimeCam instead of MHCalibrationRelTimeCam)

   * mbadpixels/MBadPixelsCam.cc
     - replaced some InitSize(idx) by InitSize(idx+1) in order not to crash
       to program when reading from an ascii-file.

   * mbadpixels/MBadPixelsCalc.cc
     - replaced one SetUnsuitableRun(....) by the new version without 
       argument.



 2004/03/10: Thomas Bretz

   * mfilter/MFSoftwareTrigger.[h,cc]:
     - changed to support also a predifined number of NN

   * mastro/MAstroCatalog.[h,cc]:
     - many enhancements
     - many speed improvements

   * mbadpixels/MBadPixelsPix.[h,cc]:
     - fixed



 2004/03/10: Ester Aliu

   * mtemp/MIslands.[h,cc]
     - New MParContainer to hold information about islands
       (number of islands, pixels in each Island, Signal/Noise of
	each Island).

   * mtemp/MIslandCalc.[h,cc]
     - New MTask to count and characterize Islands.



 2004/03/09: Thomas Bretz

   * Makefile.rules:
     - replaced *.o by $(...) for building archives

   * mjobs/MJCalibration.cc:
     - exchanged  apply  and merge task

   * mjobs/MJCalibration.h, mjobs/MJExtractSignal.h, mjobs/MJPedestal.h:
     - fixed some const-qualifiers

   * mcalib/MHCalibrationChargeBlindPix.cc, 
     mcalib/MHCalibrationChargeCam.cc,
     mcalib/MHCalibrationChargePINDiode.cc
     - removed some obsolete output when calling FindCreateObj
     - changed some 'not found' output messages to be 'Mars-compliant'
     - replaced some gLog by *fLog



 2004/03/08: Markus Gaug
   
   * mbadpixels/MBadPixelsPix.h
     - small modifications for better readability
     - remove Getters for calibration methods
     - added flag "UnReliableRun" in fInfo[0]

   * mcalib/MHCalibrationChargeCam.cc, mcalib/MCalibrationChargePix.cc:
     - fill MBadPixelsPix with UnReliableRun or UnSuitableRun when 
       calibration does not succeed.

   * mcalib/MCalibrationChargeCam.cc
     - displaying saturation also for not-valid pixels in GetPixelContent

   * msignal/MExtractedSignalCam.[h,cc], msignal/MExtractSignal.[h,cc],
     msignal/MExtractSignal2.[h,cc], mananlysis/MHPedestalCam.cc,
     mcalib/MCalibrationChargeCalc.[h,cc]:
     - in SetUsedFADCSlices, also the window (hi-and logain) is set. 
       This because MExtractSignal2 set the whole window which was much 
       bigger than the actually used one. This bug is now removed.



 2004/03/08: Thomas Bretz

   * merpp.cc:
     - fixed a bug in the screen output

   * mgeom/MGeomMirror.cc:
     - added comment

   * mmc/MMcConfigRunHeader.h:
     - added member function GetMirrors



 2004/03/08: Abelardo Moralejo

   * macros/starmc.C, starmcstereo.C, mccalibrate.C 
      - adapted to m. Gaug's changes: now one MBadPixelsCam containers is 
        added for each telescope to the parameter list.

   * mmain/MEventDisplay.cc, Makefile
     - added MBadPixelsCam to par list, and mbadpixels/ to includes.
       Necessary due to changes in MCalibrate.



 2004/03/06: Markus Gaug

   * macros/calibration.C
     - adapted call to MHCamera::ProjectionS to the new version

   * mcalib/Makefile
     - include directory mbadpixels

   * manalysis/Makefile
     - include directory mbadpixels

   * mcalib/MCalibrationChargeCalc.[h,cc]
     - include MBadPixelsCam
     - remove exclusion of pixels from ascii-file
       (now accessible from MBadPixelsCam)

   * mcalib/MCalibrationChargePix.[h,cc]
     - include MBadPixelsCam

   * mcalib/MCalibrationChargeCam.[h,cc]
     - include MBadPixelsCam

   * mcalib/MHCalibrationChargeCam.[h,cc]
     - include MBadPixelsCam
     - include one additional MBadPixelsPix for the average inner and 
       outer pixel, respectively

   * mcalib/MHCalibrationChargePix.[h,cc]
     - make fSaturated and fPickup a Float_t (for average pixel)

   * mbadpixels/MBadPixelsPix.h
     - include the CalibrationType_t infos
     - exchange "SetUnsuitable" by "SetUnsuitableRun"

   * mbadpixels/MBadPixelsCam.cc, mbadpixels/MMcBadPixelsSet.cc:
     - exchange "SetUnsuitable" by "SetUnsuitableRun"

   * mbadpixels/MBadPixelsCalc.cc:
     - exchange "SetUnsuitable" by "SetUnsuitableEvt"

   * manalysis/MGeomApply.cc
     - remove obsolete MArrivalTime
     - add MBadPixelsCam

   * mcalib/MCalibrate.[h,cc], mcalib/MCalibrateData.[h,cc]
     - implemented calls to MBadPixelsCam

   * macros/calibration.C, macros/bootcampstandardanalysis.C,
     macros/pedphotcalc.C
     - implemented calls to MBadPixelsCam

   * mjobs/MJCalibration.cc
     - call to MBadPixelsCam



 2004/03/05: Nadia Tonello

   * manalysis/MBlindPixelsCalc2.[h,cc], manalysis/AnalysisLinkDef.h,
     manalysis/Makefile
     - Temporary class added (will be included in mbadpixels/ soon)
     - All the functions of MBlindPixelCalc are kept(with small improvements)
     - New function added: SetCheckPedestalRms

   * manalysis/MCerPhotPix.h
     - Status Unmapped added (not include the pixel in the cleaned image)

   * mimage/MImgCleanStd.cc 
     - Checks for Unmapped status added 

   * mastro/MAstroCatalog.cc, msql/MSQLServer.cc:
     - include <stdlib.h> to solve compilation error



 2004/03/05: Sebastian Raducci

   * msignal/MArrivalTimeCalc.cc
     - fixed a little bug (exchanged a - with a + in the Calc() method)



 2004/03/05: Markus Gaug

   * mcalib/MCalibraitonChargeCalc.cc
     - remove some runheader line: 
	if (runheader->IsMonteCarloRun())
            return kTRUE;
       which gave always true since this week, don't know why.
     - added some information in class description



 2004/03/04: Sebastian Raducci
  
   * msignal/MArrivalTimeCalc.cc
     - fixed a memory leak (the spline was not deleted...)



 2004/03/04: Thomas Bretz

   * mgeom/MGeomCam.[h,cc]:
     - added new data member fNumAreas
     - added new function CalcNumAreas
     - increased class version to 3

   * mgeom/MGeomCamMagic.cc:
     - added setting of area index

   * mgeom/MGeomPix.[h,cc]:
     - added fAidx data member
     - added getter function fAidx
     - increased class version to 3

   * macros/sectorvstime.C:
     - added example of how to plot the evolution of a sector vs time

   * mhist/MHVsTime.[h,cc], mhist/MHPixVsTime.[h,cc]:
     - moved to mhvstime

   * mhvstime/MHSectorVsTime.[h,cc]:
     - added

   * Makefile:
     - added mhvstime

   * mhvstime/Makefile, mhvstime/HVsTimeLinkDef.h, 
     mhvstime/HVsTimeIncl.h:
     - added

   * mhist/Makefile, mhist/HistLinkDef.h, 
     - removed MHVsTime
     - removed MHPixVsTime

   * macros/rootlogon.C, macros/dohtml.C:
     - added new directory mhvstime

   * msignal/MExtractSignal.cc, msignal/MExtractSignal2.cc:
     - changes such, that it doesn't crash if signal has no lo-gain
       (This might still give wrong results!)

   * macros/dohtml.C:
     - added pixvstime.C
     - added sectorvstime.C

   * manalysis/MMcCalibrationUpdate.cc:
     - some changes on file consistency check done by Abelardo,
       he may comment on it

   * mhist/MHCamera.[h,cc]:
     - changed to support also dividing the camera in pixels area indices

   * mhist/MHEvent.cc:
     - minor change

   * mjobs/MJPedestal.cc:
     - adapted to changes in MHCamera

   * mastro/MAstroCatalog.[h,cc]:
     - added preliminary catalog

   * mastro/Makefile, mastro/AstroLinkDef.h:
     - added MAstroCatalog



 2004/03/03: Thomas Bretz

   * mgeom/MGeomCam.cc:
     - give a name and title also if the default constructor is used

   * mgeom/MGeomMirror.[h,cc]:
     - added member function GetReflection
     - added persistent data member fReflector

   * mjobs/MJCalibration.cc, mjobs/MJExtractSignal.cc, mjobs/MJPedestal.cc:
     - fixed a typo in the output

   * mraw/MRawFileWrite.cc:
     - added the missing '.' to MRawRunHeader. Because of the design of
       MReadTree this is backward compatible

   * mraw/MRawRunHeader.h:
     - removed last change from Abelardo. '>255' is the correct 
       check for MC files following the definition that all MC files
       have run types >255 which was made in the past. 

   * manalysis/MCerPhotAnal.[h,cc], manalysis/MCerPhotAnal2.[h,cc]:
     - created ReInit member function to hold all code (moved from
       PreProcess) accessing the run header. The run header is not
       available in PreProcess. That it was working before was only
       by chance, because the run type is initialized with 65535 which
       is != 255 but not >255.



 2004/03/03: Sebastian Raducci

   * msignal/MArrivalTimeCalc.cc
     - The calculation of the arrival times is made only when needed
       (when the HalfMax is over the pedestal)

   * mtools/MCubicSpline.cc
     - Commented out an annoying warn



 2004/03/03: Abelardo Moralejo

   * mraw/MRawRunHeader.h
     - Replaced
         Bool_t IsMonteCarloRun() const { return fRunType>0x00ff; }  by
         Bool_t IsMonteCarloRun() const { return (fRunType==0x0100); }
     since the latter is the exact translation of what the function
     intends to do. I do not know why, but the display of real data 
     did not work with the upper line!

   * mgeom/MGeomCam.cc
     - Undid yesterday change! I do not know why, display completely 
       fails after that change, both for old and new camera files. 
       Put back fPixels[i] = new MGeomPix; in constructor.



 2004/03/02: Abelardo Moralejo

   * mmc/MMcCorsikaRunHeader.[h,cc]
     - Added operator [] to get references to the objects in 
       TObjArray fTelescopes.
     - Added Print() function.
     - Added GetNumCT() function.
     - Replaced
          fTelescopes[i]= new MGeomCorsikaCT;   
       by
          MGeomCorsikaCT* dummy = new  MGeomCorsikaCT();
          fTelescopes.Add(dummy);

   * mgeom/MGeomCorsikaCT.[h,cc]
     - Added getter functions for telescope coordinates.
     - Added Print() function.

   * mgeom/MGeomCam.cc  => NOTE: this change was undone later!
     - Replaced
          fPixels[i] = new MGeomPix;   
       by
          MGeomPix* dummy = new MGeomPix();
          fPixels.Add(dummy);



 2004/03/02: Thomas Bretz

   * mcalib/MCalibrateData.cc:
     - removed usage of MGeomCam (you have MGeomApply for this!)



 2004/03/01: Nadia Tonello

   * manalysis/MCerPhotEvt.cc
     - TObject *MCerPhotEvtIter::Next() now returns Used pixels 
	only if fUsedonly=kTRUE, otherwise it returns all the pixels 
	in the array  
 


 2004/03/01: Sebastian Raducci

   * msignal/MArrivalTimeCalc.[cc,h]
     - now the arrival time is at the half max of the spline:
       half max = (maximum - pedestal)/2
   
   * mmain/MEventDisplay.cc
     - fixed an include (from MArrivalTime.h to MArrivalTimeCam.h)



 2004/03/01: Wolfgang Wittek
  
   * mhist/MHStarMap.[h,cc]
     - remove bugs
     - change GetRotationAngle() such that it can be called from outside



 2004/03/01: Thomas Bretz

   * Makefile:
     - enhanced all calls to subsequent makes by '-f Makefile' to
       make sure the correct Makefile is called

   * merpp.cc:
     - enhanced interpretation of time
     - fixed a bug in determin the file-type

   * mbase/MTime.[h,cc]:
     - added GetGmst() member function

   * mastro/MAstro.[h,cc]:
     - added Coordinate2Angle
     - added AngularDistance
     - implemented UT2GMST
     - replaced defined by TMath::Pi()

   * mastro/MObservatory.[h,cc]:
     - added data members for sin-/cos-component of latitude
     - added calculation of rotation angle

   * mhist/MHStarMap.[h,cc]:
     - changes to use MObservatory member function

   * manalysis/MCerPhotAnal.cc, manalysis/MCerPhotAnal2.cc,
     manalysis/MCerPhotCalc.cc, manalysis/MMcCalibrationUpdate.cc,
     manalysis/MMcPedestalCopy.cc, manalysis/MMcPedestalNSBAdd.cc,
     manalysis/MPedCalcPedRun.cc, manalysis/MPedPhotCalc.cc,
     mcalib/MCalibrationChargeCalc.cc, mcalib/MMcCalibrationCalc.cc
     - changed to use IsMonteCarloRun() now

   * manalysis/MMcCalibrationUpdate.cc:
     - unified output to log-stream
     - replaced sqrt by TMath::Sqrt

   * mcalib/MCalibrationChargeCalc.cc:
     - unified output to log-stream
     - removed .Data() from TString where obsolete
     - fixed memory leak using gSystem->ExpandPathName

   * mpointing/MPointingPosCalc.cc, mraw/MRawFileWrite.cc:
     - adde class name to used kRT*/kTT* enums

   * mraw/MRawEvtHeader.h:
     - made enum data member of class

   * mraw/MRawRunHeader.[h,cc]:
     - made kMagicNumber and kMaxFormatVersion a static data
       member of the class
     - added IsMonteCarloRun member function



 2004/02/27: Markus Gaug
   
   * mjobs/MJPedestal.cc, mjobs/MJCalibration.cc, macros/calibration.C:
     - put in call to MHCamera::Projection the name of the calling 
       class, otherwise the projected hsitogram will be overwritten by 
       an empyt one.

   * mcalib/MHCalibrationChargePix.[h,cc],
     mcalib/MHCalibrationHiGainChargePix.[h,cc],
     mcalib/MHCalibrationLoGainChargePix.[h,cc]:
     - histogram name setting and title setting moved to constructor, 
       Functions Init and ChangeHistId derive directly from 
       MHcalibrationChargePix

   * mcalib/MHCalibrationChargeCam.[h,cc],
     mcalib/MCalibrationChargeCam.[h,cc],
     mcalib/MCalibrationChargeCalc.[h,cc]:
     - introduced "average inner" and "average outer" higain and logain 
       pixels.



 2004/02/27: Raducci Sebastian 

   * mhist/Makefile
     - added mastro in the include list



 2004/02/27: Abelardo Moralejo

   * mmain/MEventDisplay.cc
     - replaced in fill8 obsolete MArrivalTime with MArrivalTimeCam.
     - Updated display of MC data: removed MCerPhotCalc, and replaced 
       it by MExtractSignal+MMcCalibrationUpdate+MCalibrate. Now
       MPedPhotCam is filled and all the camera display tabs are shown 
       correctly (most were not working for MC events since a while 
       ago).

   * mmain/Makefile
     - Added mcalib to list of include directories.

   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Added member variable Bool_t fOuterPixelsScaling, which is 
       kTRUE by default. If set to kFALSE, MCalibrationCam is filled 
       such that MCerPhotEvt will later be filled with the signal as it 
       is, not corrected for the (possibly) different gain of the outer 
       pixels electronic chain. This option was necessary to allow for
       the change in the camera display (see above).

   * macros/starmc.C
     - added (optional) division of output into two, for use as train 
       and test samples in g/h separation studies.



 2004/02/26: Hendrik Bartko

   * macros/dohtml.C
     - included the path msignals/



 2004/02/26: Abelardo Moralejo

   * macros/starmcstereo.C
     - changed filters to divide data between train and test sample for
       gamma hadron separation studies. Now we use the modulus operator
       applied to (Corsika) event number:
         MF filter1("{MMcEvt;1.fEvtNumber%2}<0.5");
         MF filter2("{MMcEvt;1.fEvtNumber%2}>0.5");
     - cleaned up a bit the way the CT coordinates are fed to the task
       MStereoCalc.
     - Changed default FADC integration range (center range to adapt to 
       new camera).



 2004/02/26: Thomas Bretz

   * mhist/MHCamera.cc:
     - fixed a function description

   * mreport/MReport.cc, mreport/MReportFileRead.cc:
     - introduced return case -1

   * Makefile.rules:
     - remove all dependancy files when calling 'rmdep'

   * mbase/MAGIC.h, mmc/MMcEvt.hxx:
     - moved ParticleId_t to MMcEvt
     - implemented MMcEvt::GetParticleName
     - implemented MMcEvt::GetEnergyStr

   * mfilter/MFGeomag.cc, mfilter/MFParticleId.cc, mhist/MHCompProb.cc,
     mhist/MHEvent.cc, mhist/MHHadronness.cc, 
     mmontecarlo/MMcTriggerRateCalc.cc, mranforest/MHRanForest.cc:
     - fixed usage of ParticleId_t

   * msignal/Makefile:
     - removed obsolete includes

   * mastro/Makefile, mastro/AstroLinkDef.h, mastro/MAstro.[h,cc],
     mastro/MObservatory.[h,cc]:
     - added

   * mbase/MAstro.[h,cc]:
     - removed

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - removed MAstro

   * Makefile:
     - added mastro
     - added msql
     - added mfbase

   * mtemp/MObservatory.[h,cc], mtemp/MObservatoryLocation.[h,cc]:
     - removed

   * merpp.cc:
     - added Sql support
     
   * mraw/MRawFileRead.h:
     - added GetFileName

   * msql/Makefile, msql/SqlLinkDef.h, msql/SqlIncl.h, 
     MSQLServer.[h,cc], MSqlInsertRun.[h,cc]:
     - added

   * mfilter/MF.[h,cc], mfilter/MFDataChain.[h,cc], 
     mfilter/MFDataMember.[h,cc], mfilter/MFEventSelector.[h,cc],
     mfilter/MFEventSelector2.[h,cc], mfilter/MFRealTimePeriod.[h,cc]:
       - moved to mfbase

   * mfbase/Makefile, mfbase/FBaseLinkDef.h, mfbase/FBaseIncl.h:
     - added

   * merpp.cc:
     - implemented control of gDebug (root debugging)

   * mfileio/MWriteAsciiFile.[h,cc], mfileio/MWriteFile.[h,cc],
     mfileio/MWriteRootFile.[h,cc]:
     - implemented CheckAndWrite return value

   * mfileio/MWriteRootFile.cc:
     - fixed updating already existing branches (eg concatenating report
       files)

   * macros/dohtml.C, macros/rootlogon.C:
     - added mastro
     - added mfbase
     - added msql

   * mraw/MRawEvtHeader.h:
     - implemented GetNumTrigLvl1
     - implemented GetNumTrigLvl2



 2004/02/25: Markus Gaug

   * mcalib/MExtractBlindPixel.[h,cc],
     mcalib/MExtractPINDiode.[h,cc],
     mcalib/MExtractedSignalBlindPixel.[h,cc],
     mcalib/MExtractedSignalPINDiode.[h,cc],
     mcalib/Makefile, msignal/Makefile, mcalib/CalibLinkDef.h,
     msignal/SignalLinkDef.h:
     - moved blindpixel and PINdiode extractors to msignal


   * mcalib/MCalibrationQECam.[h,cc], mcalib/MCalibrationQEPix.[h,cc]:
     - two new classes to hold the quantum efficieny information of the 
       calibration

   * msignal/MArrivalTimeCalc.[h,cc]
     - fill now MArrivalTimePix instead of MArrivalTime

   * mcalib/MHCalibrationChargeCam.cc
     - display only valid pixels for the corr. values in GetPixelContent

   * mcalib/MHCalibrationRelTimeCam.cc
     - is now filled from MArrivalTimeCam instead of MArrivalTime

   * macros/calibration.C
     - divided into two macros: calibration.C using the MJPedestal
       standard procedure and   pedestalstudies.C using the old
       procedures
    
   * macros/pedestalstudies.C
     - new macro containing the first previous part of calibration.C

   * mcalib/MCalibrationChargeBlindPix.h,
     mcalib/MCalibrationChargePINDiode.h, mbase/MAGIC.h,
     mjobs/MJCalibration.cc:
     - definition of PulserColot_t in MAGIC.h. 



 2004/02/25: Hendrik Bartko
  
   * macros/rootlogon.C
     - set the include path also to msignals/

   * manalysis/MExtractSignal.[h,cc], manalysis/MExtractSignal2.[h,cc],
     manalysis/MExtractedSignalCam.[h,cc],
     manalysis/MExtractedSignalPix.[h,cc],
     manalysis/MArrivalTime.[h,cc], manalysis/MArrivalTimeCalc.[h,cc],
     manalysis/MArrivalTimeCalc2.[h,cc]:
     - removed
     
   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:			
     - removed classes mentioned above

   * msignal/MExtractSignal.[h,cc], msignal/MExtractSignal2.[h,cc],
     msignal/MExtractedSignalCam.[h,cc],
     msignal/MExtractedSignalPix.[h,cc],
     msignal/MArrivalTime.[h,cc], msignal/MArrivalTimeCalc.[h,cc],
     msignal/MArrivalTimeCalc2.[h,cc]:
     - added

   * msignal/Makefile, msignal/AnalysisLinkDef.h:			
     - added classes mentioned above
     
   * mfilter/Makefile, mcalib/Makefile, mjobs/Makefile, mmain/Makefile:
     - added include msignal
    



 2004/02/25: Wolfgang Wittek
  
   * mcalib/MCalibrateData.[h,cc]
     - initialize size for MPedPhotCam



 2004/02/24: Wolfgang Wittek

   * manalysis/MSourcPosfromStarPos.[h,cc]
     - change member function SetSourceAndStarPosition() to expect sky
       coordinates in the standard units
     - generalize to more than 1 star
     - the class is not yet fully tested

   * mfilter/MFSelBasic.[h,cc]
     - change default values of cuts



 2004/02/24: Markus Gaug

   * mjobs/MJCalibration.cc, macros/calibration.C,
     macros/bootcampstandardanalysis.C, macros/pedphotcalc.C:
     - added MCalibrationChargeBlindPix to plist
     - added new filling of histograms with MFillH
     - changed SetPulserColor to MCalibrationChargeBlindPix and 
       MCalibrationChargePINDiode

   * mcalib/MHCalibrationChargeBlindPix.[h,cc]:
     - receives a pointer to MCalibrationChargePINDiode which is filled 
       with the results and told to calculate the fluxes in the 
       Finalize function
     - is filled via MFillH from MExtractBlindPixel
     - SetPulserColor directly in this class

   * mcalib/MCalibrationChargeBlindPix.[h,cc]
     - new storage container of the blind pxiel resutls, replaces 
       MCalibrationBlindPix

   * mcalib/MCalibrationChargeCalc.[h,cc]:
     - does not fill the histograms any more, but does ony the 
       calculations in the postprocess. No pointer to MExtractPINDidoe
       or MExtractBlindPixel any more.

   * mcalib/MCalibrationChargePix.cc
     - discovered an error in the calculation of phe's in 
       CalcFFactorMethod(). The average QE was applied twice. 
       This error had been introduced on 13/02/04
     - loosened criterium convFFactorRelErrLimit from 0.1 to 0.2
     - CalcFFactor asks for IsChargeValid before calculating anything

   * mcalib/MCalibrationChargePINDiode.[h,cc]
     - added function SetFluxOutsidePlexiglassAvailable
     - SetPulserColor directly in this class

   * mcalib/MCalibrationChargeCam.cc
     - removed function SetPulserColor from here 

   * mcalib/MCalibrationPINDiode.[h,cc], mcalib/MHCalibrationConfig.h,
     mcalib/MHCalibrationPINDiode.[h,cc],
     mcalib/MCalibrationBlindPix.[h,cc],
     mcalib/MHCalibrationBlindPixel.[h,cc]:
     - removed since obsolote 

   * mcalib/MHCalibrationChargePix.cc
     - make fPickup an Int_t

   * mcalib/MCalibrate.cc
     - test validity of every calibration method before retrieving
       conversion factors

   * mcalib/MHGausEvents.[h,cc]
     - add possibility to set fit ranges in call to FitGaus
     - make function CreateXaxis protected 



 2004/02/23: Markus Gaug

   * mraw/MRawEvtPixelIter.h
     - include GetNumHiGainSamples and GetNumLoGainSamples

   * mcalib/MExtractedSignalBlindPixel.h, 
     mcalib/MExtractBlindPixel.[h,cc]:
     - included storage of pedestal

   * mcalib/MHGausEvents.[h,cc]
     - make the fit functions protected



 2004/02/22: Markus Gaug

   * mfilter/MFCosmics.[h,cc]
     - fMaxNumEmpty changed from absolute number to relative number of 
       pixels

   * mcalib/MHGausEvents.h
     - remove the "->" from the pointers which are initialized only 
       in certain cases. The streamer did not work in case that 
       MFGausFit was left at the NULL pointer.



 2004/02/21: Markus Gaug

   * manalysis/MExtractedSignalPix.[h,cc]
     - changed variable fIsLoGainUsed to fLoGainUsed
     - added function GetNumHiGainSaturated()


 2004/02/20: Markus Gaug

   * mcalib/MHCalibrationChargeHiGainPix.[h,cc], mcalib/Makefile,
     mcalib/MHCalibrationChargeLoGainPix.[h,cc],
     mcalib/CalibLinkDef.h
     - new class to replace MHCalibrationPixel, 
       based on MHCalibrationChargePix

   * mcalib/MCalibrationChargeCalc.[h,cc]
     mcalib/MCalibrationChargeCam.[h,cc]
     mcalib/MCalibrationChargePix.[h,cc]
     mcalib/MCalibrationChargePINDiode.[h,cc]
     mcalib/MCalibrationCalc.[h,cc], mcalib/MCalibrationCam.[h,cc],
     mcalib/MCalibrationPINDiode.[h,cc]:
     - added the "charge" versions, remove the old ones. The histograms 
       should be filled in the MH... versions independently of 
       MCalibrationChargeCalc. This is fully realized for the PIN Didoe 
       now and will later be so for the pixels and the blind pixel. 

   * mcalib/MHCalibrationChargePINDiode.[h,cc]
     - receives a pointer to MCalibrationChargePINDiode which is filled 
       with the results and told to calculate the fluxes in the 
       Finalize function

   * mcalib/MCalibrate.[h,cc], mcalib/MCalibrateData.[h,cc],
     mcalib/MMcCalibrationCalc.[h,cc], mjobs/MJCalibration.[h,cc],
     manalysis/MMcCalibrationUpdate.[h,cc],
     mjobs/MJExtractSignal.[h,cc], manalysis/MGeomApply.cc,
     mcalib/Makefile, mcalib/CalibLinkDef.h, macros/calibration.C,
     macros/bootcampstandardanalysis.C,
     macros/pedphotcalc.C:
    - replace MCalibrationCam by MCalibrationChargeCam
    - replace MCalibrationCalc by MCalibrationChargeCalc



 2004/02/19: Markus Gaug

   * mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationCam.cc,
     mcalib/MCalibrate.cc, mcalib/MCalibrateDate.cc,
     manalysis/MMcCalibrationUpdate.cc:
     - standardized naming of variables containing "Error", this also affected 
       the calling functions MCalibrate, MMcCalibrationUpdate and MCalibrateData

   * mcalib/MCalibrationCam.cc, mcalib/MCalibrationPix.cc,
     mcalib/MCalibrationCalc.cc, mcalib/MCalibrate.cc,
     mcalib/MCalibrateData.cc, mcalib/MCalibrationConfig.h:
     - took out some configuration numbers and put them directly into 
       the class
     - remove completely MCalibrationConfig.h



 2004/02/19: Abelardo Moralejo

   * mhist/MHEvent.[h,cc]:
     - Changed names of Event "types" to make them more descriptive.
       Former kEvtSignal is now called kEvtSignalDensity, and indicates
       pixel content scaled by area. Added kEvtSignalRaw, which 
       corresponds to pixel content (with no scaling) in whatever units
       (this depends on how the MHEvent object is filled!). The default
       constructor initializes type=kEvtSignalRaw.

   * mmain/MEventDisplay.cc
     - Changed filling of evt1 and evt2. Now they are filled with raw 
       content of MCerPhotEvt. Since in MEventDisplay, MCerPhotEvt is
       still filled uncalibrated (hence in ADC counts), this means that 
       what will be now shown in Mars' camera display is now the signal 
       in each pixel without scaling with pixel area. Given that the 
       default flat fielding is such that equal light density 
       corresponds to equal absolute signal (in ADC counts), this is 
       more reasonable, and allows to check for instance how the 
       relative pixel gains are adjusted by looking at calibration 
       events. To be FIXED: there is however an "inconsistency" in 
       MEventDisplay, and it is that MCerPhotEvt is still used to keep
       uncalibrated signals. To be replaced by MExtractedSignalCam?



 2004/02/19: Thomas Bretz

   * manalysis/MCerPhotEvt.h:
     - added operator= to MCerPhotEvtIter -- is this correct?

   * mhist/MHCamera.[h,cc]:
     - added member function to calculate minimum content and 
       maximum content for a single sector
     - Added possibility to get a projection for a single sector.
     - GetMinimum/GetMaximum now only takes used pixels into account
       (you can request all pixels using a different member function)
     - fixed projection (projection only took pixels with contents!=0
       instead of 'used' pixels
     - Don't call Sumw2() anymore for projection

   * mjobs/MJPedestal.cc:
     - added MPedestalCam to output again - MPedestalCam was fixed
       yesterday
     - Added Histograms for the two camera halves



 2004/02/18: Markus Gaug

    * macros/calibration.C
      - fixed a buggy display of the F-Factor method

    * mcalib/MCalibrationCalc.cc
      - calculate the F-Factor method already in the post-Process

    * mcalib/MCalibrationPix.h
      - move CalcFFactorMethod to public



 2004/02/18: Abelardo Moralejo

    * mtools/MCubicSpline.cc
      - in Init, corrected initialization of arrays temp and ysd, which
	was done with n-1 elements instead of n.

    * mgui/MHexagon.cc
      - added comment explaining the algorithm.
      - changed explicit values of Sin and Cos 60 degrees by const
	variables (more readable).



 2004/02/18: Hendrik Bartko

   * msignal/:
     - removed the backup files *~
     - removed the object files *.o
     - removed the files SignalCint.*

    * mgui/MHexagon.cc
      - added comment explaining the algorithm.



 2004/02/18: Thomas Bretz

   * manalysis/MPedestalCam.[h,cc]:
     - Changed order of derivements - seems to be VERY important!
     - changed GetSize from UInt_t to Int_t which is the type
       of TClonesArray::GetSize() !

   * mfileio/MReadReports.cc:
     - skip trees with no entries

   * mgui/MCamEvent.cc:
     - added a comment

   * mhbase/MFillH.cc:
     - in case SetupFill returns kFALSE and kCanSkip is set
       Skip task

   * mraw/MRawFileRead.cc:
     - don't print warning in case of none executions

   * manalysis/MArrivalTimeCalc2.cc:
     - added some const-qualifiers



 2004/02/17: Raquel de los Reyes

   * macros/CCDataCheck.C
     - Added some improvements in the plots.



 2004/02/17: Abelardo Moralejo

   * macros/readrfl.C
     - Added missing gPad->cd(1), otherwise the display of events was
       not updated.

   * mgui/MHexagon.cc
     - DistanceToPrimitive(Float_t px, Float_t py) Changed check of
       whether px,py is inside the pixel or not. Previous algorithm 
       was just an approximation.



 2004/02/17: Raquel de los Reyes

   * mcamera/MCameraHV.h
     - Now it derives from a MCamEvent class and implemented the
       GetPixContent() and DrawPixelContent() functions. Added the 
       GetMean function to get the mean HV settings of the camera.

   * macros/CCDataCheck.C
     - Added the HV settings plots.



 2004/02/17: Hendrik Bartko

   * msignal:
     - new: directory for all signal and time extraction classes

   * msignal/MArrivalTimeCam.[h,cc], manalysis/Makefile, 
     msignal/AnalysisLinkDef.h, MGeomApply.cc:
     - new: Storage Container for the ArrivalTime in the camera
   
   * msignal/MArrivalTimePix.[h,cc], manalysis/Makefile, 
     msignal/AnalysisLinkDef.h:
     - new: Storage Container for ArrivalTime information of one pixel

   * msignal/Makefile, SignalCint.[h,cc], SignalDep.d, SignalIncl.h, 
     SignalLinkDef.h
     - auxiliary files for msignal directory

   * manalysis/MArrivalTimeCalc2.[h,cc]:
     - added functionality to compute error of the extracted ArrivalTime
     - calculated ArrivalTime is stored in MArrivalTimeCam

   * manalysis/MGeomApply.cc
     - geometry is applied to MArrivalTimeCam

   * Makefile:
     - directory msignal is included



 2004/02/17: Sebastian Raducci

  * mtools/MCubicSpline.[h,cc]
    - little corrections in minimums evalustion methods
    - changed constructors (they require the fadc slices to be const)

  * macros/spline.C
    - changed according to the MCubicSpline new constructors 

  * manalysis/MArrivalTimeCalc.[h,cc]
    - changed to use the MCubicSpline class intead of the TSpline class
    - warning: now the arrival time is again the maximum of the spline,
      soon it will be changed to half maximum



 2004/02/17: Wolfgang Wittek

  * manalysis/MSourcPosfromStarPos.[h,cc]
    - new class; calculates the position of the source in the camera from
                 the position of a star in the camera and puts it into
                 MSrcPosCam



 2004/02/16: Abelardo Moralejo

   * mcalib/MMcCalibrationCalc.cc
     - Fixed two typos in screen output.



 2004/02/16: Markus Gaug

   * mcalib/MCalibrationPix.cc
     - documentation from David's email added
     - EffectiveQE decreased from 0.2 to 0.18 (see documentation)

   * mcalib/Makefile, mcalib/CalibLinkDef.h:
     - added MExtractBlindPixel and MExtractedSignalBlindPixel

   * mcalib/MExtractBlindPixel.[h,cc]
     - new signal extractor for the Blind Pixel

   * mcalib/MExtractedSignalBlindPixel.[h,cc]
     - new container for the extracted signal of the BlindPixel

   * mcalib/MCalibrationCalc.[h,cc]
     - does not extract signal from Blind Pixel any more, searches 
       for MExtractedSignalBlindPixel and fills the hists from there
  
   * macros/calibration.C, macros/bootcampstandardanalysis.C,
     macros/pedphotcalc.C, mjobs/MJCalibration.cc:
     - introduce the blind pixel and PIN diode extraction in the macro

   * manalysis/MPedestalCam.h 
     - changed type of fTotalEntries from ULong_t to UInt_t 
     - fixed documentation of fTotalEntries

   * manalysis/MPedCalcPedRun.h 
     - changed type of fNumSamplesTot from ULong_t to UInt_t 

   * mcalib/MHGausEvents.h
     - changed type of fCurrentSize from ULong_t to UInt_t 
    
   * mcalib/MCalibrationConfig.h
     - removed gkConversionHiLo and gkConversionHiLoErr which is now
       directly in the class MCalibrationPix 



 2004/02/16: Thomas Bretz

   * manalysis/AnalysisLinkDef.h:
     - added missing MCerPhotEvtIter

   * merpp.cc:
     - added possible usage of database

   * star.cc:
     - moved source code into new class MJStar - preliminary

   * manalysis/MCerPhotPix.cc:
     - updated class header
     - fixed Print-output

   * mbase/MAGIC.h:
     - removed definition of MLog

   * mbase/MArgs.h:
     - removed include of MAGIC.h

   * mbase/MLog.h:
     - added extern definition of gLog

   * mbase/MParContainer.[h,cc]:
     - move body of constructors to source file

   * mcalib/MCalibrate.cc, mcalib/MCalibrateData.cc,
     mraw/MRawCrateArray.cc, mraw/MRawCrateData.cc,
     mraw/MRawEvtData.cc, mraw/MRawEvtHeader.cc, mraw/MRawRead.cc,
     mraw/MRawEvtPixelIter.cc, mraw/MRawFileWrite.cc:
     - fixed documentation header

   * mcalib/MMcCalibrationCalc.[h,cc]:
     - fixed documentation header
     - fixed usage of FindCreateObj and FindObject
     - removed data member to count entries (use histogram instead)
     - use TH1 function Integral instead of doing it manually

   * mfilter/MFCosmics.cc:
     - fixed documentation

   * mimage/MHillas.cc, mimage/MImgCleanStd.cc,
     mimage/MNewImagePar.[h,cc]:
     - replaced for-loops by Iterators

   * mraw/MRawFileRead.cc, mraw/MRawSocketRead.cc:
     - fixed documentation header
     - check return value of MRawRunHeader::ReadEvt

   * mraw/mraw/MRawRunHeader.[h,cc]:
     - fixed documentation header
     - added return value to MRawRunHeader::ReadEvt
     - added constant number for max format version - preliminary 
       (should by a static data member)

   * mcalib/MHCalibrationPINDiode.cc:
     - do not delete pointers in the destructor which are already
       deleted in the base class
     - reset histograms in Clear()

   * mcalib/MHCalibrationPixel.cc:
     - after deletion of instances in Clear() initialize pointer to NULL

   * mcalib/MCalibrationCalc.cc, mcalib/MHCalibrationBlindPixel.cc:
     - fixed usage of logging stream output levels

   * manalysis/MPedCalcPedRun.[h,cc]:
     - removed obsolete fSignals

     - removed obsolete fNumPixels

   * manalysis/MPedestalCam.h:
     - added '->' to fArray

   * mfileio/MWriteRootFile.cc:
     - changed some output to make debugging easier

   * mjobs/MJCalibration.cc:
     - fixed a bug in drawing

   * mjobs/MJExtractSignal.cc:
     - removed MPedestalCam from MWriteRootFile output.
       When creating the branch it crashes - reason unknown I'll
       investigate further



 2004/02/16: Markus Gaug

   * mcalib/Makefile, mcalib/CalibLinkDef.h, macros/calibration.C:
     - added MHCalibrationRelTimePix

   * mcalib/MHCalibrationRelTimePix.[h,cc],
     mcalib/MHCalibrationRelTimeCam.[h,cc]:
     - new classes to fit and display the relative arrival times. 
     - filled from MArrivalTime	
     - need: MFillH("MHCalibrationRelTimeCam","MArrivalTime")

   * manalysis/MCalibrationCalc.cc
     - take out all uncommented code referring to the relative arrival time

   * manalysis/MArrivalTime.h 
     - changed function GetNumPixels to GetSize

   * macros/bootcampstandardanalysis.C, macros/pedphotcalc.C
     - included cosmics rejection which was in MCalibrationCalc before



 2004/02/14: Markus Gaug

   * mcalib/Makefile, mcalib/CalibLinkDef.h:
     - added MHCalibrationChargePINDiode

   * mcalib/MHCalibrationChargePINDiode.[h,cc]
     - new class to fill the PIN Diode histograms. Derives from 
       MHCalibrationChargePix and is filled with MFillH from the 
       container MExtractedSignalPINDiode. 
       Will replace MHCalibrationPINDiode entirely soon.

   * mcalib/MHCalibrationChargePix.[h,cc]
     - new base class for the calibration charges histogram pixel. 
       Derives from MH and can be filled with the MH with the MH 
       functions. 

   * mcalib/MExtractPINDiode.[h,cc]
     - new signal extractor for the PIN Diode

   * mcalib/MExtractedSignalPINDiode.[h,cc]
     - new container for the extracted signal of the PIN Diode

   * mcalib/MCalibrationCalc.[h,cc]
     - remove the PIN Diode signal extraction 

   * manalysis/MHPedestalPix.[h,cc]
     - new version of MHPedestalPixel, deriving from MHGausEvents.

   * manalysis/MHPedestalPixel.[h,cc]
     - old version removed, since obsolete (and erroneous)

   * manalysis/MHPedestalCam.[h,cc]
     - histogramming part of MPedestalCam now in own class 

   * manalysis/MPedestalPix.h
     - removed include of MHPedestalPixel

   * macros/calibration.C 
     - changed pedestal displays accordingly

   * mjobs/MJPedestal.h
     - class TCanvas included (did not compile otherwise)

   * mhbase/MH.cc
     - included call to FindGoodLimits(..) in CutEdges()
     - axe from pointer to reference
     - "CutEdges" renamed to "StripZeros"
 
   * manalysis/MHPedestalPixel.cc, mcalib/MHCalibrationPixel.cc,
     mcalib/MHCalibrationBlindPixel.cc:
     - "CutEdges" renamed to "StripZeros"

   * mcalib/MHGausEvent.[h,cc], mcalib/Makefile, mcalib/CalibLinkDef.h:
     - replaced by the improved version: MHGausEvents.[h,cc]



 2004/02/14: Thomas Bretz

   * manalysis/MCerPhotEvt.[h,cc]:
     - added 'Iterator' facility, this will replace some for-loops
       in the near future
     
   * mbase/MTime.[h,cc]:
     - added a more powerfull interface to get and interprete the
       MTime contents as string
     - added a new constructor

   * mreport/MReportTrigger.h:
     - fixed GetPixContent

   * mtools/MCubicCoeff.cc, mtools/MCubicSpline.[h,cc]:
     - many small changes to simple details (like order of includes)
     - some speed improvements
     - many small simplifications
     - changed parts of the code to be more C++ like (eg Iterators
       instead of for-loops)
     - disentangles some if-cases
     - replaced some math.h function by TMath::
     - removed data-member fN (obsolete with iterators)



 2004/02/13: Wolfgang Wittek

   * mcalib/MCalibrateData.[h,cc]
     - new class; 
       like MCalibrate, but in ReInit it fills the MPedPhot container
       using informations from MPedestal, MExtracteSignalCam and 
       MCalibrationCam

   * mcalib/Makefile, mcalib/CalibLinkDef.h
     - added MCalibrateData

   * manalysis/MPedestalWorkaround.[h,cc]
     - create MMcEvt container and fill with theta = 10.0
     - set pedestalRMS = 0. if it is > 10.0

   * manalysis/MSupercuts.[h,cc]
     - change default values of parameters

   * manalysis/MSupercutsCalc.[h,cc]
     - change dNOMLOGSIZE from 4.1 to 5.0

   * mhist/MHBlindPixels.[h,cc]
     - change MPedestalCam to MPedPhotCam

   * mhist/MHSigmaTheta.[h,cc]
     - automatic binning for pixel number doesn't work
       use default binning



 2004/02/13: Markus Gaug

   * mcalib/MCalibrationPix.[h,cc]
     - added variables gkAverageQE, gkAverageQEErr, and fAverageQE, 
       fAverageQEErr
     - gkAverageQE initializes to 0.2 (according to David)
     - gkAverageQEErr initializes to 0.02 (dito)
     - added new member function: SetAverageQE
     - call to GetMeanConversionFFactorMethod returns: 
       fMeanConversionFFactorMethod/fAverageQE. 
     - call to GetErrorConversionFFactorMethod returns: 
       errors of fMeanConversionFFactorMethod and fAverageQEErr added 
       quadratically

   * mcalib/Makefile
     - split into two parts one comment line 


 2004/02/13: Thomas Bretz

   * mbadpixels/MBadPixelsTreat.[h.cc]:
     - added for new bad pixel treatment

   * mbadpixels/Makefile, mbadpixels/BadPixelsLinkDef.h:
     - added MBadPixelsTreat

   * merpp.cc:
     - changed the name of the "DC" tree to "Currents" to make
       MReportRead work correctly with this tree

   * mbase/MTime.[h,cc]:
     - Changed UpDMagicTime to support nanosec instead of millisec
     - exchanged Reset() by Clear() not to clear the yy/mm/dd 
       information away in an eventloop

   * mraw/MRawEvtHeader.[h,cc]:
     - implemented decoding of the time-stamp for raw-data files
       with version>2. Thanks to Marcos.

   * mraw/MRawRead.[h,c]:
     - pipe file version number to MRawEvtHeader::ReadEvt
     - create fake time for file-version<3

   * macros/readMagic.C:
     - changed to use MInteractiveTask

   * mbase/MPrint.cc:
     - fixed debugging level of some output
     
   * mhist/MHCamera.[h,cc]:
     - fixed handling in AddNotify (necessayr due to change of
       inheritance from MCamEvent)
     - replaced cout by gLog
     - added fNotify to list of cleanups

   * mhist/MHEvent.cc, mjobs/MJCalibration.cc,
     mjobs/MJPedestal.cc:
     - fixed usage of AddNotify

   * mfileio/MReadReports.cc:
     - use a different way to determin whether the tree is a valid tree,
       skip invalid trees
       
   * mfileio/MReadTree.cc:
     - added another sanity check at the beginning of PreProcess
     
   * mhbase/MFillH.[h,cc]:
     - added bit kCanSkip which skips MFillH in case the necessary container
       wasn't found.
     - cd into the corresponding canvas before filling the MH



 2004/02/12: Markus Gaug
 
   * mbase/MArray.[h,cc]:
     - changed name of StripZeros

   * mcalib/MHGausEvent.cc:
     - corrected call to StripZeros

   * mcalib/MCalibrationPix.[h,cc]
     - implemented dummy for combined method

   * mcalib/MCalibrate.[h,cc]
     - implemented a dummy for calibration factor 1. (requested by
       Javier Rico)
     - implemented combined method
     - check for valid methods moved to ReInit

   * mcalib/MCalibrationCalc.cc
     - removed initialization of non-used nsamples

   * mcalib/MHCalibrationPixel.[h,cc], mcalib/MCalibrationPix.[h,cc],
     mcalib/MCalibrationCalc.[h,cc]
     macros/calibration.C
     - implemented new histograms: 
       HSinglePheFADCSlices and HPedestalFADCSlices
       They are filled with the FADC slice values of either a s.phe. 
       event or a pedestal event. The decision is taken with the 
       variable: MCalibrationCalc::fBlindPixelSinglePheCut, to be set 
       with a setter 

   * mtools/MFFT.[h,cc]
     - PowerSpectrumDensity of TArrayI implemented



 2004/02/12: Thomas Bretz
 
   * mbase/MArray.[h,cc]:
     - changed argument of CutEdges from pointer to reference

   * mgeom/MGeomPix.h:
     - fixed calculation of area of pixel. It was too big for a 
       factor of 2

   * mjobs/MJCalibration.cc:
     - slight change of name of a MHCamera

   * manalysis/MExtractSignal.cc:
     - slight change to the creation of the satpixels list
     
   * mcalib/MHCalibrationBlindPixel.cc, mcalib/MHCalibrationPixel.cc,
     mcalib/MHGausEvent.cc:
     - corrected call to ProjectArray
     - corrected call to CutEdges
     
   * mfilter/MFCosmics.[h,cc]:
     - small fixes to logging output
     - small simplification to return statement
     - declared CosmicsRejection const

   * mhbase/MH.[h,cc]:
     - changed argument of ProjectArray from pointer to reference
     - added missing calcualtion of minimum
     - removed obsolete SetEntries
     - changed SetDirectory from NULL to gROOT



 2004/02/12: Javier L�ez

   * macros/pointspreadfunction.C
     - added new macro that fits with a 2D gaussian the DC spot for an 
       star. It gives you the RMS of the PSF and the center of the star,
       very useful for misspointing studies.



 2004/02/11: Hendrik Bartko

   * manalysis/MExtractSignal2.cc:
     - introduced a validity check for the set-function of the window 
       size (even number of slices, WindowSize < NumberSlices)

   * manalysis/MArrivalTimeCalc2.[h,cc], manalysis/Makefile, 
     manalysis/AnalysisLinkDef.h:
     - new: introduced the calculation of the arrival time as the signal 
       weighted mean of the time slices in the maximum window



 2004/02/11: Markus Gaug

   * mcalib/MCalibrationCalc.cc:
     - the blind pixel signal extractor introduced one week ago, counted 
       one FADC slice too little, thus the normalization w.r.t. pedestals 
       was wrong. Now corrected.

   * manalysis/MExtractSignal.cc, manalysis/MExtractSignal2.cc:
     - when "WARNING - Lo Gain saturated" occurs, display also the
       corr. pixel numbers.

   * mbase/MArray.[h,cc]:
     - introduced function to cut array edges with zeros. 
       (Thomas, should we keep it there or move it to another class? )

   * mcalib/MCalibrationCalc.[h,cc]:
     - new function SetBlindPixelRange to set start and end of FADC slices 
       used for the blind pixel signal extraction. 
     - remove fEvents which are not necessary any more after the shift 
       to MFCosmics.

   * mcalib/MHCalibration(Blind)Pixel.[h,cc]:
     - show the fourier spectrum now with axes in frequency [Hz] instead 
       of inverted events. 

   * mcalib/MHGausEvent.[h,cc], mcalib/Makefile, mcalib/CalibLinkDef.h:
     - new base class for all kind of events with variables having a 
       Gaussian distribution. Will serve as base class for the 
       existing and new calibration histogram classes. 



 2004/02/11: Abelardo Moralejo

   * mmain/MEventDisplay.cc
     - Switched order of MMcPedestalCopy and MCerPhotCalc in tasklist:
       MMcPedestalCopy must be executed earlier!



 2004/02/10: Raquel de los Reyes

   * mhist/MHPixVsTime.[h,cc]:
     - Added a default draw function and replaced the TGraph object 
       by a pointer to a TGraph object.

   * mreport/MReportTrigger.h:
     - Now it dereives from a MCamEvent class and implemented the
       GetPixContent() and DrawPixelContent() functions.

   * maccros/CCDataCheck.C:
     - An update of the previous macro. New plots: subsystems status and
       macrocells trigger.



 2004/02/10: Markus Gaug

   * mcalib/MCalibrationCam.cc:
     - fixed documentation

   * mhbase/MH.[h,cc]:
     - new function ProjectArray

   * mcalib/MHCalibrationPixel.[h,cc],
     mcalib/MHCalibrationBlindPixel.[h,cc]:
     - use ProjectArray from MH to plot the projection of the fourier 
       spectrum

   * mfilter/MFCosmics.[h,cc], mfilter/Makefile,
     mfilter/FilterLinkDef.h:
     - new filter removing cosmics, the same as in MCalibrationCalc
       where it was removed now. 
       Call: MFCosmics cosmics; 
             MContinue cont(&cosmics); 
             tlist.AddToList(&cont);

   * mcalib/MCalibrationCalc.[h,cc]:
     - removed cosmics rejection from there
 
   * macros/calibration.C, mjobs/MJCalibration.cc:
     - changed cosmics rejection to the filter algorithm



 2004/02/09: Markus Gaug

   * mcalib/MCalibrationBlindPix.[h,cc]:
     - added histogram to display the average in FADC slices of all 
       single and double phe events

   * mcalib/MCalibrationCalc.cc:
     - fill histograms of single-phe events with higain and logain
       sampls

   * mcalib/MCalibrationCam.[h,cc], mcalib/MCalibrationCalc.cc,
     mcalib/MCalibrationConfig.h:
     - take all pixel areas out of MGeomPix::GetA(), remove all previous
       areas 
     - calculate photon fluxes from blind pixel and PIN diode, use 
       area only to fill the conversion factors in MCalibrationPix 


   * mcalib/MJCalibration.cc:
     - display of number of photons for Blindpixel and PIN Diode Method 
       changed to display of photon flux which is the actually 
       calculated quantity



 2004/02/09: Thomas Bretz

   * mbadpixels/*:
     - added

   * Makefile:
     - added MBadPixels

   * manalysis/MGeomApply.cc:
     - fixed class description

   * mjobs/MJCalibration.[h,cc], mjobs/MJExtractSignal.[h,cc]:
     - added bad pixel treatment

   * mjobs/MJPedestal.[h,cc]:
     - reorganized order of functions
     - removed a nonsense scrren output (some BLABABLA or so)

   * mjobs/Makefile:
     - added include for mbadpixels

   * mmain/MBrowser.cc:
     - do not call construtor of TGTReeLBEntry if pic0=0



 2004/02/09: Raquel de los Reyes

   * mcamera/MCameraLids.h, mreport/MReportCamera.h
     - Added the "Get" functions to access the private data 
       members of the class.



 2004/02/09: Markus Gaug

   * MMcCalibrationUpdate.cc, MCalibrate.cc, MCalibrationPix.cc,
     MCalibrationPix.h:
     - replace MCalibrationPix->IsChargeFitValid() by IsChargeValid()
       because we can calibrate with the histogram mean and RMS even 
       if the fit is not OK. Thus, there is a question: IsFitted() and 
       IsChargeValid(), i.e. does the charge make any sense? 

   * MCalibrationCam.cc, MCalibrationConfig.h, MCalibrationCalc.cc:
     - found serious bug in calculation of conversion factors for the 
       outer pixels: 
       GetMeanConversionBlindPixelMethod and 
       GetMeanConversionPINDiodeMethod 
       did not correct for the area of the outer pixel, this did only 
       MCalibrationCam::GetPixelContent which is not used by MCalibrate



 2004/02/06: Markus Gaug

   * mgeom/MGeomCam.h 
     - replaced in Comment of fPixRatio: 
       "ratio between size of pixel idx and pixel 0" by
       "ratio between size of pixel 0 and pixel idx" 

   * manalysis/MPedestalCam.cc
     - catch calls to MHPedestalPixel in case that they are not filled 
       This led previous calls to segmentation violations
     - remove include of MHExtractedSignalPix
 
   * manalysis/MHExtractedSignalPix.[h,cc]
     - is everything in MHPedestalPixel, so removed it again

   * mjobs/MJPedestal.cc
     - put the projections into Display()
     - correct the input of Display (0: pedestal, 1: pedestalerror, 
                                     2: pedRMS, 3: pedRMSerror)

   * manalysis/MHPedestalPixel.cc
     - increased number of bins in for charges plot

   * mtools/MFFT.[h,cc]
     - possibility to have PSD directly from TArray

   * mjobs/MJCalibration.[h,cc]
     - fixed displays
     - replaced MExtractSignal by MExtractSignal2

   * mcalib/MHCalibrationPixel.[h,cc], mcalib/MHCalibrationBlindPixel.[h,cc],
     mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationBlindPix.[h,cc],
     mcalib/MCalibrationPINDiode.[h,cc], mcalib/MHCalibrationPINDiode.[h,cc]:
     - remove histograms MHChargevsN..., now keep TArrays directly
     - check for oscillations for all pixels (and you will not trust 
       your eyes when you look at the results :-((((

   * mcalib/MCalibrationCalc.[h,cc]
     - remove ArrivalTime -> go to separate class
     - remove BlindPixel and PIN Diode overflow, now handled directly 
       inside the corr. classes. 
     - remove SkipTimeFits -> go the arrival time class

   * mcalib/MCalibrationCam.h
     - new getters for number of photons
     - removed timeslicewidth -> go the corr. time containers

   * mcalib/MCalibrationCam.cc
     - removed times of GetPixelContent
     - added OscillationChecks in GetPixelContent

   * manalysis/MMcCalibrationUpdate.cc
     - remove calpix.SkipTimeFits which is now obsolet

   * macros/calibration.C
     - all previous changes now in this macro.
     - (NB: Thomas, du brauchst in MJCalibration nicht mehr aendern, 
       das ging diesmal in einem Aufwasch)



 2004/02/06: Thomas Bretz

   * mhist/MHPixVsTime.[h,cc]:
     - changed such that you can set the name of the time container now 

   * mraw/MRawRunHeader.[h,cc]:
     - added GetMaxPixId()

   * mraw/MRawEvtData.cc:
     - fixed wrong size calculation for fABflags



 2004/02/06: Oscar Blanch

   * mmc/MFadcDefine.h && mmc/MMcFadcHeader.cxx
     - We cahnged the name (and values) of the global variable
        MFADC_RESPONSE_AMPLITUDE to  MFADC_RESPONSE_INTEGRAL



 2004/02/05: Markus Gaug

   * mcalib/MHCalibrationPixel.[h,cc]
     - put an NDF limit for the fit
     - removed all TStrings and replace them by Form(..)
     - Check for nan's of all returned fit values

   * mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationCam.cc:
     - reshuffled HiLoGainConversion, calculation of F-Factor method, 
     - calculation of total F-Factor of the readout.

   * mcalib/MCalibrationCam.cc
     - include relative times to display with GetPixelContent

   * mcalib/MCalibrationCalc.[h,cc]
     - flag to skip Hi-Lo Calibration
     - Hi-LO Graph not filled any more after overflow of ChargevsN
     - fill the blind pixel differently from the rest of pixels

   * mcalib/MCalibrate.cc:
     - call to const MCalibrationPix &pix replaced by MCalibrationPix &pix

   * manalysis/MArrivalTimeCalc.cc
     - default step width 100 ps. 
     - look for half maximum (at rising edge)

   * manalysis/MExtractSignal.[h,cc]
     - removed uncommented code (arrival time)
     - set start byte back by one like it was before TB's changes 
       (does not affect the calculation of number of FADC slices)

   * manalysis/MExtractSignal2.[h,cc]
     - removed uncommented code (arrival time)

   * manalysis/MHPedestalPixel.[h,cc]
     - is now filled with total pedestals (not per slice), but results are 
       renormalized to values per slice (this is not to screw up with the 
       pedestal RMS and the derived uncertainties)
     - new function Renorm(nslices)

   * manalysis/MPedestalCam.[h,cc]
     - introduced function Clone() (like proposed by TB)
     - call to MHPedestalPixel operator() not const any more
     - take out lots of uncommented code 
     - found bug in initialization of hists. SetupFill is called in 
       PreProcess, therefore, TObjArray is not yet enlarged there. 
       Now, InitUseHists is called in Fill
     - MHPedestalPixel is now filled with total pedestals (not per slice), 
	but results are 
       renormalized to values per slice (this is not to screw up with the 
       pedestal RMS and the derived uncertainties)

   * manalysis/MPedCalcPedRun.cc
     - added author
     - split calculation of RMS into two steps to make it more clear to 
       the user

   * macros/calibration.C
     - found bug introduced two days ago, namely calculating pedestlas with 
       MExtractSignal2 which is now fixed
     - Skip HiLoConversionCalibration



 2004/02/05: Abelardo Moralejo

   * macros/starmc2.C
     - added 3rd argument, "kFALSE", to call of MWriteRootFile::Add
       for both MMcEvt and MMcRunHeader since these containers are
       not present in real data. Name of macro is no longer adequate if
       we will use it for calibrated real data (to be changed if so).



 2004/02/05: Sebastian Raducci

   * mtools/MCubicSpline.[h,cc]
     - added
     - this class will take the place of the TSpline class to 
       calculate arrival times

   * mtools/MCubicCoeff.[h,cc]
     - added
     - this class is used by MCubicSpline to store coefficients

   * macros/spline.C
     - added
     - test macro. Shows how to use the MCubicSpline class
     - it could be used to test the methods of the Spline class



 2004/02/05: Thomas Bretz

   * mmain/MBrowser.cc:
     - fixed a double deletion of a TGLayoutHints



 2004/02/04: Markus Gaug

   * mmain/MBrowser.cc:
     - corrected TGTReeLBEntry for TGTreeLBEntry



 2004/02/04: Thomas Bretz
 
   * manalysis/MExtractSignal2.cc:
     - don't allow odd numbers for the window size

   * mfilter/MFilterList.cc:
     - corrected a wrong logging message

   * mmain/MBrowser.cc:
     - added '/data/MAGIC' as shortcut in the combo box
     
   * mraw/MRawEvtPixelIter.cc:
     - optimized calculation of MaxIdx



 2004/02/04: Abelardo Moralejo

  * macros/starmc2.C
    - removed unnecessary variables BinsHigh, BinsLow



 2004/02/04: Markus Gaug

  * manalysis/MPedestalCam.[h,cc], manalysis/MPedestalPix.[h,cc],
    manalysis/MPedCalcPedRun.[h,cc], manalysis/MHPedestalPixel.[h,cc],
    macros/calibration.C:
    - histograms are now filled with MFillH as proposed and coded by 
      Thomas Bretz. Some modifications had to be done, however. 
    - Class to hold MHPedestalPixel is still MPedestalCam
    - MPedCalcPedRun does nothing any more (except from what is was 
      doing before)

  * manalysis/MExtractSignal.cc
    - remove uncommented code

  * mcalib/MCalibrationCalc.[h,cc]
    - modified way to handle histogram overflow: Now flags are set and 
      ChargevsN histogram is not tried to be filled subsequently



 2004/02/03: Markus Gaug
 
   * manalysis/MHExtractedSignalPix.[h,cc]
     - added Thomas B. modified version of MHPedestalPixel. Later will 
       remove MHPedestalPixel

   * manalysis/MCalibrationPix.[h,cc], manalysis/MHCalibrationPixel.[h,cc],
     manalysis/MCalibrationCam.cc, macros/calibration.C:
     - now split completely absolute and relative times. Absolute 
       times are not fitted, but their histogram mean and rms are 
       returned.



 2004/02/03: Thomas Bretz

   * mfileio/MReadTree.cc:
     - fixed handling of -1 entries in AddFile: root 3.10/02 crashed

   * manalysis/MExtractSignal.[h,cc]:
     - moved code to extract the signal from Process to
       new member function FindSignal, I left the arrival time 
       extraction as commented-out code in the code just as a 
       demonstration to do this very fast.



 2004/02/02: Markus Gaug

  * manalysis/MPedCalcPedRun.cc
    - corrected formulae in Class description

  * mcalib/MCalibration.[h,cc], mcalib/MHCalibration.[h,cc],
    manalysis/MMcCalibrationUpdate.cc:
    - calculate relative times and absolute times. Fit only 
      the relative ones. 



 2004/02/02: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.cc, MMcPedestalCopy.cc
     - removed file type check (MC or data) from PreProcess since now
       run headers are not yet known at that point.

   * mcalib/MMcCalibrationCalc.cc
     - same as above.

   * NEWS
     - updated.



 2004/02/02: Thomas Bretz

   * manalysis/MExtractSignal2.[h,cc]:
     - added new task which takes a given number of slices with the
       highest integral content as signal.

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - added MExtractSignal2



 2004/01/30: Abelardo Moralejo

   * macros/starmc.C
     - changed default FADC integration range (more adequate for coming
       camera version).

   * macros/mccalibrate.C, starmc2.C
     - added. First macro transforms input files from camera simulation
       into files with pixel data already calibrated in photons. The 
       second reads in an already calibrated data file and produces an 
       output file with Hillas parameters. Both together do the same as
       starmc.C, but it is convenient to have files containing 
       calibrated pixel information.



 2004/01/30: Thomas Bretz
 
   * mbase/MDirIter.h:
     - added GetNumEntries

   * mhist/MHEvent.cc:
     - added a dynamic_cast from MParContainer to MCamEvent to get the
       correct pointer to the correct base-class.

   * mbase/MStatusDisplay.cc:
     - In EventInfo check whether gPad==0
     
   * mfileio/MReadMarsFile.cc:
     - removed reading RunHeaders from PreProcess, this resulted
       in strange behaviour of writing RunHeaders
     - fixed consistency check for RunType accordingly

   * mfilter/MFilterList.cc:
     - do not skip adding filter if only a filter with the same name 
       exists
       
   * mraw/MRawFileRead.cc:
     - added an output message if run header is not accessible
     
   * mraw/MRawRunHeader.[h,cc]:
     - initialize fRunType to new enum kRTNone

   * mfilter/MFGeomag.cc:
     - set fResult to kFALSE at the beginning of Process
     - according to this removed setting fResult=kFALSE before return
     - replaced some float by Float_t
     - added some const-qualifiers
     - replaced (rig<0.5/pr*R*(r2-r1)+r1) by (rig-r1)*pr<rnd
       with rnd = R * (r2-r1)/2 to make sure that we cannot
       devide by 0

   * manalysis/MPedCalcPedRun.cc:
     - added some comments

   * Makefile:
     - added mjobs

   * mjobs/*:
     - added

   * mbase/Makefile, mbase/BaseLinkDef.h:
     - added MRunIter

   * mbase/MRunIter.[h,cc]:
     - added



 2004/01/30: Markus Gaug

   * manalysis/MPedestalCam.h
     - added function IsUsedHists()

   * manalysis/MPedestalCam.cc
     - modified GetPixelContent

   * manalysis/MPedestalCam.cc, manalysis/MPedCalcPedRun.cc:
     - include storage of number of used FADC slices to compare later 
       the pedestal per slice ( and sigma per slice)
     - return relative differences in GetPixelContent

   * mcalib/MCalibrationCalc.[h,cc], mcalib/MHCalibrationBlindPixel.[h,cc]:
     - fBlindPixelId and fPINDiodeId now like in PedestalCam
     - fill Blind Pixel with information about its fitted pedestal if 
       available
     - initialize charges histogram with a bigger range
     - use pedestal information to constrain the pedestal fit ranges

   * manalysis/MHPedestalPixel.cc
     - initialize charges histogram with a bigger range

   * macros/calibration.C
     - SetRange of MExtractSignal to 1,14 (see emails of yesterday)
     - apply new GetPixelContents of MPedestalCam (more calculations 
       and displays of errors, correction for different FADC slice 
       number)

   * manalysis/MExtractSignal.cc
     - not access to MArrivalTime any more. The same information is 
       stored in MRawEvt->GetPixelContent(...)

   * manalysis/MCalibrationCalc.cc
     - retrieve default arrival time from MRawEvt 

   * manalysis/MCalibrationBlindPix.cc, manalysis/MCalibrationPix.cc
     - check for NaN's in fit results



 2004/01/29: Abelardo Moralejo

   * mfileio/MWriteFile.h
     - added missing declaration of ReInit

   * manalysis/MMcCalibrationUpdate.cc
     - added call to MCalibrationCam::SetBlindPixelMethodValid(kTRUE) 
       to adapt to recent changes in MCalibrate.



 2004/01/29: Thomas Bretz

   * manalysis/MArrivalTime.h, manalysis/MCameraData.h,
     manalysis/MCerPhotEvt.h, manalysis/MExtractSignalCam.h,
     manalysis/MPedPhotCam.h, manalysis/MPedestalCam.h,
     mcalib/MCalibrationCam.h, mcamera/MCameraDC.h,
     mraw/MRawEvtData.h, mreflector/MRflEvtData.h:
     - split derivement into MParContainer and MCamEvent

   * manalysis/MExtractSignalCam.[h,cc]:
     - removed obsolete MExtractSignal::ReInit
     - added -> to fArray

   * mbase/MParList.h:
     - added a new bit kIsProcessing
     
   * mbase/MTaskList.cc:
     - fixed the handling of kDoNotReset and the bahaviour of
       SetReadyToSave, such that it is possible to write all
       headers 

   * mfileio/MWriteFile.cc:
     - added ReInit which also calls CheckAndWrite
     
   * mgui/MCamEvent.h:
     - does not derive from MParContainer anymore



 2004/01/29: Markus Gaug

   * mcalib/MCalibrationCalc.[h,cc], mcalib/MCalibrationCam.[h,cc], 
     mcalib/MCalibrationConfig.h
     - put gkCalibrationBlindPixelId and gkCalibrationPINDiodeId 
       directly into the corresponding classes.



 2004/01/29: Nicola Galante

   * mhistmc/MHMcTriggerLvl2.[h,cc]:
     - In method MHMcTriggerLvl2::GetHistByName(const TString name) 
       added string checking to return also 
       fHistCellPseudoSize, fHistCellPseudoSizeNorm
       and fHistCellPseudoSizeEnergy.
     - Added inline functions GetHistCellPseudoSize() and 
       GetHistCellPseudoSizeNorm().



 2004/01/28: Javier Rico

   * mcalib/MCalibrate.[h.cc]
     - include possibility to select the calibration method to be used



 2004/01/28: Markus Gaug

   * mcalib/MCalibrate.[h.cc]
     - corrected Int_t ReInit() to Bool_t ReInit(MParList *pList)

   * mcalib/MCalibrationCalc.[h,cc], mcalib/MCalibrationCam.[h,cc]:
     - included flags to indicate if Blind Pixel Method or PIn Diode 
       method was OK. Up to now, program stopped, if one of the two 
       methods was chosen but not able to being executed.

   * manalysis/MArrivalTimeCalc.cc, manalysis/MExtractSignals.cc,
     manalysis/MGeomApply.cc:
     - put all missing InitSize(npixels) into MGeomApply	 

   * manalysis/MPedCalcPedRun.[h,cc], manalysis/MPedestalCam.[h,cc],
     manalysis/MPedestalPix.[h,cc], manalysis/MHPedestalPixel.[h,cc],
     manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - include possibility to fit the pedestals with Gaussian. 
     - old methods are not affected. 
     - add new method with MPedCalcPedRun::SetUseHists()



 2004/01/28: Abelardo Moralejo

   * mcalib/MMcCalibration.cc
     - fixed wrong variable type in call to TH1F constructor (number of
       bins is now integer), which resulted in a compilation warning.



 2004/01/28: Thomas Bretz

   * manalysis/MPedestalCam.cc:
     - removed unwanted CheckBound from operators. CheckBounds is ONLY
       ment for really old MC files and will be removed in the future
       anyhow.

   * mcalib/MHCalibrationPixel.h:
     - removed obsolete include of MFFT 

   * manalysis/MCerPhotAnal.cc, manalysis/MCerPhotCalc.cc,
     manalysis/MPedestalCam.[h,cc]:
     - removed use of obsolete MPedestalCam::CheckBounds. This was
       a workaround for a 'bug' in very old camera files, which is not
       necessary anymore.

   * manalysis/MCerPhotAnal2.[h,cc]:
     - replaced MPedestalCam by MPedPhotCam
     
   * manalysis/MExtractSignal.cc:
     - some small simplification to the signal extraction
     - removed some obsolete variables
     - replaced for by while
     - removed obsolete casts
     
   * mmain/MEventDisplay.cc:
     - gave names to the filters
     - removed adding MHCamera to fList because it was deleted twice

   * mhist/MHCamera.cc:
     - fixed usage of fPainter in Paint() - title was not updated 
       correctly



 2004/01/28: Sebastian Raducci

   * manalysis/MArrivalTime.[h,cc]:
     - removed all the code relative to the cluster evaluation



 2004/01/27: Markus Gaug
 
   * manalysis/MPedestalPix.cc:
     - initialize default values to 0 instead of -1.

   * manalysis/MPedestalCam.[h,cc]:
     - include CheckBounds, also in operator[]

   * mcalib/MCalibrationCam.[h,cc]:
     - apparently, there was a reference to InitSize(UInt_t i) instead 
       of InitSize(Int_t i), where compiler complained, now changed
 
   * mcalib/MHCalibration*, mcalib/MCalibration*:
     - fixed all Clear()'s, Reset()'s, direct intializers



 2004/01/27: Thomas Bretz

   * mdata/MDataChain.cc:
     - added '%' to supported operators



 2004/01/26: Nicola Galante

   * manalysis/MMcTriggerLvl2.[cc,h]:

     - Defined some static constants to avoid ugly "magic numbers"
       in arrays: gsNCells, gsNTrigPixels,
       gsNPixInCell, gsNLutInCell, gsNPixInLut, fNumPixCell.
     - Added method 
       MMcTriggerLvl2::GetCellCompactPixel(int cell, MGeomCam *fCam)
       which computes compact pixels into a given L2T macrocell.
     - Added method 
       MMcTriggerLvl2::CalcBiggerCellPseudoSize() 
       which computes fCellPseudoSize, the maximum Pseudo Size into L2T 
       macrocells
     - Added method 
       MMcTriggerLvl2::GetCellPseudoSize() const 
       which returns fCellPseudoSize
     - Added method 
       MMcTriggerLvl2::IsPixelInCell(Int_t pixel, Int_t cell),
       which controls whether a pixel belongs to a given L2T cell.
     - Added method 
       MMcTriggerLvl2::GetMaxCell() const 
       which returns fMaxCell, the cell with the maximum 
       fCellPseudoSize.



 2004/01/26: Markus Gaug, Michele Doro

   * manalysis/MArrivalTime.[h,cc], manalysis/MArrivalTimeCalc.[h,cc]:
     - moved calculation of arrival time from MArrivalTime to 
       MArrivalTimeCalc. MArrivalTime does not do any Process-job
       anymore
     - TSpline5 now on stack. 
     - function to set the stepsize

   * mcalib/MHCalibrationBlindPixel.[h,cc]:
     - force mu_{0} in Blind Pixel Fit to be around 0 in fKPoisson4
     - implement combined Polya fit and Michele's back-scattered electron
       fit 

   * mcalib/MHCalibrationPixel.[h,cc], mcalib/MCalibrationPix.cc,
     mcalib/MCalibrationPINDiode.cc:
     - combine FitChargeHiGain and FitChargeLoGain into one function

   * macros/calibration.C
     - improve double gauss fit a bit



 2004/01/26: Thomas Bretz

   * mraw/MRawEvtPixelIter.[h,cc]:
     - removed member function GetNumPixels. For more details see mantis.

   * manalysis/MArrivalTime.[h,cc]:
     - reorganized includes
     - fixed InitSize and ClearArray (now Reset) to fit MParContainer
       definition
     - for the moment removed usage of fPixelChecked - THIS WILL CRASH YOUR
       PROGRAM

   * manalysis/MArrivalTimeCalc.[h,cc]:
     - reorganized includes
     - removed many obsolete code, exspecially copy&paste relicts!
     - fixed usage of InitSize
     - removed CleanArray. Reset() is called automatically before Process()

   * manalysis/MExtractedSignalCam.[h,cc]:
     - added SetLogStream
     - removed obsolete include MGeomCam
     - replaced PrintOut by Print
     - added const-qualifiers to all Getters
     - fixed documentation
     
   * manalysis/MExtractedSignalPix.[h,cc]:
     - replaced PrintOut by Print
     - fixed documentation

   * manalysis/MEventRateCalc.cc, manalysis/MPedCalcPedRun.cc:
     - replaced memset by Reset()



 2004/01/24: Abelardo Moralejo

   * macros/starmcstereo.C
     - Added. Example of how to run the analysis chain for MC files
       containing simulation of stereo systems of 2 telescopes.

   * mcalib/MCalibrate.cc
     - Added check that value of signal from MExtractedSignalPix is not
       the default (error) value. In such a case, the signal in 
       MCerPhotEvt is now set to 0. Before, all pixels got very high
       values in MCerPhotEvt in case the MRawEvtData object for the
       event was missing in the file. This happened in MC files, in 
       which in some circumstances an event is written without the
       pixel information (for instance, when running stereo simulations
       the pixel data is missing for non-triggered telescopes, but the
       event headers are present).



 2004/01/23: Markus Gaug

   * manalysis/MExtractSignal.[h,cc], manalysis/MExtractedSignalPix.[h,cc],
     manalysis/MArrivalTime.[h,cc], mcalib/MCalibrationBlindPix.h,
     mcalib/MHCalibrationBlindPixel.[h,cc], mcalib/MCalibrationPINDiode.h,
     mcalib/MHCalibrationPINDiode.[h,cc], mcalib/MCalibrationPix.[h,cc],
     mcalib/MHCalibrationPixel.[h,cc], mcalib/MCalibrationCalc.[h,cc]:
     - use MArrivalTime for Storage (or calculation) of time
       in MExtractSignal
     - pass from TH1I histos to TH1F for times

   * mcalib/MCalibrationBlindPix.h, mcalib/MHCalibrationBlindPixel.[h,cc],
     mcalib/MCalibrationPix.[h,cc], mcalib/MHCalibrationPixel.[h,cc],
     mcalib/MCalibrationCalc.[h,cc]:
     - clean up  setters 
     - pass to bit-fields for all flags

   * mcalib/MCalibrationCam.cc
     - exclude Blind Pixel from Camera display
     - do not fill &val when return kFALSE

   * macros/calibration.C
     - include functions to exclude the blind pixel, 
       calculation of times and quality checks



 2004/01/23: Abelardo Moralejo

   * mcalib/MCalibrate.cc, manalysis/MExtractSignal.cc
     - Added support (using AddSerialNumber) for stereo MC files.



 2004/01/23: Thomas Bretz

   * mbase/MAstro.cc:
     - Fixed calculation of MJD. In Ymd2Mjd a plus should be a minus.

   * mreport/MReport*.[h,cc]:
     - changed all classes to return Int_t instead of Bool_t in 
       InterpreteBody
     - changed MReportFileRead such, that a wrong line results in
       skipping the line instead of abort reading.

   * manalysis/MExtractSignal.cc:
     - do not print information for each pixel - it's too much.
     
   * mbase/MStatusDisplay.cc:
     - when reading a status display do not display tabs with
       the same name than one which is already existing.
       
   * mcalib/MCalibrate.cc:
     - directly store pointer to pixel when setting saturation flag
     
   * mcamera/MCameraDC.cc:
     - fixed some comments
     
   * mhist/MHCamEvent.cc:
     - fixed a crash when no geometry was available

   * mhist/MHCamera.[h,cc]:
     - removed obsolete member function SetPix

   * mbase/MStatusDisplay.[h,cc]:
     - added EventInfo member function
     - implemented preliminary redirection of GetObjectInfo to
       StatusLine2 -> An own status line for this is missing

   * manalysis/MExtractSignal.[h,cc]:
     - implemented StreamPrimitive
     - changed deafults to be static const data members
     
   * manalysis/MGeomApply.[h,cc]:
     - implemented StreamPrimitive



 2004/01/23: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.[h,cc] 
     - Added check to guarantee that the FADC simulation parameters of
       all read files (those used for calibration and those analyzed) 
       are the same.
     - Added missing support for analysis of stereo files.

   * mcalib/MMcCalibrationCalc.cc
     - Removed obsolete FIXME comment.
     - Added missing support for analysis of stereo files.


 2004/01/23: Raquel de los Reyes

   * macros/CCDataCheck.C
     - Added the temperature distribution of the optical links
       and the plots of the LV power supplies.
   * mcamera/MCameraLV.h
     - Added the "Get" functions to access the private data 
       members of the class.


 2004/01/22: Abelardo Moralejo

   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Now ratio of high to low gain is taken from MCalibrationCam if
       it existed previously in the parameter list, instead of being
       read again from the MMcFadcHeader. Removed Setter function for
       fADC2PhInner, no longer necessary. Fixed error regarding the 
       pedestal conversion to photons (did not read conversion factor
       from preexisting MCalibrationCam object).

   * mcalib/MMcCalibrationCalc.cc
     - Changed parameters of the histogram, and also the quantity being 
       histogrammed. Check that input data come from a noiseless camera
       file before proceeding to do the calibration. Introduced lower
       size in cut for calibration. Now rhe calibration constant is not
       calculated from the mean of photons/ADC counts, but from the peak
       of the histogram.

   * macros/starmc.C
     - Introduced new scheme. Now there are two loops over two different
       sets of files. First loop calculates the calibration constants,
       second one does the analysis. Introduced comments. Now the 
       histogram used in the light calibration is written to the output
       file.



 2004/01/22: Thomas Bretz

   * mcalib/MCalibrate.[h,cc], mcalib/MCalibrationCam.[h,cc],
     mcalib/MCalibrationBlindPix.[h,cc], mcalib/MCalibrationCalc.[h,cc],
     mcalib/MCalibrationPix.[h,cc], mcalib/MCalibrationPINDiode.[h,cc],
     mcalib/MCalibrationBlindPixel.[h,cc], 
     mcalib/MHCalibrationPixel.[h,cc], mcalib/MMcCalibrationCalc.[h,cc],
     mcalib/MHCalibrationBlindPixel.[h,cc], 
     mcalib/MHCalibrationPINDiode.[h,cc]:
     - cleaned up includes



 2004/01/22: Raquel de los Reyes

   * macros/CCDataCheck.C
     - macro to check the data from the central control (.rep files).



 2004/01/22: Markus Gaug

   * macros/calibration.C
     - made MStatusDisplay 3 bit smaller

   * manalysis/MExtractSignal.cc
     - put fSignals->SetUsedFADCSlices into PreProcess

   * manalysis/MPedCalcPedRun.cc
     - calculate PedRMS as RMS of the sums, later renormalized to units 
       of RMS/slice (eliminate the wrong effect of odd and even slices)

   * mcalib/MCalibrationCalc.cc
     - if bit SkipBlindPixelFit is set, now number of photons outside 
       plexiglass is not intended to be calculated any more (previous
       bug)
     - exclude excluded pixels in eventloop
	
   * mcalib/MHCalibrationBlindPixel.[h,cc]
     - move functions to pointer again (otherwise, Clone will give 
       strange results)



 2004/01/21: Abelardo Moralejo

   * mcalib/MMcCalibrationCalc.[h,cc]
     - Added. First version of the task intended to calculate the
       conversion factors from ADC counts to photons in the MC. It has
       a different aim than the recently renamed class 
       "MMcCalibrationUpdate" (which takes care that the correct 
       pedestals and conversion factors are supplied to each event, but 
       does not really calculate anything).

   * mcalib/Makefile, CalibLinkDef.h
     - Added new class MMcCalibrationCalc

   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Now the container MCalibrationCam is not created or modified if
       it is found that one such container already exists in the 
       Parameter list (from a previous calibration).



 2004/01/21: Thomas Bretz

   * mraw/MRawRead.cc:
     - restore the fake time for all runs (current time stamp in
       the data seems to be toally nonsense)
 
   * mraw/MRawEvtHeader.cc:
     - removed decoding of real time (current time stamp in the data
       seems to be toally nonsense)



 2004/01/21: Abelardo Moralejo

   * mmc/MMcEvt.hxx
     - Uncommented 6 Getter functions (those regarding the number of 
       photons surviving the different stages of simulation).

   * manalysis/MMcCalibrationUpdate.[h,cc]
     - Added (see below).

   * manalysis/MMcCalibrationCalc.[h,cc]
     - Removed: changed name of this class to MMcCalibrationUpdate, 
       which is more representative of what it really does. Moved 
       the filling of the MCalibrationCam container from Process to 
       ReInit, since it does not change on an event by event basis.
       Simplified PreProcess (MCalibrationCam was searched for twice).
       Updated class description and comments.

   * manalysis/Makefile, AnalysisLinkDef.h
     - Adapted to change above

   * macros/starmc.C
     - Adapted to change above. Changed also task instance name from 
       mccalibcalc to mccalibupdate.



 2004/01/21: Raquel de los Reyes

   * mreport/MReportCC.h, mreport/MReportTrigger.h, mcamera/MCameraHV.h 
     and mcamera/MCameraCalibration.h
     - Added the "Get" functions (e.g GetStatus() for fStatus) to access 
       the private data members of the class.



 2004/01/20: Thomas Hengstebeck

   * mranforest/MRanForestCalc.[h,cc]
     - Added member functions Grow (training of RF) and Fill (reading in
       trained forest from file) which simplify macros. 
       One just needs to call them instead of using MRanForestGrow and 
       MRanForestFill (and the related training and fill loops) in a
       macro.



 2004/01/20: Abelardo moralejo

   * manalysis/MMcCalibrationCalc.cc
     - removed call to MCalibrationPix::SetPedestal, which was not 
       needed.



 2004/01/20: Thomas Bretz

   * Makefile:
     - replaced 'make' by '$(MAKE)'
     
   * Makefile.rules:
     - added Makefile itself to dependencies
     
   * mbase/MTask.cc:
     - added comment about ReInit

   * mhbase/MH.cc:
     - do not clear pad in DrawClone if 'same' option given

   * mhist/MHVsTime.cc:
     - evaluate 'same' option

   * mfileio/MReadCurrents.[h,cc]:
     - obsolete, removed

   * manalysis/MCerPhotEvt.cc, manalysis/MCerPhotPix.cc:
     - added some comments



 2004/01/20: Abelardo moralejo

  * mcalib/MHCalibrationPINDiode.cc
    - Added call to SetDirecory(0) for histograms fHErrCharge, 
      fHPCharge, fHPTime.

  * manalysis/MCerPhotPix.h: 
    - Changed position of declaration of fIsSaturated to be the last 
      private variable. Otherwise, since in the constructor it is 
      initialized in the last place, a warning is displayed upon
      compilation in some systems.



 2004/01/20: Markus Gaug
  * mcalib/Makefile, manalysis/Makefile:
    - include directory ../mtools
 
  * mtools/MFFT.[h,cc]
    - class inherits from TObject now



 2004/01/19: Markus Gaug

  * mcalib/MHCalibrationBlindPixel.[h,cc]
    - fixed a bug in fFitLegend due to which program crashed by calls 
      to DrawClone
    - Modified way to change the fit function

  * mcalib/MHCalibrationPixel.[h,cc]
    - reordered function calls
    - removed SetupFill

  * mcalib/MHCalibrationPINDiode.h
    - reordered function calls

  * mcalib/MCalibrationPix.[h,cc]
    - limits to define fFitValid now as variables in class

  * mcalib/MCalibrationCam.[h,cc]
    - reordered function calls
    - incorporate option to exclude pixels 

  * mcalib/MCalibrationBlindPix.h
    - Modified way to change the fit function

  * mcalib/MCalibrationCalc.[h,cc]
    - Modified way to change the fit function
    - incorporate option to exclude pixels from configuration file

  * macros/calibration.C
    - Modified way to change the fit function
    - incorporate option to exclude pixels from configuration file



 2004/01/19: Javier Rico

   * manalysis/MPedCalcPedRun.cc, manalysis/MPedPhotCalc.cc
     - Added documentation of member functions



 2004/01/19: Abelardo Moralejo

   * manalysis/MCerPhotPix.[h,cc]
     - Added fIsSaturated to flag whether low gain of the pixel is
       saturated. Added corresponding getter and setter functions.
       Updated ClassDef to version 2.

   * mcalib/MCalibrate.cc
     - Set the new saturation flag of MCerPhotPix to kTRUE if at least 
       one low gain FADC slice is saturated.

   * mimage/MNewImagePar.[h,cc]
     - Added new member variable fNumSaturatedPixels to count how many
       pixels were saturated. Updated ClassDef to version 2.



 2004/01/19: Thomas Bretz

   * manalysis/MPedPhotCalc.[cc,h]:
     - fixed order of includes
     - removed obsolete forward declarations
     - removed obsolete data member fNumPixels (stored already twice in
       the two TArrayF)
     - fixed some small bugs in the documentation

   * manalysis/MPedCalcPedRun.cc:
     - updated my eMail address



 2004/01/19: Javier Rico

   * macros/dohtml.C, NEWS
     - include some missing info



 2004/01/19: Abelardo Moralejo

   * manalysis/MExtractedSignalPix.h
     - added GetNumLoGainSaturated()



 2004/01/19: Markus Gaug

   * macros/dohtml.C
     - include calibration.C
	
   * manalysis/MExtractSignal.cc
     - warning of logain saturation now only once per event (out of loop)

   * mcalib/MCalibrationCalc.cc, mcalib/MCalibrationPix.[h,cc]
     - new Flag fExcluded to indicate if pixel has been excluded from 
       further analysis



 2004/01/16: Javier Rico & Pepe Flix

   * manalysis/MPedPhotCalc.[cc,h]
     - added
     - new class for the evaluation of pedestals in units of photons
       using the extracted signal from pedestal runs and calibration
       constants defined in MCalibrate

   * manalysis/AnalysisLinkDef.h,  manalysis/Makefile
     - added entries for MPedPhotCalc

   * macros/pedphotcalc.C
     - added
     - example on how to use MPedPhotCalc task



 2004/01/16: Markus Gaug

   * mcalib/MCalibrationFits.h 
     - removed and incorporated in MHCalibrationBlindPixel.h

   * mcalib/MHCalibrationBlindPixel.[h,cc], mcalib/MHCalibrationConfig.h,
     mcalib/MCalibrationBlindPix.h:
     - incorporate Fit functions
     - fixed a bug due to which DrawClone crashed when class was used 
       in a compiled macro

   * mcalib/MCalibrationCalc.cc, mcalib/MCalibrationPix.cc,
     mcalib/MCalibrationBlindPix.cc, mcalib/MCalibrationPINDiode.cc,
     mcalib/MCalibrationCam.cc, mcalib/MHCalibrationBlindPixel.cc,
     mcalib/MHCalibrationPixel.cc:
     - fixed the warns and errs in fLog's



 2004/01/16: Abelardo Moralejo

   * manalysis/MMcCalibrationCalc.cc
     - TMath::Max() is no longer used because it did not compile in some 
       systems for unkown reasons. I replaced it by a safer (and may be 
       slower) code.
     - Added calpix.SetFitValid();

   * mhist/MHEvent.cc
     - In MHEvent::Fill, fixed: second parameter of SetCamContent must 
       be 1 in case of RMS:
        case kEvtPedestalRMS:
           fHist->SetCamContent(*(MCamEvent*)par, 1);



 2004/01/15: Abelardo Moralejo

   * macros/starmc.C
     - Added. Version of star showing new chain to get Hillas 
       parameters (with Size calibrated in photons) from MC files.



 2004/01/15: Javier Rico
	
   * manalysis/MPedCalcPedRun.[h,cc]
     - optimize the running time
     - add (some) documentation
     - correct treatment for the case of several input files 

   * macros/pedvsevent.C
     - added
     - draw pedestal mean and rms vs event# for input pixel# and run 
       file, and compares them to the global pedestal mean and rms 



 2004/01/15: Raquel de los Reyes

   * mhist/MHCamEvent.cc, mhist/MHCamera.cc
     - changed the MHCamEvent::SetupFill and MHCamera::GetBinError
       functions to compute the estimation of the error of the
       mean. It can be done calling to the function
       MCamEvent::SetBit(MHCamera::kVariance) in the macro



 2004/01/15: Markus Gaug

   * mhist/MHCamera.[h,cc]
     - incorporate Thomas's changes
     - replace void CreateProjection() by TH1D *Projection(const char*)

   * macros/calibration.C
     - replace MHCamera->Draw("proj") by MHCamera->Projection()
     - produce better fits to the projection

   * manalysis/MSimulatedAnnealing.[h,cc], 
     mhist/MHSimulatedAnnealing.[h,cc]:
     - moved to directory mtools
     - MSimulatedAnnealing now inherits from TObject

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h,
     mhist/Makefile, mhist/HistLinkDef.h:
     - removed MSimulatedAnnealing
     - removed MHSimulatedAnnealing

   * mtools/Makefile, mtools/AnalysisLinkDef.h:
     - added MSimulatedAnnealing
     - added MHSimulatedAnnealing



 2004/01/15: Thomas Bretz

   * manalysis/AnalysisLinkDef.h:
     - removed MCurrents

   * mhist/MHCamera.[h,cc]:
     - added member function Projection
     - removed fYproj

   * mreport/MReport*.*:
     - added more comments



 2004/01/14: Markus Gaug
  
   * mtools/MFFT.[h,cc]
     - new class to perform Fast Fourier Transforms

   * mtools/Makefile
   * mtools/ToolsLinkDef.h
     - include MFFT

   * manalysis/MExtractedSignalCam.h
     - removed variables fNumHiGainSamples and fNumLoGainSamples
     - function SetNumUsedFADCSlices replaced by SetUsedFADCSlices

   * manalysis/MExtractSignal.cc
     - updated call to SetUsedFADCSlices



 2004/01/14: Abelardo Moralejo

   * manalysis/MMcCalibrationCalc.cc:
     - set pedestal rms per FADC slice to 0.01 counts in case it is 0.
       This can happen (depending on camera simulation parameters), and
       rms = 0 later resulted in the pixel being eliminated in the 
       image cleaning.



 2004/01/14: Thomas Bretz

   * Makefile:
     - replaced old style Makefile.depend by directory specific
       dependancy files
       
   * Makefile.rules:
     - changed obsolete '.cc.o' style to newer style '%.o: %.c'
     - added rule to make dependency files
     - added rule to remove dependancy files.
     - added rmdep as prerequisite to clean
     - include dependency file

   * mbase/Makefile, mcalib/Makefile, mcamera/Makefile,
     mdata/Makefile, mfileio/Makefile, mfilter/Makefile,
     mgeom/Makefile, mgui/Makefile, mhbase/Makefile, 
     mhist/Makefile, mhistmc/Makefile, mimage/Makefile,
     mmain/Makefile, mmc/Makefile, mmontecarlo/Makefile,
     mpointing/Makefile, mranforest/Makefile, mraw/Makefile,
     mreflector/Makefile, mreport/Makefile, mtemp/Makefile,
     mtools/Makefile:
     - removed clean-rule, use the one in Makefile.rules instead

   * mreport/Makefile, mreport/ReportLinkDef.h:
     - added MReportHelp

   * mreport/MReportFileRead.cc:
     - moved code from MReportHelp to new file
     - removed usage of MReport class completely

   * mfilter/MFGeomag.[h,cc]:
     - fixed a bug which causes MFGeomag to fail if MARSSYS is not set
     - changed the second loop from 0->1151 to 1152->2304
     - removed dummy arrays used for reading
     - output filename in case of 'file not found'
     - removed obsolete data members
     - removed obsolete Init function
     - removed forbidden underscore from member variable
     - changed wrong 0/1 in allocation of fResult into kFALSE/TRUE

   * mbase/MStatusDisplay.[h,cc]:
     - added new member function Open
     - added new menu entry kFileOpen
     - changed UpdatePSheader algorithm (the old one was much too slow)

   * manalysis/MCurrents.[h,cc]:
     - removed (old outdated)

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - removed MCurrents



 2004/01/14: Wolfgang Wittek

   * macros/ONOFFAnalysis.C:
     - current version

   * mhist/MHSigmaTheta.[h,cc]:
     - replace MPedestalCam by MPedPhotCam

   * manalysis/MPad.[h,cc], manalysus/MSigmabar.[h,cc],
     manalysus/MSigmabarCalc.[h,cc], manalysus/MCT1PadONOFF.[h,cc],
     manalysus/MCT1PadSchweizer.[h,cc], manalysus/MPadding.[h,cc]:
     - replace MPedestalCam by MPedPhotCam

   * manalysis/MPedPhotPix.[h,cc]
     - uncomment SetRms()



 2004/01/13: Markus Gaug
 
   * manalysis/MExtractSignal.h
     - seems that the reduced light intensity of the CT1 Pulser
       results in broader pulses -> Set Default time slices to [3,10]

   * mhist/MHCamera.cc
     - make Stat Window in option 'proj' bigger
     - add comment line at beginning of Draw()

   * mcalib/MHCalibrationBlindPixel.[h.cc]
     - add Function DrawClone()
     - fix bug in calculation of integral (GetIntegral("width"))
     - restrict parameters tighter
     - declare fit as not valid, if less than 100 events 
       in single photo-electron peak

   * mcalib/MCalibrationFits.h, mcalib/MHCalibrationBlindPixel.[h.cc]
     - fit now with fixed normalization

   * mcalib/MHCalibrationPixel.[h.cc]
     - new function IsEmpty()
     - Time fit accepted if ChiSquare less than 30. (instead of 20.)

   * mcalib/MCalibrationPix.[h.cc]
     - F-Factor corrected and added error
     - Histograms not fitted if they are empty
     - rejection criteria of fitted charges now > 5 PedRMS (instead 3)

   * mcalib/MCalibrationCam.cc
     - Square Root of Reduced Sigmas not taken, if they are < 0.
     - Reduced Sigma / Charge squared replaced by reduced sigma / charge

   * mcalib/MCalibrationCalc.cc
     - Blind Pixel is not additionally treated as normal pixel any more
     - Blind Pixel Draw replaced by DrawClone

   * macros/calibration.C
     - took out some unused code
     - some default axis labelling corrected



 2004/01/13: Abelardo Moralejo

   * manalysis/MMcPedestalCopy.cc
     - added check of whether input file is a MC file before executing 
       the PreProcess.



 2004/01/13: Wolfgang Wittek

   * macros/ONOFFAnalysis.C, macros/ONAnalysis.C:
     - change macro to handle also MC events with finite sigmabar

   * manalysis/MPadOn.[h,cc]:
     - deleted, is replaced by MPad

   * manalysis/MPadOnOFF.[h,cc]:
     - deleted, is replaced by MPad

   * manalysis/MPad.[h,cc]:
     - new class, replacing MPadON and MPadONOFF
     - handle also MC events with finite sigmabar

   * manalysis/Makefile, manalysis/AnalysisLinkDef.h:
     - replace MPadON and MPadONOFF by MPad



 2004/01/13: Thomas Bretz

   * mraw/MRawRunHeader.[h,cc]:
     - implemented new member function GetRunTypeStr

   * Changelog.03: 
     - added (contains entries of 2003)

   * Changelog:
     - removed entries of 2003

   * mfilter/MFGeomag.cc:
     - simplified open/close of input files

   * manalysis/MEventRate.[h,cc], manalysis/MEventRateCalc.cc:
     - added some comments
     - added new member function GetError

   * Makefile:
     - updated 'make dox' output for convinience

   * macros/dohtml.C:
     - do not print Info's
     - added mcamera
     - added mpointing
     - added mreport

   * mreport/MReportCurrents.cc, mreport/MReportDAQ.cc:
     - removed some obsolete comments (these comments confused THtml)

   * manalysis/MCameraData.[h,cc], mfileio/MCT1ReadAscii.[h,cc],
     mfileio/MCT1ReadPreProc.[h,cc], mfilter/MFCT1SelBasic.cc,
     mfilter/MFSelBasic.cc, mhist/MHCamera.cc, mhist/MHEvent.[h,cc],
     mimage/MImgCleanStd.[h,cc], mimage/MImgCleanTGB.[h,cc],
     mmain/MAnalysis.cc, mmain/MEventDisplay.cc:
     - replaced MPedestalCam by MPedPhotCam
     - removed some obsolete includes

   * mbase/BaseLinkDef.h, mbase/Makefile:
     - added MLogPlugin
     - added MLogHtml

   * mbase/MLog.[h,cc]:
     - added use of plugins

   * mbase/MLogPlugin.[h,cc], mbase/MLogHtml.[h,cc]:
     - added

   * mbase/MStatusDisplay.[h,cc]:
     - added a Save-As dialog



 2004/01/12: Thomas Bretz

   * macros/rootlogon.C:
     - added mcamera to include path
     - added mpointing to include path
     - added mreport to include path
     
   * mbase/MLog.cc:
     - updated my eMail address
     
   * mbase/MParContainer.h:
     - added Read member function
     
   * mbase/MStatusDisplay.[h,cc]:
     - changed size of ps-paper
     - added a user defined bottom line to the ps-files
     - added name (currently unused)
     - added title (used as possible bottom line in ps-file)
     
   * mraw/MRawRunHeader.cc:
     - added some comments

   * status.cc:
     - set name of input as bottom line of status display



 2004/01/12: Abelardo Moralejo

   * mimage/MStereoPar.cc
     - fixed mistake: now fSourceY = scale1*hillas1.GetMeanY() + ...
       instead of         fSourceY = scale2*hillas1.GetMeanY() + ...
       Bug had no effect unless scale1 != scale2 (-> telescopes of 
       different size).



 2004/01/12: Markus Gaug

   * manalysis/MExtractSignal.[h,cc]
     - take out some uncommented code 
     - replace logainshift by two independent variables: 
       logainfirst, logainlast
     - because in most data, maximum occurs in slice 4, shift default 
       from slices 4-9 to slices 3-8.

   * manalysis/MExtractedSignalPix.[h,cc]
     - took out some uncommented code
     - new initializers: instead of -1. now 99999.9



 2004/01/09: Markus Gaug

   * mcalib/MCalibrationCam.[h,cc]
     - take out 1-dim histos because we can use 
       the projections in MHCamera (s.b.)

   * mcalib/MHCalibrationBlindPixel.h
     - make the fit by default quiet

   * mcalib/MHCalibrationPixel.[h,cc]
   * mcalib/MCalibrationPix.[h,cc]
     - Ranges of time slices stored independently for HiGain and LoGain
       in order to allow consecutive checks

   * mhist/MHCamera.[h.cc]
     - add the possibility to call a Draw("proj") which will 
       draw a Y-Projection of the histogram

   * macros/calibration.C
     - apply the drawing of the projections and fit them

   * mcalib/MCalibrationCalc.cc
     - catch the possibility of a calibration file, 
       unintendedly being a pedestal or cosmic file. 
       Program now exits with an error before doing the fits

   * mcalib/MCalibrationPix.[h,cc]
     - fixed a bug in calculation of fFitValid. 
       before, a call to IsFitValid() always returned false



 2004/01/09: Javier Lpez

   * macros/bootcampstandardanalysis.C
     - added new macro that holds the main scheleton discussed in the 
       december bootcamp in Wuerzburg. It runs first over a pedestal
       run, then over a calibration run, again over the pedestal run
       to compute de pedestal in number of photons and finally over a
       data run to calibrate the data.



 2004/01/06: Sebastian Raducci
   
   * manalysis/MArrivalTime.[h,cc]
     - added new method to calculate photon arrival times. It uses the
       TSpline5 Root Class to interpolate the Fadc Slices. The time is
       the abscissa value of the absolute maximum of the interpolation
     - added new method to find clusters with similar arrival times.
       For now it's a preliminary version. It simply search for adiacent
       pixels having the same arrival time (color).

   * manalysis/MArrivalTimeCalc.[h,cc]
     - modified the Process() method according to the changes in the
       Arrival Time Cointainer

   * mmain/MEventDisplay.cc
     - added new tab in the camera event display to show the arrival
       time. This arrival time is calculated with the spline method
     - the old Arrival Time pad now it's called Max Slice Idx, because
       it's only the index of the slice with the max content.
   
   * mhist/MHEvent.[h,cc]
     - added new fType in te enumeration to handle the arrival time
       histos
