//
// File generated by rootcint at Mon Nov 28 11:06:30 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME FileIOCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "FileIOCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MRead_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MRead(void *p);
   static void deleteArray_MRead(void *p);
   static void destruct_MRead(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MRead*)
   {
      ::MRead *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MRead >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MRead", ::MRead::Class_Version(), "./MRead.h", 12,
                  typeid(::MRead), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MRead::Dictionary, isa_proxy, 4,
                  sizeof(::MRead) );
      instance.SetDelete(&delete_MRead);
      instance.SetDeleteArray(&deleteArray_MRead);
      instance.SetDestructor(&destruct_MRead);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MRead*)
   {
      return GenerateInitInstanceLocal((::MRead*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MRead*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MChain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MChain(void *p = 0);
   static void *newArray_MChain(Long_t size, void *p);
   static void delete_MChain(void *p);
   static void deleteArray_MChain(void *p);
   static void destruct_MChain(void *p);
   static void directoryAutoAdd_MChain(void *obj, TDirectory *dir);
   static Long64_t merge_MChain(void *obj, TCollection *coll,TFileMergeInfo *info);
   static void reset_MChain(void *obj, TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MChain*)
   {
      ::MChain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MChain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MChain", ::MChain::Class_Version(), "./MChain.h", 9,
                  typeid(::MChain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MChain::Dictionary, isa_proxy, 4,
                  sizeof(::MChain) );
      instance.SetNew(&new_MChain);
      instance.SetNewArray(&newArray_MChain);
      instance.SetDelete(&delete_MChain);
      instance.SetDeleteArray(&deleteArray_MChain);
      instance.SetDestructor(&destruct_MChain);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_MChain);
      instance.SetMerge(&merge_MChain);
      instance.SetResetAfterMerge(&reset_MChain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MChain*)
   {
      return GenerateInitInstanceLocal((::MChain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MChain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MReadTree(void *p = 0);
   static void *newArray_MReadTree(Long_t size, void *p);
   static void delete_MReadTree(void *p);
   static void deleteArray_MReadTree(void *p);
   static void destruct_MReadTree(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadTree*)
   {
      ::MReadTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadTree", ::MReadTree::Class_Version(), "./MReadTree.h", 16,
                  typeid(::MReadTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadTree::Dictionary, isa_proxy, 4,
                  sizeof(::MReadTree) );
      instance.SetNew(&new_MReadTree);
      instance.SetNewArray(&newArray_MReadTree);
      instance.SetDelete(&delete_MReadTree);
      instance.SetDeleteArray(&deleteArray_MReadTree);
      instance.SetDestructor(&destruct_MReadTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadTree*)
   {
      return GenerateInitInstanceLocal((::MReadTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadReports_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MReadReports(void *p = 0);
   static void *newArray_MReadReports(Long_t size, void *p);
   static void delete_MReadReports(void *p);
   static void deleteArray_MReadReports(void *p);
   static void destruct_MReadReports(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadReports*)
   {
      ::MReadReports *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadReports >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadReports", ::MReadReports::Class_Version(), "./MReadReports.h", 18,
                  typeid(::MReadReports), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadReports::Dictionary, isa_proxy, 4,
                  sizeof(::MReadReports) );
      instance.SetNew(&new_MReadReports);
      instance.SetNewArray(&newArray_MReadReports);
      instance.SetDelete(&delete_MReadReports);
      instance.SetDeleteArray(&deleteArray_MReadReports);
      instance.SetDestructor(&destruct_MReadReports);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadReports*)
   {
      return GenerateInitInstanceLocal((::MReadReports*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadReports*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadFiles_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MReadFiles(void *p);
   static void deleteArray_MReadFiles(void *p);
   static void destruct_MReadFiles(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadFiles*)
   {
      ::MReadFiles *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadFiles >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadFiles", ::MReadFiles::Class_Version(), "./MReadFiles.h", 11,
                  typeid(::MReadFiles), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadFiles::Dictionary, isa_proxy, 4,
                  sizeof(::MReadFiles) );
      instance.SetDelete(&delete_MReadFiles);
      instance.SetDeleteArray(&deleteArray_MReadFiles);
      instance.SetDestructor(&destruct_MReadFiles);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadFiles*)
   {
      return GenerateInitInstanceLocal((::MReadFiles*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadFiles*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadMarsFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MReadMarsFile(void *p = 0);
   static void *newArray_MReadMarsFile(Long_t size, void *p);
   static void delete_MReadMarsFile(void *p);
   static void deleteArray_MReadMarsFile(void *p);
   static void destruct_MReadMarsFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadMarsFile*)
   {
      ::MReadMarsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadMarsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadMarsFile", ::MReadMarsFile::Class_Version(), "./MReadMarsFile.h", 12,
                  typeid(::MReadMarsFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadMarsFile::Dictionary, isa_proxy, 4,
                  sizeof(::MReadMarsFile) );
      instance.SetNew(&new_MReadMarsFile);
      instance.SetNewArray(&newArray_MReadMarsFile);
      instance.SetDelete(&delete_MReadMarsFile);
      instance.SetDeleteArray(&deleteArray_MReadMarsFile);
      instance.SetDestructor(&destruct_MReadMarsFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadMarsFile*)
   {
      return GenerateInitInstanceLocal((::MReadMarsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadMarsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadScanFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MReadScanFile(void *p = 0);
   static void *newArray_MReadScanFile(Long_t size, void *p);
   static void delete_MReadScanFile(void *p);
   static void deleteArray_MReadScanFile(void *p);
   static void destruct_MReadScanFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadScanFile*)
   {
      ::MReadScanFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadScanFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadScanFile", ::MReadScanFile::Class_Version(), "./MReadScanFile.h", 11,
                  typeid(::MReadScanFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadScanFile::Dictionary, isa_proxy, 4,
                  sizeof(::MReadScanFile) );
      instance.SetNew(&new_MReadScanFile);
      instance.SetNewArray(&newArray_MReadScanFile);
      instance.SetDelete(&delete_MReadScanFile);
      instance.SetDeleteArray(&deleteArray_MReadScanFile);
      instance.SetDestructor(&destruct_MReadScanFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadScanFile*)
   {
      return GenerateInitInstanceLocal((::MReadScanFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadScanFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MWriteFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MWriteFile(void *p);
   static void deleteArray_MWriteFile(void *p);
   static void destruct_MWriteFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MWriteFile*)
   {
      ::MWriteFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MWriteFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MWriteFile", ::MWriteFile::Class_Version(), "./MWriteFile.h", 9,
                  typeid(::MWriteFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MWriteFile::Dictionary, isa_proxy, 4,
                  sizeof(::MWriteFile) );
      instance.SetDelete(&delete_MWriteFile);
      instance.SetDeleteArray(&deleteArray_MWriteFile);
      instance.SetDestructor(&destruct_MWriteFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MWriteFile*)
   {
      return GenerateInitInstanceLocal((::MWriteFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MWriteFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MWriteAsciiFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MWriteAsciiFile(void *p);
   static void deleteArray_MWriteAsciiFile(void *p);
   static void destruct_MWriteAsciiFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MWriteAsciiFile*)
   {
      ::MWriteAsciiFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MWriteAsciiFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MWriteAsciiFile", ::MWriteAsciiFile::Class_Version(), "./MWriteAsciiFile.h", 14,
                  typeid(::MWriteAsciiFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MWriteAsciiFile::Dictionary, isa_proxy, 4,
                  sizeof(::MWriteAsciiFile) );
      instance.SetDelete(&delete_MWriteAsciiFile);
      instance.SetDeleteArray(&deleteArray_MWriteAsciiFile);
      instance.SetDestructor(&destruct_MWriteAsciiFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MWriteAsciiFile*)
   {
      return GenerateInitInstanceLocal((::MWriteAsciiFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MWriteAsciiFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MRootFileBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MRootFileBranch(void *p = 0);
   static void *newArray_MRootFileBranch(Long_t size, void *p);
   static void delete_MRootFileBranch(void *p);
   static void deleteArray_MRootFileBranch(void *p);
   static void destruct_MRootFileBranch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MRootFileBranch*)
   {
      ::MRootFileBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MRootFileBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MRootFileBranch", ::MRootFileBranch::Class_Version(), "./MWriteRootFile.h", 19,
                  typeid(::MRootFileBranch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MRootFileBranch::Dictionary, isa_proxy, 4,
                  sizeof(::MRootFileBranch) );
      instance.SetNew(&new_MRootFileBranch);
      instance.SetNewArray(&newArray_MRootFileBranch);
      instance.SetDelete(&delete_MRootFileBranch);
      instance.SetDeleteArray(&deleteArray_MRootFileBranch);
      instance.SetDestructor(&destruct_MRootFileBranch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MRootFileBranch*)
   {
      return GenerateInitInstanceLocal((::MRootFileBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MRootFileBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MWriteRootFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MWriteRootFile(void *p = 0);
   static void *newArray_MWriteRootFile(Long_t size, void *p);
   static void delete_MWriteRootFile(void *p);
   static void deleteArray_MWriteRootFile(void *p);
   static void destruct_MWriteRootFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MWriteRootFile*)
   {
      ::MWriteRootFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MWriteRootFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MWriteRootFile", ::MWriteRootFile::Class_Version(), "./MWriteRootFile.h", 73,
                  typeid(::MWriteRootFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MWriteRootFile::Dictionary, isa_proxy, 4,
                  sizeof(::MWriteRootFile) );
      instance.SetNew(&new_MWriteRootFile);
      instance.SetNewArray(&newArray_MWriteRootFile);
      instance.SetDelete(&delete_MWriteRootFile);
      instance.SetDeleteArray(&deleteArray_MWriteRootFile);
      instance.SetDestructor(&destruct_MWriteRootFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MWriteRootFile*)
   {
      return GenerateInitInstanceLocal((::MWriteRootFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MWriteRootFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MWriteFitsFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MWriteFitsFile(void *p);
   static void deleteArray_MWriteFitsFile(void *p);
   static void destruct_MWriteFitsFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MWriteFitsFile*)
   {
      ::MWriteFitsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MWriteFitsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MWriteFitsFile", ::MWriteFitsFile::Class_Version(), "./MWriteFitsFile.h", 74,
                  typeid(::MWriteFitsFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MWriteFitsFile::Dictionary, isa_proxy, 4,
                  sizeof(::MWriteFitsFile) );
      instance.SetDelete(&delete_MWriteFitsFile);
      instance.SetDeleteArray(&deleteArray_MWriteFitsFile);
      instance.SetDestructor(&destruct_MWriteFitsFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MWriteFitsFile*)
   {
      return GenerateInitInstanceLocal((::MWriteFitsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MWriteFitsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MMatrix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MMatrix(void *p);
   static void deleteArray_MMatrix(void *p);
   static void destruct_MMatrix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MMatrix*)
   {
      ::MMatrix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MMatrix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MMatrix", ::MMatrix::Class_Version(), "./MMatrix.h", 19,
                  typeid(::MMatrix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MMatrix::Dictionary, isa_proxy, 4,
                  sizeof(::MMatrix) );
      instance.SetDelete(&delete_MMatrix);
      instance.SetDeleteArray(&deleteArray_MMatrix);
      instance.SetDestructor(&destruct_MMatrix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MMatrix*)
   {
      return GenerateInitInstanceLocal((::MMatrix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MMatrix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MRead::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MRead::Class_Name()
{
   return "MRead";
}

//______________________________________________________________________________
const char *MRead::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MRead*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MRead::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MRead*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MRead::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MRead*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MRead::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MRead*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MChain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MChain::Class_Name()
{
   return "MChain";
}

//______________________________________________________________________________
const char *MChain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MChain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MChain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MChain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MChain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MChain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MChain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MChain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadTree::Class_Name()
{
   return "MReadTree";
}

//______________________________________________________________________________
const char *MReadTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadReports::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadReports::Class_Name()
{
   return "MReadReports";
}

//______________________________________________________________________________
const char *MReadReports::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadReports*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadReports::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadReports*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadReports::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadReports*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadReports::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadReports*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadFiles::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadFiles::Class_Name()
{
   return "MReadFiles";
}

//______________________________________________________________________________
const char *MReadFiles::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadFiles*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadFiles::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadFiles*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadFiles::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadFiles*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadFiles::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadFiles*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadMarsFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadMarsFile::Class_Name()
{
   return "MReadMarsFile";
}

//______________________________________________________________________________
const char *MReadMarsFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadMarsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadMarsFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadMarsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadMarsFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadMarsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadMarsFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadMarsFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadScanFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadScanFile::Class_Name()
{
   return "MReadScanFile";
}

//______________________________________________________________________________
const char *MReadScanFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadScanFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadScanFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadScanFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadScanFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadScanFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadScanFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadScanFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MWriteFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MWriteFile::Class_Name()
{
   return "MWriteFile";
}

//______________________________________________________________________________
const char *MWriteFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MWriteFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MWriteFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MWriteFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MWriteAsciiFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MWriteAsciiFile::Class_Name()
{
   return "MWriteAsciiFile";
}

//______________________________________________________________________________
const char *MWriteAsciiFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteAsciiFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MWriteAsciiFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteAsciiFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MWriteAsciiFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteAsciiFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MWriteAsciiFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteAsciiFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MRootFileBranch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MRootFileBranch::Class_Name()
{
   return "MRootFileBranch";
}

//______________________________________________________________________________
const char *MRootFileBranch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MRootFileBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MRootFileBranch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MRootFileBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MRootFileBranch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MRootFileBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MRootFileBranch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MRootFileBranch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MWriteRootFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MWriteRootFile::Class_Name()
{
   return "MWriteRootFile";
}

//______________________________________________________________________________
const char *MWriteRootFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteRootFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MWriteRootFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteRootFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MWriteRootFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteRootFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MWriteRootFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteRootFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MWriteFitsFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MWriteFitsFile::Class_Name()
{
   return "MWriteFitsFile";
}

//______________________________________________________________________________
const char *MWriteFitsFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFitsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MWriteFitsFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFitsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MWriteFitsFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFitsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MWriteFitsFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MWriteFitsFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MMatrix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MMatrix::Class_Name()
{
   return "MMatrix";
}

//______________________________________________________________________________
const char *MMatrix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMatrix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MMatrix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMatrix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MMatrix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMatrix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MMatrix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMatrix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MChain::Streamer(TBuffer &R__b)
{
   // Stream an object of class MChain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MChain::Class(),this);
   } else {
      R__b.WriteClassBuffer(MChain::Class(),this);
   }
}

//______________________________________________________________________________
void MChain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MChain.
      TClass *R__cl = ::MChain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNotified", &fNotified);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastError", &fLastError);
      TChain::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MChain(void *p) {
      return  p ? new(p) ::MChain : new ::MChain;
   }
   static void *newArray_MChain(Long_t nElements, void *p) {
      return p ? new(p) ::MChain[nElements] : new ::MChain[nElements];
   }
   // Wrapper around operator delete
   static void delete_MChain(void *p) {
      delete ((::MChain*)p);
   }
   static void deleteArray_MChain(void *p) {
      delete [] ((::MChain*)p);
   }
   static void destruct_MChain(void *p) {
      typedef ::MChain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_MChain(void *p, TDirectory *dir) {
      ((::MChain*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t merge_MChain(void *obj,TCollection *coll,TFileMergeInfo *info) {
      return ((::MChain*)obj)->Merge(coll,info);
   }
   // Wrapper around the Reset function.
   static void reset_MChain(void *obj,TFileMergeInfo *info) {
      ((::MChain*)obj)->ResetAfterMerge(info);
   }
} // end of namespace ROOTDict for class ::MChain

//______________________________________________________________________________
void MRead::Streamer(TBuffer &R__b)
{
   // Stream an object of class MRead.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MRead::Class(),this);
   } else {
      R__b.WriteClassBuffer(MRead::Class(),this);
   }
}

//______________________________________________________________________________
void MRead::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MRead.
      TClass *R__cl = ::MRead::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSelector", &fSelector);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MRead(void *p) {
      delete ((::MRead*)p);
   }
   static void deleteArray_MRead(void *p) {
      delete [] ((::MRead*)p);
   }
   static void destruct_MRead(void *p) {
      typedef ::MRead current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MRead

//______________________________________________________________________________
void MReadTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadTree::Class(),this);
   }
}

//______________________________________________________________________________
void MReadTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadTree.
      TClass *R__cl = ::MReadTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEntry", &fNumEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEntries", &fNumEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchChoosing", &fBranchChoosing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAutoEnable", &fAutoEnable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVetoList", &fVetoList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNotify", &fNotify);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaskList", &fTaskList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParList", &fParList);
      R__insp.InspectMember(fParList, "fParList.");
      MRead::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MReadTree(void *p) {
      return  p ? new(p) ::MReadTree : new ::MReadTree;
   }
   static void *newArray_MReadTree(Long_t nElements, void *p) {
      return p ? new(p) ::MReadTree[nElements] : new ::MReadTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_MReadTree(void *p) {
      delete ((::MReadTree*)p);
   }
   static void deleteArray_MReadTree(void *p) {
      delete [] ((::MReadTree*)p);
   }
   static void destruct_MReadTree(void *p) {
      typedef ::MReadTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadTree

//______________________________________________________________________________
void MReadReports::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadReports.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadReports::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadReports::Class(),this);
   }
}

//______________________________________________________________________________
void MReadReports::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadReports.
      TClass *R__cl = ::MReadReports::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrees", &fTrees);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChains", &fChains);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosEntry", &fPosEntry);
      R__insp.InspectMember(fPosEntry, "fPosEntry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosTree", &fPosTree);
      R__insp.InspectMember(fPosTree, "fPosTree.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnableAutoScheme", &fEnableAutoScheme);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumRequired", &fNumRequired);
      MRead::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MReadReports(void *p) {
      return  p ? new(p) ::MReadReports : new ::MReadReports;
   }
   static void *newArray_MReadReports(Long_t nElements, void *p) {
      return p ? new(p) ::MReadReports[nElements] : new ::MReadReports[nElements];
   }
   // Wrapper around operator delete
   static void delete_MReadReports(void *p) {
      delete ((::MReadReports*)p);
   }
   static void deleteArray_MReadReports(void *p) {
      delete [] ((::MReadReports*)p);
   }
   static void destruct_MReadReports(void *p) {
      typedef ::MReadReports current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadReports

//______________________________________________________________________________
void MReadMarsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadMarsFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadMarsFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadMarsFile::Class(),this);
   }
}

//______________________________________________________________________________
void MReadMarsFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadMarsFile.
      TClass *R__cl = ::MReadMarsFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParList", &fParList);
      MReadTree::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MReadMarsFile(void *p) {
      return  p ? new(p) ::MReadMarsFile : new ::MReadMarsFile;
   }
   static void *newArray_MReadMarsFile(Long_t nElements, void *p) {
      return p ? new(p) ::MReadMarsFile[nElements] : new ::MReadMarsFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_MReadMarsFile(void *p) {
      delete ((::MReadMarsFile*)p);
   }
   static void deleteArray_MReadMarsFile(void *p) {
      delete [] ((::MReadMarsFile*)p);
   }
   static void destruct_MReadMarsFile(void *p) {
      typedef ::MReadMarsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadMarsFile

//______________________________________________________________________________
void MReadFiles::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadFiles.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadFiles::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadFiles::Class(),this);
   }
}

//______________________________________________________________________________
void MReadFiles::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadFiles.
      TClass *R__cl = ::MReadFiles::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileNames", &fFileNames);
      R__insp.InspectMember(fFileNames, "fFileNames.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumFile", &fNumFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumLine", &fNumLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParList", &fParList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIn", &fIn);
      MRead::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MReadFiles(void *p) {
      delete ((::MReadFiles*)p);
   }
   static void deleteArray_MReadFiles(void *p) {
      delete [] ((::MReadFiles*)p);
   }
   static void destruct_MReadFiles(void *p) {
      typedef ::MReadFiles current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadFiles

//______________________________________________________________________________
void MReadScanFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadScanFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadScanFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadScanFile::Class(),this);
   }
}

//______________________________________________________________________________
void MReadScanFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadScanFile.
      TClass *R__cl = ::MReadScanFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fList", &fList);
      R__insp.InspectMember(fList, "fList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      MReadFiles::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MReadScanFile(void *p) {
      return  p ? new(p) ::MReadScanFile : new ::MReadScanFile;
   }
   static void *newArray_MReadScanFile(Long_t nElements, void *p) {
      return p ? new(p) ::MReadScanFile[nElements] : new ::MReadScanFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_MReadScanFile(void *p) {
      delete ((::MReadScanFile*)p);
   }
   static void deleteArray_MReadScanFile(void *p) {
      delete [] ((::MReadScanFile*)p);
   }
   static void destruct_MReadScanFile(void *p) {
      typedef ::MReadScanFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadScanFile

//______________________________________________________________________________
void MRootFileBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class MRootFileBranch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MRootFileBranch::Class(),this);
   } else {
      R__b.WriteClassBuffer(MRootFileBranch::Class(),this);
   }
}

//______________________________________________________________________________
void MRootFileBranch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MRootFileBranch.
      TClass *R__cl = ::MRootFileBranch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMust", &fMust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxEntries", &fMaxEntries);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MRootFileBranch(void *p) {
      return  p ? new(p) ::MRootFileBranch : new ::MRootFileBranch;
   }
   static void *newArray_MRootFileBranch(Long_t nElements, void *p) {
      return p ? new(p) ::MRootFileBranch[nElements] : new ::MRootFileBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_MRootFileBranch(void *p) {
      delete ((::MRootFileBranch*)p);
   }
   static void deleteArray_MRootFileBranch(void *p) {
      delete [] ((::MRootFileBranch*)p);
   }
   static void destruct_MRootFileBranch(void *p) {
      typedef ::MRootFileBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MRootFileBranch

//______________________________________________________________________________
void MWriteFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MWriteFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MWriteFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MWriteFile::Class(),this);
   }
}

//______________________________________________________________________________
void MWriteFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MWriteFile.
      TClass *R__cl = ::MWriteFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MWriteFile(void *p) {
      delete ((::MWriteFile*)p);
   }
   static void deleteArray_MWriteFile(void *p) {
      delete [] ((::MWriteFile*)p);
   }
   static void destruct_MWriteFile(void *p) {
      typedef ::MWriteFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MWriteFile

//______________________________________________________________________________
void MWriteAsciiFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MWriteAsciiFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MWriteAsciiFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MWriteAsciiFile::Class(),this);
   }
}

//______________________________________________________________________________
void MWriteAsciiFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MWriteAsciiFile.
      TClass *R__cl = ::MWriteAsciiFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameFile", &fNameFile);
      R__insp.InspectMember(fNameFile, "fNameFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fList", &fList);
      R__insp.InspectMember(fList, "fList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAutoDel", &fAutoDel);
      R__insp.InspectMember(fAutoDel, "fAutoDel.");
      MWriteFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MWriteAsciiFile(void *p) {
      delete ((::MWriteAsciiFile*)p);
   }
   static void deleteArray_MWriteAsciiFile(void *p) {
      delete [] ((::MWriteAsciiFile*)p);
   }
   static void destruct_MWriteAsciiFile(void *p) {
      typedef ::MWriteAsciiFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MWriteAsciiFile

//______________________________________________________________________________
void MWriteRootFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MWriteRootFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MWriteRootFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MWriteRootFile::Class(),this);
   }
}

//______________________________________________________________________________
void MWriteRootFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MWriteRootFile.
      TClass *R__cl = ::MWriteRootFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranches", &fBranches);
      R__insp.InspectMember(fBranches, "fBranches.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrees", &fTrees);
      R__insp.InspectMember(fTrees, "fTrees.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCopies", &fCopies);
      R__insp.InspectMember(fCopies, "fCopies.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSplitRule", &fSplitRule);
      R__insp.InspectMember(fSplitRule, "fSplitRule.");
      MWriteFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MWriteRootFile(void *p) {
      return  p ? new(p) ::MWriteRootFile : new ::MWriteRootFile;
   }
   static void *newArray_MWriteRootFile(Long_t nElements, void *p) {
      return p ? new(p) ::MWriteRootFile[nElements] : new ::MWriteRootFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_MWriteRootFile(void *p) {
      delete ((::MWriteRootFile*)p);
   }
   static void deleteArray_MWriteRootFile(void *p) {
      delete [] ((::MWriteRootFile*)p);
   }
   static void destruct_MWriteRootFile(void *p) {
      typedef ::MWriteRootFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MWriteRootFile

//______________________________________________________________________________
void MWriteFitsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class MWriteFitsFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MWriteFitsFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(MWriteFitsFile::Class(),this);
   }
}

//______________________________________________________________________________
void MWriteFitsFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MWriteFitsFile.
      TClass *R__cl = ::MWriteFitsFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iTopFitsGroup", (void*)&iTopFitsGroup);
      R__insp.InspectMember("map<MUniqueFileId,MTopFitsGroup,less<MUniqueFileId>,allocator<pair<const MUniqueFileId,MTopFitsGroup> > >::iterator", (void*)&iTopFitsGroup, "iTopFitsGroup.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitsTables", (void*)&fFitsTables);
      R__insp.InspectMember("map<TString,ofits*>", (void*)&fFitsTables, "fFitsTables.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClHelper", (void*)&fClHelper);
      R__insp.InspectMember("map<TString,std::list<MArrayHelperBase*> >", (void*)&fClHelper, "fClHelper.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubTables", (void*)&fSubTables);
      R__insp.InspectMember("map<TString,std::map<TString,MFitsSubTable> >", (void*)&fSubTables, "fSubTables.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataPointers", (void*)&fDataPointers);
      R__insp.InspectMember("map<TString,std::vector<void*> >", (void*)&fDataPointers, "fDataPointers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeChars", (void*)&fTypeChars);
      R__insp.InspectMember("map<TString,std::vector<char> >", (void*)&fTypeChars, "fTypeChars.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColSizes", (void*)&fColSizes);
      R__insp.InspectMember("map<TString,std::vector<uint32_t> >", (void*)&fColSizes, "fColSizes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColWidth", (void*)&fColWidth);
      R__insp.InspectMember("map<TString,std::vector<uint32_t> >", (void*)&fColWidth, "fColWidth.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTableObjectCreated", (void*)&fTableObjectCreated);
      R__insp.InspectMember("map<TString,bool>", (void*)&fTableObjectCreated, "fTableObjectCreated.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTableHeaderWritten", (void*)&fTableHeaderWritten);
      R__insp.InspectMember("map<TString,bool>", (void*)&fTableHeaderWritten, "fTableHeaderWritten.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRule", &fRule);
      R__insp.InspectMember(fRule, "fRule.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOpenOption", &fOpenOption);
      R__insp.InspectMember(fOpenOption, "fOpenOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupName", &fGroupName);
      R__insp.InspectMember(fGroupName, "fGroupName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeaderKeys", (void*)&fHeaderKeys);
      R__insp.InspectMember("vector<ofits::Key>", (void*)&fHeaderKeys, "fHeaderKeys.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVetoedColumns", (void*)&fVetoedColumns);
      R__insp.InspectMember("vector<std::string>", (void*)&fVetoedColumns, "fVetoedColumns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesPerSamples", (void*)&fBytesPerSamples);
      R__insp.InspectMember("map<std::string,uint32_t>", (void*)&fBytesPerSamples, "fBytesPerSamples.", false);
      MWriteFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MWriteFitsFile(void *p) {
      delete ((::MWriteFitsFile*)p);
   }
   static void deleteArray_MWriteFitsFile(void *p) {
      delete [] ((::MWriteFitsFile*)p);
   }
   static void destruct_MWriteFitsFile(void *p) {
      typedef ::MWriteFitsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MWriteFitsFile

//______________________________________________________________________________
void MMatrix::Streamer(TBuffer &R__b)
{
   // Stream an object of class MMatrix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MMatrix::Class(),this);
   } else {
      R__b.WriteClassBuffer(MMatrix::Class(),this);
   }
}

//______________________________________________________________________________
void MMatrix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MMatrix.
      TClass *R__cl = ::MMatrix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", (void*)&fM);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&fM, "fM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDelimiter", &fDelimiter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment", &fComment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLineNumber", &fLineNumber);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MMatrix(void *p) {
      delete ((::MMatrix*)p);
   }
   static void deleteArray_MMatrix(void *p) {
      delete [] ((::MMatrix*)p);
   }
   static void destruct_MMatrix(void *p) {
      typedef ::MMatrix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MMatrix

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "/home/sebastian/CERN_root/build_5.34.36/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "/home/sebastian/CERN_root/build_5.34.36/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double> >

/********************************************************
* FileIOCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableFileIOCint();

extern "C" void G__set_cpp_environmentFileIOCint() {
  G__cpp_reset_tagtableFileIOCint();
}
#include <new>
extern "C" int G__cpp_dllrevFileIOCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MRead */
static int G__FileIOCint_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((MRead*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MRead*) G__getstructoffset())->GetFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MRead*) G__getstructoffset())->GetFullFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MRead*) G__getstructoffset())->Rewind());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) MRead::IsFileValid((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRead*) G__getstructoffset())->SetSelector((MFilter*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MRead*) G__getstructoffset())->GetSelector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MRead*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MRead*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MRead*) G__getstructoffset())->AddFiles(*(MDirIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MRead::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRead::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MRead::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MRead::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRead*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRead::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MRead::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRead::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MRead::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MRead G__TMRead;
static int G__FileIOCint_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MRead*) (soff+(sizeof(MRead)*i)))->~G__TMRead();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MRead*) (soff))->~G__TMRead();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MChain */
static int G__FileIOCint_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MChain[n];
     } else {
       p = new((void*) gvp) MChain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MChain;
     } else {
       p = new((void*) gvp) MChain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MChain* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MChain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MChain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MChain((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MChain((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MChain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MChain*) G__getstructoffset())->ResetTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MChain*) G__getstructoffset())->LoadTree((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const MChain*) G__getstructoffset())->GetLastError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MChain*) G__getstructoffset())->HasFatalError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MChain*) G__getstructoffset())->HasError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MChain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MChain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MChain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MChain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MChain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MChain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MChain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MChain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_249_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MChain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MChain G__TMChain;
static int G__FileIOCint_249_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MChain*) (soff+(sizeof(MChain)*i)))->~G__TMChain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MChain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MChain*) (soff))->~G__TMChain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadTree */
static int G__FileIOCint_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadTree((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MReadTree((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadTree[n];
       } else {
         p = new((void*) gvp) MReadTree[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadTree;
       } else {
         p = new((void*) gvp) MReadTree;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadTree(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MReadTree(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadTree(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MReadTree(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MReadTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadTree((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MReadTree((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) MReadTree::IsFileValid((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->SortFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->DisableAutoScheme();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->EnableBranch((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->VetoBranch((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->DecEventNum((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->DecEventNum());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->IncEventNum((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->IncEventNum());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->SetEventNum((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MReadTree*) G__getstructoffset())->GetNumEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MReadTree*) G__getstructoffset())->GetFileIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MReadTree*) G__getstructoffset())->GetNumFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->AddNotify((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MReadTree*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MReadTree*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MReadTree*) G__getstructoffset())->AddFiles(*(MReadTree*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MReadTree*) G__getstructoffset())->AddFiles(*(MDirIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MReadTree*) G__getstructoffset())->AddFriend(*(TChain*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_253_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadTree G__TMReadTree;
static int G__FileIOCint_253_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadTree*) (soff+(sizeof(MReadTree)*i)))->~G__TMReadTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadTree*) (soff))->~G__TMReadTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadReports */
static int G__FileIOCint_254_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadReports* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadReports[n];
     } else {
       p = new((void*) gvp) MReadReports[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadReports;
     } else {
       p = new((void*) gvp) MReadReports;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadReports));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MReadReports*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (MReadReports::Type_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MReadReports*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MReadReports*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadReports*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]), (MReadReports::Type_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadReports*) G__getstructoffset())->AddToBranchList((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MReadReports*) G__getstructoffset())->EnableAutoScheme((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MReadReports*) G__getstructoffset())->EnableAutoScheme();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MReadReports*) G__getstructoffset())->GetReader((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadReports::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadReports::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadReports::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadReports::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadReports*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadReports::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadReports::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadReports::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_254_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadReports::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadReports G__TMReadReports;
static int G__FileIOCint_254_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadReports*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadReports*) (soff+(sizeof(MReadReports)*i)))->~G__TMReadReports();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadReports*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadReports*) (soff))->~G__TMReadReports();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadFiles */
static int G__FileIOCint_257_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadFiles*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadFiles::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadFiles::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadFiles::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadFiles::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadFiles*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadFiles::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadFiles::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadFiles::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_257_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadFiles::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadFiles G__TMReadFiles;
static int G__FileIOCint_257_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadFiles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadFiles*) (soff+(sizeof(MReadFiles)*i)))->~G__TMReadFiles();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadFiles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadFiles*) (soff))->~G__TMReadFiles();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadMarsFile */
static int G__FileIOCint_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadMarsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile[n];
     } else {
       p = new((void*) gvp) MReadMarsFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile;
     } else {
       p = new((void*) gvp) MReadMarsFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadMarsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MReadMarsFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MReadMarsFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MReadMarsFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadMarsFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MReadMarsFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) MReadMarsFile::IsFileValid((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadMarsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadMarsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadMarsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadMarsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadMarsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadMarsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadMarsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadMarsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_262_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadMarsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadMarsFile G__TMReadMarsFile;
static int G__FileIOCint_262_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadMarsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadMarsFile*) (soff+(sizeof(MReadMarsFile)*i)))->~G__TMReadMarsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadMarsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadMarsFile*) (soff))->~G__TMReadMarsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadScanFile */
static int G__FileIOCint_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadScanFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadScanFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MReadScanFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadScanFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MReadScanFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadScanFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MReadScanFile((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadScanFile[n];
       } else {
         p = new((void*) gvp) MReadScanFile[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadScanFile;
       } else {
         p = new((void*) gvp) MReadScanFile;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadScanFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadScanFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadScanFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadScanFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadScanFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadScanFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadScanFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadScanFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadScanFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadScanFile G__TMReadScanFile;
static int G__FileIOCint_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadScanFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadScanFile*) (soff+(sizeof(MReadScanFile)*i)))->~G__TMReadScanFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadScanFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadScanFile*) (soff))->~G__TMReadScanFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MWriteFile */
static int G__FileIOCint_264_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MWriteFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MWriteFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MWriteFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_264_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MWriteFile G__TMWriteFile;
static int G__FileIOCint_264_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MWriteFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MWriteFile*) (soff+(sizeof(MWriteFile)*i)))->~G__TMWriteFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MWriteFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MWriteFile*) (soff))->~G__TMWriteFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MWriteAsciiFile */
static int G__FileIOCint_266_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteAsciiFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteAsciiFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile(
(const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile((const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile((const char*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteAsciiFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MWriteAsciiFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumn(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumn((MParContainer*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumn((MParContainer*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumn((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumns(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteAsciiFile*) G__getstructoffset())->AddColumns((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MWriteAsciiFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteAsciiFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MWriteAsciiFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MWriteAsciiFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteAsciiFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteAsciiFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteAsciiFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteAsciiFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_266_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteAsciiFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MWriteAsciiFile G__TMWriteAsciiFile;
static int G__FileIOCint_266_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MWriteAsciiFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MWriteAsciiFile*) (soff+(sizeof(MWriteAsciiFile)*i)))->~G__TMWriteAsciiFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MWriteAsciiFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MWriteAsciiFile*) (soff))->~G__TMWriteAsciiFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MRootFileBranch */
static int G__FileIOCint_267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MRootFileBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch[n];
     } else {
       p = new((void*) gvp) MRootFileBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch;
     } else {
       p = new((void*) gvp) MRootFileBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MRootFileBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     } else {
       p = new((void*) gvp) MRootFileBranch(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MRootFileBranch(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MRootFileBranch((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MRootFileBranch((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MRootFileBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch(
(MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     } else {
       p = new((void*) gvp) MRootFileBranch(
(MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch(
(MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MRootFileBranch(
(MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MRootFileBranch((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MRootFileBranch((MParContainer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MRootFileBranch((MParContainer*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MRootFileBranch*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MRootFileBranch*) G__getstructoffset())->GetContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((MRootFileBranch*) G__getstructoffset())->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MRootFileBranch*) G__getstructoffset())->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MRootFileBranch*) G__getstructoffset())->GetContName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MRootFileBranch*) G__getstructoffset())->MustHave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const MRootFileBranch*) G__getstructoffset())->GetMaxEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRootFileBranch*) G__getstructoffset())->SetContainer((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRootFileBranch*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRootFileBranch*) G__getstructoffset())->SetBranch((TBranch*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MRootFileBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRootFileBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MRootFileBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MRootFileBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MRootFileBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRootFileBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MRootFileBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MRootFileBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_267_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MRootFileBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FileIOCint_267_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MRootFileBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MRootFileBranch(*(MRootFileBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MRootFileBranch G__TMRootFileBranch;
static int G__FileIOCint_267_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MRootFileBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MRootFileBranch*) (soff+(sizeof(MRootFileBranch)*i)))->~G__TMRootFileBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MRootFileBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MRootFileBranch*) (soff))->~G__TMRootFileBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FileIOCint_267_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MRootFileBranch* dest = (MRootFileBranch*) G__getstructoffset();
   *dest = *(MRootFileBranch*) libp->para[0].ref;
   const MRootFileBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MWriteRootFile */
static int G__FileIOCint_268_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile[n];
     } else {
       p = new((void*) gvp) MWriteRootFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile;
     } else {
       p = new((void*) gvp) MWriteRootFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile((const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteRootFile((const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteRootFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteRootFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteRootFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MWriteRootFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteRootFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MWriteRootFile*) G__getstructoffset())->AddCopySource((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteRootFile*) G__getstructoffset())->AddCopySource((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteRootFile*) G__getstructoffset())->AddCopySource((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteRootFile*) G__getstructoffset())->AddCopySource((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MWriteRootFile*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteRootFile*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MWriteRootFile*) G__getstructoffset())->cd((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MWriteRootFile*) G__getstructoffset())->cd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MWriteRootFile::SubstituteName((const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MWriteRootFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteRootFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MWriteRootFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MWriteRootFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteRootFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteRootFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteRootFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteRootFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_268_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteRootFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MWriteRootFile G__TMWriteRootFile;
static int G__FileIOCint_268_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MWriteRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MWriteRootFile*) (soff+(sizeof(MWriteRootFile)*i)))->~G__TMWriteRootFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MWriteRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MWriteRootFile*) (soff))->~G__TMWriteRootFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MWriteFitsFile */
static int G__FileIOCint_413_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MWriteFitsFile*) G__getstructoffset())->VetoColumn(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MWriteFitsFile*) G__getstructoffset())->SetBytesPerSample(*(string*) libp->para[0].ref, (uint32_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteFitsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile((const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteFitsFile((const char*) G__int(libp->para[0]), (MWriteFitsFile::FILE_MODE) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MWriteFitsFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MWriteFitsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MWriteFitsFile(
(const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MWriteFitsFile((const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MWriteFitsFile((const Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteFitsFile*) G__getstructoffset())->AddContainer((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MWriteFitsFile*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MWriteFitsFile*) G__getstructoffset())->AddTree((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MWriteFitsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFitsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MWriteFitsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MWriteFitsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MWriteFitsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFitsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteFitsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MWriteFitsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MWriteFitsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MWriteFitsFile*) G__getstructoffset())->GetFitsString(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_413_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MWriteFitsFile*) G__getstructoffset())->GetFitsString(*(float*) G__Floatref(&libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MWriteFitsFile G__TMWriteFitsFile;
static int G__FileIOCint_413_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MWriteFitsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MWriteFitsFile*) (soff+(sizeof(MWriteFitsFile)*i)))->~G__TMWriteFitsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MWriteFitsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MWriteFitsFile*) (soff))->~G__TMWriteFitsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MMatrix */
static int G__FileIOCint_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMatrix* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MMatrix((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MMatrix((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FileIOCintLN_MMatrix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MMatrix*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MMatrix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMatrix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MMatrix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMatrix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MMatrix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMatrix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMatrix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMatrix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FileIOCint_497_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMatrix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MMatrix G__TMMatrix;
static int G__FileIOCint_497_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MMatrix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MMatrix*) (soff+(sizeof(MMatrix)*i)))->~G__TMMatrix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MMatrix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MMatrix*) (soff))->~G__TMMatrix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MRead */

/* MChain */

/* MReadTree */

/* MReadReports */

/* MReadFiles */

/* MReadMarsFile */

/* MReadScanFile */

/* MWriteFile */

/* MWriteAsciiFile */

/* MRootFileBranch */

/* MWriteRootFile */

/* MWriteFitsFile */

/* MMatrix */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncFileIOCint {
 public:
  G__Sizep2memfuncFileIOCint(): p(&G__Sizep2memfuncFileIOCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncFileIOCint::*p)();
};

size_t G__get_sizep2memfuncFileIOCint()
{
  G__Sizep2memfuncFileIOCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceFileIOCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MRead))) {
     MRead *G__Lderived;
     G__Lderived=(MRead*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MChain))) {
     MChain *G__Lderived;
     G__Lderived=(MChain*)0x1000;
     {
       TChain *G__Lpbase=(TChain*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TChain),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain),G__get_linked_tagnum(&G__FileIOCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree))) {
     MReadTree *G__Lderived;
     G__Lderived=(MReadTree*)0x1000;
     {
       MRead *G__Lpbase=(MRead*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),G__get_linked_tagnum(&G__FileIOCintLN_MRead),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports))) {
     MReadReports *G__Lderived;
     G__Lderived=(MReadReports*)0x1000;
     {
       MRead *G__Lpbase=(MRead*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports),G__get_linked_tagnum(&G__FileIOCintLN_MRead),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles))) {
     MReadFiles *G__Lderived;
     G__Lderived=(MReadFiles*)0x1000;
     {
       MRead *G__Lpbase=(MRead*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),G__get_linked_tagnum(&G__FileIOCintLN_MRead),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile))) {
     MReadMarsFile *G__Lderived;
     G__Lderived=(MReadMarsFile*)0x1000;
     {
       MReadTree *G__Lpbase=(MReadTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MRead *G__Lpbase=(MRead*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_MRead),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile))) {
     MReadScanFile *G__Lderived;
     G__Lderived=(MReadScanFile*)0x1000;
     {
       MReadFiles *G__Lpbase=(MReadFiles*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MRead *G__Lpbase=(MRead*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_MRead),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile))) {
     MWriteFile *G__Lderived;
     G__Lderived=(MWriteFile*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile))) {
     MWriteAsciiFile *G__Lderived;
     G__Lderived=(MWriteAsciiFile*)0x1000;
     {
       MWriteFile *G__Lpbase=(MWriteFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile),G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch))) {
     MRootFileBranch *G__Lderived;
     G__Lderived=(MRootFileBranch*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch),G__get_linked_tagnum(&G__FileIOCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile))) {
     MWriteRootFile *G__Lderived;
     G__Lderived=(MWriteRootFile*)0x1000;
     {
       MWriteFile *G__Lpbase=(MWriteFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile),G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile))) {
     MWriteFitsFile *G__Lderived;
     G__Lderived=(MWriteFitsFile*)0x1000;
     {
       MWriteFile *G__Lpbase=(MWriteFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile),G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile),G__get_linked_tagnum(&G__FileIOCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile),G__get_linked_tagnum(&G__FileIOCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FileIOCintLN_MMatrix))) {
     MMatrix *G__Lderived;
     G__Lderived=(MMatrix*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MMatrix),G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FileIOCintLN_MMatrix),G__get_linked_tagnum(&G__FileIOCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableFileIOCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint16_t>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned short>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Entry>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Entry>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,fits::Entry>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,fits::Entry,less<string> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,fits::Table::Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,fits::Table::Column,less<string> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fits::Table::Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<void*,Table::Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_pairlEvoidmUcOfitscLcLTablecLcLColumngR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Address>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<void*,fits::Table::Column> >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("unordered_map<std::string,void*>",117,G__get_linked_tagnum(&G__FileIOCintLN_unordered_maplEstringcOvoidmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("unordered_map<string,void*>",117,G__get_linked_tagnum(&G__FileIOCintLN_unordered_maplEstringcOvoidmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<char> >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char> >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char,allocator<char> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Key>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ofits::Key>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Table::Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ofits::Table::Column>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__FileIOCintLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,int>",117,G__get_linked_tagnum(&G__FileIOCintLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<MUniqueFileId,MTopFitsGroup>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<MUniqueFileId,MTopFitsGroup,less<MUniqueFileId> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ofits*>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,ofits*,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<MArrayHelperBase*>",117,G__get_linked_tagnum(&G__FileIOCintLN_listlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::list<MArrayHelperBase*> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<MArrayHelperBase*,allocator<MArrayHelperBase*> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<MArrayHelperBase*,allocator<MArrayHelperBase*> >,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MFitsSubTable>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MFitsSubTable,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::map<TString,MFitsSubTable> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,map<TString,MFitsSubTable,less<TString>,allocator<pair<const TString,MFitsSubTable> > > >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,map<TString,MFitsSubTable,less<TString>,allocator<pair<const TString,MFitsSubTable> > >,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<void*>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::vector<void*> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<void*,allocator<void*> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<void*,allocator<void*> >,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::vector<char> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<char,allocator<char> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<char,allocator<char> >,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint32_t>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::vector<uint32_t> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<unsigned int,allocator<unsigned int> >,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,bool>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,bool,less<TString> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,uint32_t>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,uint32_t>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int>",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int,less<string> >",117,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MRead */
static void G__setup_memvarMRead(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead));
   { MRead *p; p=(MRead*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MFilter),-1,-1,4,"fSelector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MChain */
static void G__setup_memvarMChain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain));
   { MChain *p; p=(MChain*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCannotAccessTree=%lldLL",(long long)MChain::kCannotAccessTree).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCannotAccessFile=%lldLL",(long long)MChain::kCannotAccessFile).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kOutOfRange=%lldLL",(long long)MChain::kOutOfRange).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoError=%lldLL",(long long)MChain::kNoError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MChaincLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFatalError=%lldLL",(long long)MChain::kFatalError).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNotified=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fLastError=",0,"<0: LoadTree failed, =0: LoadTree was ok, >0: Notify failed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadTree */
static void G__setup_memvarMReadTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree));
   { MReadTree *p; p=(MReadTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MChain),-1,-1,4,"fChain=",0,"Pointer to tree==fTree (only if fTree inherits from MChain)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TTree),-1,-1,4,"fTree=",0,"Pointer to tree");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEntry=",0,"Number of actual entry in chain");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEntries=",0,"Number of Events in chain");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBranchChoosing=",0,"Flag for branch choosing method");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAutoEnable=",0,"Flag for auto enabeling scheme");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fVetoList=",0,"-> List of Branches which are not allowed to get enabled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fNotify=",0,"-> List of TObjects to notify when switching files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MTaskList),-1,-1,4,"fTaskList=",0,"Tasklist to set StreamId");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fParList=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadTreecLcLdA),-1,-2,4,"kChainWasChanged=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadTreecLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadReports */
static void G__setup_memvarMReadReports(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports));
   { MReadReports *p; p=(MReadReports*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLType_t),-1,-2,1,G__FastAllocString(2048).Format("kStandard=%lldLL",(long long)MReadReports::kStandard).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLType_t),-1,-2,1,G__FastAllocString(2048).Format("kMaster=%lldLL",(long long)MReadReports::kMaster).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLType_t),-1,-2,1,G__FastAllocString(2048).Format("kRequired=%lldLL",(long long)MReadReports::kRequired).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MTaskList),-1,-1,4,"fTrees=",0,"Hold the trees which are scheduled for reading");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fChains=",0,"Hold TChains to read the times in advance");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TArrayL),-1,-1,4,"fPosEntry=",0,"Store the position in each tree/chain");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TArrayL),-1,-1,4,"fPosTree=",0,"Number of Tree in file.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEnableAutoScheme=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumRequired=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLdA),-1,-2,4,"kHasMaster=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLdA),-1,-2,4,"kIsRequired=4194304LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MReadReportscLcLdA),-1,-2,4,"kIsProcessed=8388608LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadFiles */
static void G__setup_memvarMReadFiles(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles));
   { MReadFiles *p; p=(MReadFiles*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fFileNames=",0,"Array which stores the \\0-terminated filenames");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fFileName=",0,"Currently open file");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumFile=",0,"File number in sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumLine=",0,"Line number in file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MParList),-1,-1,4,"fParList=",0,"! Parlist for reinitialization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_izstream),-1,-1,2,"fIn=",0,"the inputfile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadMarsFile */
static void G__setup_memvarMReadMarsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile));
   { MReadMarsFile *p; p=(MReadMarsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MReadTree),-1,-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MParList),-1,-1,4,"fParList=",0,"! Parlist for reinitialization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadScanFile */
static void G__setup_memvarMReadScanFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile));
   { MReadScanFile *p; p=(MReadScanFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TList),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MWriteFile */
static void G__setup_memvarMWriteFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile));
   { MWriteFile *p; p=(MWriteFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MWriteAsciiFile */
static void G__setup_memvarMWriteAsciiFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile));
   { MWriteAsciiFile *p; p=(MWriteAsciiFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fOut=",0,"! ascii file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fNameFile=",0,"name of the ascii file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TObjArray),-1,-1,4,"fList=",0,"list of rules and containers to be written");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TObjArray),-1,-1,4,"fAutoDel=",0,"! List of object to be deleted in the destructor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MRootFileBranch */
static void G__setup_memvarMRootFileBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   { MRootFileBranch *p; p=(MRootFileBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TTree),-1,-1,4,"fTree=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TBranch),-1,-1,4,"fBranch=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_MParContainer),-1,-1,4,"fContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMust=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fMaxEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MWriteRootFile */
static void G__setup_memvarMWriteRootFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile));
   { MWriteRootFile *p; p=(MWriteRootFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-2,4,"gsDefName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-2,4,"gsDefTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TFile),-1,-1,4,"fOut=",0,"Current file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TObjArray),-1,-1,4,"fBranches=",0,"List of Branch setup (MRootFileBranch)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TObjArray),-1,-1,4,"fTrees=",0,"! List of trees");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TObjArray),-1,-1,4,"fCopies=",0,"Branches and tree to copy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fSplitRule=",0,"file splitting allowed if rule existing (done in ReInit)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFilecLcLdA),-1,-2,4,"kIsNotOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFilecLcLdA),-1,-2,4,"kFillTree=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFilecLcLdA),-1,-2,4,"kForced=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFilecLcLdA),-1,-2,4,"kIsNewTree=8388608LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MWriteFitsFile */
static void G__setup_memvarMWriteFitsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile));
   { MWriteFitsFile *p; p=(MWriteFitsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR),G__defined_typename("map<MUniqueFileId,MTopFitsGroup>"),-2,4,"fTopFitsGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgRcLcLiterator),-1,-1,4,"iTopFitsGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR),G__defined_typename("map<TString,ofits*>"),-1,4,"fFitsTables=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::list<MArrayHelperBase*> >"),-1,4,"fClHelper=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::map<TString,MFitsSubTable> >"),-1,4,"fSubTables=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::vector<void*> >"),-1,4,"fDataPointers=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::vector<char> >"),-1,4,"fTypeChars=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::vector<uint32_t> >"),-1,4,"fColSizes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<TString,std::vector<uint32_t> >"),-1,4,"fColWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR),G__defined_typename("map<TString,bool>"),-1,4,"fTableObjectCreated=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR),G__defined_typename("map<TString,bool>"),-1,4,"fTableHeaderWritten=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fRule=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fOpenOption=",0,"RECREATE or NEW");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fGroupName=",0,"name of top level group");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fTitle=",0,"title of top level group");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR),G__defined_typename("vector<ofits::Key>"),-1,4,"fHeaderKeys=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fVetoedColumns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),G__defined_typename("map<std::string,uint32_t>"),-1,4,"fBytesPerSamples=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFilecLcLFILE_MODE),-1,-2,1,G__FastAllocString(2048).Format("kMultiFiles=%lldLL",(long long)MWriteFitsFile::kMultiFiles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFilecLcLFILE_MODE),-1,-2,1,G__FastAllocString(2048).Format("kSingleFile=%lldLL",(long long)MWriteFitsFile::kSingleFile).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MMatrix */
static void G__setup_memvarMMatrix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FileIOCintLN_MMatrix));
   { MMatrix *p; p=(MMatrix*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fM)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"fM=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fDelimiter=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fComment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TString),-1,-1,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fLineNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FileIOCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarFileIOCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMRead(void) {
   /* MRead */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRead));
   G__memfunc_setup("GetEntries",1018,G__FileIOCint_178_0_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFileName",1057,G__FileIOCint_178_0_3, 117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullFileName",1460,G__FileIOCint_178_0_4, 117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Rewind",617,G__FileIOCint_178_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFileValid",1068,G__FileIOCint_178_0_6, 98, -1, G__defined_typename("Byte_t"), 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (Byte_t (*)(const char*))(&MRead::IsFileValid) ), 0);
   G__memfunc_setup("SetSelector",1133,G__FileIOCint_178_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MFilter' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelector",1121,G__FileIOCint_178_0_8, 85, G__get_linked_tagnum(&G__FileIOCintLN_MFilter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,G__FileIOCint_178_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - i - 'Int_t' 0 '-1' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFiles",764,G__FileIOCint_178_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'MDirIter' - 1 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FileIOCint_178_0_12, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MRead::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_178_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRead::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_178_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MRead::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_178_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MRead::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_178_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_178_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRead::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_178_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MRead::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_178_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRead::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_178_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MRead::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MRead", 583, G__FileIOCint_178_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMChain(void) {
   /* MChain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MChain));
   G__memfunc_setup("MChain",560,G__FileIOCint_249_0_1, 105, G__get_linked_tagnum(&G__FileIOCintLN_MChain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MChain",560,G__FileIOCint_249_0_2, 105, G__get_linked_tagnum(&G__FileIOCintLN_MChain), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetTree",915,G__FileIOCint_249_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNotify",933,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__FileIOCint_249_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTree",784,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastError",1214,G__FileIOCint_249_0_8, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasFatalError",1294,G__FileIOCint_249_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasError",806,G__FileIOCint_249_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_249_0_11, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MChain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_249_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MChain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_249_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MChain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_249_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MChain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_249_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_249_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MChain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_249_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MChain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_249_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MChain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_249_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MChain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MChain", 686, G__FileIOCint_249_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadTree(void) {
   /* MReadTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadTree));
   G__memfunc_setup("SetBranchStatus",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TList' - 10 - list g - 'Bool_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchStatus",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TObject' - 0 - branch g - 'Bool_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchStatus",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name g - 'Bool_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOwned",697,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'TChainElement' - 11 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBranches",1687,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TList' - 1 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCreateObj",1264,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__FileIOCintLN_MParContainer), -1, 0, 3, 1, 4, 0, 
"u 'MParList' - 1 - plist C - - 10 - cname "
"C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameterPtr",1527,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 3, 1, 4, 0, 
"u 'MParList' - 1 - plist u 'TString' - 11 - bb "
"C - - 10 - parname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchAddress",1600,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 4, 0, 
"u 'TBranch' - 1 - b Y - - 0 - ptr "
"C - - 10 - prefix C - - 10 '0' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableSubBranches",1796,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TBranch' - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableBranches",1389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'MParList' - 0 - plist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableBranchChoosing",1999,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBranchSize",1479,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReadyToSave",1395,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MReadTree",857,G__FileIOCint_253_0_15, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadTree), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReadTree",857,G__FileIOCint_253_0_16, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadTree), -1, 0, 4, 1, 1, 0, 
"C - - 10 - treename C - - 10 '0' filename "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFileValid",1068,G__FileIOCint_253_0_17, 98, -1, G__defined_typename("Byte_t"), 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (Byte_t (*)(const char*))(&MReadTree::IsFileValid) ), 0);
   G__memfunc_setup("SortFiles",923,G__FileIOCint_253_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableAutoScheme",1698,G__FileIOCint_253_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableBranch",1173,G__FileIOCint_253_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VetoBranch",1004,G__FileIOCint_253_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__FileIOCint_253_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecEventNum",1086,G__FileIOCint_253_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '1' dec", "decrease number of event (position in tree)", (void*) NULL, 0);
   G__memfunc_setup("IncEventNum",1100,G__FileIOCint_253_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '1' inc", "increase number of event (position in tree)", (void*) NULL, 0);
   G__memfunc_setup("SetEventNum",1118,G__FileIOCint_253_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nr", "set number of event (position in tree)", (void*) NULL, 0);
   G__memfunc_setup("GetNumEntry",1122,G__FileIOCint_253_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullFileName",1460,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileIndex",1176,G__FileIOCint_253_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumFiles",1091,G__FileIOCint_253_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNotify",898,G__FileIOCint_253_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOwner",823,G__FileIOCint_253_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 '-1' entries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFiles",764,G__FileIOCint_253_0_34, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'MReadTree' - 11 - read", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFiles",764,G__FileIOCint_253_0_35, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'MDirIter' - 1 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFriend",865,G__FileIOCint_253_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TChain' - 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FileIOCint_253_0_43, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_253_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_253_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_253_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_253_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_253_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_253_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_253_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_253_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadTree::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadTree", 983, G__FileIOCint_253_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadReports(void) {
   /* MReadReports */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadReports));
   G__memfunc_setup("ForceRequired",1328,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__FileIOCintLN_MTime), -1, 2, 1, 1, 4, 8, "U 'TChain' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextTime",1199,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextRequired",1633,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNext",800,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFullFileName",1460,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MReadReports",1208,G__FileIOCint_254_0_11, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadReports), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTree",665,G__FileIOCint_254_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - tree C - - 10 '0' time "
"i 'MReadReports::Type_t' - 0 'kStandard' master", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTree",665,G__FileIOCint_254_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - tree i 'MReadReports::Type_t' - 0 - master", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 '-1' entries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddToBranchList",1462,G__FileIOCint_254_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatistics",1592,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 '0' lvl g - 'Bool_t' 0 'kFALSE' title "
"d - 'Double_t' 0 '0' time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableAutoScheme",1589,G__FileIOCint_254_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' e", "Must be called BEFORE AddTree!", (void*) NULL, 0);
   G__memfunc_setup("GetReader",883,G__FileIOCint_254_0_18, 85, G__get_linked_tagnum(&G__FileIOCintLN_MReadTree), -1, 0, 1, 1, 1, 8, "C - - 10 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_254_0_19, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadReports::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_254_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadReports::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_254_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadReports::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_254_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadReports::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_254_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_254_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadReports::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_254_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadReports::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_254_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadReports::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_254_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadReports::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadReports", 1334, G__FileIOCint_254_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadFiles(void) {
   /* MReadFiles */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadFiles));
   G__memfunc_setup("AnalyzeHeader",1309,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ReadLine",772,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "u 'TString' - 1 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumLine",984,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenNextFile",1201,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFile",862,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname i - - 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,G__FileIOCint_257_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullFileName",1460,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FileIOCint_257_0_16, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadFiles::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_257_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadFiles::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_257_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadFiles::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_257_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadFiles::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_257_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_257_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadFiles::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_257_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadFiles::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_257_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadFiles::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_257_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadFiles::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadFiles", 1082, G__FileIOCint_257_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadMarsFile(void) {
   /* MReadMarsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile));
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MReadMarsFile",1244,G__FileIOCint_262_0_3, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReadMarsFile",1244,G__FileIOCint_262_0_4, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadMarsFile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - treename C - - 10 '0' filename "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFileValid",1068,G__FileIOCint_262_0_5, 98, -1, G__defined_typename("Byte_t"), 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (Byte_t (*)(const char*))(&MReadMarsFile::IsFileValid) ), 0);
   G__memfunc_setup("SortFiles",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 '-1' entries", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FileIOCint_262_0_9, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadMarsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_262_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadMarsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_262_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadMarsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_262_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadMarsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_262_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_262_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadMarsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_262_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadMarsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_262_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadMarsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_262_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadMarsFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadMarsFile", 1370, G__FileIOCint_262_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadScanFile(void) {
   /* MReadScanFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile));
   G__memfunc_setup("IsDelimiter",1115,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'TString' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDelimiter",1307,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalyzeHeader",1309,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'MParList' - 1 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadHeader",965,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MReadScanFile",1230,G__FileIOCint_263_0_7, 105, G__get_linked_tagnum(&G__FileIOCintLN_MReadScanFile), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' filename C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FileIOCint_263_0_9, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadScanFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_263_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadScanFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_263_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadScanFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_263_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadScanFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_263_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_263_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadScanFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_263_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadScanFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_263_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadScanFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_263_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadScanFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadScanFile", 1356, G__FileIOCint_263_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMWriteFile(void) {
   /* MWriteFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFile));
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFileOpen",974,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CheckAndWrite",1276,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetContainer",1219,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__FileIOCint_264_0_9, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MWriteFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_264_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_264_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MWriteFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_264_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MWriteFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_264_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_264_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_264_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_264_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_264_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MWriteFile", 1110, G__FileIOCint_264_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMWriteAsciiFile(void) {
   /* MWriteAsciiFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile));
   G__memfunc_setup("CheckAndWrite",1276,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFileOpen",974,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetContainer",1219,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"C - - 10 - filename C - - 10 - name "
"C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteAsciiFile",1473,G__FileIOCint_266_0_6, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - filename C - - 10 - contname "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteAsciiFile",1473,G__FileIOCint_266_0_7, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteAsciiFile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - filename U 'MParContainer' - 0 '0' cont "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddColumn",887,G__FileIOCint_266_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - rule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddColumn",887,G__FileIOCint_266_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'MParContainer' - 0 - cont u 'TString' - 10 '\"\"' member "
"d - 'Double_t' 0 '1' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddColumns",1002,G__FileIOCint_266_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddColumns",1002,G__FileIOCint_266_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MParContainer' - 0 - cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_266_0_12, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MWriteAsciiFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_266_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteAsciiFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_266_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MWriteAsciiFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_266_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MWriteAsciiFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_266_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_266_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteAsciiFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_266_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteAsciiFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_266_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteAsciiFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_266_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteAsciiFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MWriteAsciiFile", 1599, G__FileIOCint_266_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMRootFileBranch(void) {
   /* MRootFileBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name g - 'Bool_t' 0 - must", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MRootFileBranch",1471,G__FileIOCint_267_0_2, 105, G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MRootFileBranch",1471,G__FileIOCint_267_0_3, 105, G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch), -1, 0, 4, 1, 1, 0, 
"C - - 10 - cname C - - 10 '0' tname "
"g - 'Bool_t' 0 'kFALSE' must n - 'Long64_t' 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MRootFileBranch",1471,G__FileIOCint_267_0_4, 105, G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch), -1, 0, 4, 1, 1, 0, 
"U 'MParContainer' - 0 - cont C - - 10 '0' tname "
"g - 'Bool_t' 0 'kFALSE' must n - 'Long64_t' 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__FileIOCint_267_0_5, 85, G__get_linked_tagnum(&G__FileIOCintLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContainer",1219,G__FileIOCint_267_0_6, 85, G__get_linked_tagnum(&G__FileIOCintLN_MParContainer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAddress",998,G__FileIOCint_267_0_7, 89, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranch",878,G__FileIOCint_267_0_8, 85, G__get_linked_tagnum(&G__FileIOCintLN_TBranch), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContName",1077,G__FileIOCint_267_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MustHave",813,G__FileIOCint_267_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxEntries",1312,G__FileIOCint_267_0_11, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetContainer",1231,G__FileIOCint_267_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MParContainer' - 0 - cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__FileIOCint_267_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranch",890,G__FileIOCint_267_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TBranch' - 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_267_0_15, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MRootFileBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_267_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRootFileBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_267_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MRootFileBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_267_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MRootFileBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_267_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_267_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRootFileBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_267_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MRootFileBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_267_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MRootFileBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_267_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MRootFileBranch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MRootFileBranch", 1471, G__FileIOCint_267_0_27, (int) ('i'), G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch), -1, 0, 1, 1, 1, 0, "u 'MRootFileBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MRootFileBranch", 1597, G__FileIOCint_267_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FileIOCint_267_0_29, (int) ('u'), G__get_linked_tagnum(&G__FileIOCintLN_MRootFileBranch), -1, 1, 1, 1, 1, 0, "u 'MRootFileBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMWriteRootFile(void) {
   /* MWriteRootFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile));
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeFile",966,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__FileIOCintLN_TFile), -1, 0, 4, 1, 4, 0, 
"C - - 10 - name C - 'Option_t' 10 - option "
"C - - 10 - title i - 'Int_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyTree",811,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TTree' - 1 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeCopies",993,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "C - - 10 - oldname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckAndWrite",1276,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFileOpen",974,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetContainer",1219,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteRootFile",1404,G__FileIOCint_268_0_13, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteRootFile",1404,G__FileIOCint_268_0_14, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 10 - comp C - - 10 - rule "
"C - 'Option_t' 10 '\"RECREATE\"' opt C - - 10 '\"Untitled\"' ftitle "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteRootFile",1404,G__FileIOCint_268_0_15, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteRootFile), -1, 0, 6, 1, 1, 0, 
"C - - 10 - fname C - 'Option_t' 10 '\"RECREATE\"' opt "
"C - - 10 '\"Untitled\"' ftitle i - 'Int_t' 10 '2' comp "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddContainer",1196,G__FileIOCint_268_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - cname C - - 10 '0' tname "
"g - 'Bool_t' 0 'kTRUE' must n - 'Long64_t' 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddContainer",1196,G__FileIOCint_268_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'MParContainer' - 0 - cont C - - 10 '0' tname "
"g - 'Bool_t' 0 'kTRUE' must n - 'Long64_t' 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCopySource",1301,G__FileIOCint_268_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - tname C - - 10 '0' bname "
"g - 'Bool_t' 0 'kTRUE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCopySource",1301,G__FileIOCint_268_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - tname g - 'Bool_t' 0 - force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTree",665,G__FileIOCint_268_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name g - 'Bool_t' 0 'kTRUE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__FileIOCint_268_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '0' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubstituteName",1469,G__FileIOCint_268_0_24, 117, G__get_linked_tagnum(&G__FileIOCintLN_TString), -1, 0, 2, 3, 1, 0, 
"C - - 10 - regexp u 'TString' - 0 - fname", (char*)NULL, (void*) G__func2void( (TString (*)(const char*, TString))(&MWriteRootFile::SubstituteName) ), 0);
   G__memfunc_setup("Class",502,G__FileIOCint_268_0_25, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MWriteRootFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_268_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteRootFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_268_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MWriteRootFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_268_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MWriteRootFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_268_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_268_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteRootFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_268_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteRootFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_268_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteRootFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_268_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteRootFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MWriteRootFile", 1530, G__FileIOCint_268_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMWriteFitsFile(void) {
   /* MWriteFitsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile));
   G__memfunc_setup("DeleteArrayHelper",1714,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenTopLevelGroup",1738,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseTopLevelGroup",1838,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitColumns",1141,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 4, 0, 
"u 'TString' - 11 - tableName u 'TString' - 11 - parentVarName "
"U 'ofits' - 0 - fitsTable Y - - 0 - baseAdr "
"U 'TClass' - 0 - classDef", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSingleColumn",1636,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"u 'TString' - 11 - tableName h - 'uint32_t' 0 - count "
"u 'string' - 11 - typeName Y - - 0 - dataPointer "
"u 'string' - 11 - columnName u 'string' - 11 - unit "
"u 'string' - 11 - comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeOneRow",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 11 - tableName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitAttr",815,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"C - - 10 - attrName C - - 10 - dataType "
"Y - - 0 - var C - - 10 '0' unit "
"C - - 10 '0' comment U 'ofits' - 0 '0' outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFileOpen",974,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAndWrite",1276,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetContainer",1219,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupHeaderKeys",1526,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'MRawRunHeader' - 1 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trim",412,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FileIOCintLN_string), -1, 0, 1, 1, 4, 0, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VetoColumn",1036,G__FileIOCint_413_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'string' - 11 - colName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBytesPerSample",1724,G__FileIOCint_413_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - colName h - 'uint32_t' 0 - numBytes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteFitsFile",1390,G__FileIOCint_413_0_19, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile), -1, 0, 5, 1, 1, 0, 
"C - - 10 - fname i 'MWriteFitsFile::FILE_MODE' - 0 'kMultiFiles' fileMode "
"C - 'Option_t' 10 '\"RECREATE\"' opt C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWriteFitsFile",1390,G__FileIOCint_413_0_20, 105, G__get_linked_tagnum(&G__FileIOCintLN_MWriteFitsFile), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 10 - comp C - - 10 - rule "
"C - 'Option_t' 10 '\"RECREATE\"' option C - - 10 '\"Untitled\"' fTitle "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddContainer",1196,G__FileIOCint_413_0_21, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - cName C - - 10 '0' tName "
"g - 'Bool_t' 0 'kTRUE' must h - 'UInt_t' 0 '0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddContainer",1196,G__FileIOCint_413_0_22, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'MParContainer' - 0 - cont C - - 10 '0' tName "
"g - 'Bool_t' 0 'kTRUE' must h - 'UInt_t' 0 '0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTree",665,G__FileIOCint_413_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name g - 'Bool_t' 0 'kTRUE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_413_0_24, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MWriteFitsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_413_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFitsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_413_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MWriteFitsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_413_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MWriteFitsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_413_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_413_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFitsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_413_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteFitsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_413_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MWriteFitsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_413_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MWriteFitsFile::DeclFileLine) ), 0);
   G__memfunc_setup("GetFitsString",1325,G__FileIOCint_413_0_36, 117, G__get_linked_tagnum(&G__FileIOCintLN_string), -1, 0, 1, 1, 1, 0, "d - - 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitsString",1325,G__FileIOCint_413_0_37, 117, G__get_linked_tagnum(&G__FileIOCintLN_string), -1, 0, 1, 1, 1, 0, "f - - 11 - value", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MWriteFitsFile", 1516, G__FileIOCint_413_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMMatrix(void) {
   /* MMatrix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FileIOCintLN_MMatrix));
   G__memfunc_setup("MMatrix",706,G__FileIOCint_497_0_1, 105, G__get_linked_tagnum(&G__FileIOCintLN_MMatrix), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__FileIOCint_497_0_3, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pedantic_strtod",1607,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'string' - 0 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 10 - path_to_text_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is_empty_or_has_only_white_spaces",3524,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is_comment",1070,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove_leading_white_spaces",2847,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FileIOCintLN_string), -1, 0, 1, 1, 4, 8, "u 'string' - 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remove_tailing_white_spaces",2867,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__FileIOCintLN_string), -1, 0, 1, 1, 4, 8, "u 'string' - 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FileIOCint_497_0_12, 85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MMatrix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FileIOCint_497_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMatrix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FileIOCint_497_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MMatrix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FileIOCint_497_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MMatrix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FileIOCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FileIOCint_497_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FileIOCint_497_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMatrix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FileIOCint_497_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMatrix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FileIOCint_497_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMatrix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FileIOCint_497_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMatrix::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MMatrix", 832, G__FileIOCint_497_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncFileIOCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalFileIOCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcFileIOCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__FileIOCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__FileIOCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MFilter = { "MFilter" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MDirIter = { "MDirIter" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MRead = { "MRead" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MChain = { "MChain" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MChaincLcLdA = { "MChain::$" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_TChainElement = { "TChainElement" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MTaskList = { "MTaskList" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadTree = { "MReadTree" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadReports = { "MReadReports" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadTreecLcLdA = { "MReadTree::$" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_izstream = { "izstream" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadFiles = { "MReadFiles" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_TArrayL = { "TArrayL" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MTime = { "MTime" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadReportscLcLType_t = { "MReadReports::Type_t" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadReportscLcLdA = { "MReadReports::$" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadMarsFile = { "MReadMarsFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MReadScanFile = { "MReadScanFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteFile = { "MWriteFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteAsciiFile = { "MWriteAsciiFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MRootFileBranch = { "MRootFileBranch" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteRootFile = { "MWriteRootFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteRootFilecLcLdA = { "MWriteRootFile::$" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char,allocator<char> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR = { "map<string,fits::Entry,less<string>,allocator<pair<const string,fits::Entry> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR = { "map<string,fits::Table::Column,less<string>,allocator<pair<const string,fits::Table::Column> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR = { "vector<fits::Table::Column,allocator<fits::Table::Column> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgRcLcLiteratorgR = { "reverse_iterator<vector<fits::Table::Column,allocator<fits::Table::Column> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_pairlEvoidmUcOfitscLcLTablecLcLColumngR = { "pair<void*,fits::Table::Column>" , 115 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR = { "vector<pair<void*,fits::Table::Column>,allocator<pair<void*,fits::Table::Column> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<void*,fits::Table::Column>,allocator<pair<void*,fits::Table::Column> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_unordered_maplEstringcOvoidmUgR = { "unordered_map<string,void*>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR = { "vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_ofits = { "ofits" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR = { "vector<ofits::Key,allocator<ofits::Key> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ofits::Key,allocator<ofits::Key> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR = { "vector<ofits::Table::Column,allocator<ofits::Table::Column> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ofits::Table::Column,allocator<ofits::Table::Column> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__FileIOCintLN_MRawRunHeader = { "MRawRunHeader" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteFitsFile = { "MWriteFitsFile" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR = { "map<MUniqueFileId,MTopFitsGroup,less<MUniqueFileId>,allocator<pair<const MUniqueFileId,MTopFitsGroup> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgRcLcLiterator = { "map<MUniqueFileId,MTopFitsGroup,less<MUniqueFileId>,allocator<pair<const MUniqueFileId,MTopFitsGroup> > >::iterator" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR = { "map<TString,ofits*,less<TString>,allocator<pair<const TString,ofits*> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_listlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgR = { "list<MArrayHelperBase*,allocator<MArrayHelperBase*> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR = { "map<TString,list<MArrayHelperBase*,allocator<MArrayHelperBase*> >,less<TString>,allocator<pair<const TString,list<MArrayHelperBase*,allocator<MArrayHelperBase*> > > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgR = { "map<TString,MFitsSubTable,less<TString>,allocator<pair<const TString,MFitsSubTable> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR = { "map<TString,map<TString,MFitsSubTable,less<TString>,allocator<pair<const TString,MFitsSubTable> > >,less<TString>,allocator<pair<const TString,map<TString,MFitsSubTable,less<TString>,allocator<pair<const TString,MFitsSubTable> > > > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR = { "vector<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<void*,allocator<void*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR = { "map<TString,vector<void*,allocator<void*> >,less<TString>,allocator<pair<const TString,vector<void*,allocator<void*> > > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR = { "map<TString,vector<char,allocator<char> >,less<TString>,allocator<pair<const TString,vector<char,allocator<char> > > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR = { "map<TString,vector<unsigned int,allocator<unsigned int> >,less<TString>,allocator<pair<const TString,vector<unsigned int,allocator<unsigned int> > > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR = { "map<TString,bool,less<TString>,allocator<pair<const TString,bool> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR = { "map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_MWriteFitsFilecLcLFILE_MODE = { "MWriteFitsFile::FILE_MODE" , 101 , -1 };
G__linked_taginfo G__FileIOCintLN_MMatrix = { "MMatrix" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableFileIOCint() {
  G__FileIOCintLN_TClass.tagnum = -1 ;
  G__FileIOCintLN_TBuffer.tagnum = -1 ;
  G__FileIOCintLN_TMemberInspector.tagnum = -1 ;
  G__FileIOCintLN_TObject.tagnum = -1 ;
  G__FileIOCintLN_TNamed.tagnum = -1 ;
  G__FileIOCintLN_TString.tagnum = -1 ;
  G__FileIOCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__FileIOCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__FileIOCintLN_string.tagnum = -1 ;
  G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_TList.tagnum = -1 ;
  G__FileIOCintLN_TObjArray.tagnum = -1 ;
  G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__FileIOCintLN_TFile.tagnum = -1 ;
  G__FileIOCintLN_TEnv.tagnum = -1 ;
  G__FileIOCintLN_MParContainer.tagnum = -1 ;
  G__FileIOCintLN_MInputStreamID.tagnum = -1 ;
  G__FileIOCintLN_MFilter.tagnum = -1 ;
  G__FileIOCintLN_MParList.tagnum = -1 ;
  G__FileIOCintLN_MTask.tagnum = -1 ;
  G__FileIOCintLN_MDirIter.tagnum = -1 ;
  G__FileIOCintLN_MRead.tagnum = -1 ;
  G__FileIOCintLN_TAttFill.tagnum = -1 ;
  G__FileIOCintLN_TTree.tagnum = -1 ;
  G__FileIOCintLN_TBranch.tagnum = -1 ;
  G__FileIOCintLN_TAttLine.tagnum = -1 ;
  G__FileIOCintLN_TAttMarker.tagnum = -1 ;
  G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_TChain.tagnum = -1 ;
  G__FileIOCintLN_MChain.tagnum = -1 ;
  G__FileIOCintLN_MChaincLcLdA.tagnum = -1 ;
  G__FileIOCintLN_TChainElement.tagnum = -1 ;
  G__FileIOCintLN_MTaskList.tagnum = -1 ;
  G__FileIOCintLN_MReadTree.tagnum = -1 ;
  G__FileIOCintLN_MReadReports.tagnum = -1 ;
  G__FileIOCintLN_MReadTreecLcLdA.tagnum = -1 ;
  G__FileIOCintLN_izstream.tagnum = -1 ;
  G__FileIOCintLN_MReadFiles.tagnum = -1 ;
  G__FileIOCintLN_TArrayL.tagnum = -1 ;
  G__FileIOCintLN_MTime.tagnum = -1 ;
  G__FileIOCintLN_MReadReportscLcLType_t.tagnum = -1 ;
  G__FileIOCintLN_MReadReportscLcLdA.tagnum = -1 ;
  G__FileIOCintLN_MReadMarsFile.tagnum = -1 ;
  G__FileIOCintLN_MReadScanFile.tagnum = -1 ;
  G__FileIOCintLN_MWriteFile.tagnum = -1 ;
  G__FileIOCintLN_MWriteAsciiFile.tagnum = -1 ;
  G__FileIOCintLN_MRootFileBranch.tagnum = -1 ;
  G__FileIOCintLN_MWriteRootFile.tagnum = -1 ;
  G__FileIOCintLN_MWriteRootFilecLcLdA.tagnum = -1 ;
  G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_pairlEvoidmUcOfitscLcLTablecLcLColumngR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_unordered_maplEstringcOvoidmUgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_ofits.tagnum = -1 ;
  G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_pairlEstringcOintgR.tagnum = -1 ;
  G__FileIOCintLN_MRawRunHeader.tagnum = -1 ;
  G__FileIOCintLN_MWriteFitsFile.tagnum = -1 ;
  G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_listlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_MWriteFitsFilecLcLFILE_MODE.tagnum = -1 ;
  G__FileIOCintLN_MMatrix.tagnum = -1 ;
  G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableFileIOCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TString);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_string);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TList);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MFilter);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MTask);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MDirIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MRead),sizeof(MRead),-1,323842,"Base class for a reading task",G__setup_memvarMRead,G__setup_memfuncMRead);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TBranch);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MChain),sizeof(MChain),-1,323840,"Class derived from TChain to give access to Notify-return value",G__setup_memvarMChain,G__setup_memfuncMChain);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MChaincLcLdA);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TChainElement);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MTaskList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadTree),sizeof(MReadTree),-1,324864,"Reads a tree from file(s)",G__setup_memvarMReadTree,G__setup_memfuncMReadTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadReports),sizeof(MReadReports),-1,324864,"Reads events and reports from a root file ordered in time",G__setup_memvarMReadReports,G__setup_memfuncMReadReports);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadTreecLcLdA);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_izstream);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadFiles),sizeof(MReadFiles),-1,324868,"Base class to read a chain of files",G__setup_memvarMReadFiles,G__setup_memfuncMReadFiles);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_TArrayL);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MTime);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadReportscLcLType_t);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadReportscLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadMarsFile),sizeof(MReadMarsFile),-1,324864,"Reads a tree from file(s) and the information from the 'RunHeader'-tree",G__setup_memvarMReadMarsFile,G__setup_memfuncMReadMarsFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MReadScanFile),sizeof(MReadScanFile),-1,323840,"Reads files written with TTree::Scan",G__setup_memvarMReadScanFile,G__setup_memfuncMReadScanFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteFile),sizeof(MWriteFile),-1,323588,"Base class for tasks to write single containers to several output formats",G__setup_memvarMWriteFile,G__setup_memfuncMWriteFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteAsciiFile),sizeof(MWriteAsciiFile),-1,324608,"Class to write data into an ascii file",G__setup_memvarMWriteAsciiFile,G__setup_memfuncMWriteAsciiFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MRootFileBranch),sizeof(MRootFileBranch),-1,323840,"Storage container for MWriteRootFile to store TBranch informations",G__setup_memvarMRootFileBranch,G__setup_memfuncMRootFileBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteRootFile),sizeof(MWriteRootFile),-1,324864,"Task to write data into a root file",G__setup_memvarMWriteRootFile,G__setup_memfuncMWriteRootFile);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteRootFilecLcLdA);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEstringcOfitscLcLEntrycOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLEntrygRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEstringcOfitscLcLTablecLcLColumncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfitscLcLTablecLcLColumngRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEfitscLcLTablecLcLColumncOallocatorlEfitscLcLTablecLcLColumngRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_pairlEvoidmUcOfitscLcLTablecLcLColumngR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRcOallocatorlEpairlEvoidmUcOfitscLcLTablecLcLColumngRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_unordered_maplEstringcOvoidmUgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_ofits);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLKeycOallocatorlEofitscLcLKeygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEofitscLcLTablecLcLColumncOallocatorlEofitscLcLTablecLcLColumngRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MRawRunHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteFitsFile),sizeof(MWriteFitsFile),-1,324608,(char*)NULL,G__setup_memvarMWriteFitsFile,G__setup_memfuncMWriteFitsFile);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEMUniqueFileIdcOMTopFitsGroupcOlesslEMUniqueFileIdgRcOallocatorlEpairlEconstsPMUniqueFileIdcOMTopFitsGroupgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOofitsmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOofitsmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_listlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlEMArrayHelperBasemUcOallocatorlEMArrayHelperBasemUgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmaplETStringcOMFitsSubTablecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMFitsSubTablegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEvoidmUcOallocatorlEvoidmUgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOvectorlEcharcOallocatorlEchargRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplETStringcOboolcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_MWriteFitsFilecLcLFILE_MODE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FileIOCintLN_MMatrix),sizeof(MMatrix),-1,324608,"generic parameter container with text file parser",G__setup_memvarMMatrix,G__setup_memfuncMMatrix);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FileIOCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupFileIOCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupFileIOCint()");
  G__set_cpp_environmentFileIOCint();
  G__cpp_setup_tagtableFileIOCint();

  G__cpp_setup_inheritanceFileIOCint();

  G__cpp_setup_typetableFileIOCint();

  G__cpp_setup_memvarFileIOCint();

  G__cpp_setup_memfuncFileIOCint();
  G__cpp_setup_globalFileIOCint();
  G__cpp_setup_funcFileIOCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncFileIOCint();
  return;
}
class G__cpp_setup_initFileIOCint {
  public:
    G__cpp_setup_initFileIOCint() { G__add_setup_func("FileIOCint",(G__incsetup)(&G__cpp_setupFileIOCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initFileIOCint() { G__remove_setup_func("FileIOCint"); }
};
G__cpp_setup_initFileIOCint G__cpp_setup_initializerFileIOCint;

