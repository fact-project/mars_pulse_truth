//
// File generated by rootcint at Mon Nov 28 11:05:36 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BaseCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BaseCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace MARS {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MARS_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MARS", 0 /*version*/, "./MAGIC.h", 38,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MARS_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MARS_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace UTF8 {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void UTF8_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("UTF8", 0 /*version*/, "./MAGIC.h", 47,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &UTF8_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void UTF8_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void MArgsEntry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MArgsEntry(void *p);
   static void deleteArray_MArgsEntry(void *p);
   static void destruct_MArgsEntry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArgsEntry*)
   {
      ::MArgsEntry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArgsEntry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArgsEntry", ::MArgsEntry::Class_Version(), "./MArgs.h", 13,
                  typeid(::MArgsEntry), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArgsEntry::Dictionary, isa_proxy, 4,
                  sizeof(::MArgsEntry) );
      instance.SetDelete(&delete_MArgsEntry);
      instance.SetDeleteArray(&deleteArray_MArgsEntry);
      instance.SetDestructor(&destruct_MArgsEntry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArgsEntry*)
   {
      return GenerateInitInstanceLocal((::MArgsEntry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArgsEntry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArgs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MArgs(void *p);
   static void deleteArray_MArgs(void *p);
   static void destruct_MArgs(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArgs*)
   {
      ::MArgs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArgs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArgs", ::MArgs::Class_Version(), "./MArgs.h", 27,
                  typeid(::MArgs), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArgs::Dictionary, isa_proxy, 4,
                  sizeof(::MArgs) );
      instance.SetDelete(&delete_MArgs);
      instance.SetDeleteArray(&deleteArray_MArgs);
      instance.SetDestructor(&destruct_MArgs);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArgs*)
   {
      return GenerateInitInstanceLocal((::MArgs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArgs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MString_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MString(void *p = 0);
   static void *newArray_MString(Long_t size, void *p);
   static void delete_MString(void *p);
   static void deleteArray_MString(void *p);
   static void destruct_MString(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MString*)
   {
      ::MString *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MString >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MString", ::MString::Class_Version(), "./MString.h", 9,
                  typeid(::MString), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MString::Dictionary, isa_proxy, 4,
                  sizeof(::MString) );
      instance.SetNew(&new_MString);
      instance.SetNewArray(&newArray_MString);
      instance.SetDelete(&delete_MString);
      instance.SetDeleteArray(&deleteArray_MString);
      instance.SetDestructor(&destruct_MString);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MString*)
   {
      return GenerateInitInstanceLocal((::MString*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MString*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace MMath {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MMath_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MMath", 0 /*version*/, "./MMath.h", 17,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MMath_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MMath_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void MArrayD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MArrayD(void *p = 0);
   static void *newArray_MArrayD(Long_t size, void *p);
   static void delete_MArrayD(void *p);
   static void deleteArray_MArrayD(void *p);
   static void destruct_MArrayD(void *p);
   static void streamer_MArrayD(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArrayD*)
   {
      ::MArrayD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArrayD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArrayD", ::MArrayD::Class_Version(), "./MArrayD.h", 12,
                  typeid(::MArrayD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArrayD::Dictionary, isa_proxy, 0,
                  sizeof(::MArrayD) );
      instance.SetNew(&new_MArrayD);
      instance.SetNewArray(&newArray_MArrayD);
      instance.SetDelete(&delete_MArrayD);
      instance.SetDeleteArray(&deleteArray_MArrayD);
      instance.SetDestructor(&destruct_MArrayD);
      instance.SetStreamerFunc(&streamer_MArrayD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArrayD*)
   {
      return GenerateInitInstanceLocal((::MArrayD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArrayD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSpline3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MSpline3(void *p = 0);
   static void *newArray_MSpline3(Long_t size, void *p);
   static void delete_MSpline3(void *p);
   static void deleteArray_MSpline3(void *p);
   static void destruct_MSpline3(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSpline3*)
   {
      ::MSpline3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSpline3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSpline3", ::MSpline3::Class_Version(), "./MSpline3.h", 11,
                  typeid(::MSpline3), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSpline3::Dictionary, isa_proxy, 4,
                  sizeof(::MSpline3) );
      instance.SetNew(&new_MSpline3);
      instance.SetNewArray(&newArray_MSpline3);
      instance.SetDelete(&delete_MSpline3);
      instance.SetDeleteArray(&deleteArray_MSpline3);
      instance.SetDestructor(&destruct_MSpline3);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSpline3*)
   {
      return GenerateInitInstanceLocal((::MSpline3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSpline3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReflection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MReflection(void *p);
   static void deleteArray_MReflection(void *p);
   static void destruct_MReflection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReflection*)
   {
      ::MReflection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReflection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReflection", ::MReflection::Class_Version(), "./MReflection.h", 9,
                  typeid(::MReflection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReflection::Dictionary, isa_proxy, 4,
                  sizeof(::MReflection) );
      instance.SetDelete(&delete_MReflection);
      instance.SetDeleteArray(&deleteArray_MReflection);
      instance.SetDestructor(&destruct_MReflection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReflection*)
   {
      return GenerateInitInstanceLocal((::MReflection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReflection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MQuaternion_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MQuaternion(void *p);
   static void deleteArray_MQuaternion(void *p);
   static void destruct_MQuaternion(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MQuaternion*)
   {
      ::MQuaternion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MQuaternion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MQuaternion", ::MQuaternion::Class_Version(), "./MQuaternion.h", 19,
                  typeid(::MQuaternion), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MQuaternion::Dictionary, isa_proxy, 4,
                  sizeof(::MQuaternion) );
      instance.SetDelete(&delete_MQuaternion);
      instance.SetDeleteArray(&deleteArray_MQuaternion);
      instance.SetDestructor(&destruct_MQuaternion);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MQuaternion*)
   {
      return GenerateInitInstanceLocal((::MQuaternion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MQuaternion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MEnv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MEnv(void *p = 0);
   static void *newArray_MEnv(Long_t size, void *p);
   static void delete_MEnv(void *p);
   static void deleteArray_MEnv(void *p);
   static void destruct_MEnv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MEnv*)
   {
      ::MEnv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEnv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEnv", ::MEnv::Class_Version(), "./MEnv.h", 21,
                  typeid(::MEnv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MEnv::Dictionary, isa_proxy, 4,
                  sizeof(::MEnv) );
      instance.SetNew(&new_MEnv);
      instance.SetNewArray(&newArray_MEnv);
      instance.SetDelete(&delete_MEnv);
      instance.SetDeleteArray(&deleteArray_MEnv);
      instance.SetDestructor(&destruct_MEnv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MEnv*)
   {
      return GenerateInitInstanceLocal((::MEnv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEnv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MLogPlugin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MLogPlugin(void *p);
   static void deleteArray_MLogPlugin(void *p);
   static void destruct_MLogPlugin(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MLogPlugin*)
   {
      ::MLogPlugin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MLogPlugin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MLogPlugin", ::MLogPlugin::Class_Version(), "./MLogPlugin.h", 9,
                  typeid(::MLogPlugin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MLogPlugin::Dictionary, isa_proxy, 4,
                  sizeof(::MLogPlugin) );
      instance.SetDelete(&delete_MLogPlugin);
      instance.SetDeleteArray(&deleteArray_MLogPlugin);
      instance.SetDestructor(&destruct_MLogPlugin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MLogPlugin*)
   {
      return GenerateInitInstanceLocal((::MLogPlugin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MLogPlugin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MLog_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MLog(void *p = 0);
   static void *newArray_MLog(Long_t size, void *p);
   static void delete_MLog(void *p);
   static void deleteArray_MLog(void *p);
   static void destruct_MLog(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MLog*)
   {
      ::MLog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MLog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MLog", ::MLog::Class_Version(), "./MLog.h", 28,
                  typeid(::MLog), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MLog::Dictionary, isa_proxy, 4,
                  sizeof(::MLog) );
      instance.SetNew(&new_MLog);
      instance.SetNewArray(&newArray_MLog);
      instance.SetDelete(&delete_MLog);
      instance.SetDeleteArray(&deleteArray_MLog);
      instance.SetDestructor(&destruct_MLog);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MLog*)
   {
      return GenerateInitInstanceLocal((::MLog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MLog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MLogHtml_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MLogHtml(void *p = 0);
   static void *newArray_MLogHtml(Long_t size, void *p);
   static void delete_MLogHtml(void *p);
   static void deleteArray_MLogHtml(void *p);
   static void destruct_MLogHtml(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MLogHtml*)
   {
      ::MLogHtml *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MLogHtml >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MLogHtml", ::MLogHtml::Class_Version(), "./MLogHtml.h", 9,
                  typeid(::MLogHtml), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MLogHtml::Dictionary, isa_proxy, 4,
                  sizeof(::MLogHtml) );
      instance.SetNew(&new_MLogHtml);
      instance.SetNewArray(&newArray_MLogHtml);
      instance.SetDelete(&delete_MLogHtml);
      instance.SetDeleteArray(&deleteArray_MLogHtml);
      instance.SetDestructor(&destruct_MLogHtml);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MLogHtml*)
   {
      return GenerateInitInstanceLocal((::MLogHtml*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MLogHtml*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MStatusDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MStatusDisplay(void *p = 0);
   static void *newArray_MStatusDisplay(Long_t size, void *p);
   static void delete_MStatusDisplay(void *p);
   static void deleteArray_MStatusDisplay(void *p);
   static void destruct_MStatusDisplay(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MStatusDisplay*)
   {
      ::MStatusDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MStatusDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MStatusDisplay", ::MStatusDisplay::Class_Version(), "./MStatusDisplay.h", 43,
                  typeid(::MStatusDisplay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MStatusDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::MStatusDisplay) );
      instance.SetNew(&new_MStatusDisplay);
      instance.SetNewArray(&newArray_MStatusDisplay);
      instance.SetDelete(&delete_MStatusDisplay);
      instance.SetDeleteArray(&deleteArray_MStatusDisplay);
      instance.SetDestructor(&destruct_MStatusDisplay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MStatusDisplay*)
   {
      return GenerateInitInstanceLocal((::MStatusDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MStatusDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParContainer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParContainer(void *p = 0);
   static void *newArray_MParContainer(Long_t size, void *p);
   static void delete_MParContainer(void *p);
   static void deleteArray_MParContainer(void *p);
   static void destruct_MParContainer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParContainer*)
   {
      ::MParContainer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParContainer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParContainer", ::MParContainer::Class_Version(), "./MParContainer.h", 37,
                  typeid(::MParContainer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParContainer::Dictionary, isa_proxy, 4,
                  sizeof(::MParContainer) );
      instance.SetNew(&new_MParContainer);
      instance.SetNewArray(&newArray_MParContainer);
      instance.SetDelete(&delete_MParContainer);
      instance.SetDeleteArray(&deleteArray_MParContainer);
      instance.SetDestructor(&destruct_MParContainer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParContainer*)
   {
      return GenerateInitInstanceLocal((::MParContainer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParContainer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParEmulated_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParEmulated(void *p = 0);
   static void *newArray_MParEmulated(Long_t size, void *p);
   static void delete_MParEmulated(void *p);
   static void deleteArray_MParEmulated(void *p);
   static void destruct_MParEmulated(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParEmulated*)
   {
      ::MParEmulated *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParEmulated >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParEmulated", ::MParEmulated::Class_Version(), "./MParEmulated.h", 9,
                  typeid(::MParEmulated), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParEmulated::Dictionary, isa_proxy, 4,
                  sizeof(::MParEmulated) );
      instance.SetNew(&new_MParEmulated);
      instance.SetNewArray(&newArray_MParEmulated);
      instance.SetDelete(&delete_MParEmulated);
      instance.SetDeleteArray(&deleteArray_MParEmulated);
      instance.SetDestructor(&destruct_MParEmulated);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParEmulated*)
   {
      return GenerateInitInstanceLocal((::MParEmulated*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParEmulated*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParSpline_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParSpline(void *p = 0);
   static void *newArray_MParSpline(Long_t size, void *p);
   static void delete_MParSpline(void *p);
   static void deleteArray_MParSpline(void *p);
   static void destruct_MParSpline(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParSpline*)
   {
      ::MParSpline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParSpline >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParSpline", ::MParSpline::Class_Version(), "./MParSpline.h", 13,
                  typeid(::MParSpline), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParSpline::Dictionary, isa_proxy, 4,
                  sizeof(::MParSpline) );
      instance.SetNew(&new_MParSpline);
      instance.SetNewArray(&newArray_MParSpline);
      instance.SetDelete(&delete_MParSpline);
      instance.SetDeleteArray(&deleteArray_MParSpline);
      instance.SetDestructor(&destruct_MParSpline);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParSpline*)
   {
      return GenerateInitInstanceLocal((::MParSpline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParSpline*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTask(void *p = 0);
   static void *newArray_MTask(Long_t size, void *p);
   static void delete_MTask(void *p);
   static void deleteArray_MTask(void *p);
   static void destruct_MTask(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTask*)
   {
      ::MTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTask", ::MTask::Class_Version(), "./MTask.h", 23,
                  typeid(::MTask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTask::Dictionary, isa_proxy, 4,
                  sizeof(::MTask) );
      instance.SetNew(&new_MTask);
      instance.SetNewArray(&newArray_MTask);
      instance.SetDelete(&delete_MTask);
      instance.SetDeleteArray(&deleteArray_MTask);
      instance.SetDestructor(&destruct_MTask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTask*)
   {
      return GenerateInitInstanceLocal((::MTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTaskList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTaskList(void *p = 0);
   static void *newArray_MTaskList(Long_t size, void *p);
   static void delete_MTaskList(void *p);
   static void deleteArray_MTaskList(void *p);
   static void destruct_MTaskList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTaskList*)
   {
      ::MTaskList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTaskList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTaskList", ::MTaskList::Class_Version(), "./MTaskList.h", 21,
                  typeid(::MTaskList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTaskList::Dictionary, isa_proxy, 4,
                  sizeof(::MTaskList) );
      instance.SetNew(&new_MTaskList);
      instance.SetNewArray(&newArray_MTaskList);
      instance.SetDelete(&delete_MTaskList);
      instance.SetDeleteArray(&deleteArray_MTaskList);
      instance.SetDestructor(&destruct_MTaskList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTaskList*)
   {
      return GenerateInitInstanceLocal((::MTaskList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTaskList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParList(void *p = 0);
   static void *newArray_MParList(Long_t size, void *p);
   static void delete_MParList(void *p);
   static void deleteArray_MParList(void *p);
   static void destruct_MParList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParList*)
   {
      ::MParList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParList", ::MParList::Class_Version(), "./MParList.h", 27,
                  typeid(::MParList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParList::Dictionary, isa_proxy, 4,
                  sizeof(::MParList) );
      instance.SetNew(&new_MParList);
      instance.SetNewArray(&newArray_MParList);
      instance.SetDelete(&delete_MParList);
      instance.SetDeleteArray(&deleteArray_MParList);
      instance.SetDestructor(&destruct_MParList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParList*)
   {
      return GenerateInitInstanceLocal((::MParList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParEnv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParEnv(void *p = 0);
   static void *newArray_MParEnv(Long_t size, void *p);
   static void delete_MParEnv(void *p);
   static void deleteArray_MParEnv(void *p);
   static void destruct_MParEnv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParEnv*)
   {
      ::MParEnv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParEnv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParEnv", ::MParEnv::Class_Version(), "./MParEnv.h", 9,
                  typeid(::MParEnv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParEnv::Dictionary, isa_proxy, 4,
                  sizeof(::MParEnv) );
      instance.SetNew(&new_MParEnv);
      instance.SetNewArray(&newArray_MParEnv);
      instance.SetDelete(&delete_MParEnv);
      instance.SetDeleteArray(&deleteArray_MParEnv);
      instance.SetDestructor(&destruct_MParEnv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParEnv*)
   {
      return GenerateInitInstanceLocal((::MParEnv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParEnv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParameterD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParameterD(void *p = 0);
   static void *newArray_MParameterD(Long_t size, void *p);
   static void delete_MParameterD(void *p);
   static void deleteArray_MParameterD(void *p);
   static void destruct_MParameterD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParameterD*)
   {
      ::MParameterD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParameterD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParameterD", ::MParameterD::Class_Version(), "./MParameters.h", 9,
                  typeid(::MParameterD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParameterD::Dictionary, isa_proxy, 4,
                  sizeof(::MParameterD) );
      instance.SetNew(&new_MParameterD);
      instance.SetNewArray(&newArray_MParameterD);
      instance.SetDelete(&delete_MParameterD);
      instance.SetDeleteArray(&deleteArray_MParameterD);
      instance.SetDestructor(&destruct_MParameterD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParameterD*)
   {
      return GenerateInitInstanceLocal((::MParameterD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParameterD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParameterDerr_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParameterDerr(void *p = 0);
   static void *newArray_MParameterDerr(Long_t size, void *p);
   static void delete_MParameterDerr(void *p);
   static void deleteArray_MParameterDerr(void *p);
   static void destruct_MParameterDerr(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParameterDerr*)
   {
      ::MParameterDerr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParameterDerr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParameterDerr", ::MParameterDerr::Class_Version(), "./MParameters.h", 31,
                  typeid(::MParameterDerr), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParameterDerr::Dictionary, isa_proxy, 4,
                  sizeof(::MParameterDerr) );
      instance.SetNew(&new_MParameterDerr);
      instance.SetNewArray(&newArray_MParameterDerr);
      instance.SetDelete(&delete_MParameterDerr);
      instance.SetDeleteArray(&deleteArray_MParameterDerr);
      instance.SetDestructor(&destruct_MParameterDerr);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParameterDerr*)
   {
      return GenerateInitInstanceLocal((::MParameterDerr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParameterDerr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MParameterI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MParameterI(void *p = 0);
   static void *newArray_MParameterI(Long_t size, void *p);
   static void delete_MParameterI(void *p);
   static void deleteArray_MParameterI(void *p);
   static void destruct_MParameterI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MParameterI*)
   {
      ::MParameterI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MParameterI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MParameterI", ::MParameterI::Class_Version(), "./MParameters.h", 51,
                  typeid(::MParameterI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MParameterI::Dictionary, isa_proxy, 4,
                  sizeof(::MParameterI) );
      instance.SetNew(&new_MParameterI);
      instance.SetNewArray(&newArray_MParameterI);
      instance.SetDelete(&delete_MParameterI);
      instance.SetDeleteArray(&deleteArray_MParameterI);
      instance.SetDestructor(&destruct_MParameterI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MParameterI*)
   {
      return GenerateInitInstanceLocal((::MParameterI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MParameterI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MInputStreamID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MInputStreamID(void *p = 0);
   static void *newArray_MInputStreamID(Long_t size, void *p);
   static void delete_MInputStreamID(void *p);
   static void deleteArray_MInputStreamID(void *p);
   static void destruct_MInputStreamID(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MInputStreamID*)
   {
      ::MInputStreamID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MInputStreamID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MInputStreamID", ::MInputStreamID::Class_Version(), "./MInputStreamID.h", 19,
                  typeid(::MInputStreamID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MInputStreamID::Dictionary, isa_proxy, 4,
                  sizeof(::MInputStreamID) );
      instance.SetNew(&new_MInputStreamID);
      instance.SetNewArray(&newArray_MInputStreamID);
      instance.SetDelete(&delete_MInputStreamID);
      instance.SetDeleteArray(&deleteArray_MInputStreamID);
      instance.SetDestructor(&destruct_MInputStreamID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MInputStreamID*)
   {
      return GenerateInitInstanceLocal((::MInputStreamID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MInputStreamID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MFilter(void *p);
   static void deleteArray_MFilter(void *p);
   static void destruct_MFilter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MFilter*)
   {
      ::MFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MFilter", ::MFilter::Class_Version(), "./MFilter.h", 11,
                  typeid(::MFilter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MFilter::Dictionary, isa_proxy, 4,
                  sizeof(::MFilter) );
      instance.SetDelete(&delete_MFilter);
      instance.SetDeleteArray(&deleteArray_MFilter);
      instance.SetDestructor(&destruct_MFilter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MFilter*)
   {
      return GenerateInitInstanceLocal((::MFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTaskEnv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTaskEnv(void *p = 0);
   static void *newArray_MTaskEnv(Long_t size, void *p);
   static void delete_MTaskEnv(void *p);
   static void deleteArray_MTaskEnv(void *p);
   static void destruct_MTaskEnv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTaskEnv*)
   {
      ::MTaskEnv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTaskEnv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTaskEnv", ::MTaskEnv::Class_Version(), "./MTaskEnv.h", 12,
                  typeid(::MTaskEnv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTaskEnv::Dictionary, isa_proxy, 4,
                  sizeof(::MTaskEnv) );
      instance.SetNew(&new_MTaskEnv);
      instance.SetNewArray(&newArray_MTaskEnv);
      instance.SetDelete(&delete_MTaskEnv);
      instance.SetDeleteArray(&deleteArray_MTaskEnv);
      instance.SetDestructor(&destruct_MTaskEnv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTaskEnv*)
   {
      return GenerateInitInstanceLocal((::MTaskEnv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTaskEnv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTaskInteractive_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTaskInteractive(void *p = 0);
   static void *newArray_MTaskInteractive(Long_t size, void *p);
   static void delete_MTaskInteractive(void *p);
   static void deleteArray_MTaskInteractive(void *p);
   static void destruct_MTaskInteractive(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTaskInteractive*)
   {
      ::MTaskInteractive *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTaskInteractive >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTaskInteractive", ::MTaskInteractive::Class_Version(), "./MTaskInteractive.h", 12,
                  typeid(::MTaskInteractive), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTaskInteractive::Dictionary, isa_proxy, 4,
                  sizeof(::MTaskInteractive) );
      instance.SetNew(&new_MTaskInteractive);
      instance.SetNewArray(&newArray_MTaskInteractive);
      instance.SetDelete(&delete_MTaskInteractive);
      instance.SetDeleteArray(&deleteArray_MTaskInteractive);
      instance.SetDestructor(&destruct_MTaskInteractive);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTaskInteractive*)
   {
      return GenerateInitInstanceLocal((::MTaskInteractive*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTaskInteractive*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MProgressBar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MProgressBar(void *p = 0);
   static void *newArray_MProgressBar(Long_t size, void *p);
   static void delete_MProgressBar(void *p);
   static void deleteArray_MProgressBar(void *p);
   static void destruct_MProgressBar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MProgressBar*)
   {
      ::MProgressBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MProgressBar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MProgressBar", ::MProgressBar::Class_Version(), "./MProgressBar.h", 17,
                  typeid(::MProgressBar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MProgressBar::Dictionary, isa_proxy, 4,
                  sizeof(::MProgressBar) );
      instance.SetNew(&new_MProgressBar);
      instance.SetNewArray(&newArray_MProgressBar);
      instance.SetDelete(&delete_MProgressBar);
      instance.SetDeleteArray(&deleteArray_MProgressBar);
      instance.SetDestructor(&destruct_MProgressBar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MProgressBar*)
   {
      return GenerateInitInstanceLocal((::MProgressBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MProgressBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MEvtLoop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MEvtLoop(void *p = 0);
   static void *newArray_MEvtLoop(Long_t size, void *p);
   static void delete_MEvtLoop(void *p);
   static void deleteArray_MEvtLoop(void *p);
   static void destruct_MEvtLoop(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MEvtLoop*)
   {
      ::MEvtLoop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEvtLoop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEvtLoop", ::MEvtLoop::Class_Version(), "./MEvtLoop.h", 25,
                  typeid(::MEvtLoop), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MEvtLoop::Dictionary, isa_proxy, 4,
                  sizeof(::MEvtLoop) );
      instance.SetNew(&new_MEvtLoop);
      instance.SetNewArray(&newArray_MEvtLoop);
      instance.SetDelete(&delete_MEvtLoop);
      instance.SetDeleteArray(&deleteArray_MEvtLoop);
      instance.SetDestructor(&destruct_MEvtLoop);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MEvtLoop*)
   {
      return GenerateInitInstanceLocal((::MEvtLoop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEvtLoop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MGList(void *p = 0);
   static void *newArray_MGList(Long_t size, void *p);
   static void delete_MGList(void *p);
   static void deleteArray_MGList(void *p);
   static void destruct_MGList(void *p);
   static Long64_t merge_MGList(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGList*)
   {
      ::MGList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGList", ::MGList::Class_Version(), "./MGList.h", 12,
                  typeid(::MGList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGList::Dictionary, isa_proxy, 4,
                  sizeof(::MGList) );
      instance.SetNew(&new_MGList);
      instance.SetNewArray(&newArray_MGList);
      instance.SetDelete(&delete_MGList);
      instance.SetDeleteArray(&deleteArray_MGList);
      instance.SetDestructor(&destruct_MGList);
      instance.SetMerge(&merge_MGList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGList*)
   {
      return GenerateInitInstanceLocal((::MGList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MSearch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MSearch(void *p);
   static void deleteArray_MSearch(void *p);
   static void destruct_MSearch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MSearch*)
   {
      ::MSearch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MSearch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MSearch", ::MSearch::Class_Version(), "./MSearch.h", 23,
                  typeid(::MSearch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MSearch::Dictionary, isa_proxy, 4,
                  sizeof(::MSearch) );
      instance.SetDelete(&delete_MSearch);
      instance.SetDeleteArray(&deleteArray_MSearch);
      instance.SetDestructor(&destruct_MSearch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MSearch*)
   {
      return GenerateInitInstanceLocal((::MSearch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MSearch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MIter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MIter(void *p);
   static void deleteArray_MIter(void *p);
   static void destruct_MIter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MIter*)
   {
      ::MIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MIter", ::MIter::Class_Version(), "./MIter.h", 20,
                  typeid(::MIter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MIter::Dictionary, isa_proxy, 4,
                  sizeof(::MIter) );
      instance.SetDelete(&delete_MIter);
      instance.SetDeleteArray(&deleteArray_MIter);
      instance.SetDestructor(&destruct_MIter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MIter*)
   {
      return GenerateInitInstanceLocal((::MIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MDirIter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MDirIter(void *p = 0);
   static void *newArray_MDirIter(Long_t size, void *p);
   static void delete_MDirIter(void *p);
   static void deleteArray_MDirIter(void *p);
   static void destruct_MDirIter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MDirIter*)
   {
      ::MDirIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MDirIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MDirIter", ::MDirIter::Class_Version(), "./MDirIter.h", 9,
                  typeid(::MDirIter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MDirIter::Dictionary, isa_proxy, 4,
                  sizeof(::MDirIter) );
      instance.SetNew(&new_MDirIter);
      instance.SetNewArray(&newArray_MDirIter);
      instance.SetDelete(&delete_MDirIter);
      instance.SetDeleteArray(&deleteArray_MDirIter);
      instance.SetDestructor(&destruct_MDirIter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MDirIter*)
   {
      return GenerateInitInstanceLocal((::MDirIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MDirIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MReadSocket_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MReadSocket(void *p = 0);
   static void *newArray_MReadSocket(Long_t size, void *p);
   static void delete_MReadSocket(void *p);
   static void deleteArray_MReadSocket(void *p);
   static void destruct_MReadSocket(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MReadSocket*)
   {
      ::MReadSocket *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MReadSocket >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MReadSocket", ::MReadSocket::Class_Version(), "./MReadSocket.h", 17,
                  typeid(::MReadSocket), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MReadSocket::Dictionary, isa_proxy, 4,
                  sizeof(::MReadSocket) );
      instance.SetNew(&new_MReadSocket);
      instance.SetNewArray(&newArray_MReadSocket);
      instance.SetDelete(&delete_MReadSocket);
      instance.SetDeleteArray(&deleteArray_MReadSocket);
      instance.SetDestructor(&destruct_MReadSocket);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MReadSocket*)
   {
      return GenerateInitInstanceLocal((::MReadSocket*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MReadSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MGTask(void *p = 0);
   static void *newArray_MGTask(Long_t size, void *p);
   static void delete_MGTask(void *p);
   static void deleteArray_MGTask(void *p);
   static void destruct_MGTask(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGTask*)
   {
      ::MGTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGTask", ::MGTask::Class_Version(), "./MGTask.h", 24,
                  typeid(::MGTask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGTask::Dictionary, isa_proxy, 4,
                  sizeof(::MGTask) );
      instance.SetNew(&new_MGTask);
      instance.SetNewArray(&newArray_MGTask);
      instance.SetDelete(&delete_MGTask);
      instance.SetDeleteArray(&deleteArray_MGTask);
      instance.SetDestructor(&destruct_MGTask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGTask*)
   {
      return GenerateInitInstanceLocal((::MGTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGGroupFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MGGroupFrame(void *p);
   static void deleteArray_MGGroupFrame(void *p);
   static void destruct_MGGroupFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGGroupFrame*)
   {
      ::MGGroupFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGGroupFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGGroupFrame", ::MGGroupFrame::Class_Version(), "./MGGroupFrame.h", 15,
                  typeid(::MGGroupFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGGroupFrame::Dictionary, isa_proxy, 4,
                  sizeof(::MGGroupFrame) );
      instance.SetDelete(&delete_MGGroupFrame);
      instance.SetDeleteArray(&deleteArray_MGGroupFrame);
      instance.SetDestructor(&destruct_MGGroupFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGGroupFrame*)
   {
      return GenerateInitInstanceLocal((::MGGroupFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGGroupFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MGMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MGMap(void *p = 0);
   static void *newArray_MGMap(Long_t size, void *p);
   static void delete_MGMap(void *p);
   static void deleteArray_MGMap(void *p);
   static void destruct_MGMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MGMap*)
   {
      ::MGMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MGMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MGMap", ::MGMap::Class_Version(), "./MGMap.h", 17,
                  typeid(::MGMap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MGMap::Dictionary, isa_proxy, 4,
                  sizeof(::MGMap) );
      instance.SetNew(&new_MGMap);
      instance.SetNewArray(&newArray_MGMap);
      instance.SetDelete(&delete_MGMap);
      instance.SetDeleteArray(&deleteArray_MGMap);
      instance.SetDestructor(&destruct_MGMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MGMap*)
   {
      return GenerateInitInstanceLocal((::MGMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MGMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MStatusArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MStatusArray(void *p = 0);
   static void *newArray_MStatusArray(Long_t size, void *p);
   static void delete_MStatusArray(void *p);
   static void deleteArray_MStatusArray(void *p);
   static void destruct_MStatusArray(void *p);
   static Long64_t merge_MStatusArray(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MStatusArray*)
   {
      ::MStatusArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MStatusArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MStatusArray", ::MStatusArray::Class_Version(), "./MStatusArray.h", 15,
                  typeid(::MStatusArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MStatusArray::Dictionary, isa_proxy, 4,
                  sizeof(::MStatusArray) );
      instance.SetNew(&new_MStatusArray);
      instance.SetNewArray(&newArray_MStatusArray);
      instance.SetDelete(&delete_MStatusArray);
      instance.SetDeleteArray(&deleteArray_MStatusArray);
      instance.SetDestructor(&destruct_MStatusArray);
      instance.SetMerge(&merge_MStatusArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MStatusArray*)
   {
      return GenerateInitInstanceLocal((::MStatusArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MStatusArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArrayI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MArrayI(void *p = 0);
   static void *newArray_MArrayI(Long_t size, void *p);
   static void delete_MArrayI(void *p);
   static void deleteArray_MArrayI(void *p);
   static void destruct_MArrayI(void *p);
   static void streamer_MArrayI(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArrayI*)
   {
      ::MArrayI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArrayI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArrayI", ::MArrayI::Class_Version(), "./MArrayI.h", 11,
                  typeid(::MArrayI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArrayI::Dictionary, isa_proxy, 0,
                  sizeof(::MArrayI) );
      instance.SetNew(&new_MArrayI);
      instance.SetNewArray(&newArray_MArrayI);
      instance.SetDelete(&delete_MArrayI);
      instance.SetDeleteArray(&deleteArray_MArrayI);
      instance.SetDestructor(&destruct_MArrayI);
      instance.SetStreamerFunc(&streamer_MArrayI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArrayI*)
   {
      return GenerateInitInstanceLocal((::MArrayI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArrayI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MLut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MLut(void *p = 0);
   static void *newArray_MLut(Long_t size, void *p);
   static void delete_MLut(void *p);
   static void deleteArray_MLut(void *p);
   static void destruct_MLut(void *p);
   static Long64_t merge_MLut(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MLut*)
   {
      ::MLut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MLut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MLut", ::MLut::Class_Version(), "./MLut.h", 13,
                  typeid(::MLut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MLut::Dictionary, isa_proxy, 4,
                  sizeof(::MLut) );
      instance.SetNew(&new_MLut);
      instance.SetNewArray(&newArray_MLut);
      instance.SetDelete(&delete_MLut);
      instance.SetDeleteArray(&deleteArray_MLut);
      instance.SetDestructor(&destruct_MLut);
      instance.SetMerge(&merge_MLut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MLut*)
   {
      return GenerateInitInstanceLocal((::MLut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MLut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MArray(void *p);
   static void deleteArray_MArray(void *p);
   static void destruct_MArray(void *p);
   static void streamer_MArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArray*)
   {
      ::MArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArray", ::MArray::Class_Version(), "./MArray.h", 17,
                  typeid(::MArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArray::Dictionary, isa_proxy, 0,
                  sizeof(::MArray) );
      instance.SetDelete(&delete_MArray);
      instance.SetDeleteArray(&deleteArray_MArray);
      instance.SetDestructor(&destruct_MArray);
      instance.SetStreamerFunc(&streamer_MArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArray*)
   {
      return GenerateInitInstanceLocal((::MArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArrayB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MArrayB(void *p = 0);
   static void *newArray_MArrayB(Long_t size, void *p);
   static void delete_MArrayB(void *p);
   static void deleteArray_MArrayB(void *p);
   static void destruct_MArrayB(void *p);
   static void streamer_MArrayB(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArrayB*)
   {
      ::MArrayB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArrayB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArrayB", ::MArrayB::Class_Version(), "./MArrayB.h", 19,
                  typeid(::MArrayB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArrayB::Dictionary, isa_proxy, 0,
                  sizeof(::MArrayB) );
      instance.SetNew(&new_MArrayB);
      instance.SetNewArray(&newArray_MArrayB);
      instance.SetDelete(&delete_MArrayB);
      instance.SetDeleteArray(&deleteArray_MArrayB);
      instance.SetDestructor(&destruct_MArrayB);
      instance.SetStreamerFunc(&streamer_MArrayB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArrayB*)
   {
      return GenerateInitInstanceLocal((::MArrayB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArrayB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArrayS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MArrayS(void *p = 0);
   static void *newArray_MArrayS(Long_t size, void *p);
   static void delete_MArrayS(void *p);
   static void deleteArray_MArrayS(void *p);
   static void destruct_MArrayS(void *p);
   static void streamer_MArrayS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArrayS*)
   {
      ::MArrayS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArrayS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArrayS", ::MArrayS::Class_Version(), "./MArrayS.h", 19,
                  typeid(::MArrayS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArrayS::Dictionary, isa_proxy, 0,
                  sizeof(::MArrayS) );
      instance.SetNew(&new_MArrayS);
      instance.SetNewArray(&newArray_MArrayS);
      instance.SetDelete(&delete_MArrayS);
      instance.SetDeleteArray(&deleteArray_MArrayS);
      instance.SetDestructor(&destruct_MArrayS);
      instance.SetStreamerFunc(&streamer_MArrayS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArrayS*)
   {
      return GenerateInitInstanceLocal((::MArrayS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArrayS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MArrayF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MArrayF(void *p = 0);
   static void *newArray_MArrayF(Long_t size, void *p);
   static void delete_MArrayF(void *p);
   static void deleteArray_MArrayF(void *p);
   static void destruct_MArrayF(void *p);
   static void streamer_MArrayF(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MArrayF*)
   {
      ::MArrayF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MArrayF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MArrayF", ::MArrayF::Class_Version(), "./MArrayF.h", 12,
                  typeid(::MArrayF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MArrayF::Dictionary, isa_proxy, 0,
                  sizeof(::MArrayF) );
      instance.SetNew(&new_MArrayF);
      instance.SetNewArray(&newArray_MArrayF);
      instance.SetDelete(&delete_MArrayF);
      instance.SetDeleteArray(&deleteArray_MArrayF);
      instance.SetDestructor(&destruct_MArrayF);
      instance.SetStreamerFunc(&streamer_MArrayF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MArrayF*)
   {
      return GenerateInitInstanceLocal((::MArrayF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MArrayF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTime(void *p = 0);
   static void *newArray_MTime(Long_t size, void *p);
   static void delete_MTime(void *p);
   static void deleteArray_MTime(void *p);
   static void destruct_MTime(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTime*)
   {
      ::MTime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTime >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTime", ::MTime::Class_Version(), "./MTime.h", 29,
                  typeid(::MTime), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTime::Dictionary, isa_proxy, 4,
                  sizeof(::MTime) );
      instance.SetNew(&new_MTime);
      instance.SetNewArray(&newArray_MTime);
      instance.SetDelete(&delete_MTime);
      instance.SetDeleteArray(&deleteArray_MTime);
      instance.SetDestructor(&destruct_MTime);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTime*)
   {
      return GenerateInitInstanceLocal((::MTime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTime*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MClone_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MClone(void *p);
   static void deleteArray_MClone(void *p);
   static void destruct_MClone(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MClone*)
   {
      ::MClone *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MClone >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MClone", ::MClone::Class_Version(), "./MClone.h", 11,
                  typeid(::MClone), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MClone::Dictionary, isa_proxy, 4,
                  sizeof(::MClone) );
      instance.SetDelete(&delete_MClone);
      instance.SetDeleteArray(&deleteArray_MClone);
      instance.SetDestructor(&destruct_MClone);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MClone*)
   {
      return GenerateInitInstanceLocal((::MClone*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MClone*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MContinue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MContinue(void *p = 0);
   static void *newArray_MContinue(Long_t size, void *p);
   static void delete_MContinue(void *p);
   static void deleteArray_MContinue(void *p);
   static void destruct_MContinue(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MContinue*)
   {
      ::MContinue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MContinue >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MContinue", ::MContinue::Class_Version(), "./MContinue.h", 23,
                  typeid(::MContinue), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MContinue::Dictionary, isa_proxy, 4,
                  sizeof(::MContinue) );
      instance.SetNew(&new_MContinue);
      instance.SetNewArray(&newArray_MContinue);
      instance.SetDelete(&delete_MContinue);
      instance.SetDeleteArray(&deleteArray_MContinue);
      instance.SetDestructor(&destruct_MContinue);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MContinue*)
   {
      return GenerateInitInstanceLocal((::MContinue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MContinue*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPrint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPrint(void *p = 0);
   static void *newArray_MPrint(Long_t size, void *p);
   static void delete_MPrint(void *p);
   static void deleteArray_MPrint(void *p);
   static void destruct_MPrint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPrint*)
   {
      ::MPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPrint", ::MPrint::Class_Version(), "./MPrint.h", 11,
                  typeid(::MPrint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPrint::Dictionary, isa_proxy, 4,
                  sizeof(::MPrint) );
      instance.SetNew(&new_MPrint);
      instance.SetNewArray(&newArray_MPrint);
      instance.SetDelete(&delete_MPrint);
      instance.SetDeleteArray(&deleteArray_MPrint);
      instance.SetDestructor(&destruct_MPrint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPrint*)
   {
      return GenerateInitInstanceLocal((::MPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MThread_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MThread(void *p);
   static void deleteArray_MThread(void *p);
   static void destruct_MThread(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MThread*)
   {
      ::MThread *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MThread >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MThread", ::MThread::Class_Version(), "./MThread.h", 9,
                  typeid(::MThread), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MThread::Dictionary, isa_proxy, 4,
                  sizeof(::MThread) );
      instance.SetDelete(&delete_MThread);
      instance.SetDeleteArray(&deleteArray_MThread);
      instance.SetDestructor(&destruct_MThread);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MThread*)
   {
      return GenerateInitInstanceLocal((::MThread*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MThread*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MObjLookup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MObjLookup(void *p = 0);
   static void *newArray_MObjLookup(Long_t size, void *p);
   static void delete_MObjLookup(void *p);
   static void deleteArray_MObjLookup(void *p);
   static void destruct_MObjLookup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MObjLookup*)
   {
      ::MObjLookup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MObjLookup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MObjLookup", ::MObjLookup::Class_Version(), "./MObjLookup.h", 9,
                  typeid(::MObjLookup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MObjLookup::Dictionary, isa_proxy, 4,
                  sizeof(::MObjLookup) );
      instance.SetNew(&new_MObjLookup);
      instance.SetNewArray(&newArray_MObjLookup);
      instance.SetDelete(&delete_MObjLookup);
      instance.SetDeleteArray(&deleteArray_MObjLookup);
      instance.SetDestructor(&destruct_MObjLookup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MObjLookup*)
   {
      return GenerateInitInstanceLocal((::MObjLookup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MObjLookup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MArgsEntry::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArgsEntry::Class_Name()
{
   return "MArgsEntry";
}

//______________________________________________________________________________
const char *MArgsEntry::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArgsEntry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArgsEntry::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArgsEntry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArgsEntry::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArgsEntry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArgsEntry::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArgsEntry*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArgs::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArgs::Class_Name()
{
   return "MArgs";
}

//______________________________________________________________________________
const char *MArgs::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArgs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArgs::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArgs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArgs::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArgs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArgs::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArgs*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MString::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MString::Class_Name()
{
   return "MString";
}

//______________________________________________________________________________
const char *MString::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MString*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MString::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MString*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MString::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MString*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MString::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MString*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArrayD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArrayD::Class_Name()
{
   return "MArrayD";
}

//______________________________________________________________________________
const char *MArrayD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArrayD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArrayD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArrayD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSpline3::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSpline3::Class_Name()
{
   return "MSpline3";
}

//______________________________________________________________________________
const char *MSpline3::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSpline3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSpline3::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSpline3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSpline3::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSpline3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSpline3::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSpline3*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReflection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReflection::Class_Name()
{
   return "MReflection";
}

//______________________________________________________________________________
const char *MReflection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReflection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReflection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReflection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReflection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReflection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReflection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReflection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MQuaternion::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MQuaternion::Class_Name()
{
   return "MQuaternion";
}

//______________________________________________________________________________
const char *MQuaternion::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MQuaternion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MQuaternion::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MQuaternion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MQuaternion::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MQuaternion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MQuaternion::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MQuaternion*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MEnv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MEnv::Class_Name()
{
   return "MEnv";
}

//______________________________________________________________________________
const char *MEnv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MEnv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEnv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MEnv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEnv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MEnv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEnv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MEnv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MLogPlugin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MLogPlugin::Class_Name()
{
   return "MLogPlugin";
}

//______________________________________________________________________________
const char *MLogPlugin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLogPlugin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MLogPlugin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLogPlugin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MLogPlugin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLogPlugin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MLogPlugin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLogPlugin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MLog::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MLog::Class_Name()
{
   return "MLog";
}

//______________________________________________________________________________
const char *MLog::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MLog::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MLog::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MLog::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLog*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MLogHtml::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MLogHtml::Class_Name()
{
   return "MLogHtml";
}

//______________________________________________________________________________
const char *MLogHtml::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLogHtml*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MLogHtml::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLogHtml*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MLogHtml::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLogHtml*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MLogHtml::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLogHtml*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MStatusDisplay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MStatusDisplay::Class_Name()
{
   return "MStatusDisplay";
}

//______________________________________________________________________________
const char *MStatusDisplay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MStatusDisplay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MStatusDisplay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MStatusDisplay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusDisplay*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParContainer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParContainer::Class_Name()
{
   return "MParContainer";
}

//______________________________________________________________________________
const char *MParContainer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParContainer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParContainer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParContainer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParContainer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParContainer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParContainer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParContainer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParEmulated::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParEmulated::Class_Name()
{
   return "MParEmulated";
}

//______________________________________________________________________________
const char *MParEmulated::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParEmulated*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParEmulated::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParEmulated*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParEmulated::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParEmulated*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParEmulated::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParEmulated*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParSpline::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParSpline::Class_Name()
{
   return "MParSpline";
}

//______________________________________________________________________________
const char *MParSpline::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParSpline*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParSpline::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParSpline*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParSpline::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParSpline*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParSpline::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParSpline*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTask::Class_Name()
{
   return "MTask";
}

//______________________________________________________________________________
const char *MTask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTaskList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTaskList::Class_Name()
{
   return "MTaskList";
}

//______________________________________________________________________________
const char *MTaskList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTaskList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTaskList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTaskList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParList::Class_Name()
{
   return "MParList";
}

//______________________________________________________________________________
const char *MParList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParEnv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParEnv::Class_Name()
{
   return "MParEnv";
}

//______________________________________________________________________________
const char *MParEnv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParEnv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParEnv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParEnv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParEnv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParEnv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParEnv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParEnv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParameterD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParameterD::Class_Name()
{
   return "MParameterD";
}

//______________________________________________________________________________
const char *MParameterD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParameterD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParameterD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParameterD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParameterDerr::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParameterDerr::Class_Name()
{
   return "MParameterDerr";
}

//______________________________________________________________________________
const char *MParameterDerr::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterDerr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParameterDerr::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterDerr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParameterDerr::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterDerr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParameterDerr::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterDerr*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MParameterI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MParameterI::Class_Name()
{
   return "MParameterI";
}

//______________________________________________________________________________
const char *MParameterI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MParameterI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MParameterI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MParameterI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MParameterI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MInputStreamID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MInputStreamID::Class_Name()
{
   return "MInputStreamID";
}

//______________________________________________________________________________
const char *MInputStreamID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MInputStreamID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MInputStreamID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MInputStreamID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MInputStreamID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MInputStreamID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MInputStreamID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MInputStreamID*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MFilter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MFilter::Class_Name()
{
   return "MFilter";
}

//______________________________________________________________________________
const char *MFilter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MFilter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MFilter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MFilter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MFilter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTaskEnv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTaskEnv::Class_Name()
{
   return "MTaskEnv";
}

//______________________________________________________________________________
const char *MTaskEnv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskEnv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTaskEnv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskEnv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTaskEnv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskEnv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTaskEnv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskEnv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTaskInteractive::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTaskInteractive::Class_Name()
{
   return "MTaskInteractive";
}

//______________________________________________________________________________
const char *MTaskInteractive::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskInteractive*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTaskInteractive::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskInteractive*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTaskInteractive::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskInteractive*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTaskInteractive::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTaskInteractive*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MProgressBar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MProgressBar::Class_Name()
{
   return "MProgressBar";
}

//______________________________________________________________________________
const char *MProgressBar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MProgressBar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MProgressBar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MProgressBar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MProgressBar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MProgressBar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MProgressBar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MProgressBar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MEvtLoop::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MEvtLoop::Class_Name()
{
   return "MEvtLoop";
}

//______________________________________________________________________________
const char *MEvtLoop::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MEvtLoop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEvtLoop::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MEvtLoop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEvtLoop::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MEvtLoop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEvtLoop::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MEvtLoop*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGList::Class_Name()
{
   return "MGList";
}

//______________________________________________________________________________
const char *MGList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MSearch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MSearch::Class_Name()
{
   return "MSearch";
}

//______________________________________________________________________________
const char *MSearch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSearch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MSearch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MSearch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MSearch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSearch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MSearch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MSearch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MIter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MIter::Class_Name()
{
   return "MIter";
}

//______________________________________________________________________________
const char *MIter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MIter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MIter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MIter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MIter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MDirIter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MDirIter::Class_Name()
{
   return "MDirIter";
}

//______________________________________________________________________________
const char *MDirIter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDirIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MDirIter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MDirIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MDirIter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDirIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MDirIter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MDirIter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MReadSocket::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MReadSocket::Class_Name()
{
   return "MReadSocket";
}

//______________________________________________________________________________
const char *MReadSocket::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MReadSocket::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MReadSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MReadSocket::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MReadSocket::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MReadSocket*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGTask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGTask::Class_Name()
{
   return "MGTask";
}

//______________________________________________________________________________
const char *MGTask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGTask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGTask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGTask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGTask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGGroupFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGGroupFrame::Class_Name()
{
   return "MGGroupFrame";
}

//______________________________________________________________________________
const char *MGGroupFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGGroupFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGGroupFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGGroupFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGGroupFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGGroupFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGGroupFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGGroupFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MGMap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MGMap::Class_Name()
{
   return "MGMap";
}

//______________________________________________________________________________
const char *MGMap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MGMap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MGMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MGMap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MGMap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MGMap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MStatusArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MStatusArray::Class_Name()
{
   return "MStatusArray";
}

//______________________________________________________________________________
const char *MStatusArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MStatusArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MStatusArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MStatusArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MStatusArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArrayI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArrayI::Class_Name()
{
   return "MArrayI";
}

//______________________________________________________________________________
const char *MArrayI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArrayI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArrayI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArrayI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MLut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MLut::Class_Name()
{
   return "MLut";
}

//______________________________________________________________________________
const char *MLut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MLut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MLut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MLut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MLut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MLut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArray::Class_Name()
{
   return "MArray";
}

//______________________________________________________________________________
const char *MArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArrayB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArrayB::Class_Name()
{
   return "MArrayB";
}

//______________________________________________________________________________
const char *MArrayB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArrayB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArrayB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArrayB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArrayS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArrayS::Class_Name()
{
   return "MArrayS";
}

//______________________________________________________________________________
const char *MArrayS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArrayS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArrayS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArrayS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MArrayF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MArrayF::Class_Name()
{
   return "MArrayF";
}

//______________________________________________________________________________
const char *MArrayF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MArrayF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MArrayF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MArrayF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MArrayF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTime::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTime::Class_Name()
{
   return "MTime";
}

//______________________________________________________________________________
const char *MTime::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTime*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTime::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTime*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTime::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTime*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTime::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTime*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MClone::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MClone::Class_Name()
{
   return "MClone";
}

//______________________________________________________________________________
const char *MClone::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MClone*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MClone::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MClone*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MClone::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MClone*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MClone::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MClone*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MContinue::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MContinue::Class_Name()
{
   return "MContinue";
}

//______________________________________________________________________________
const char *MContinue::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MContinue*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MContinue::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MContinue*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MContinue::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MContinue*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MContinue::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MContinue*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPrint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPrint::Class_Name()
{
   return "MPrint";
}

//______________________________________________________________________________
const char *MPrint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPrint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPrint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPrint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPrint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MThread::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MThread::Class_Name()
{
   return "MThread";
}

//______________________________________________________________________________
const char *MThread::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MThread*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MThread::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MThread*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MThread::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MThread*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MThread::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MThread*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MObjLookup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MObjLookup::Class_Name()
{
   return "MObjLookup";
}

//______________________________________________________________________________
const char *MObjLookup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MObjLookup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MObjLookup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MObjLookup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MObjLookup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MObjLookup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MObjLookup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MObjLookup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MLog::Streamer(TBuffer &R__b)
{
   // Stream an object of class MLog.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MLog::Class(),this);
   } else {
      R__b.WriteClassBuffer(MLog::Class(),this);
   }
}

//______________________________________________________________________________
void MLog::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MLog.
      TClass *R__cl = ::MLog::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBuffer", &fBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBase[161]", fBase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPPtr", &fPPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEPtr", &fEPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputLevel", &fOutputLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugLevel", &fDebugLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDevice", &fDevice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsNull", &fIsNull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutAllocated", &fOutAllocated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGui", &fGui);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDirectGui", &fIsDirectGui);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGuiLines", &fGuiLines);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumLines", &fNumLines);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGuiLine", &fGuiLine);
      R__insp.InspectMember(fGuiLine, "fGuiLine.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlugins", &fPlugins);
      R__insp.GenericShowMembers("basic_streambuf<char,char_traits<char> >", ( ::basic_streambuf<char,char_traits<char> > *) (this ), false);
      R__insp.GenericShowMembers("basic_ostream<char,char_traits<char> >", ( ::basic_ostream<char,char_traits<char> > *) (this ), false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MLog(void *p) {
      return  p ? new(p) ::MLog : new ::MLog;
   }
   static void *newArray_MLog(Long_t nElements, void *p) {
      return p ? new(p) ::MLog[nElements] : new ::MLog[nElements];
   }
   // Wrapper around operator delete
   static void delete_MLog(void *p) {
      delete ((::MLog*)p);
   }
   static void deleteArray_MLog(void *p) {
      delete [] ((::MLog*)p);
   }
   static void destruct_MLog(void *p) {
      typedef ::MLog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MLog

//______________________________________________________________________________
void MLogPlugin::Streamer(TBuffer &R__b)
{
   // Stream an object of class MLogPlugin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MLogPlugin::Class(),this);
   } else {
      R__b.WriteClassBuffer(MLogPlugin::Class(),this);
   }
}

//______________________________________________________________________________
void MLogPlugin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MLogPlugin.
      TClass *R__cl = ::MLogPlugin::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MLogPlugin(void *p) {
      delete ((::MLogPlugin*)p);
   }
   static void deleteArray_MLogPlugin(void *p) {
      delete [] ((::MLogPlugin*)p);
   }
   static void destruct_MLogPlugin(void *p) {
      typedef ::MLogPlugin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MLogPlugin

//______________________________________________________________________________
void MLogHtml::Streamer(TBuffer &R__b)
{
   // Stream an object of class MLogHtml.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MLogHtml::Class(),this);
   } else {
      R__b.WriteClassBuffer(MLogHtml::Class(),this);
   }
}

//______________________________________________________________________________
void MLogHtml::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MLogHtml.
      TClass *R__cl = ::MLogHtml::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOut", &fOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUnderline", &fUnderline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColor", &fColor);
      MLogPlugin::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MLogHtml(void *p) {
      return  p ? new(p) ::MLogHtml : new ::MLogHtml;
   }
   static void *newArray_MLogHtml(Long_t nElements, void *p) {
      return p ? new(p) ::MLogHtml[nElements] : new ::MLogHtml[nElements];
   }
   // Wrapper around operator delete
   static void delete_MLogHtml(void *p) {
      delete ((::MLogHtml*)p);
   }
   static void deleteArray_MLogHtml(void *p) {
      delete [] ((::MLogHtml*)p);
   }
   static void destruct_MLogHtml(void *p) {
      typedef ::MLogHtml current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MLogHtml

//______________________________________________________________________________
void MReadSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReadSocket.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReadSocket::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReadSocket::Class(),this);
   }
}

//______________________________________________________________________________
void MReadSocket::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReadSocket.
      TClass *R__cl = ::MReadSocket::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBuffer", &fBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMtu", &fMtu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeout", &fTimeout);
      R__insp.InspectMember(fTimeout, "fTimeout.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fServSock", &fServSock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRxSocket", &fRxSocket);
      R__insp.GenericShowMembers("basic_streambuf<char,char_traits<char> >", ( ::basic_streambuf<char,char_traits<char> > *) (this ), false);
      R__insp.GenericShowMembers("basic_istream<char,char_traits<char> >", ( ::basic_istream<char,char_traits<char> > *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MReadSocket(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MReadSocket : new ::MReadSocket;
   }
   static void *newArray_MReadSocket(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MReadSocket[nElements] : new ::MReadSocket[nElements];
   }
   // Wrapper around operator delete
   static void delete_MReadSocket(void *p) {
      delete ((::MReadSocket*)p);
   }
   static void deleteArray_MReadSocket(void *p) {
      delete [] ((::MReadSocket*)p);
   }
   static void destruct_MReadSocket(void *p) {
      typedef ::MReadSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReadSocket

//______________________________________________________________________________
void MSpline3::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSpline3.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSpline3::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSpline3::Class(),this);
   }
}

//______________________________________________________________________________
void MSpline3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSpline3.
      TClass *R__cl = ::MSpline3::IsA();
      if (R__cl || R__insp.IsA()) { }
      TSpline3::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MSpline3(void *p) {
      return  p ? new(p) ::MSpline3 : new ::MSpline3;
   }
   static void *newArray_MSpline3(Long_t nElements, void *p) {
      return p ? new(p) ::MSpline3[nElements] : new ::MSpline3[nElements];
   }
   // Wrapper around operator delete
   static void delete_MSpline3(void *p) {
      delete ((::MSpline3*)p);
   }
   static void deleteArray_MSpline3(void *p) {
      delete [] ((::MSpline3*)p);
   }
   static void destruct_MSpline3(void *p) {
      typedef ::MSpline3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSpline3

//______________________________________________________________________________
void MQuaternion::Streamer(TBuffer &R__b)
{
   // Stream an object of class MQuaternion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MQuaternion::Class(),this);
   } else {
      R__b.WriteClassBuffer(MQuaternion::Class(),this);
   }
}

//______________________________________________________________________________
void MQuaternion::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MQuaternion.
      TClass *R__cl = ::MQuaternion::IsA();
      if (R__cl || R__insp.IsA()) { }
      TQuaternion::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MQuaternion(void *p) {
      delete ((::MQuaternion*)p);
   }
   static void deleteArray_MQuaternion(void *p) {
      delete [] ((::MQuaternion*)p);
   }
   static void destruct_MQuaternion(void *p) {
      typedef ::MQuaternion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MQuaternion

//______________________________________________________________________________
void MReflection::Streamer(TBuffer &R__b)
{
   // Stream an object of class MReflection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MReflection::Class(),this);
   } else {
      R__b.WriteClassBuffer(MReflection::Class(),this);
   }
}

//______________________________________________________________________________
void MReflection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MReflection.
      TClass *R__cl = ::MReflection::IsA();
      if (R__cl || R__insp.IsA()) { }
      TRotation::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MReflection(void *p) {
      delete ((::MReflection*)p);
   }
   static void deleteArray_MReflection(void *p) {
      delete [] ((::MReflection*)p);
   }
   static void destruct_MReflection(void *p) {
      typedef ::MReflection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MReflection

//______________________________________________________________________________
void MString::Streamer(TBuffer &R__b)
{
   // Stream an object of class MString.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MString::Class(),this);
   } else {
      R__b.WriteClassBuffer(MString::Class(),this);
   }
}

//______________________________________________________________________________
void MString::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MString.
      TClass *R__cl = ::MString::IsA();
      if (R__cl || R__insp.IsA()) { }
      TString::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MString(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MString : new ::MString;
   }
   static void *newArray_MString(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MString[nElements] : new ::MString[nElements];
   }
   // Wrapper around operator delete
   static void delete_MString(void *p) {
      delete ((::MString*)p);
   }
   static void deleteArray_MString(void *p) {
      delete [] ((::MString*)p);
   }
   static void destruct_MString(void *p) {
      typedef ::MString current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MString

//______________________________________________________________________________
void MEnv::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEnv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEnv::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEnv::Class(),this);
   }
}

//______________________________________________________________________________
void MEnv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MEnv.
      TClass *R__cl = ::MEnv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChecked", &fChecked);
      R__insp.InspectMember(fChecked, "fChecked.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      TEnv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MEnv(void *p) {
      return  p ? new(p) ::MEnv : new ::MEnv;
   }
   static void *newArray_MEnv(Long_t nElements, void *p) {
      return p ? new(p) ::MEnv[nElements] : new ::MEnv[nElements];
   }
   // Wrapper around operator delete
   static void delete_MEnv(void *p) {
      delete ((::MEnv*)p);
   }
   static void deleteArray_MEnv(void *p) {
      delete [] ((::MEnv*)p);
   }
   static void destruct_MEnv(void *p) {
      typedef ::MEnv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MEnv

//______________________________________________________________________________
void MIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class MIter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MIter::Class(),this);
   } else {
      R__b.WriteClassBuffer(MIter::Class(),this);
   }
}

//______________________________________________________________________________
void MIter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MIter.
      TClass *R__cl = ::MIter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIterator", &fIterator);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MIter(void *p) {
      delete ((::MIter*)p);
   }
   static void deleteArray_MIter(void *p) {
      delete [] ((::MIter*)p);
   }
   static void destruct_MIter(void *p) {
      typedef ::MIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MIter

//______________________________________________________________________________
void MDirIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class MDirIter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MDirIter::Class(),this);
   } else {
      R__b.WriteClassBuffer(MDirIter::Class(),this);
   }
}

//______________________________________________________________________________
void MDirIter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MDirIter.
      TClass *R__cl = ::MDirIter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fList", &fList);
      R__insp.InspectMember(fList, "fList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilter", &fFilter);
      R__insp.InspectMember(fFilter, "fFilter.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNext", &fNext);
      R__insp.InspectMember(fNext, "fNext.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirPtr", &fDirPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentPath", &fCurrentPath);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MDirIter(void *p) {
      return  p ? new(p) ::MDirIter : new ::MDirIter;
   }
   static void *newArray_MDirIter(Long_t nElements, void *p) {
      return p ? new(p) ::MDirIter[nElements] : new ::MDirIter[nElements];
   }
   // Wrapper around operator delete
   static void delete_MDirIter(void *p) {
      delete ((::MDirIter*)p);
   }
   static void deleteArray_MDirIter(void *p) {
      delete [] ((::MDirIter*)p);
   }
   static void destruct_MDirIter(void *p) {
      typedef ::MDirIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MDirIter

//______________________________________________________________________________
void MThread::Streamer(TBuffer &R__b)
{
   // Stream an object of class MThread.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MThread::Class(),this);
   } else {
      R__b.WriteClassBuffer(MThread::Class(),this);
   }
}

//______________________________________________________________________________
void MThread::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MThread.
      TClass *R__cl = ::MThread::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThread", &fThread);
      R__insp.InspectMember(fThread, "fThread.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumCleanups", &fNumCleanups);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MThread(void *p) {
      delete ((::MThread*)p);
   }
   static void deleteArray_MThread(void *p) {
      delete [] ((::MThread*)p);
   }
   static void destruct_MThread(void *p) {
      typedef ::MThread current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MThread

//______________________________________________________________________________
void MInputStreamID::Streamer(TBuffer &R__b)
{
   // Stream an object of class MInputStreamID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MInputStreamID::Class(),this);
   } else {
      R__b.WriteClassBuffer(MInputStreamID::Class(),this);
   }
}

//______________________________________________________________________________
void MInputStreamID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MInputStreamID.
      TClass *R__cl = ::MInputStreamID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStreamId", &fStreamId);
      R__insp.InspectMember(fStreamId, "fStreamId.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MInputStreamID(void *p) {
      return  p ? new(p) ::MInputStreamID : new ::MInputStreamID;
   }
   static void *newArray_MInputStreamID(Long_t nElements, void *p) {
      return p ? new(p) ::MInputStreamID[nElements] : new ::MInputStreamID[nElements];
   }
   // Wrapper around operator delete
   static void delete_MInputStreamID(void *p) {
      delete ((::MInputStreamID*)p);
   }
   static void deleteArray_MInputStreamID(void *p) {
      delete [] ((::MInputStreamID*)p);
   }
   static void destruct_MInputStreamID(void *p) {
      typedef ::MInputStreamID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MInputStreamID

//______________________________________________________________________________
void MParContainer::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParContainer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParContainer::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParContainer::Class(),this);
   }
}

//______________________________________________________________________________
void MParContainer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParContainer.
      TClass *R__cl = ::MParContainer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLog", &fLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplay", &fDisplay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReadyToSave", &fReadyToSave);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParContainer(void *p) {
      return  p ? new(p) ::MParContainer : new ::MParContainer;
   }
   static void *newArray_MParContainer(Long_t nElements, void *p) {
      return p ? new(p) ::MParContainer[nElements] : new ::MParContainer[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParContainer(void *p) {
      delete ((::MParContainer*)p);
   }
   static void deleteArray_MParContainer(void *p) {
      delete [] ((::MParContainer*)p);
   }
   static void destruct_MParContainer(void *p) {
      typedef ::MParContainer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParContainer

//______________________________________________________________________________
void MParList::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParList::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParList::Class(),this);
   }
}

//______________________________________________________________________________
void MParList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParList.
      TClass *R__cl = ::MParList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAutodelete", &fAutodelete);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParList(void *p) {
      return  p ? new(p) ::MParList : new ::MParList;
   }
   static void *newArray_MParList(Long_t nElements, void *p) {
      return p ? new(p) ::MParList[nElements] : new ::MParList[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParList(void *p) {
      delete ((::MParList*)p);
   }
   static void deleteArray_MParList(void *p) {
      delete [] ((::MParList*)p);
   }
   static void destruct_MParList(void *p) {
      typedef ::MParList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParList

//______________________________________________________________________________
void MTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTask::Class(),this);
   }
}

//______________________________________________________________________________
void MTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTask.
      TClass *R__cl = ::MTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fListOfBranches", &fListOfBranches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilter", &fFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSerialNumber", &fSerialNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPreprocessed", &fIsPreprocessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStopwatch", &fStopwatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumExecutions", &fNumExecutions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumExec0", &fNumExec0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAccelerator", &fAccelerator);
      MInputStreamID::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTask(void *p) {
      return  p ? new(p) ::MTask : new ::MTask;
   }
   static void *newArray_MTask(Long_t nElements, void *p) {
      return p ? new(p) ::MTask[nElements] : new ::MTask[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTask(void *p) {
      delete ((::MTask*)p);
   }
   static void deleteArray_MTask(void *p) {
      delete [] ((::MTask*)p);
   }
   static void destruct_MTask(void *p) {
      typedef ::MTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTask

//______________________________________________________________________________
void MTaskEnv::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTaskEnv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTaskEnv::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTaskEnv::Class(),this);
   }
}

//______________________________________________________________________________
void MTaskEnv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTaskEnv.
      TClass *R__cl = ::MTaskEnv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTask", &fTask);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTaskEnv(void *p) {
      return  p ? new(p) ::MTaskEnv : new ::MTaskEnv;
   }
   static void *newArray_MTaskEnv(Long_t nElements, void *p) {
      return p ? new(p) ::MTaskEnv[nElements] : new ::MTaskEnv[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTaskEnv(void *p) {
      delete ((::MTaskEnv*)p);
   }
   static void deleteArray_MTaskEnv(void *p) {
      delete [] ((::MTaskEnv*)p);
   }
   static void destruct_MTaskEnv(void *p) {
      typedef ::MTaskEnv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTaskEnv

//______________________________________________________________________________
void MTaskInteractive::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTaskInteractive.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTaskInteractive::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTaskInteractive::Class(),this);
   }
}

//______________________________________________________________________________
void MTaskInteractive::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTaskInteractive.
      TClass *R__cl = ::MTaskInteractive::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCall[4]", &fCall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPreProcess", &fPreProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcess", &fProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPostProcess", &fPostProcess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReInit", &fReInit);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTaskInteractive(void *p) {
      return  p ? new(p) ::MTaskInteractive : new ::MTaskInteractive;
   }
   static void *newArray_MTaskInteractive(Long_t nElements, void *p) {
      return p ? new(p) ::MTaskInteractive[nElements] : new ::MTaskInteractive[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTaskInteractive(void *p) {
      delete ((::MTaskInteractive*)p);
   }
   static void deleteArray_MTaskInteractive(void *p) {
      delete [] ((::MTaskInteractive*)p);
   }
   static void destruct_MTaskInteractive(void *p) {
      typedef ::MTaskInteractive current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTaskInteractive

//______________________________________________________________________________
void MTaskList::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTaskList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTaskList::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTaskList::Class(),this);
   }
}

//______________________________________________________________________________
void MTaskList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTaskList.
      TClass *R__cl = ::MTaskList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTasks", &fTasks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTasksProcess", &fTasksProcess);
      R__insp.InspectMember(fTasksProcess, "fTasksProcess.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParList", &fParList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumPasses", &fNumPasses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumPass", &fNumPass);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTaskList(void *p) {
      return  p ? new(p) ::MTaskList : new ::MTaskList;
   }
   static void *newArray_MTaskList(Long_t nElements, void *p) {
      return p ? new(p) ::MTaskList[nElements] : new ::MTaskList[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTaskList(void *p) {
      delete ((::MTaskList*)p);
   }
   static void deleteArray_MTaskList(void *p) {
      delete [] ((::MTaskList*)p);
   }
   static void destruct_MTaskList(void *p) {
      typedef ::MTaskList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTaskList

//______________________________________________________________________________
void MFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class MFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(MFilter::Class(),this);
   }
}

//______________________________________________________________________________
void MFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MFilter.
      TClass *R__cl = ::MFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInverted", &fInverted);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MFilter(void *p) {
      delete ((::MFilter*)p);
   }
   static void deleteArray_MFilter(void *p) {
      delete [] ((::MFilter*)p);
   }
   static void destruct_MFilter(void *p) {
      typedef ::MFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MFilter

//______________________________________________________________________________
void MEvtLoop::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEvtLoop.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEvtLoop::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEvtLoop::Class(),this);
   }
}

//______________________________________________________________________________
void MEvtLoop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MEvtLoop.
      TClass *R__cl = ::MEvtLoop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParList", &fParList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaskList", &fTaskList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProgress", &fProgress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvents", &fNumEvents);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MEvtLoop(void *p) {
      return  p ? new(p) ::MEvtLoop : new ::MEvtLoop;
   }
   static void *newArray_MEvtLoop(Long_t nElements, void *p) {
      return p ? new(p) ::MEvtLoop[nElements] : new ::MEvtLoop[nElements];
   }
   // Wrapper around operator delete
   static void delete_MEvtLoop(void *p) {
      delete ((::MEvtLoop*)p);
   }
   static void deleteArray_MEvtLoop(void *p) {
      delete [] ((::MEvtLoop*)p);
   }
   static void destruct_MEvtLoop(void *p) {
      typedef ::MEvtLoop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MEvtLoop

//______________________________________________________________________________
void MStatusArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class MStatusArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MStatusArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(MStatusArray::Class(),this);
   }
}

//______________________________________________________________________________
void MStatusArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MStatusArray.
      TClass *R__cl = ::MStatusArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObjArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MStatusArray(void *p) {
      return  p ? new(p) ::MStatusArray : new ::MStatusArray;
   }
   static void *newArray_MStatusArray(Long_t nElements, void *p) {
      return p ? new(p) ::MStatusArray[nElements] : new ::MStatusArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_MStatusArray(void *p) {
      delete ((::MStatusArray*)p);
   }
   static void deleteArray_MStatusArray(void *p) {
      delete [] ((::MStatusArray*)p);
   }
   static void destruct_MStatusArray(void *p) {
      typedef ::MStatusArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_MStatusArray(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::MStatusArray*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::MStatusArray

//______________________________________________________________________________
void MStatusDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class MStatusDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MStatusDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(MStatusDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void MStatusDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MStatusDisplay.
      TClass *R__cl = ::MStatusDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLog", &fLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUserFrame", &fUserFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBar", &fBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLayCanvas", &fLayCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimer", &fTimer);
      R__insp.InspectMember(fTimer, "fTimer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMutex", &fMutex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogIdx", &fLogIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogTimer", &fLogTimer);
      R__insp.InspectMember(fLogTimer, "fLogTimer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogBox", &fLogBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFont", &fFont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsLocked", &fIsLocked);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBatch", &fBatch);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MStatusDisplay(void *p) {
      return  p ? new(p) ::MStatusDisplay : new ::MStatusDisplay;
   }
   static void *newArray_MStatusDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::MStatusDisplay[nElements] : new ::MStatusDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_MStatusDisplay(void *p) {
      delete ((::MStatusDisplay*)p);
   }
   static void deleteArray_MStatusDisplay(void *p) {
      delete [] ((::MStatusDisplay*)p);
   }
   static void destruct_MStatusDisplay(void *p) {
      typedef ::MStatusDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MStatusDisplay

//______________________________________________________________________________
void MProgressBar::Streamer(TBuffer &R__b)
{
   // Stream an object of class MProgressBar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MProgressBar::Class(),this);
   } else {
      R__b.WriteClassBuffer(MProgressBar::Class(),this);
   }
}

//______________________________________________________________________________
void MProgressBar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MProgressBar.
      TClass *R__cl = ::MProgressBar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBar", &fBar);
      TGTransientFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MProgressBar(void *p) {
      return  p ? new(p) ::MProgressBar : new ::MProgressBar;
   }
   static void *newArray_MProgressBar(Long_t nElements, void *p) {
      return p ? new(p) ::MProgressBar[nElements] : new ::MProgressBar[nElements];
   }
   // Wrapper around operator delete
   static void delete_MProgressBar(void *p) {
      delete ((::MProgressBar*)p);
   }
   static void deleteArray_MProgressBar(void *p) {
      delete [] ((::MProgressBar*)p);
   }
   static void destruct_MProgressBar(void *p) {
      typedef ::MProgressBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MProgressBar

//______________________________________________________________________________
void MSearch::Streamer(TBuffer &R__b)
{
   // Stream an object of class MSearch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MSearch::Class(),this);
   } else {
      R__b.WriteClassBuffer(MSearch::Class(),this);
   }
}

//______________________________________________________________________________
void MSearch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MSearch.
      TClass *R__cl = ::MSearch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      TGTransientFrame::ShowMembers(R__insp);
      TGWidget::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MSearch(void *p) {
      delete ((::MSearch*)p);
   }
   static void deleteArray_MSearch(void *p) {
      delete [] ((::MSearch*)p);
   }
   static void destruct_MSearch(void *p) {
      typedef ::MSearch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MSearch

//______________________________________________________________________________
void MGTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGTask::Class(),this);
   }
}

//______________________________________________________________________________
void MGTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGTask.
      TClass *R__cl = ::MGTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrame", &fFrame);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MGTask(void *p) {
      return  p ? new(p) ::MGTask : new ::MGTask;
   }
   static void *newArray_MGTask(Long_t nElements, void *p) {
      return p ? new(p) ::MGTask[nElements] : new ::MGTask[nElements];
   }
   // Wrapper around operator delete
   static void delete_MGTask(void *p) {
      delete ((::MGTask*)p);
   }
   static void deleteArray_MGTask(void *p) {
      delete [] ((::MGTask*)p);
   }
   static void destruct_MGTask(void *p) {
      typedef ::MGTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MGTask

//______________________________________________________________________________
void MGList::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGList::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGList::Class(),this);
   }
}

//______________________________________________________________________________
void MGList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGList.
      TClass *R__cl = ::MGList::IsA();
      if (R__cl || R__insp.IsA()) { }
      TList::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MGList(void *p) {
      return  p ? new(p) ::MGList : new ::MGList;
   }
   static void *newArray_MGList(Long_t nElements, void *p) {
      return p ? new(p) ::MGList[nElements] : new ::MGList[nElements];
   }
   // Wrapper around operator delete
   static void delete_MGList(void *p) {
      delete ((::MGList*)p);
   }
   static void deleteArray_MGList(void *p) {
      delete [] ((::MGList*)p);
   }
   static void destruct_MGList(void *p) {
      typedef ::MGList current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_MGList(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::MGList*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::MGList

//______________________________________________________________________________
void MGMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGMap::Class(),this);
   }
}

//______________________________________________________________________________
void MGMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGMap.
      TClass *R__cl = ::MGMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      TExMap::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MGMap(void *p) {
      return  p ? new(p) ::MGMap : new ::MGMap;
   }
   static void *newArray_MGMap(Long_t nElements, void *p) {
      return p ? new(p) ::MGMap[nElements] : new ::MGMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_MGMap(void *p) {
      delete ((::MGMap*)p);
   }
   static void deleteArray_MGMap(void *p) {
      delete [] ((::MGMap*)p);
   }
   static void destruct_MGMap(void *p) {
      typedef ::MGMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MGMap

//______________________________________________________________________________
void MGGroupFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class MGGroupFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MGGroupFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(MGGroupFrame::Class(),this);
   }
}

//______________________________________________________________________________
void MGGroupFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MGGroupFrame.
      TClass *R__cl = ::MGGroupFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTask", &fTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      TGGroupFrame::ShowMembers(R__insp);
      TGWidget::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MGGroupFrame(void *p) {
      delete ((::MGGroupFrame*)p);
   }
   static void deleteArray_MGGroupFrame(void *p) {
      delete [] ((::MGGroupFrame*)p);
   }
   static void destruct_MGGroupFrame(void *p) {
      typedef ::MGGroupFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MGGroupFrame

//______________________________________________________________________________
void MArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fN;
      R__b.CheckByteCount(R__s, R__c, MArray::IsA());
   } else {
      R__c = R__b.WriteVersion(MArray::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fN;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArray.
      TClass *R__cl = ::MArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN", &fN);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MArray(void *p) {
      delete ((::MArray*)p);
   }
   static void deleteArray_MArray(void *p) {
      delete [] ((::MArray*)p);
   }
   static void destruct_MArray(void *p) {
      typedef ::MArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArray(TBuffer &buf, void *obj) {
      ((::MArray*)obj)->::MArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArray

//______________________________________________________________________________
void MArrayB::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArrayB.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MArray::Streamer(R__b);
      delete [] fArray;
      fArray = new Byte_t[fN];
      R__b.ReadFastArray(fArray,fN);
      R__b.CheckByteCount(R__s, R__c, MArrayB::IsA());
   } else {
      R__c = R__b.WriteVersion(MArrayB::IsA(), kTRUE);
      MArray::Streamer(R__b);
      R__b.WriteFastArray(fArray,fN);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArrayB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArrayB.
      TClass *R__cl = ::MArrayB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MArrayB(void *p) {
      return  p ? new(p) ::MArrayB : new ::MArrayB;
   }
   static void *newArray_MArrayB(Long_t nElements, void *p) {
      return p ? new(p) ::MArrayB[nElements] : new ::MArrayB[nElements];
   }
   // Wrapper around operator delete
   static void delete_MArrayB(void *p) {
      delete ((::MArrayB*)p);
   }
   static void deleteArray_MArrayB(void *p) {
      delete [] ((::MArrayB*)p);
   }
   static void destruct_MArrayB(void *p) {
      typedef ::MArrayB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArrayB(TBuffer &buf, void *obj) {
      ((::MArrayB*)obj)->::MArrayB::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArrayB

//______________________________________________________________________________
void MArrayS::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArrayS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MArray::Streamer(R__b);
      delete [] fArray;
      fArray = new UShort_t[fN];
      R__b.ReadFastArray(fArray,fN);
      R__b.CheckByteCount(R__s, R__c, MArrayS::IsA());
   } else {
      R__c = R__b.WriteVersion(MArrayS::IsA(), kTRUE);
      MArray::Streamer(R__b);
      R__b.WriteFastArray(fArray,fN);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArrayS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArrayS.
      TClass *R__cl = ::MArrayS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MArrayS(void *p) {
      return  p ? new(p) ::MArrayS : new ::MArrayS;
   }
   static void *newArray_MArrayS(Long_t nElements, void *p) {
      return p ? new(p) ::MArrayS[nElements] : new ::MArrayS[nElements];
   }
   // Wrapper around operator delete
   static void delete_MArrayS(void *p) {
      delete ((::MArrayS*)p);
   }
   static void deleteArray_MArrayS(void *p) {
      delete [] ((::MArrayS*)p);
   }
   static void destruct_MArrayS(void *p) {
      typedef ::MArrayS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArrayS(TBuffer &buf, void *obj) {
      ((::MArrayS*)obj)->::MArrayS::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArrayS

//______________________________________________________________________________
void MArrayD::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArrayD.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MArray::Streamer(R__b);
      delete [] fArray;
      fArray = new Double_t[fN];
      R__b.ReadFastArray(fArray,fN);
      R__b.CheckByteCount(R__s, R__c, MArrayD::IsA());
   } else {
      R__c = R__b.WriteVersion(MArrayD::IsA(), kTRUE);
      MArray::Streamer(R__b);
      R__b.WriteFastArray(fArray,fN);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArrayD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArrayD.
      TClass *R__cl = ::MArrayD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MArrayD(void *p) {
      return  p ? new(p) ::MArrayD : new ::MArrayD;
   }
   static void *newArray_MArrayD(Long_t nElements, void *p) {
      return p ? new(p) ::MArrayD[nElements] : new ::MArrayD[nElements];
   }
   // Wrapper around operator delete
   static void delete_MArrayD(void *p) {
      delete ((::MArrayD*)p);
   }
   static void deleteArray_MArrayD(void *p) {
      delete [] ((::MArrayD*)p);
   }
   static void destruct_MArrayD(void *p) {
      typedef ::MArrayD current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArrayD(TBuffer &buf, void *obj) {
      ((::MArrayD*)obj)->::MArrayD::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArrayD

//______________________________________________________________________________
void MArrayF::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArrayF.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MArray::Streamer(R__b);
      delete [] fArray;
      fArray = new Float_t[fN];
      R__b.ReadFastArray(fArray,fN);
      R__b.CheckByteCount(R__s, R__c, MArrayF::IsA());
   } else {
      R__c = R__b.WriteVersion(MArrayF::IsA(), kTRUE);
      MArray::Streamer(R__b);
      R__b.WriteFastArray(fArray,fN);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArrayF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArrayF.
      TClass *R__cl = ::MArrayF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MArrayF(void *p) {
      return  p ? new(p) ::MArrayF : new ::MArrayF;
   }
   static void *newArray_MArrayF(Long_t nElements, void *p) {
      return p ? new(p) ::MArrayF[nElements] : new ::MArrayF[nElements];
   }
   // Wrapper around operator delete
   static void delete_MArrayF(void *p) {
      delete ((::MArrayF*)p);
   }
   static void deleteArray_MArrayF(void *p) {
      delete [] ((::MArrayF*)p);
   }
   static void destruct_MArrayF(void *p) {
      typedef ::MArrayF current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArrayF(TBuffer &buf, void *obj) {
      ((::MArrayF*)obj)->::MArrayF::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArrayF

//______________________________________________________________________________
void MArrayI::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArrayI.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MArray::Streamer(R__b);
      delete [] fArray;
      fArray = new Int_t[fN];
      R__b.ReadFastArray(fArray,fN);
      R__b.CheckByteCount(R__s, R__c, MArrayI::IsA());
   } else {
      R__c = R__b.WriteVersion(MArrayI::IsA(), kTRUE);
      MArray::Streamer(R__b);
      R__b.WriteFastArray(fArray,fN);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MArrayI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArrayI.
      TClass *R__cl = ::MArrayI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      MArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MArrayI(void *p) {
      return  p ? new(p) ::MArrayI : new ::MArrayI;
   }
   static void *newArray_MArrayI(Long_t nElements, void *p) {
      return p ? new(p) ::MArrayI[nElements] : new ::MArrayI[nElements];
   }
   // Wrapper around operator delete
   static void delete_MArrayI(void *p) {
      delete ((::MArrayI*)p);
   }
   static void deleteArray_MArrayI(void *p) {
      delete [] ((::MArrayI*)p);
   }
   static void destruct_MArrayI(void *p) {
      typedef ::MArrayI current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MArrayI(TBuffer &buf, void *obj) {
      ((::MArrayI*)obj)->::MArrayI::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MArrayI

//______________________________________________________________________________
void MLut::Streamer(TBuffer &R__b)
{
   // Stream an object of class MLut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MLut::Class(),this);
   } else {
      R__b.WriteClassBuffer(MLut::Class(),this);
   }
}

//______________________________________________________________________________
void MLut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MLut.
      TClass *R__cl = ::MLut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinEntries", &fMinEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxEntries", &fMaxEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxIndex", &fMaxIndex);
      TObjArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MLut(void *p) {
      return  p ? new(p) ::MLut : new ::MLut;
   }
   static void *newArray_MLut(Long_t nElements, void *p) {
      return p ? new(p) ::MLut[nElements] : new ::MLut[nElements];
   }
   // Wrapper around operator delete
   static void delete_MLut(void *p) {
      delete ((::MLut*)p);
   }
   static void deleteArray_MLut(void *p) {
      delete [] ((::MLut*)p);
   }
   static void destruct_MLut(void *p) {
      typedef ::MLut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_MLut(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::MLut*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::MLut

//______________________________________________________________________________
void MObjLookup::Streamer(TBuffer &R__b)
{
   // Stream an object of class MObjLookup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MObjLookup::Class(),this);
   } else {
      R__b.WriteClassBuffer(MObjLookup::Class(),this);
   }
}

//______________________________________________________________________________
void MObjLookup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MObjLookup.
      TClass *R__cl = ::MObjLookup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", &fMap);
      R__insp.InspectMember(fMap, "fMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDefault", &fDefault);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MObjLookup(void *p) {
      return  p ? new(p) ::MObjLookup : new ::MObjLookup;
   }
   static void *newArray_MObjLookup(Long_t nElements, void *p) {
      return p ? new(p) ::MObjLookup[nElements] : new ::MObjLookup[nElements];
   }
   // Wrapper around operator delete
   static void delete_MObjLookup(void *p) {
      delete ((::MObjLookup*)p);
   }
   static void deleteArray_MObjLookup(void *p) {
      delete [] ((::MObjLookup*)p);
   }
   static void destruct_MObjLookup(void *p) {
      typedef ::MObjLookup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MObjLookup

//______________________________________________________________________________
void MTime::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTime.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTime::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTime::Class(),this);
   }
}

//______________________________________________________________________________
void MTime::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTime.
      TClass *R__cl = ::MTime::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMjd", &fMjd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.InspectMember(fTime, "fTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNanoSec", &fNanoSec);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTime(void *p) {
      return  p ? new(p) ::MTime : new ::MTime;
   }
   static void *newArray_MTime(Long_t nElements, void *p) {
      return p ? new(p) ::MTime[nElements] : new ::MTime[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTime(void *p) {
      delete ((::MTime*)p);
   }
   static void deleteArray_MTime(void *p) {
      delete [] ((::MTime*)p);
   }
   static void destruct_MTime(void *p) {
      typedef ::MTime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTime

//______________________________________________________________________________
void MArgs::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArgs.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MArgs::Class(),this);
   } else {
      R__b.WriteClassBuffer(MArgs::Class(),this);
   }
}

//______________________________________________________________________________
void MArgs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArgs.
      TClass *R__cl = ::MArgs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArgc", &fArgc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArgv", &fArgv);
      R__insp.InspectMember(fArgv, "fArgv.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MArgs(void *p) {
      delete ((::MArgs*)p);
   }
   static void deleteArray_MArgs(void *p) {
      delete [] ((::MArgs*)p);
   }
   static void destruct_MArgs(void *p) {
      typedef ::MArgs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MArgs

//______________________________________________________________________________
void MArgsEntry::Streamer(TBuffer &R__b)
{
   // Stream an object of class MArgsEntry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MArgsEntry::Class(),this);
   } else {
      R__b.WriteClassBuffer(MArgsEntry::Class(),this);
   }
}

//______________________________________________________________________________
void MArgsEntry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MArgsEntry.
      TClass *R__cl = ::MArgsEntry::IsA();
      if (R__cl || R__insp.IsA()) { }
      TString::ShowMembers(R__insp);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MArgsEntry(void *p) {
      delete ((::MArgsEntry*)p);
   }
   static void deleteArray_MArgsEntry(void *p) {
      delete [] ((::MArgsEntry*)p);
   }
   static void destruct_MArgsEntry(void *p) {
      typedef ::MArgsEntry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MArgsEntry

//______________________________________________________________________________
void MParameterI::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParameterI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParameterI::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParameterI::Class(),this);
   }
}

//______________________________________________________________________________
void MParameterI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParameterI.
      TClass *R__cl = ::MParameterI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", &fVal);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParameterI(void *p) {
      return  p ? new(p) ::MParameterI : new ::MParameterI;
   }
   static void *newArray_MParameterI(Long_t nElements, void *p) {
      return p ? new(p) ::MParameterI[nElements] : new ::MParameterI[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParameterI(void *p) {
      delete ((::MParameterI*)p);
   }
   static void deleteArray_MParameterI(void *p) {
      delete [] ((::MParameterI*)p);
   }
   static void destruct_MParameterI(void *p) {
      typedef ::MParameterI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParameterI

//______________________________________________________________________________
void MParameterD::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParameterD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParameterD::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParameterD::Class(),this);
   }
}

//______________________________________________________________________________
void MParameterD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParameterD.
      TClass *R__cl = ::MParameterD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", &fVal);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParameterD(void *p) {
      return  p ? new(p) ::MParameterD : new ::MParameterD;
   }
   static void *newArray_MParameterD(Long_t nElements, void *p) {
      return p ? new(p) ::MParameterD[nElements] : new ::MParameterD[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParameterD(void *p) {
      delete ((::MParameterD*)p);
   }
   static void deleteArray_MParameterD(void *p) {
      delete [] ((::MParameterD*)p);
   }
   static void destruct_MParameterD(void *p) {
      typedef ::MParameterD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParameterD

//______________________________________________________________________________
void MParameterDerr::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParameterDerr.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParameterDerr::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParameterDerr::Class(),this);
   }
}

//______________________________________________________________________________
void MParameterDerr::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParameterDerr.
      TClass *R__cl = ::MParameterDerr::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErr", &fErr);
      MParameterD::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParameterDerr(void *p) {
      return  p ? new(p) ::MParameterDerr : new ::MParameterDerr;
   }
   static void *newArray_MParameterDerr(Long_t nElements, void *p) {
      return p ? new(p) ::MParameterDerr[nElements] : new ::MParameterDerr[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParameterDerr(void *p) {
      delete ((::MParameterDerr*)p);
   }
   static void deleteArray_MParameterDerr(void *p) {
      delete [] ((::MParameterDerr*)p);
   }
   static void destruct_MParameterDerr(void *p) {
      typedef ::MParameterDerr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParameterDerr

//______________________________________________________________________________
void MParEnv::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParEnv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParEnv::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParEnv::Class(),this);
   }
}

//______________________________________________________________________________
void MParEnv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParEnv.
      TClass *R__cl = ::MParEnv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCont", &fCont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClassName", &fClassName);
      R__insp.InspectMember(fClassName, "fClassName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOwner", &fIsOwner);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParEnv(void *p) {
      return  p ? new(p) ::MParEnv : new ::MParEnv;
   }
   static void *newArray_MParEnv(Long_t nElements, void *p) {
      return p ? new(p) ::MParEnv[nElements] : new ::MParEnv[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParEnv(void *p) {
      delete ((::MParEnv*)p);
   }
   static void deleteArray_MParEnv(void *p) {
      delete [] ((::MParEnv*)p);
   }
   static void destruct_MParEnv(void *p) {
      typedef ::MParEnv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParEnv

//______________________________________________________________________________
void MParEmulated::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParEmulated.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParEmulated::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParEmulated::Class(),this);
   }
}

//______________________________________________________________________________
void MParEmulated::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParEmulated.
      TClass *R__cl = ::MParEmulated::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPtr", &fPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClassName", &fClassName);
      R__insp.InspectMember(fClassName, "fClassName.");
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParEmulated(void *p) {
      return  p ? new(p) ::MParEmulated : new ::MParEmulated;
   }
   static void *newArray_MParEmulated(Long_t nElements, void *p) {
      return p ? new(p) ::MParEmulated[nElements] : new ::MParEmulated[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParEmulated(void *p) {
      delete ((::MParEmulated*)p);
   }
   static void deleteArray_MParEmulated(void *p) {
      delete [] ((::MParEmulated*)p);
   }
   static void destruct_MParEmulated(void *p) {
      typedef ::MParEmulated current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParEmulated

//______________________________________________________________________________
void MParSpline::Streamer(TBuffer &R__b)
{
   // Stream an object of class MParSpline.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MParSpline::Class(),this);
   } else {
      R__b.WriteClassBuffer(MParSpline::Class(),this);
   }
}

//______________________________________________________________________________
void MParSpline::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MParSpline.
      TClass *R__cl = ::MParSpline::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSpline", &fSpline);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MParSpline(void *p) {
      return  p ? new(p) ::MParSpline : new ::MParSpline;
   }
   static void *newArray_MParSpline(Long_t nElements, void *p) {
      return p ? new(p) ::MParSpline[nElements] : new ::MParSpline[nElements];
   }
   // Wrapper around operator delete
   static void delete_MParSpline(void *p) {
      delete ((::MParSpline*)p);
   }
   static void deleteArray_MParSpline(void *p) {
      delete [] ((::MParSpline*)p);
   }
   static void destruct_MParSpline(void *p) {
      typedef ::MParSpline current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MParSpline

//______________________________________________________________________________
void MClone::Streamer(TBuffer &R__b)
{
   // Stream an object of class MClone.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MClone::Class(),this);
   } else {
      R__b.WriteClassBuffer(MClone::Class(),this);
   }
}

//______________________________________________________________________________
void MClone::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MClone.
      TClass *R__cl = ::MClone::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObjName", &fObjName);
      R__insp.InspectMember(fObjName, "fObjName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClone", &fClone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceClone", &fForceClone);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MClone(void *p) {
      delete ((::MClone*)p);
   }
   static void deleteArray_MClone(void *p) {
      delete [] ((::MClone*)p);
   }
   static void destruct_MClone(void *p) {
      typedef ::MClone current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MClone

//______________________________________________________________________________
void MPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPrint::Class(),this);
   }
}

//______________________________________________________________________________
void MPrint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPrint.
      TClass *R__cl = ::MPrint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObjName", &fObjName);
      R__insp.InspectMember(fObjName, "fObjName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOption", &fOption);
      R__insp.InspectMember(fOption, "fOption.");
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPrint(void *p) {
      return  p ? new(p) ::MPrint : new ::MPrint;
   }
   static void *newArray_MPrint(Long_t nElements, void *p) {
      return p ? new(p) ::MPrint[nElements] : new ::MPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPrint(void *p) {
      delete ((::MPrint*)p);
   }
   static void deleteArray_MPrint(void *p) {
      delete [] ((::MPrint*)p);
   }
   static void destruct_MPrint(void *p) {
      typedef ::MPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPrint

//______________________________________________________________________________
void MContinue::Streamer(TBuffer &R__b)
{
   // Stream an object of class MContinue.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MContinue::Class(),this);
   } else {
      R__b.WriteClassBuffer(MContinue::Class(),this);
   }
}

//______________________________________________________________________________
void MContinue::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MContinue.
      TClass *R__cl = ::MContinue::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaskList", &fTaskList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRc", &fRc);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MContinue(void *p) {
      return  p ? new(p) ::MContinue : new ::MContinue;
   }
   static void *newArray_MContinue(Long_t nElements, void *p) {
      return p ? new(p) ::MContinue[nElements] : new ::MContinue[nElements];
   }
   // Wrapper around operator delete
   static void delete_MContinue(void *p) {
      delete ((::MContinue*)p);
   }
   static void deleteArray_MContinue(void *p) {
      delete [] ((::MContinue*)p);
   }
   static void destruct_MContinue(void *p) {
      typedef ::MContinue current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MContinue

/********************************************************
* BaseCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBaseCint();

extern "C" void G__set_cpp_environmentBaseCint() {
  G__cpp_reset_tagtableBaseCint();
}
#include <new>
extern "C" int G__cpp_dllrevBaseCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MARS */
static int G__BaseCint_159_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) MARS::CheckRootVer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_159_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MARS::GetPackageName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_159_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MARS::GetPackageVersion();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_159_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MARS::GetRevision();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* UTF8 */

/* MArgsEntry */
static int G__BaseCint_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArgsEntry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArgsEntry((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArgsEntry((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArgsEntry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgsEntry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArgsEntry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArgsEntry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArgsEntry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgsEntry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArgsEntry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgsEntry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArgsEntry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MArgsEntry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MArgsEntry(*(MArgsEntry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArgsEntry G__TMArgsEntry;
static int G__BaseCint_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArgsEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArgsEntry*) (soff+(sizeof(MArgsEntry)*i)))->~G__TMArgsEntry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArgsEntry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArgsEntry*) (soff))->~G__TMArgsEntry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_161_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArgsEntry* dest = (MArgsEntry*) G__getstructoffset();
   *dest = *(MArgsEntry*) libp->para[0].ref;
   const MArgsEntry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArgs */
static int G__BaseCint_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArgs* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArgs((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArgs((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArgs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MArgs*) G__getstructoffset())->RemoveRootArgs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArgs*) G__getstructoffset())->GetInt(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MArgs*) G__getstructoffset())->GetFloat(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MArgs*) G__getstructoffset())->GetString(*((const TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MArgs*) G__getstructoffset())->GetIntAndRemove(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MArgs*) G__getstructoffset())->GetFloatAndRemove(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((MArgs*) G__getstructoffset())->GetStringAndRemove(*((const TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MArgs*) G__getstructoffset())->GetIntAndRemove(*((const TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MArgs*) G__getstructoffset())->GetFloatAndRemove(*((const TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((MArgs*) G__getstructoffset())->GetStringAndRemove(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MArgs*) G__getstructoffset())->Has(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MArgs*) G__getstructoffset())->HasOnly(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MArgs*) G__getstructoffset())->HasOption(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MArgs*) G__getstructoffset())->HasOnlyAndRemove(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MArgs*) G__getstructoffset())->GetArgumentStr((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArgs*) G__getstructoffset())->GetArgumentInt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MArgs*) G__getstructoffset())->GetArgumentFloat((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArgs*) G__getstructoffset())->GetNumArguments());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArgs*) G__getstructoffset())->GetNumOptions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArgs*) G__getstructoffset())->GetNumEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MArgs*) G__getstructoffset())->RemoveArgument((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MArgs*) G__getstructoffset())->GetCommandLine();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MArgs::GetCommandLine((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArgs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArgs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArgs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArgs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArgs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArgs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_162_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArgs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArgs G__TMArgs;
static int G__BaseCint_162_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArgs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArgs*) (soff+(sizeof(MArgs)*i)))->~G__TMArgs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArgs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArgs*) (soff))->~G__TMArgs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MString */
static int G__BaseCint_163_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MString* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MString((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MString((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MString[n];
       } else {
         p = new((void*) gvp) MString[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MString;
       } else {
         p = new((void*) gvp) MString;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MString* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MString(*(TString*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MString(*(TString*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MString::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MString::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MString::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MString::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MString*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MString::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MString::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MString::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_163_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MString::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_163_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MString* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MString(*(MString*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MString));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MString G__TMString;
static int G__BaseCint_163_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MString*) (soff+(sizeof(MString)*i)))->~G__TMString();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MString*) (soff))->~G__TMString();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_163_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MString* dest = (MString*) G__getstructoffset();
   *dest = *(MString*) libp->para[0].ref;
   const MString& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MMath */
static int G__BaseCint_167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MMath::GaussProb((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MMath::GaussProb((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) MMath::GaussProb((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) MMath::GaussProb2D((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) MMath::GaussProb2D((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Short_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Short_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MMath::ReSort((Long64_t) G__Longlong(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Short_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (Float_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Long_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Long64_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Short_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (Float_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Long_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::MedianDev((Long64_t) G__Longlong(libp->para[0]), (const Long64_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::Significance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::SignificanceSym((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MMath::SignificanceLiMa((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MMath::SignificanceLiMa((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MMath::SignificanceLiMaSigned((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MMath::SignificanceLiMaSigned((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MMath::SignificanceExc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MMath::SignificanceExc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MMath::ErrorExc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MMath::ErrorExc((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMath::ReducePrecision(*(Float_t*) G__Floatref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = MMath::GetParab(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::InterpolParabLin(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::InterpolParabLin(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::InterpolParabLog(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::InterpolParabCos(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = MMath::GetIntersectionPoint(*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref
, *(TVector2*) libp->para[2].ref, *(TVector2*) libp->para[3].ref
, *(Bool_t*) G__Boolref(&libp->para[4]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = MMath::GetIntersectionPoint(*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref
, *(TVector2*) libp->para[2].ref, *(TVector2*) libp->para[3].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::SolvePol1((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::SolvePol2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::SolvePol2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::SolvePol3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::SolvePol3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TArrayD* pobj;
         TArrayD xobj = MMath::LeastSqFitExpW1((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TArrayD* pobj;
         TArrayD xobj = MMath::LeastSqFitExp((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TArrayD* pobj;
         TArrayD xobj = MMath::LeastSqFitLog((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TArrayD* pobj;
         TArrayD xobj = MMath::LeastSqFitPowerLaw((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMath::ModF((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::Sqrt3((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::Sgn((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMath::Format(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_167_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MMath::RndmExp((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArrayD */
static int G__BaseCint_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayD[n];
     } else {
       p = new((void*) gvp) MArrayD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayD;
     } else {
       p = new((void*) gvp) MArrayD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayD((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArrayD((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayD((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArrayD((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayD(*(MArrayD*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MArrayD(*(MArrayD*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayD& obj = ((MArrayD*) G__getstructoffset())->operator=(*(MArrayD*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->Adopt((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->AddAt((Double_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MArrayD*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const MArrayD*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->Reset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((MArrayD*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((const MArrayD*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MArrayD*) G__getstructoffset())->GetSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayD::StripZeros(*(TArrayD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->StripZeros();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArrayD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArrayD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_190_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArrayD G__TMArrayD;
static int G__BaseCint_190_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArrayD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArrayD*) (soff+(sizeof(MArrayD)*i)))->~G__TMArrayD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArrayD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArrayD*) (soff))->~G__TMArrayD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSpline3 */
static int G__BaseCint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3[n];
     } else {
       p = new((void*) gvp) MSpline3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3;
     } else {
       p = new((void*) gvp) MSpline3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSpline3(*(TGraph*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TGraph*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MSpline3(*(TGraph*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MSpline3(*(TGraph*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MSpline3(*(TSpline*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSpline3(*(TF1*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TF1*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MSpline3(*(TF1*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSpline3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MSpline3(
*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSpline3(*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MSpline3(*(TF1*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MSpline3*) G__getstructoffset())->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MSpline3*) G__getstructoffset())->Integral((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MSpline3*) G__getstructoffset())->Integral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MSpline3*) G__getstructoffset())->IntegralSolidAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSpline3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSpline3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSpline3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSpline3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSpline3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSpline3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSpline3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSpline3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSpline3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MSpline3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MSpline3(*(MSpline3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSpline3 G__TMSpline3;
static int G__BaseCint_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSpline3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSpline3*) (soff+(sizeof(MSpline3)*i)))->~G__TMSpline3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSpline3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSpline3*) (soff))->~G__TMSpline3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReflection */
static int G__BaseCint_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReflection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MReflection(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MReflection(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MReflection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReflection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MReflection(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) MReflection(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MReflection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReflection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReflection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReflection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReflection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReflection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReflection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReflection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReflection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReflection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MReflection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MReflection(*(MReflection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MReflection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReflection G__TMReflection;
static int G__BaseCint_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReflection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReflection*) (soff+(sizeof(MReflection)*i)))->~G__TMReflection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReflection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReflection*) (soff))->~G__TMReflection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReflection* dest = (MReflection*) G__getstructoffset();
   *dest = *(MReflection*) libp->para[0].ref;
   const MReflection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MQuaternion */
static int G__BaseCint_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MQuaternion(*(TQuaternion*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MQuaternion(*(TQuaternion*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MQuaternion(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) MQuaternion(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MQuaternion(*(TVector3*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MQuaternion(*(TVector3*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->operator*=(*(TRotation*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->R2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MQuaternion*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->PropagateDz(*(MQuaternion*) libp->para[0].ref, (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->PropagateZ(*(MQuaternion*) libp->para[0].ref, (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->PropagateZ0(*(MQuaternion*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const MQuaternion*) G__getstructoffset())->XYvector();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->NormalizeVector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MQuaternion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MQuaternion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MQuaternion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MQuaternion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MQuaternion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MQuaternion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MQuaternion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MQuaternion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_228_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MQuaternion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_228_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MQuaternion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MQuaternion(*(MQuaternion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MQuaternion G__TMQuaternion;
static int G__BaseCint_228_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MQuaternion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MQuaternion*) (soff+(sizeof(MQuaternion)*i)))->~G__TMQuaternion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MQuaternion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MQuaternion*) (soff))->~G__TMQuaternion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_228_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MQuaternion* dest = (MQuaternion*) G__getstructoffset();
   *dest = *(MQuaternion*) libp->para[0].ref;
   const MQuaternion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEnv */
static int G__BaseCint_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEnv* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEnv((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MEnv((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MEnv[n];
       } else {
         p = new((void*) gvp) MEnv[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MEnv;
       } else {
         p = new((void*) gvp) MEnv;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MEnv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MEnv*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MEnv*) G__getstructoffset())->Touch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MEnv*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((MEnv*) G__getstructoffset())->GetValue((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((MEnv*) G__getstructoffset())->GetValue((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MEnv*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MEnv*) G__getstructoffset())->SetName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->GetColor((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->GetAlign((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->GetFillStyle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->GetLineStyle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttributes((const char*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (TObject*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttributes((const char*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttLine((const char*) G__int(libp->para[0]), *(TAttLine*) libp->para[1].ref
, (TAttLine*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttLine((const char*) G__int(libp->para[0]), *(TAttLine*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttText((const char*) G__int(libp->para[0]), *(TAttText*) libp->para[1].ref
, (TAttText*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttText((const char*) G__int(libp->para[0]), *(TAttText*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttFill((const char*) G__int(libp->para[0]), *(TAttFill*) libp->para[1].ref
, (TAttFill*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttFill((const char*) G__int(libp->para[0]), *(TAttFill*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttMarker((const char*) G__int(libp->para[0]), *(TAttMarker*) libp->para[1].ref
, (TAttMarker*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttMarker((const char*) G__int(libp->para[0]), *(TAttMarker*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MEnv*) G__getstructoffset())->GetAttPave((const char*) G__int(libp->para[0]), *(TPave*) libp->para[1].ref
, (TPave*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MEnv*) G__getstructoffset())->GetAttPave((const char*) G__int(libp->para[0]), *(TPave*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetColor((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAlign((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetFillStyle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetLineStyle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetMarkerStyle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttributes((const char*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttLine((const char*) G__int(libp->para[0]), *(TAttLine*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttText((const char*) G__int(libp->para[0]), *(TAttText*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttFill((const char*) G__int(libp->para[0]), *(TAttFill*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttMarker((const char*) G__int(libp->para[0]), *(TAttMarker*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->SetAttPave((const char*) G__int(libp->para[0]), *(TPave*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MEnv*) G__getstructoffset())->AddEnv(*(TEnv*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MEnv*) G__getstructoffset())->AddEnv(*(TEnv*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MEnv*) G__getstructoffset())->TakeEnv(*(MArgs*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MEnv*) G__getstructoffset())->TakeEnv(*(MArgs*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MEnv*) G__getstructoffset())->TakeEnv(*(MArgs*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->Read((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->Read());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEnv*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MEnv*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MEnv*) G__getstructoffset())->PrintUntouched();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MEnv*) G__getstructoffset())->GetNumUntouched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEnv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEnv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEnv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEnv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEnv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEnv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEnv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEnv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_241_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEnv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEnv G__TMEnv;
static int G__BaseCint_241_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEnv*) (soff+(sizeof(MEnv)*i)))->~G__TMEnv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEnv*) (soff))->~G__TMEnv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MLogPlugin */
static int G__BaseCint_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLogPlugin*) G__getstructoffset())->SetColor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLogPlugin*) G__getstructoffset())->Underline();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLogPlugin*) G__getstructoffset())->WriteBuffer((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MLogPlugin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogPlugin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MLogPlugin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MLogPlugin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLogPlugin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogPlugin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLogPlugin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogPlugin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLogPlugin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MLogPlugin G__TMLogPlugin;
static int G__BaseCint_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MLogPlugin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MLogPlugin*) (soff+(sizeof(MLogPlugin)*i)))->~G__TMLogPlugin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MLogPlugin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MLogPlugin*) (soff))->~G__TMLogPlugin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLogPlugin* dest = (MLogPlugin*) G__getstructoffset();
   *dest = *(MLogPlugin*) libp->para[0].ref;
   const MLogPlugin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MLog */
static int G__BaseCint_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLog((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MLog((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MLog[n];
       } else {
         p = new((void*) gvp) MLog[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MLog;
       } else {
         p = new((void*) gvp) MLog;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MLog(*(ofstream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MLog(*(ofstream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MLog(*(TGTextView*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MLog(*(TGTextView*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLog((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MLog((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLog((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MLog((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MLog(*(MLog*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MLog(*(MLog*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MLog::Intro();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      MLog::RedirectErrorHandler((MLog::ELogType) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      MLog::RedirectErrorHandler();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->LockUpdate((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->UnLockUpdate((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->Lock((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->Lock());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->UnLock((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MLog*) G__getstructoffset())->UnLock());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->EnableDirectGui();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->DisableDirectGui();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->UpdateGui();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->Underline();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->SetDebugLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLog*) G__getstructoffset())->GetDebugLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->SetOutputLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLog*) G__getstructoffset())->GetOutputLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->SetOutputDevice((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->EnableOutputDevice((MLog::Flags_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->DisableOutputDevice((MLog::Flags_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->operator=(*(ofstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->operator=((TGTextView*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MLog*) G__getstructoffset())->IsNullOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MLog*) G__getstructoffset())->IsOutputDeviceEnabled((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MLog*) G__getstructoffset())->SetOutputGui((TGTextView*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MLog*) G__getstructoffset())->SetOutputGui((TGTextView*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MLog*) G__getstructoffset())->SetOutputFile(*(ofstream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MLog*) G__getstructoffset())->SetOutputFile(*(ofstream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MLog*) G__getstructoffset())->SetOutputFile((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MLog*) G__getstructoffset())->SetOutputFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MLog*) G__getstructoffset())->SetOutputFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ofstream& obj = ((MLog*) G__getstructoffset())->GetOutputFile();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MLog*) G__getstructoffset())->SetNullOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MLog*) G__getstructoffset())->SetNullOutput();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MLog*) G__getstructoffset())->SetNoColors((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MLog*) G__getstructoffset())->SetNoColors();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->Setup(*(MArgs*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->Usage();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MLog*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MLog*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((MLog*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const MLog*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const MLog*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((const MLog*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const MLog& obj = ((MLog*) G__getstructoffset())->Separator(*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const MLog& obj = ((MLog*) G__getstructoffset())->Separator(*((TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const MLog& obj = ((MLog*) G__getstructoffset())->Separator();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->AddPlugin((MLogPlugin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MLog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MLog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MLog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_290_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MLog G__TMLog;
static int G__BaseCint_290_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MLog*) (soff+(sizeof(MLog)*i)))->~G__TMLog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MLog*) (soff))->~G__TMLog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MLogHtml */
static int G__BaseCint_299_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLogHtml* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MLogHtml((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MLogHtml((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLogHtml));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLogHtml* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLogHtml[n];
     } else {
       p = new((void*) gvp) MLogHtml[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLogHtml;
     } else {
       p = new((void*) gvp) MLogHtml;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLogHtml));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MLogHtml::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogHtml::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MLogHtml::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MLogHtml::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLogHtml*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogHtml::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLogHtml::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLogHtml::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_299_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLogHtml::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_299_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MLogHtml* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MLogHtml(*(MLogHtml*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLogHtml));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MLogHtml G__TMLogHtml;
static int G__BaseCint_299_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MLogHtml*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MLogHtml*) (soff+(sizeof(MLogHtml)*i)))->~G__TMLogHtml();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MLogHtml*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MLogHtml*) (soff))->~G__TMLogHtml();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_299_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLogHtml* dest = (MLogHtml*) G__getstructoffset();
   *dest = *(MLogHtml*) libp->para[0].ref;
   const MLogHtml& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MStatusDisplay */
static int G__BaseCint_304_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MStatusDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MStatusDisplay(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MStatusDisplay(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MStatusDisplay((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MStatusDisplay((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MStatusDisplay((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MStatusDisplay((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MStatusDisplay[n];
       } else {
         p = new((void*) gvp) MStatusDisplay[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MStatusDisplay;
       } else {
         p = new((void*) gvp) MStatusDisplay;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MStatusDisplay*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MStatusDisplay*) G__getstructoffset())->SetTitle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MStatusDisplay*) G__getstructoffset())->HasCanvas((TCanvas*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->GetCanvas((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->GetCanvas(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MStatusDisplay*) G__getstructoffset())->GetFullPad((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->CdCanvas(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MStatusDisplay*) G__getstructoffset())->CheckTabForCanvas((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->FindObjectInCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->FindObjectInCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->FindObject((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MStatusDisplay*) G__getstructoffset())->GetNumTabs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const MStatusDisplay*) G__getstructoffset())->PrintContent((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const MStatusDisplay*) G__getstructoffset())->PrintContent();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TCanvas& obj = ((MStatusDisplay*) G__getstructoffset())->AddTab((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const TCanvas& obj = ((MStatusDisplay*) G__getstructoffset())->AddTab((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MStatusDisplay*) G__getstructoffset())->AddRawTab((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MStatusDisplay*) G__getstructoffset())->SetProgressBarPosition((Float_t) G__double(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MStatusDisplay*) G__getstructoffset())->SetProgressBarPosition((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusDisplay*) G__getstructoffset())->GetBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetStatusLine1((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetStatusLine2((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetStatusLine2(*(MParContainer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MStatusDisplay*) G__getstructoffset())->SetNoContextMenu((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MStatusDisplay*) G__getstructoffset())->SetNoContextMenu();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MStatusDisplay*) G__getstructoffset())->StartUpdate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MStatusDisplay*) G__getstructoffset())->StartUpdate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->StopUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetUpdateTime((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MStatusDisplay*) G__getstructoffset())->SetLogStream((MLog*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MStatusDisplay*) G__getstructoffset())->SetLogStream((MLog*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetCanvasWidth((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetCanvasHeight((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetDisplayWidth((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetDisplayHeight((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetOptimumSize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetDisplaySize((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS(*((TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF(*((TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG(*((TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPNG(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPNG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsGIF(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsGIF());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXPM(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXPM());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsJPG(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsJPG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsTIFF(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsTIFF());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsBMP(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsBMP());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXML(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXML());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsC(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsRoot(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsRoot());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPlainRoot(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPlainRoot());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAs(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV(*((TString*) G__int(libp->para[0])), (Char_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->PrintPS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPS((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPDF((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsSVG((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPNG((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPNG((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsGIF((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsGIF((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXPM((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXPM((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsJPG((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsJPG((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsTIFF((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsTIFF((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsBMP((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsBMP((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXML((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsXML((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsC((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsC((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsRoot((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsRoot((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsRoot((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPlainRoot((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsPlainRoot((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAs((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Char_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAsCSV((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->PrintPS((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->PrintPS((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->PrintPS((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->PrintPS((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->PrintLog((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->PrintLog((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MStatusDisplay*) G__getstructoffset())->PrintLog());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MStatusDisplay*) G__getstructoffset())->SaveLogAsPS((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->SaveAs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Open(*((TString*) G__int(libp->para[0])), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Open(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((const MStatusDisplay*) G__getstructoffset())->Write((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const MStatusDisplay*) G__getstructoffset())->Write((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((const MStatusDisplay*) G__getstructoffset())->Write((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Read((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Read((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusDisplay*) G__getstructoffset())->Read());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MStatusDisplay*) G__getstructoffset())->CheckStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->ClearStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetPause();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->SetLoopStep();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->Lock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->UnLock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->EventInfo((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MStatusDisplay::GetEmbeddedCanvas(*(TGCompositeFrame*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MStatusDisplay::GetCanvas(*(TGCompositeFrame*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MStatusDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MStatusDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MStatusDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MStatusDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_304_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MStatusDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MStatusDisplay G__TMStatusDisplay;
static int G__BaseCint_304_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MStatusDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MStatusDisplay*) (soff+(sizeof(MStatusDisplay)*i)))->~G__TMStatusDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MStatusDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MStatusDisplay*) (soff))->~G__TMStatusDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParContainer */
static int G__BaseCint_305_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParContainer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParContainer((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParContainer((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParContainer[n];
       } else {
         p = new((void*) gvp) MParContainer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParContainer;
       } else {
         p = new((void*) gvp) MParContainer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MParContainer(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) MParContainer(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MParContainer(*(MParContainer*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MParContainer(*(MParContainer*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MParContainer& obj = ((MParContainer*) G__getstructoffset())->operator=(*(MParContainer*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->FillBuffer(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MParContainer::GetDescriptor(*(TObject*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) MParContainer::Overwrites((TClass*) G__int(libp->para[0]), *(TObject*) libp->para[1].ref
, (const char*) G__int(libp->para[2]), (TClass*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) MParContainer::Overwrites((TClass*) G__int(libp->para[0]), *(TObject*) libp->para[1].ref
, (const char*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MParContainer*) G__getstructoffset())->GetDescriptor();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MParContainer*) G__getstructoffset())->GetUniqueName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetObject((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MParContainer*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MParContainer*) G__getstructoffset())->SetTitle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParContainer*) G__getstructoffset())->Sizeof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MParContainer*) G__getstructoffset())->SavePrimitive(*(ofstream*) libp->para[0].ref, (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MParContainer*) G__getstructoffset())->SavePrimitive(*(ofstream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParContainer*) G__getstructoffset())->New());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetLogStream((MLog*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->IsReadyToSave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MParContainer*) G__getstructoffset())->SetReadyToSave((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MParContainer*) G__getstructoffset())->SetReadyToSave();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->IsSavedAsPrimitive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MParContainer*) G__getstructoffset())->EnableGraphicalOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MParContainer*) G__getstructoffset())->EnableGraphicalOutput();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->IsGraphicalOutputEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetVariables(*(TArrayD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetDisplay((MStatusDisplay*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MParContainer*) G__getstructoffset())->StreamPrimitive(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParContainer*) G__getstructoffset())->GetterMethod((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((MParContainer*) G__getstructoffset())->DataMember((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteDataMember(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteDataMember(*(ostream*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteDataMember(*(ostream*) libp->para[0].ref, (TDataMember*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteDataMember(*(ostream*) libp->para[0].ref, (TDataMember*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteDataMember(*(ostream*) libp->para[0].ref, (TList*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->AsciiRead(*(istream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->AsciiWrite(*(ostream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MParContainer*) G__getstructoffset())->SetupFits(*(fits*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->Read((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->Read());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MParContainer*) G__getstructoffset())->GetNames(*(TObjArray*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->SetNames(*(TObjArray*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->TestEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->TestEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MParContainer*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MParContainer*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MParContainer*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->IsEnvDefined(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParContainer*) G__getstructoffset())->IsEnvDefined(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (Double_t) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 67, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (const char*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 67, (long) ((const MParContainer*) G__getstructoffset())->GetEnvValue2(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, (const char*) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MParContainer*) G__getstructoffset())->GetEnvValue3(*(TEnv*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *((TString*) G__int(libp->para[2])), (UInt_t) G__int(libp->para[3]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParContainer*) G__getstructoffset())->GetNewObject((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MParContainer*) G__getstructoffset())->GetNewObject((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MParContainer*) G__getstructoffset())->GetNewObject((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParContainer::GetClass((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) MParContainer::GetClass((const char*) G__int(libp->para[0]), (MLog*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MParContainer::GetClass((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParContainer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParContainer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParContainer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParContainer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParContainer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParContainer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParContainer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParContainer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_305_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParContainer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParContainer G__TMParContainer;
static int G__BaseCint_305_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParContainer*) (soff+(sizeof(MParContainer)*i)))->~G__TMParContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParContainer*) (soff))->~G__TMParContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParEmulated */
static int G__BaseCint_306_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParEmulated* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParEmulated((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParEmulated((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParEmulated((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParEmulated((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParEmulated[n];
       } else {
         p = new((void*) gvp) MParEmulated[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParEmulated;
       } else {
         p = new((void*) gvp) MParEmulated;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParEmulated));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParEmulated*) G__getstructoffset())->SetClassName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((MParEmulated*) G__getstructoffset())->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParEmulated*) G__getstructoffset())->GetInt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParEmulated*) G__getstructoffset())->GetInt_t((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParEmulated*) G__getstructoffset())->GetDouble((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const MParEmulated*) G__getstructoffset())->GetULongLong((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParEmulated*) G__getstructoffset())->GetPInt((TVirtualCollectionProxy*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParEmulated*) G__getstructoffset())->GetPInt_t((TVirtualCollectionProxy*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParEmulated*) G__getstructoffset())->GetPDouble((TVirtualCollectionProxy*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const MParEmulated*) G__getstructoffset())->GetPULongLong((TVirtualCollectionProxy*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const MParEmulated*) G__getstructoffset())->GetterMethod((const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const MParEmulated*) G__getstructoffset())->GetterMethod((const char*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MParEmulated*) G__getstructoffset())->Print(*(TPRegexp*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParEmulated::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEmulated::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParEmulated::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParEmulated::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParEmulated*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEmulated::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParEmulated::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEmulated::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_306_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParEmulated::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParEmulated G__TMParEmulated;
static int G__BaseCint_306_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParEmulated*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParEmulated*) (soff+(sizeof(MParEmulated)*i)))->~G__TMParEmulated();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParEmulated*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParEmulated*) (soff))->~G__TMParEmulated();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParSpline */
static int G__BaseCint_308_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParSpline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParSpline((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParSpline((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParSpline((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParSpline((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParSpline[n];
       } else {
         p = new((void*) gvp) MParSpline[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParSpline;
       } else {
         p = new((void*) gvp) MParSpline;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParSpline*) G__getstructoffset())->GetSpline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParSpline*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParSpline*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParSpline*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParSpline*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParSpline*) G__getstructoffset())->Eval((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParSpline*) G__getstructoffset())->SetFunction(*(TF1*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MParSpline*) G__getstructoffset())->SetFunction((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParSpline*) G__getstructoffset())->Multiply(*(TSpline3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParSpline*) G__getstructoffset())->Multiply((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParSpline*) G__getstructoffset())->Multiply((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MParSpline*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParSpline::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParSpline::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParSpline::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParSpline::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParSpline*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParSpline::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParSpline::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParSpline::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_308_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParSpline::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParSpline G__TMParSpline;
static int G__BaseCint_308_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParSpline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParSpline*) (soff+(sizeof(MParSpline)*i)))->~G__TMParSpline();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParSpline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParSpline*) (soff))->~G__TMParSpline();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTask */
static int G__BaseCint_310_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTask((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTask((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTask[n];
       } else {
         p = new((void*) gvp) MTask[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTask;
       } else {
         p = new((void*) gvp) MTask;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MTask(*(MTask*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MTask(*(MTask*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTask*) G__getstructoffset())->GetListOfBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const MTask*) G__getstructoffset())->Overwrites((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const MTask*) G__getstructoffset())->Overwrites((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTask*) G__getstructoffset())->SetFilter((MFilter*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTask*) G__getstructoffset())->GetFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MTask*) G__getstructoffset())->GetFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTask*) G__getstructoffset())->SetAccelerator((Byte_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTask*) G__getstructoffset())->SetAccelerator();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const MTask*) G__getstructoffset())->GetAccelerator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTask*) G__getstructoffset())->HasAccelerator((Byte_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MTask::AddSerialNumber((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MTask::AddSerialNumber(*(TString*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTask*) G__getstructoffset())->AddSerialNumber((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTask*) G__getstructoffset())->AddSerialNumber(*(TString*) libp->para[0].ref);
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTask*) G__getstructoffset())->SetSerialNumber((Byte_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const MTask*) G__getstructoffset())->GetSerialNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTask*) G__getstructoffset())->GetNumExecutions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTask*) G__getstructoffset())->GetNumExecutionsTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTask*) G__getstructoffset())->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTask*) G__getstructoffset())->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const MTask*) G__getstructoffset())->PrintStatistics((const Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const MTask*) G__getstructoffset())->PrintStatistics((const Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MTask*) G__getstructoffset())->PrintStatistics((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const MTask*) G__getstructoffset())->PrintStatistics();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTask*) G__getstructoffset())->PrintSkipped((UInt_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTask*) G__getstructoffset())->ReInit((MParList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MTask*) G__getstructoffset())->CallPreProcess((MParList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MTask*) G__getstructoffset())->CallProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MTask*) G__getstructoffset())->CallPostProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_310_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTask G__TMTask;
static int G__BaseCint_310_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTask*) (soff+(sizeof(MTask)*i)))->~G__TMTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTask*) (soff))->~G__TMTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTaskList */
static int G__BaseCint_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTaskList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTaskList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskList((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTaskList((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskList[n];
       } else {
         p = new((void*) gvp) MTaskList[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskList;
       } else {
         p = new((void*) gvp) MTaskList;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTaskList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTaskList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MTaskList(*(MTaskList*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MTaskList(*(MTaskList*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTaskList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTaskList*) G__getstructoffset())->SetNumPasses((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTaskList*) G__getstructoffset())->SetNumPasses();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTaskList*) G__getstructoffset())->GetNumPass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTaskList*) G__getstructoffset())->GetNumPasses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListBefore((MTask*) G__int(libp->para[0]), (MTask*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListBefore((MTask*) G__int(libp->para[0]), (MTask*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListAfter((MTask*) G__int(libp->para[0]), (MTask*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListAfter((MTask*) G__int(libp->para[0]), (MTask*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToList((MTask*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToList((MTask*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToList(*(TList*) libp->para[0].ref, (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToList(*(TList*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListAfter(*(TList*) libp->para[0].ref, (MTask*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListAfter(*(TList*) libp->para[0].ref, (MTask*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListBefore(*(TList*) libp->para[0].ref, (MTask*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->AddToListBefore(*(TList*) libp->para[0].ref, (MTask*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->Replace((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->RemoveFromList((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->RemoveFromList(*(TList*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTaskList*) G__getstructoffset())->FindTask((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTaskList*) G__getstructoffset())->FindTask((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MTaskList*) G__getstructoffset())->FindTaskList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MTaskList*) G__getstructoffset())->FindTaskList((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->ReInit((MParList*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MTaskList*) G__getstructoffset())->ReInit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTaskList*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTaskList*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTaskList*) G__getstructoffset())->GetList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTaskList*) G__getstructoffset())->operator ::TIterator*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTaskList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTaskList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTaskList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_311_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTaskList G__TMTaskList;
static int G__BaseCint_311_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTaskList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTaskList*) (soff+(sizeof(MTaskList)*i)))->~G__TMTaskList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTaskList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTaskList*) (soff))->~G__TMTaskList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParList */
static int G__BaseCint_312_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParList((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParList((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParList[n];
       } else {
         p = new((void*) gvp) MParList[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParList;
       } else {
         p = new((void*) gvp) MParList;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParList(
*(MParList*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MParList(
*(MParList*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParList(*(MParList*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParList(*(MParList*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParList(*(MParList*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) MParList(*(MParList*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MParList*) G__getstructoffset())->AddToList((MParContainer*) G__int(libp->para[0]), (MParContainer*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MParList*) G__getstructoffset())->AddToList((MParContainer*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParList*) G__getstructoffset())->AddToList((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MParList*) G__getstructoffset())->Replace((MParContainer*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParList*) G__getstructoffset())->Remove((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindObject((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindObject((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindTask((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindTaskListWithTask((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->FindTaskListWithTask((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((MParList*) G__getstructoffset())->FindCreateObj((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((MParList*) G__getstructoffset())->FindCreateObj((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObjArray* pobj;
         const TObjArray xobj = ((const MParList*) G__getstructoffset())->FindObjectList((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObjArray* pobj;
         const TObjArray xobj = ((const MParList*) G__getstructoffset())->FindObjectList((const char*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         TObjArray* pobj;
         TObjArray xobj = ((MParList*) G__getstructoffset())->FindCreateObjList((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TObjArray* pobj;
         TObjArray xobj = ((MParList*) G__getstructoffset())->FindCreateObjList((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TObjArray* pobj;
         TObjArray xobj = ((MParList*) G__getstructoffset())->FindCreateObjList((const char*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TObjArray* pobj;
         TObjArray xobj = ((MParList*) G__getstructoffset())->FindCreateObjList((const char*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         TObjArray* pobj;
         TObjArray xobj = MParList::CreateObjList((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TObjArray* pobj;
         TObjArray xobj = MParList::CreateObjList((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TObjArray* pobj;
         TObjArray xobj = MParList::CreateObjList((const char*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TObjArray* pobj;
         TObjArray xobj = MParList::CreateObjList((const char*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MParList*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MParList*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MParList*) G__getstructoffset())->IsOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParList*) G__getstructoffset())->operator ::TIterator*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_312_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParList G__TMParList;
static int G__BaseCint_312_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParList*) (soff+(sizeof(MParList)*i)))->~G__TMParList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParList*) (soff))->~G__TMParList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParEnv */
static int G__BaseCint_314_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParEnv* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParEnv((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParEnv((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParEnv[n];
       } else {
         p = new((void*) gvp) MParEnv[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParEnv;
       } else {
         p = new((void*) gvp) MParEnv;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParEnv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MParEnv*) G__getstructoffset())->SetCont((MParContainer*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MParEnv*) G__getstructoffset())->SetCont();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MParEnv*) G__getstructoffset())->GetCont());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MParEnv*) G__getstructoffset())->SetClassName((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MParEnv*) G__getstructoffset())->SetClassName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParEnv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEnv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParEnv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParEnv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParEnv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEnv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParEnv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParEnv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_314_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParEnv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParEnv G__TMParEnv;
static int G__BaseCint_314_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParEnv*) (soff+(sizeof(MParEnv)*i)))->~G__TMParEnv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParEnv*) (soff))->~G__TMParEnv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParameterD */
static int G__BaseCint_315_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParameterD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterD((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParameterD((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterD((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParameterD((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterD[n];
       } else {
         p = new((void*) gvp) MParameterD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterD;
       } else {
         p = new((void*) gvp) MParameterD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParameterD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterD*) G__getstructoffset())->SetVal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParameterD*) G__getstructoffset())->GetVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((MParameterD*) G__getstructoffset())->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParameterD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParameterD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParameterD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_315_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParameterD G__TMParameterD;
static int G__BaseCint_315_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParameterD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParameterD*) (soff+(sizeof(MParameterD)*i)))->~G__TMParameterD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParameterD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParameterD*) (soff))->~G__TMParameterD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParameterDerr */
static int G__BaseCint_316_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParameterDerr* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterDerr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParameterDerr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterDerr((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParameterDerr((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterDerr[n];
       } else {
         p = new((void*) gvp) MParameterDerr[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterDerr;
       } else {
         p = new((void*) gvp) MParameterDerr;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterDerr*) G__getstructoffset())->SetVal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterDerr*) G__getstructoffset())->SetVal((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MParameterDerr*) G__getstructoffset())->GetErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParameterDerr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterDerr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParameterDerr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParameterDerr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterDerr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterDerr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterDerr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterDerr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_316_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterDerr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParameterDerr G__TMParameterDerr;
static int G__BaseCint_316_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParameterDerr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParameterDerr*) (soff+(sizeof(MParameterDerr)*i)))->~G__TMParameterDerr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParameterDerr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParameterDerr*) (soff))->~G__TMParameterDerr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MParameterI */
static int G__BaseCint_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MParameterI* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterI((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MParameterI((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MParameterI((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MParameterI((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterI[n];
       } else {
         p = new((void*) gvp) MParameterI[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MParameterI;
       } else {
         p = new((void*) gvp) MParameterI;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MParameterI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterI*) G__getstructoffset())->SetVal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MParameterI*) G__getstructoffset())->GetVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((MParameterI*) G__getstructoffset())->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MParameterI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MParameterI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MParameterI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MParameterI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MParameterI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_317_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MParameterI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MParameterI G__TMParameterI;
static int G__BaseCint_317_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MParameterI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MParameterI*) (soff+(sizeof(MParameterI)*i)))->~G__TMParameterI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MParameterI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MParameterI*) (soff))->~G__TMParameterI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MInputStreamID */
static int G__BaseCint_318_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MInputStreamID* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MInputStreamID((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MInputStreamID((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MInputStreamID((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MInputStreamID((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MInputStreamID[n];
       } else {
         p = new((void*) gvp) MInputStreamID[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MInputStreamID;
       } else {
         p = new((void*) gvp) MInputStreamID;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MInputStreamID*) G__getstructoffset())->HasStreamId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const MInputStreamID*) G__getstructoffset())->GetStreamId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MInputStreamID*) G__getstructoffset())->SetStreamId((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MInputStreamID*) G__getstructoffset())->operator==(*(MInputStreamID*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MInputStreamID*) G__getstructoffset())->operator!=(*(MInputStreamID*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MInputStreamID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MInputStreamID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MInputStreamID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MInputStreamID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MInputStreamID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MInputStreamID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MInputStreamID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MInputStreamID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_318_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MInputStreamID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MInputStreamID G__TMInputStreamID;
static int G__BaseCint_318_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MInputStreamID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MInputStreamID*) (soff+(sizeof(MInputStreamID)*i)))->~G__TMInputStreamID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MInputStreamID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MInputStreamID*) (soff))->~G__TMInputStreamID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MFilter */
static int G__BaseCint_320_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MFilter*) G__getstructoffset())->GetRule();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MFilter*) G__getstructoffset())->GetDataMember();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MFilter*) G__getstructoffset())->IsConditionTrue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MFilter*) G__getstructoffset())->SetInverted((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MFilter*) G__getstructoffset())->SetInverted();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MFilter*) G__getstructoffset())->IsInverted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_320_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MFilter G__TMFilter;
static int G__BaseCint_320_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MFilter*) (soff+(sizeof(MFilter)*i)))->~G__TMFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MFilter*) (soff))->~G__TMFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTaskEnv */
static int G__BaseCint_322_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTaskEnv* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTaskEnv((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskEnv((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTaskEnv((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskEnv[n];
       } else {
         p = new((void*) gvp) MTaskEnv[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskEnv;
       } else {
         p = new((void*) gvp) MTaskEnv;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTaskEnv*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTaskEnv*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTaskEnv*) G__getstructoffset())->SetDefault((MTask*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTaskEnv*) G__getstructoffset())->SetDefault();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskEnv*) G__getstructoffset())->SetDefault((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MTaskEnv*) G__getstructoffset())->GetTask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTaskEnv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskEnv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTaskEnv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTaskEnv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskEnv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskEnv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskEnv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskEnv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_322_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskEnv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTaskEnv G__TMTaskEnv;
static int G__BaseCint_322_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTaskEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTaskEnv*) (soff+(sizeof(MTaskEnv)*i)))->~G__TMTaskEnv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTaskEnv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTaskEnv*) (soff))->~G__TMTaskEnv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTaskInteractive */
static int G__BaseCint_324_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTaskInteractive* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskInteractive((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTaskInteractive((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTaskInteractive((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTaskInteractive((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskInteractive[n];
       } else {
         p = new((void*) gvp) MTaskInteractive[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTaskInteractive;
       } else {
         p = new((void*) gvp) MTaskInteractive;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetPreProcess((Int_t (*)(MParList*list)) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetProcess((Int_t (*)()) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetPostProcess((Int_t (*)()) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetReInit((Bool_t (*)(MParList*list)) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetPreProcess((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetProcess((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetPostProcess((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->SetReInit((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTaskInteractive::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskInteractive::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTaskInteractive::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTaskInteractive::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTaskInteractive*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskInteractive::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskInteractive::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTaskInteractive::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_324_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTaskInteractive::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTaskInteractive G__TMTaskInteractive;
static int G__BaseCint_324_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTaskInteractive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTaskInteractive*) (soff+(sizeof(MTaskInteractive)*i)))->~G__TMTaskInteractive();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTaskInteractive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTaskInteractive*) (soff))->~G__TMTaskInteractive();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MProgressBar */
static int G__BaseCint_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MProgressBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MProgressBar[n];
     } else {
       p = new((void*) gvp) MProgressBar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MProgressBar;
     } else {
       p = new((void*) gvp) MProgressBar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MProgressBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MProgressBar*) G__getstructoffset())->GetBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MProgressBar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MProgressBar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MProgressBar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MProgressBar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MProgressBar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MProgressBar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MProgressBar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MProgressBar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_327_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MProgressBar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MProgressBar G__TMProgressBar;
static int G__BaseCint_327_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MProgressBar*) (soff+(sizeof(MProgressBar)*i)))->~G__TMProgressBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MProgressBar*) (soff))->~G__TMProgressBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEvtLoop */
static int G__BaseCint_328_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEvtLoop* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEvtLoop((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MEvtLoop((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MEvtLoop[n];
       } else {
         p = new((void*) gvp) MEvtLoop[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MEvtLoop;
       } else {
         p = new((void*) gvp) MEvtLoop;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEvtLoop*) G__getstructoffset())->SetParList((MParList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEvtLoop*) G__getstructoffset())->GetParList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEvtLoop*) G__getstructoffset())->GetTaskList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEvtLoop*) G__getstructoffset())->FindTask((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEvtLoop*) G__getstructoffset())->FindTask((MTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MEvtLoop*) G__getstructoffset())->GetDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MEvtLoop*) G__getstructoffset())->SetPrivateDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MEvtLoop*) G__getstructoffset())->SetPrivateDisplay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MEvtLoop*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MEvtLoop*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEvtLoop*) G__getstructoffset())->SetProgressBar((TGProgressBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEvtLoop*) G__getstructoffset())->SetProgressBar((MProgressBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->PreProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MEvtLoop*) G__getstructoffset())->Process((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MEvtLoop*) G__getstructoffset())->PostProcess());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->Eventloop((UInt_t) G__int(libp->para[0]), (MEvtLoop::Statistics_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->Eventloop((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->Eventloop());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MEvtLoop*) G__getstructoffset())->MakeMacro((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MEvtLoop*) G__getstructoffset())->MakeMacro();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MEvtLoop*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MEvtLoop*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MEvtLoop*) G__getstructoffset())->ReadEnv(*(TEnv*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((const MEvtLoop*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((const MEvtLoop*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref, *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const MEvtLoop*) G__getstructoffset())->WriteEnv(*(TEnv*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->ReadEnv((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MEvtLoop*) G__getstructoffset())->ReadEnv((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) MEvtLoop::GetMemoryUsage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEvtLoop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEvtLoop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEvtLoop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEvtLoop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEvtLoop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEvtLoop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEvtLoop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEvtLoop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_328_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEvtLoop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEvtLoop G__TMEvtLoop;
static int G__BaseCint_328_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEvtLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEvtLoop*) (soff+(sizeof(MEvtLoop)*i)))->~G__TMEvtLoop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEvtLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEvtLoop*) (soff))->~G__TMEvtLoop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGList */
static int G__BaseCint_430_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGList[n];
     } else {
       p = new((void*) gvp) MGList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGList;
     } else {
       p = new((void*) gvp) MGList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MGList*) G__getstructoffset())->GetPicture((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MGList*) G__getstructoffset())->GetPicture((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MGList*) G__getstructoffset())->FindWidget((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_430_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGList G__TMGList;
static int G__BaseCint_430_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGList*) (soff+(sizeof(MGList)*i)))->~G__TMGList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGList*) (soff))->~G__TMGList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MSearch */
static int G__BaseCint_437_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MSearch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSearch((TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MSearch((TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MSearch((TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MSearch((TGWindow*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MSearch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MSearch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSearch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MSearch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MSearch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MSearch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSearch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSearch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MSearch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_437_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MSearch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MSearch G__TMSearch;
static int G__BaseCint_437_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MSearch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MSearch*) (soff+(sizeof(MSearch)*i)))->~G__TMSearch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MSearch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MSearch*) (soff))->~G__TMSearch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MIter */
static int G__BaseCint_438_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MIter((TCollection*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MIter((TCollection*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MIter((TCollection*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MIter((TCollection*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MIter((TIterator*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MIter((TIterator*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MIter(*(MIter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MIter(*(MIter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MIter& obj = ((MIter*) G__getstructoffset())->operator=(*(MIter*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MIter*) G__getstructoffset())->operator()());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MIter*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MIter*) G__getstructoffset())->GetCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MIter*) G__getstructoffset())->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MIter*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MIter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MIter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MIter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_438_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MIter G__TMIter;
static int G__BaseCint_438_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MIter*) (soff+(sizeof(MIter)*i)))->~G__TMIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MIter*) (soff))->~G__TMIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MDirIter */
static int G__BaseCint_439_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDirIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDirIter[n];
     } else {
       p = new((void*) gvp) MDirIter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDirIter;
     } else {
       p = new((void*) gvp) MDirIter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MDirIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDirIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MDirIter(*(MDirIter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MDirIter(*(MDirIter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MDirIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MDirIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDirIter(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MDirIter(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDirIter((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MDirIter((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MDirIter((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MDirIter((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MDirIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->ReadList((const char*) G__int(libp->para[0]), *(TString*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->ReadList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDirIter*) G__getstructoffset())->Sort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->AddDirectory((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->AddDirectory((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->AddDirectory((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MDirIter*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDirIter*) G__getstructoffset())->Add(*(MDirIter*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDirIter*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TString* pobj;
         TString xobj = ((MDirIter*) G__getstructoffset())->Next((Bool_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = ((MDirIter*) G__getstructoffset())->Next();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TString* pobj;
         TString xobj = ((MDirIter*) G__getstructoffset())->operator()((Bool_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TString* pobj;
         TString xobj = ((MDirIter*) G__getstructoffset())->operator()();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MDirIter*) G__getstructoffset())->SetFilter((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MDirIter*) G__getstructoffset())->SetFilter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MDirIter*) G__getstructoffset())->GetNumEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MDirIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDirIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MDirIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MDirIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MDirIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDirIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDirIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MDirIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_439_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MDirIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MDirIter G__TMDirIter;
static int G__BaseCint_439_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MDirIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MDirIter*) (soff+(sizeof(MDirIter)*i)))->~G__TMDirIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MDirIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MDirIter*) (soff))->~G__TMDirIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MReadSocket */
static int G__BaseCint_440_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadSocket* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadSocket((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MReadSocket((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MReadSocket((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MReadSocket((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadSocket[n];
       } else {
         p = new((void*) gvp) MReadSocket[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MReadSocket;
       } else {
         p = new((void*) gvp) MReadSocket;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MReadSocket));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MReadSocket* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MReadSocket(*(MReadSocket*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MReadSocket(*(MReadSocket*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MReadSocket));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MReadSocket*) G__getstructoffset())->Open((int) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MReadSocket*) G__getstructoffset())->Open((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MReadSocket*) G__getstructoffset())->Open());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadSocket*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadSocket*) G__getstructoffset())->SetTimeout((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MReadSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MReadSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MReadSocket::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MReadSocket*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadSocket*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadSocket*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MReadSocket*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MReadSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_440_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MReadSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MReadSocket G__TMReadSocket;
static int G__BaseCint_440_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MReadSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MReadSocket*) (soff+(sizeof(MReadSocket)*i)))->~G__TMReadSocket();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MReadSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MReadSocket*) (soff))->~G__TMReadSocket();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGTask */
static int G__BaseCint_441_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MGTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGTask((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MGTask((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGTask[n];
       } else {
         p = new((void*) gvp) MGTask[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGTask;
       } else {
         p = new((void*) gvp) MGTask;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MGTask*) G__getstructoffset())->ProcessMessage((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2]), (Long_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MGTask*) G__getstructoffset())->CreateGui((TGCompositeFrame*) G__int(libp->para[0]), (TGLayoutHints*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MGTask*) G__getstructoffset())->CreateGui((TGCompositeFrame*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_441_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGTask G__TMGTask;
static int G__BaseCint_441_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGTask*) (soff+(sizeof(MGTask)*i)))->~G__TMGTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGTask*) (soff))->~G__TMGTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGGroupFrame */
static int G__BaseCint_442_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGGroupFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (ULong_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (ULong_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (TGString*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGGroupFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (ULong_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (ULong_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MGGroupFrame(
(MGTask*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGGroupFrame*) G__getstructoffset())->AddToList((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MGGroupFrame*) G__getstructoffset())->FindWidget((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGGroupFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGGroupFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGGroupFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGGroupFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGGroupFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGGroupFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGGroupFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGGroupFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_442_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGGroupFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGGroupFrame G__TMGGroupFrame;
static int G__BaseCint_442_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGGroupFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGGroupFrame*) (soff+(sizeof(MGGroupFrame)*i)))->~G__TMGGroupFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGGroupFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGGroupFrame*) (soff))->~G__TMGGroupFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MGMap */
static int G__BaseCint_458_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MGMap((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MGMap((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGMap[n];
       } else {
         p = new((void*) gvp) MGMap[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MGMap;
       } else {
         p = new((void*) gvp) MGMap;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MGMap*) G__getstructoffset())->SetOwner((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MGMap*) G__getstructoffset())->SetOwner();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MGMap*) G__getstructoffset())->Add((TObject*) G__int(libp->para[0]), (TString*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MGMap*) G__getstructoffset())->Add((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGMap*) G__getstructoffset())->Paint((UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGMap*) G__getstructoffset())->DrawLine((TObject*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGMap*) G__getstructoffset())->DrawMarker((TObject*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MGMap*) G__getstructoffset())->PickObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) MGMap::Color((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGMap::DrawCircle(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UChar_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      MGMap::DrawHexagon(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UChar_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      MGMap::DrawHexagon(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UChar_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      MGMap::DrawLine(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      MGMap::DrawLine(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      MGMap::DrawBox(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      MGMap::DrawBox(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGMap::DrawDot((UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (UChar_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGMap::DrawMultiply(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UChar_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGMap::DrawCross(
(UChar_t*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UChar_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MGMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MGMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MGMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MGMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MGMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_458_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MGMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_458_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MGMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MGMap(*(MGMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MGMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MGMap G__TMGMap;
static int G__BaseCint_458_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MGMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MGMap*) (soff+(sizeof(MGMap)*i)))->~G__TMGMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MGMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MGMap*) (soff))->~G__TMGMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_458_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MGMap* dest = (MGMap*) G__getstructoffset();
   *dest = *(MGMap*) libp->para[0].ref;
   const MGMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MStatusArray */
static int G__BaseCint_460_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MStatusArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MStatusArray[n];
     } else {
       p = new((void*) gvp) MStatusArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MStatusArray;
     } else {
       p = new((void*) gvp) MStatusArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MStatusArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MStatusArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MStatusArray(*(MStatusDisplay*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MStatusArray(*(MStatusDisplay*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MStatusArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->DisplayIn((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->DisplayIn());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const MStatusArray*) G__getstructoffset())->DisplayIn(*(MStatusDisplay*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MStatusArray*) G__getstructoffset())->DisplayIn(*(MStatusDisplay*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->Display());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->FindCanvas((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->FindObjectInCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->FindObjectInCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MStatusArray*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MStatusArray*) G__getstructoffset())->FindObject((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MStatusArray*) G__getstructoffset())->Read((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MStatusArray*) G__getstructoffset())->Read());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const MStatusArray*) G__getstructoffset())->EnableTH1Workaround((TCollection*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const MStatusArray*) G__getstructoffset())->EnableTH1Workaround();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MStatusArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MStatusArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MStatusArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MStatusArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MStatusArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MStatusArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_460_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MStatusArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MStatusArray G__TMStatusArray;
static int G__BaseCint_460_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MStatusArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MStatusArray*) (soff+(sizeof(MStatusArray)*i)))->~G__TMStatusArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MStatusArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MStatusArray*) (soff))->~G__TMStatusArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArrayI */
static int G__BaseCint_484_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayI[n];
     } else {
       p = new((void*) gvp) MArrayI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayI;
     } else {
       p = new((void*) gvp) MArrayI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayI((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArrayI((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayI((UInt_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArrayI((UInt_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayI(*(MArrayI*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MArrayI(*(MArrayI*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayI& obj = ((MArrayI*) G__getstructoffset())->operator=(*(MArrayI*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->Adopt((UInt_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->AddAt((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->Add((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArrayI*) G__getstructoffset())->Find((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->AddUniq((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MArrayI*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const MArrayI*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->Reset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((MArrayI*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((const MArrayI*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MArrayI*) G__getstructoffset())->ReSort((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MArrayI*) G__getstructoffset())->ReSort();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArrayI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArrayI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_484_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArrayI G__TMArrayI;
static int G__BaseCint_484_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArrayI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArrayI*) (soff+(sizeof(MArrayI)*i)))->~G__TMArrayI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArrayI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArrayI*) (soff))->~G__TMArrayI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MLut */
static int G__BaseCint_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MLut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLut[n];
     } else {
       p = new((void*) gvp) MLut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MLut;
     } else {
       p = new((void*) gvp) MLut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MLut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayI& obj = ((const MLut*) G__getstructoffset())->GetRow((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLut*) G__getstructoffset())->GetNumRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MLut*) G__getstructoffset())->GetMaxEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLut*) G__getstructoffset())->GetMaxIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MLut*) G__getstructoffset())->HasConstantLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MLut*) G__getstructoffset())->IsDefaultCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MLut*) G__getstructoffset())->IsDefaultRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MLut*) G__getstructoffset())->SetInverse(*(MLut*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MLut*) G__getstructoffset())->SetInverse(*(MLut*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MLut*) G__getstructoffset())->Invert((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MLut*) G__getstructoffset())->Invert();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLut*) G__getstructoffset())->SetDefaultCol((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLut*) G__getstructoffset())->SetDefaultRow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MLut*) G__getstructoffset())->ReadStream(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLut*) G__getstructoffset())->WriteStream(*(ostream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MLut*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MLut*) G__getstructoffset())->WriteFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MLut*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MLut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MLut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MLut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MLut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MLut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_485_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MLut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MLut G__TMLut;
static int G__BaseCint_485_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MLut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MLut*) (soff+(sizeof(MLut)*i)))->~G__TMLut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MLut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MLut*) (soff))->~G__TMLut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArray */
static int G__BaseCint_486_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArray& obj = ((MArray*) G__getstructoffset())->operator=(*(MArray*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MArray*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArray*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_486_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArray G__TMArray;
static int G__BaseCint_486_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArray*) (soff+(sizeof(MArray)*i)))->~G__TMArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArray*) (soff))->~G__TMArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArrayB */
static int G__BaseCint_487_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayB[n];
     } else {
       p = new((void*) gvp) MArrayB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayB;
     } else {
       p = new((void*) gvp) MArrayB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayB((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArrayB((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayB((UInt_t) G__int(libp->para[0]), (Byte_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArrayB((UInt_t) G__int(libp->para[0]), (Byte_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayB(*(MArrayB*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MArrayB(*(MArrayB*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayB& obj = ((MArrayB*) G__getstructoffset())->operator=(*(MArrayB*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->Adopt((UInt_t) G__int(libp->para[0]), (Byte_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->AddAt((Byte_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->AddAt((Byte_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((MArrayB*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((const MArrayB*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->Reset((Byte_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]), (Byte_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Byte_t& obj = ((MArrayB*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Byte_t& obj = ((const MArrayB*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArrayB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArrayB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_487_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArrayB G__TMArrayB;
static int G__BaseCint_487_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArrayB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArrayB*) (soff+(sizeof(MArrayB)*i)))->~G__TMArrayB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArrayB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArrayB*) (soff))->~G__TMArrayB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArrayS */
static int G__BaseCint_488_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayS[n];
     } else {
       p = new((void*) gvp) MArrayS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayS;
     } else {
       p = new((void*) gvp) MArrayS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayS((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArrayS((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayS((UInt_t) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArrayS((UInt_t) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayS(*(MArrayS*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MArrayS(*(MArrayS*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayS& obj = ((MArrayS*) G__getstructoffset())->operator=(*(MArrayS*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->Adopt((UInt_t) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->AddAt((UShort_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((MArrayS*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((const MArrayS*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->Reset((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]), (UShort_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((MArrayS*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const UShort_t& obj = ((const MArrayS*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArrayS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArrayS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_488_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArrayS G__TMArrayS;
static int G__BaseCint_488_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArrayS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArrayS*) (soff+(sizeof(MArrayS)*i)))->~G__TMArrayS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArrayS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArrayS*) (soff))->~G__TMArrayS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MArrayF */
static int G__BaseCint_490_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayF[n];
     } else {
       p = new((void*) gvp) MArrayF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MArrayF;
     } else {
       p = new((void*) gvp) MArrayF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayF((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MArrayF((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayF((UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MArrayF((UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MArrayF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MArrayF(*(MArrayF*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MArrayF(*(MArrayF*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MArrayF& obj = ((MArrayF*) G__getstructoffset())->operator=(*(MArrayF*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->Adopt((UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->AddAt((Float_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MArrayF*) G__getstructoffset())->At((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const MArrayF*) G__getstructoffset())->GetArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->Reset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->Set((UInt_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((MArrayF*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((const MArrayF*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MArrayF*) G__getstructoffset())->GetSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayF::StripZeros(*(TArrayF*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->StripZeros();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MArrayF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MArrayF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MArrayF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MArrayF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MArrayF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_490_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MArrayF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MArrayF G__TMArrayF;
static int G__BaseCint_490_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MArrayF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MArrayF*) (soff+(sizeof(MArrayF)*i)))->~G__TMArrayF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MArrayF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MArrayF*) (soff))->~G__TMArrayF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTime */
static int G__BaseCint_492_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTime((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTime((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTime[n];
       } else {
         p = new((void*) gvp) MTime[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MTime;
       } else {
         p = new((void*) gvp) MTime;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MTime(*(timeval*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MTime(*(timeval*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MTime((Double_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) MTime((Double_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MTime(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MTime(*(MTime*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MTime(*(MTime*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->operator=(*(MTime*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->Now();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set(
(UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set((UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4]), (Byte_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set((UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])
, (Byte_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set((UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (Byte_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->Set((UShort_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->Set(*(timeval*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetString((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetSqlDateTime(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetSqlTimeStamp((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetCT1Time((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetCorsikaTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetStringFmt((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetStringFmt((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetBinary((const UInt_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->UpdMagicTime((Byte_t) G__int(libp->para[0]), (Byte_t) G__int(libp->para[1])
, (Byte_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetMjd((UInt_t) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MTime*) G__getstructoffset())->SetMjd((UInt_t) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetMjd((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetJD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetAxisTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetMoonPeriod((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetMagicPeriodStart((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MTime*) G__getstructoffset())->SetUnixTime((Long64_t) G__Longlong(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MTime*) G__getstructoffset())->SetUnixTime((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MTime*) G__getstructoffset())->SetEaster((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MTime*) G__getstructoffset())->SetEaster();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetJD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetMjd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetGmst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetString();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetStringFmt((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetStringFmt((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetStringFmt();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetSqlDateTime();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetSqlTimeStamp();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MTime*) G__getstructoffset())->GetFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTime*) G__getstructoffset())->GetBinary((UInt_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTime*) G__getstructoffset())->GetDate(*(UShort_t*) G__UShortref(&libp->para[0]), *(Byte_t*) G__UCharref(&libp->para[1])
, *(Byte_t*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MTime* pobj;
         const MTime xobj = ((const MTime*) G__getstructoffset())->GetDateOfSunrise();
         pobj = new MTime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTime*) G__getstructoffset())->GetDateOfSunrise(*(UShort_t*) G__UShortref(&libp->para[0]), *(Byte_t*) G__UCharref(&libp->para[1])
, *(Byte_t*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTime* pobj;
         const TTime xobj = ((const MTime*) G__getstructoffset())->GetRootTime();
         pobj = new TTime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TDatime* pobj;
         const TDatime xobj = ((const MTime*) G__getstructoffset())->GetRootDatime();
         pobj = new TDatime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetAxisTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetMoonPhase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->GetMoonPeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTime*) G__getstructoffset())->GetMagicPeriod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->GetNightAsInt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const MTime*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTime*) G__getstructoffset())->GetTime(*(Byte_t*) G__UCharref(&libp->para[0]), *(Byte_t*) G__UCharref(&libp->para[1])
, *(Byte_t*) G__UCharref(&libp->para[2]), *(UShort_t*) G__UShortref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTime*) G__getstructoffset())->GetTime(*(Byte_t*) G__UCharref(&libp->para[0]), *(Byte_t*) G__UCharref(&libp->para[1])
, *(Byte_t*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Year());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Month());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Day());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const MTime*) G__getstructoffset())->WeekDay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Hour());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->Sec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->MilliSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->MicroSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->NanoSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTime*) G__getstructoffset())->Week());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTime*) G__getstructoffset())->Week(*(Short_t*) G__Shortref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MTime*) G__getstructoffset())->DayOfYear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->IsMidnight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->IsLeapYear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = ((MTime*) G__getstructoffset())->ReadBinary(*(istream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const MTime*) G__getstructoffset())->WriteBinary(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->operator double());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->operator()());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTime*) G__getstructoffset())->AsDouble());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->AddMilliSeconds((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->Minus1ns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->Plus1ns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetMean(*(MTime*) libp->para[0].ref, *(MTime*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->SetMean((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator<(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator>(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator<=(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator>=(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator==(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator!=(*(MTime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTime*) G__getstructoffset())->operator!());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         MTime* pobj;
         MTime xobj = MTime::GetEaster((Short_t) G__int(libp->para[0]));
         pobj = new MTime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         MTime* pobj;
         MTime xobj = MTime::GetEaster();
         pobj = new MTime(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTime::GetMjdWeek1((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTime::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTime::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTime::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTime::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTime*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTime::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTime::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTime::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_492_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTime::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTime G__TMTime;
static int G__BaseCint_492_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTime*) (soff+(sizeof(MTime)*i)))->~G__TMTime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTime*) (soff))->~G__TMTime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MClone */
static int G__BaseCint_494_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MClone* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MClone(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MClone((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MClone((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MClone));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MClone* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MClone(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MClone((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MClone((TObject*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MClone((TObject*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MClone));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MClone*) G__getstructoffset())->GetClone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MClone*) G__getstructoffset())->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MClone*) G__getstructoffset())->SetForceClone((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MClone*) G__getstructoffset())->SetForceClone();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MClone::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MClone::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MClone::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MClone::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MClone*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MClone::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MClone::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MClone::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_494_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MClone::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MClone G__TMClone;
static int G__BaseCint_494_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MClone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MClone*) (soff+(sizeof(MClone)*i)))->~G__TMClone();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MClone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MClone*) (soff))->~G__TMClone();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MContinue */
static int G__BaseCint_495_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MContinue* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue(
*((const TString*) G__int(libp->para[0])), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MContinue(
*((const TString*) G__int(libp->para[0])), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue(*((const TString*) G__int(libp->para[0])), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MContinue(*((const TString*) G__int(libp->para[0])), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) MContinue(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MContinue[n];
       } else {
         p = new((void*) gvp) MContinue[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MContinue;
       } else {
         p = new((void*) gvp) MContinue;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MContinue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MContinue* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue(
(MFilter*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MContinue(
(MFilter*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue((MFilter*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MContinue((MFilter*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MContinue((MFilter*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MContinue((MFilter*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MContinue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MContinue*) G__getstructoffset())->SetAllowEmpty((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MContinue*) G__getstructoffset())->SetAllowEmpty();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MContinue*) G__getstructoffset())->IsAllowEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MContinue*) G__getstructoffset())->SetInverted((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MContinue*) G__getstructoffset())->SetInverted();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MContinue*) G__getstructoffset())->IsInverted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MContinue*) G__getstructoffset())->SetRc((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MContinue::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MContinue::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MContinue::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MContinue::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MContinue*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MContinue::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MContinue::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MContinue::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_495_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MContinue::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MContinue G__TMContinue;
static int G__BaseCint_495_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MContinue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MContinue*) (soff+(sizeof(MContinue)*i)))->~G__TMContinue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MContinue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MContinue*) (soff))->~G__TMContinue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPrint */
static int G__BaseCint_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint[n];
     } else {
       p = new((void*) gvp) MPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint;
     } else {
       p = new((void*) gvp) MPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MPrint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MPrint(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MPrint(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPrint((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPrint((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MPrint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MPrint(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MPrint(
(TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPrint((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPrint((TObject*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPrint((TObject*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MPrint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPrint*) G__getstructoffset())->SetOption((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPrint*) G__getstructoffset())->EnableSkip((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPrint*) G__getstructoffset())->EnableSkip();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_497_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPrint G__TMPrint;
static int G__BaseCint_497_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPrint*) (soff+(sizeof(MPrint)*i)))->~G__TMPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPrint*) (soff))->~G__TMPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MThread */
static int G__BaseCint_514_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MThread*) G__getstructoffset())->RunThread((void*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MThread*) G__getstructoffset())->RunThread());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MThread*) G__getstructoffset())->CancelThread((void**) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MThread*) G__getstructoffset())->CancelThread());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MThread*) G__getstructoffset())->GetThreadState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MThread*) G__getstructoffset())->GetThreadStateStr();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const MThread*) G__getstructoffset())->GetThreadId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MThread*) G__getstructoffset())->IsThreadRunning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MThread*) G__getstructoffset())->IsThreadCanceled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MThread::Sleep((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MThread::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MThread::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MThread::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MThread::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MThread*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MThread*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MThread*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MThread*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MThread::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MThread::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MThread::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_514_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MThread::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MThread G__TMThread;
static int G__BaseCint_514_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MThread*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MThread*) (soff+(sizeof(MThread)*i)))->~G__TMThread();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MThread*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MThread*) (soff))->~G__TMThread();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MObjLookup */
static int G__BaseCint_515_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObjLookup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObjLookup[n];
     } else {
       p = new((void*) gvp) MObjLookup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MObjLookup;
     } else {
       p = new((void*) gvp) MObjLookup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MObjLookup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObjLookup*) G__getstructoffset())->Add((Long_t) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObjLookup*) G__getstructoffset())->Add((Long_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObjLookup*) G__getstructoffset())->Add((Long_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MObjLookup*) G__getstructoffset())->GetObj((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MObjLookup*) G__getstructoffset())->operator[]((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MObjLookup*) G__getstructoffset())->GetObjName((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const MObjLookup*) G__getstructoffset())->GetObjTitle((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MObjLookup*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MObjLookup*) G__getstructoffset())->SetOnwer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MObjLookup*) G__getstructoffset())->SetOnwer();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObjLookup*) G__getstructoffset())->SetDefault((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MObjLookup*) G__getstructoffset())->GetDefault());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TExMap& obj = ((const MObjLookup*) G__getstructoffset())->GetMap();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TExMap& obj = ((MObjLookup*) G__getstructoffset())->GetMap();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MObjLookup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObjLookup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MObjLookup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MObjLookup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MObjLookup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObjLookup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MObjLookup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MObjLookup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint_515_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MObjLookup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseCint_515_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MObjLookup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MObjLookup(*(MObjLookup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BaseCintLN_MObjLookup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MObjLookup G__TMObjLookup;
static int G__BaseCint_515_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MObjLookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MObjLookup*) (soff+(sizeof(MObjLookup)*i)))->~G__TMObjLookup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MObjLookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MObjLookup*) (soff))->~G__TMObjLookup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BaseCint_515_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MObjLookup* dest = (MObjLookup*) G__getstructoffset();
   *dest = *(MObjLookup*) libp->para[0].ref;
   const MObjLookup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__BaseCint__0_629(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(MTime*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseCint__0_630(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = operator>>(*(istream*) libp->para[0].ref, *(MTime*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* MARS */

/* UTF8 */

/* MArgsEntry */

/* MArgs */

/* MString */

/* MMath */

/* MArrayD */

/* MSpline3 */

/* MReflection */

/* MQuaternion */

/* MEnv */

/* MLogPlugin */

/* MLog */

/* MLogHtml */

/* MStatusDisplay */

/* MParContainer */

/* MParEmulated */

/* MParSpline */

/* MTask */

/* MTaskList */

/* MParList */

/* MParEnv */

/* MParameterD */

/* MParameterDerr */

/* MParameterI */

/* MInputStreamID */

/* MFilter */

/* MTaskEnv */

/* MTaskInteractive */

/* MProgressBar */

/* MEvtLoop */

/* MGList */

/* MSearch */

/* MIter */

/* MDirIter */

/* MReadSocket */

/* MGTask */

/* MGGroupFrame */

/* MGMap */

/* MStatusArray */

/* MArrayI */

/* MLut */

/* MArray */

/* MArrayB */

/* MArrayS */

/* MArrayF */

/* MTime */

/* MClone */

/* MContinue */

/* MPrint */

/* MThread */

/* MObjLookup */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBaseCint {
 public:
  G__Sizep2memfuncBaseCint(): p(&G__Sizep2memfuncBaseCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBaseCint::*p)();
};

size_t G__get_sizep2memfuncBaseCint()
{
  G__Sizep2memfuncBaseCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_MLog_basic_ioslEcharcOchar_traitslEchargRsPgR_2(long pobject) {
  MLog *G__Lderived=(MLog*)pobject;
  basic_ios<char,char_traits<char> > *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_MLog_ios_base_3(long pobject) {
  MLog *G__Lderived=(MLog*)pobject;
  ios_base *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_MReadSocket_basic_ioslEcharcOchar_traitslEchargRsPgR_2(long pobject) {
  MReadSocket *G__Lderived=(MReadSocket*)pobject;
  basic_ios<char,char_traits<char> > *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_MReadSocket_ios_base_3(long pobject) {
  MReadSocket *G__Lderived=(MReadSocket*)pobject;
  ios_base *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBaseCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry))) {
     MArgsEntry *G__Lderived;
     G__Lderived=(MArgsEntry*)0x1000;
     {
       TString *G__Lpbase=(TString*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry),G__get_linked_tagnum(&G__BaseCintLN_TString),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArgs))) {
     MArgs *G__Lderived;
     G__Lderived=(MArgs*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgs),G__get_linked_tagnum(&G__BaseCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgs),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MString))) {
     MString *G__Lderived;
     G__Lderived=(MString*)0x1000;
     {
       TString *G__Lpbase=(TString*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MString),G__get_linked_tagnum(&G__BaseCintLN_TString),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArrayD))) {
     MArrayD *G__Lderived;
     G__Lderived=(MArrayD*)0x1000;
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayD),G__get_linked_tagnum(&G__BaseCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayD),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MSpline3))) {
     MSpline3 *G__Lderived;
     G__Lderived=(MSpline3*)0x1000;
     {
       TSpline3 *G__Lpbase=(TSpline3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TSpline3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSpline *G__Lpbase=(TSpline*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TSpline),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3),G__get_linked_tagnum(&G__BaseCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MReflection))) {
     MReflection *G__Lderived;
     G__Lderived=(MReflection*)0x1000;
     {
       TRotation *G__Lpbase=(TRotation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReflection),G__get_linked_tagnum(&G__BaseCintLN_TRotation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReflection),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MQuaternion))) {
     MQuaternion *G__Lderived;
     G__Lderived=(MQuaternion*)0x1000;
     {
       TQuaternion *G__Lpbase=(TQuaternion*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MQuaternion),G__get_linked_tagnum(&G__BaseCintLN_TQuaternion),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MQuaternion),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MEnv))) {
     MEnv *G__Lderived;
     G__Lderived=(MEnv*)0x1000;
     {
       TEnv *G__Lpbase=(TEnv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MEnv),G__get_linked_tagnum(&G__BaseCintLN_TEnv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MEnv),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin))) {
     MLogPlugin *G__Lderived;
     G__Lderived=(MLogPlugin*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MLog))) {
     MLog *G__Lderived;
     G__Lderived=(MLog*)0x1000;
     {
       basic_streambuf<char,char_traits<char> > *G__Lpbase=(basic_streambuf<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog),G__get_linked_tagnum(&G__BaseCintLN_basic_streambuflEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       basic_ostream<char,char_traits<char> > *G__Lpbase=(basic_ostream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog),G__get_linked_tagnum(&G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog),G__get_linked_tagnum(&G__BaseCintLN_basic_ioslEcharcOchar_traitslEchargRsPgR),(long)G__2vbo_MLog_basic_ioslEcharcOchar_traitslEchargRsPgR_2,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog),G__get_linked_tagnum(&G__BaseCintLN_ios_base),(long)G__2vbo_MLog_ios_base_3,1,6);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MLogHtml))) {
     MLogHtml *G__Lderived;
     G__Lderived=(MLogHtml*)0x1000;
     {
       MLogPlugin *G__Lpbase=(MLogPlugin*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogHtml),G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogHtml),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay))) {
     MStatusDisplay *G__Lderived;
     G__Lderived=(MStatusDisplay*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParContainer))) {
     MParContainer *G__Lderived;
     G__Lderived=(MParContainer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParContainer),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParEmulated))) {
     MParEmulated *G__Lderived;
     G__Lderived=(MParEmulated*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEmulated),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEmulated),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParSpline))) {
     MParSpline *G__Lderived;
     G__Lderived=(MParSpline*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParSpline),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParSpline),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MTask))) {
     MTask *G__Lderived;
     G__Lderived=(MTask*)0x1000;
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTask),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTask),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTask),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MTaskList))) {
     MTaskList *G__Lderived;
     G__Lderived=(MTaskList*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParList))) {
     MParList *G__Lderived;
     G__Lderived=(MParList*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParList),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParList),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParEnv))) {
     MParEnv *G__Lderived;
     G__Lderived=(MParEnv*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEnv),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEnv),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParameterD))) {
     MParameterD *G__Lderived;
     G__Lderived=(MParameterD*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterD),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterD),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr))) {
     MParameterDerr *G__Lderived;
     G__Lderived=(MParameterDerr*)0x1000;
     {
       MParameterD *G__Lpbase=(MParameterD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr),G__get_linked_tagnum(&G__BaseCintLN_MParameterD),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MParameterI))) {
     MParameterI *G__Lderived;
     G__Lderived=(MParameterI*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterI),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterI),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID))) {
     MInputStreamID *G__Lderived;
     G__Lderived=(MInputStreamID*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MFilter))) {
     MFilter *G__Lderived;
     G__Lderived=(MFilter*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv))) {
     MTaskEnv *G__Lderived;
     G__Lderived=(MTaskEnv*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive))) {
     MTaskInteractive *G__Lderived;
     G__Lderived=(MTaskInteractive*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar))) {
     MProgressBar *G__Lderived;
     G__Lderived=(MProgressBar*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop))) {
     MEvtLoop *G__Lderived;
     G__Lderived=(MEvtLoop*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGObject))) {
     TGObject *G__Lderived;
     G__Lderived=(TGObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGObject),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGWindow))) {
     TGWindow *G__Lderived;
     G__Lderived=(TGWindow*)0x1000;
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGWindow),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGWindow),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGFrame))) {
     TGFrame *G__Lderived;
     G__Lderived=(TGFrame*)0x1000;
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGFrame),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGFrame),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGFrame),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame))) {
     TGCompositeFrame *G__Lderived;
     G__Lderived=(TGCompositeFrame*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame))) {
     TGMainFrame *G__Lderived;
     G__Lderived=(TGMainFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame))) {
     TGTransientFrame *G__Lderived;
     G__Lderived=(TGTransientFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MGList))) {
     MGList *G__Lderived;
     G__Lderived=(MGList*)0x1000;
     {
       TList *G__Lpbase=(TList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList),G__get_linked_tagnum(&G__BaseCintLN_TList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList),G__get_linked_tagnum(&G__BaseCintLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList),G__get_linked_tagnum(&G__BaseCintLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MSearch))) {
     MSearch *G__Lderived;
     G__Lderived=(MSearch*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch),G__get_linked_tagnum(&G__BaseCintLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MDirIter))) {
     MDirIter *G__Lderived;
     G__Lderived=(MDirIter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MDirIter),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket))) {
     MReadSocket *G__Lderived;
     G__Lderived=(MReadSocket*)0x1000;
     {
       basic_streambuf<char,char_traits<char> > *G__Lpbase=(basic_streambuf<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket),G__get_linked_tagnum(&G__BaseCintLN_basic_streambuflEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       basic_istream<char,char_traits<char> > *G__Lpbase=(basic_istream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket),G__get_linked_tagnum(&G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket),G__get_linked_tagnum(&G__BaseCintLN_basic_ioslEcharcOchar_traitslEchargRsPgR),(long)G__2vbo_MReadSocket_basic_ioslEcharcOchar_traitslEchargRsPgR_2,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket),G__get_linked_tagnum(&G__BaseCintLN_ios_base),(long)G__2vbo_MReadSocket_ios_base_3,1,6);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MGTask))) {
     MGTask *G__Lderived;
     G__Lderived=(MGTask*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame))) {
     MGGroupFrame *G__Lderived;
     G__Lderived=(MGGroupFrame*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),G__get_linked_tagnum(&G__BaseCintLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MGMap))) {
     MGMap *G__Lderived;
     G__Lderived=(MGMap*)0x1000;
     {
       TExMap *G__Lpbase=(TExMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGMap),G__get_linked_tagnum(&G__BaseCintLN_TExMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MGMap),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray))) {
     MStatusArray *G__Lderived;
     G__Lderived=(MStatusArray*)0x1000;
     {
       TObjArray *G__Lpbase=(TObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray),G__get_linked_tagnum(&G__BaseCintLN_TObjArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray),G__get_linked_tagnum(&G__BaseCintLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray),G__get_linked_tagnum(&G__BaseCintLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArrayI))) {
     MArrayI *G__Lderived;
     G__Lderived=(MArrayI*)0x1000;
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayI),G__get_linked_tagnum(&G__BaseCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayI),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MLut))) {
     MLut *G__Lderived;
     G__Lderived=(MLut*)0x1000;
     {
       TObjArray *G__Lpbase=(TObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut),G__get_linked_tagnum(&G__BaseCintLN_TObjArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut),G__get_linked_tagnum(&G__BaseCintLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut),G__get_linked_tagnum(&G__BaseCintLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArray))) {
     MArray *G__Lderived;
     G__Lderived=(MArray*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArray),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArrayB))) {
     MArrayB *G__Lderived;
     G__Lderived=(MArrayB*)0x1000;
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayB),G__get_linked_tagnum(&G__BaseCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayB),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArrayS))) {
     MArrayS *G__Lderived;
     G__Lderived=(MArrayS*)0x1000;
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayS),G__get_linked_tagnum(&G__BaseCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayS),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MArrayF))) {
     MArrayF *G__Lderived;
     G__Lderived=(MArrayF*)0x1000;
     {
       MArray *G__Lpbase=(MArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayF),G__get_linked_tagnum(&G__BaseCintLN_MArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayF),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MTime))) {
     MTime *G__Lderived;
     G__Lderived=(MTime*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTime),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MTime),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MClone))) {
     MClone *G__Lderived;
     G__Lderived=(MClone*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MContinue))) {
     MContinue *G__Lderived;
     G__Lderived=(MContinue*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MPrint))) {
     MPrint *G__Lderived;
     G__Lderived=(MPrint*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint),G__get_linked_tagnum(&G__BaseCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint),G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint),G__get_linked_tagnum(&G__BaseCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseCintLN_MObjLookup))) {
     MObjLookup *G__Lderived;
     G__Lderived=(MObjLookup*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseCintLN_MObjLookup),G__get_linked_tagnum(&G__BaseCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBaseCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BaseCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Flags_t",117,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),0,G__get_linked_tagnum(&G__BaseCintLN_MLog));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Int_t (*)(MParList*list)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Int_t (*)()",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Bool_t (*)(MParList*list)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GContext_t",107,-1,0,-1);
   G__setnewtype(-1,"Graphics context handle",0);
   G__search_typename2("FontStruct_t",107,-1,0,-1);
   G__setnewtype(-1,"Pointer to font structure",0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__BaseCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BaseCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Status_t",117,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),0,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MARS */
static void G__setup_memvarMARS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MARS));
   {
   }
   G__tag_memvar_reset();
}


   /* UTF8 */
static void G__setup_memvarUTF8(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_UTF8));
   {
   G__memvar_setup((void*)(&UTF8::kCent),67,0,5,-1,-1,-1,1,"kCent=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kPound),67,0,5,-1,-1,-1,1,"kPound=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kYen),67,0,5,-1,-1,-1,1,"kYen=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kParagraph),67,0,5,-1,-1,-1,1,"kParagraph=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCopyright),67,0,5,-1,-1,-1,1,"kCopyright=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kRegistered),67,0,5,-1,-1,-1,1,"kRegistered=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kDeg),67,0,5,-1,-1,-1,1,"kDeg=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kPlusMinus),67,0,5,-1,-1,-1,1,"kPlusMinus=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kSquare),67,0,5,-1,-1,-1,1,"kSquare=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kThird),67,0,5,-1,-1,-1,1,"kThird=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kMu),67,0,5,-1,-1,-1,1,"kMu=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kDot),67,0,5,-1,-1,-1,1,"kDot=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kQuarter),67,0,5,-1,-1,-1,1,"kQuarter=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kHalf),67,0,5,-1,-1,-1,1,"kHalf=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kSmaller),67,0,5,-1,-1,-1,1,"kSmaller=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kLarger),67,0,5,-1,-1,-1,1,"kLarger=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kThreeFourth),67,0,5,-1,-1,-1,1,"kThreeFourth=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kTimes),67,0,5,-1,-1,-1,1,"kTimes=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapGamma),67,0,5,-1,-1,-1,1,"kCapGamma=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapDelta),67,0,5,-1,-1,-1,1,"kCapDelta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapSigma),67,0,5,-1,-1,-1,1,"kCapSigma=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapTheta),67,0,5,-1,-1,-1,1,"kCapTheta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapLambda),67,0,5,-1,-1,-1,1,"kCapLambda=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapXi),67,0,5,-1,-1,-1,1,"kCapXi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapPi),67,0,5,-1,-1,-1,1,"kCapPi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapPhi),67,0,5,-1,-1,-1,1,"kCapPhi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapPsi),67,0,5,-1,-1,-1,1,"kCapPsi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kCapOmega),67,0,5,-1,-1,-1,1,"kCapOmega=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kAlpha),67,0,5,-1,-1,-1,1,"kAlpha=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kBata),67,0,5,-1,-1,-1,1,"kBata=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kGamma),67,0,5,-1,-1,-1,1,"kGamma=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kDelta),67,0,5,-1,-1,-1,1,"kDelta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kEpsilon),67,0,5,-1,-1,-1,1,"kEpsilon=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kZeta),67,0,5,-1,-1,-1,1,"kZeta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kEta),67,0,5,-1,-1,-1,1,"kEta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kTheta),67,0,5,-1,-1,-1,1,"kTheta=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kIota),67,0,5,-1,-1,-1,1,"kIota=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kKappa),67,0,5,-1,-1,-1,1,"kKappa=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kLambda),67,0,5,-1,-1,-1,1,"kLambda=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kNu),67,0,5,-1,-1,-1,1,"kNu=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kXi),67,0,5,-1,-1,-1,1,"kXi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kOmicron),67,0,5,-1,-1,-1,1,"kOmicron=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kPi),67,0,5,-1,-1,-1,1,"kPi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kRho),67,0,5,-1,-1,-1,1,"kRho=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kSigma),67,0,5,-1,-1,-1,1,"kSigma=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kTau),67,0,5,-1,-1,-1,1,"kTau=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kPhi),67,0,5,-1,-1,-1,1,"kPhi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kChi),67,0,5,-1,-1,-1,1,"kChi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kPsi),67,0,5,-1,-1,-1,1,"kPsi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kOmega),67,0,5,-1,-1,-1,1,"kOmega=",0,(char*)NULL);
   G__memvar_setup((void*)(&UTF8::kEuro),67,0,5,-1,-1,-1,1,"kEuro=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArgsEntry */
static void G__setup_memvarMArgsEntry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry));
   { MArgsEntry *p; p=(MArgsEntry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArgs */
static void G__setup_memvarMArgs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgs));
   { MArgs *p; p=(MArgs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fArgc=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fArgv=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MString */
static void G__setup_memvarMString(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MString));
   { MString *p; p=(MString*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MMath */
static void G__setup_memvarMMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MMath));
   {
   }
   G__tag_memvar_reset();
}


   /* MArrayD */
static void G__setup_memvarMArrayD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   { MArrayD *p; p=(MArrayD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fArray=",0,"[fN] Array of fN chars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSpline3 */
static void G__setup_memvarMSpline3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   { MSpline3 *p; p=(MSpline3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReflection */
static void G__setup_memvarMReflection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MReflection));
   { MReflection *p; p=(MReflection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MQuaternion */
static void G__setup_memvarMQuaternion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MQuaternion));
   { MQuaternion *p; p=(MQuaternion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEnv */
static void G__setup_memvarMEnv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MEnv));
   { MEnv *p; p=(MEnv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TOrdCollection),-1,-1,4,"fChecked=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MLogPlugin */
static void G__setup_memvarMLogPlugin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin));
   { MLogPlugin *p; p=(MLogPlugin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MLog */
static void G__setup_memvarMLog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog));
   { MLog *p; p=(MLog*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),-1,-2,1,G__FastAllocString(2048).Format("eStdout=%lldLL",(long long)MLog::eStdout).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),-1,-2,1,G__FastAllocString(2048).Format("eStderr=%lldLL",(long long)MLog::eStderr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),-1,-2,1,G__FastAllocString(2048).Format("eFile=%lldLL",(long long)MLog::eFile).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),-1,-2,1,G__FastAllocString(2048).Format("eGui=%lldLL",(long long)MLog::eGui).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcL_flags),-1,-2,1,G__FastAllocString(2048).Format("eNoColors=%lldLL",(long long)MLog::eNoColors).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcLELogBits),-1,-2,1,G__FastAllocString(2048).Format("kHasChanged=%lldLL",(long long)MLog::kHasChanged).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcLELogType),-1,-2,1,G__FastAllocString(2048).Format("kDefault=%lldLL",(long long)MLog::kDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcLELogType),-1,-2,1,G__FastAllocString(2048).Format("kColor=%lldLL",(long long)MLog::kColor).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcLELogType),-1,-2,1,G__FastAllocString(2048).Format("kBlackWhite=%lldLL",(long long)MLog::kBlackWhite).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogcLcLdA),-1,-2,4,"kIsUnderlined=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,99,0,1,-1,-1,-2,4,"kESC=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kEsc=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kReset=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kRed=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kGreen=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kYellow=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kBlue=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kUnderline=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kBlink=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kBright=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,5,-1,-1,-2,4,"kDark=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"fgBufferSize=160LL",0,"two standard lines");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fBuffer=",0,"!");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fBase[161]=",0,"! Buffer to store the data in");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fPPtr=",0,"! Pointer to present position in buffer");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fEPtr=",0,"! Pointer to end of buffer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fOutputLevel=",0,"! Present output level of the stream");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fDebugLevel=",0,"! Present global debug level");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fDevice=",0,"! Flag to indicate the present streams");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsNull=",0,"! Switch output completely off");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fOut=",0,"! possible file output stream");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fOutAllocated=",0,"! flag if fout is created by MLogging");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGTextView),-1,-1,4,"fGui=",0,"! Text View output");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsDirectGui=",0,"! Pipe text directly to the GUI (for single threaded environments)");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fGuiLines=",0,"! Lines to pipe to gui");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumLines=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fGuiLine=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fPlugins=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MLogHtml */
static void G__setup_memvarMLogHtml(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogHtml));
   { MLogHtml *p; p=(MLogHtml*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"fOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUnderline=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColor=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MLogHtmlcLcLdA),-1,-2,4,"kFontOpen=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MStatusDisplay */
static void G__setup_memvarMStatusDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay));
   { MStatusDisplay *p; p=(MStatusDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileBrowser=%lldLL",(long long)MStatusDisplay::kFileBrowser).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileCanvas=%lldLL",(long long)MStatusDisplay::kFileCanvas).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileTab=%lldLL",(long long)MStatusDisplay::kFileTab).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileOpen=%lldLL",(long long)MStatusDisplay::kFileOpen).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSave=%lldLL",(long long)MStatusDisplay::kFileSave).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAs=%lldLL",(long long)MStatusDisplay::kFileSaveAs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsPS=%lldLL",(long long)MStatusDisplay::kFileSaveAsPS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsPDF=%lldLL",(long long)MStatusDisplay::kFileSaveAsPDF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsSVG=%lldLL",(long long)MStatusDisplay::kFileSaveAsSVG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsRoot=%lldLL",(long long)MStatusDisplay::kFileSaveAsRoot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsPNG=%lldLL",(long long)MStatusDisplay::kFileSaveAsPNG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsGIF=%lldLL",(long long)MStatusDisplay::kFileSaveAsGIF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsJPG=%lldLL",(long long)MStatusDisplay::kFileSaveAsJPG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsXPM=%lldLL",(long long)MStatusDisplay::kFileSaveAsXPM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsBMP=%lldLL",(long long)MStatusDisplay::kFileSaveAsBMP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsCSV=%lldLL",(long long)MStatusDisplay::kFileSaveAsCSV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsTIFF=%lldLL",(long long)MStatusDisplay::kFileSaveAsTIFF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsPlainRoot=%lldLL",(long long)MStatusDisplay::kFileSaveAsPlainRoot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsXML=%lldLL",(long long)MStatusDisplay::kFileSaveAsXML).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileSaveAsC=%lldLL",(long long)MStatusDisplay::kFileSaveAsC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFilePrint=%lldLL",(long long)MStatusDisplay::kFilePrint).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFilePrinterName=%lldLL",(long long)MStatusDisplay::kFilePrinterName).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileClose=%lldLL",(long long)MStatusDisplay::kFileClose).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileExit=%lldLL",(long long)MStatusDisplay::kFileExit).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kFileReset=%lldLL",(long long)MStatusDisplay::kFileReset).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLoopNone=%lldLL",(long long)MStatusDisplay::kLoopNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLoopPause=%lldLL",(long long)MStatusDisplay::kLoopPause).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLoopStep=%lldLL",(long long)MStatusDisplay::kLoopStep).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLoopStop=%lldLL",(long long)MStatusDisplay::kLoopStop).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSave=%lldLL",(long long)MStatusDisplay::kTabSave).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAs=%lldLL",(long long)MStatusDisplay::kTabSaveAs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsPS=%lldLL",(long long)MStatusDisplay::kTabSaveAsPS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsPDF=%lldLL",(long long)MStatusDisplay::kTabSaveAsPDF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsSVG=%lldLL",(long long)MStatusDisplay::kTabSaveAsSVG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsRoot=%lldLL",(long long)MStatusDisplay::kTabSaveAsRoot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsPNG=%lldLL",(long long)MStatusDisplay::kTabSaveAsPNG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsGIF=%lldLL",(long long)MStatusDisplay::kTabSaveAsGIF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsJPG=%lldLL",(long long)MStatusDisplay::kTabSaveAsJPG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsXPM=%lldLL",(long long)MStatusDisplay::kTabSaveAsXPM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsBMP=%lldLL",(long long)MStatusDisplay::kTabSaveAsBMP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsCSV=%lldLL",(long long)MStatusDisplay::kTabSaveAsCSV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsTIFF=%lldLL",(long long)MStatusDisplay::kTabSaveAsTIFF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsXML=%lldLL",(long long)MStatusDisplay::kTabSaveAsXML).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsC=%lldLL",(long long)MStatusDisplay::kTabSaveAsC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabSaveAsPlainRoot=%lldLL",(long long)MStatusDisplay::kTabSaveAsPlainRoot).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabPrint=%lldLL",(long long)MStatusDisplay::kTabPrint).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabNext=%lldLL",(long long)MStatusDisplay::kTabNext).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabPrevious=%lldLL",(long long)MStatusDisplay::kTabPrevious).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabRemove=%lldLL",(long long)MStatusDisplay::kTabRemove).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize640=%lldLL",(long long)MStatusDisplay::kSize640).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize768=%lldLL",(long long)MStatusDisplay::kSize768).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize800=%lldLL",(long long)MStatusDisplay::kSize800).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize960=%lldLL",(long long)MStatusDisplay::kSize960).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize1024=%lldLL",(long long)MStatusDisplay::kSize1024).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize1152=%lldLL",(long long)MStatusDisplay::kSize1152).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize1280=%lldLL",(long long)MStatusDisplay::kSize1280).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize1400=%lldLL",(long long)MStatusDisplay::kSize1400).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSize1600=%lldLL",(long long)MStatusDisplay::kSize1600).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSizeOptimum=%lldLL",(long long)MStatusDisplay::kSizeOptimum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogCopy=%lldLL",(long long)MStatusDisplay::kLogCopy).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogClear=%lldLL",(long long)MStatusDisplay::kLogClear).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogSelect=%lldLL",(long long)MStatusDisplay::kLogSelect).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogFind=%lldLL",(long long)MStatusDisplay::kLogFind).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogSave=%lldLL",(long long)MStatusDisplay::kLogSave).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogAppend=%lldLL",(long long)MStatusDisplay::kLogAppend).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLogPrint=%lldLL",(long long)MStatusDisplay::kLogPrint).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kPicMagic=%lldLL",(long long)MStatusDisplay::kPicMagic).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kPicMars=%lldLL",(long long)MStatusDisplay::kPicMars).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kSearch=%lldLL",(long long)MStatusDisplay::kSearch).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kTabs=%lldLL",(long long)MStatusDisplay::kTabs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),-1,-2,1,G__FastAllocString(2048).Format("kLastElement=%lldLL",(long long)MStatusDisplay::kLastElement).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kExitLoopOnExit=%lldLL",(long long)MStatusDisplay::kExitLoopOnExit).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kExitLoopOnClose=%lldLL",(long long)MStatusDisplay::kExitLoopOnClose).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,2,"fName=",0,"status display identifier (name) (gROOT->FindObject())");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,2,"fTitle=",0,"status display title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MLog),-1,-1,2,"fLog=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGList),-1,-1,2,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame),-1,-1,2,"fUserFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGHProgressBar),-1,-1,4,"fBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGTab),-1,-1,4,"fTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGLayoutHints),-1,-1,4,"fLayCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TTimer),-1,-1,4,"fTimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TMutex),-1,-1,4,"fMutex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t),G__defined_typename("Status_t"),-1,4,"fStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TTimer),-1,-1,4,"fLogTimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGTextView),-1,-1,4,"fLogBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("FontStruct_t"),-1,4,"fFont=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fIsLocked=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fBatch=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParContainer */
static void G__setup_memvarMParContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParContainer));
   { MParContainer *p; p=(MParContainer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TObjArray),-1,-2,4,"fgListMethodCall=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,2,"fName=",0,"parameter container identifier (name)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,2,"fTitle=",0,"parameter container title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MLog),-1,-1,2,"fLog=",0,"The general log facility for this object, initialized with the global object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay),-1,-1,2,"fDisplay=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MParContainercLcLdA),-1,-2,4,"kIsSavedAsPrimitive=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fReadyToSave=",0,"should be set to true if the contents of the container is changed somehow");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MParContainercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEnableGraphicalOutput=%lldLL",(long long)MParContainer::kEnableGraphicalOutput).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParEmulated */
static void G__setup_memvarMParEmulated(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEmulated));
   { MParEmulated *p; p=(MParEmulated*)0x1000; if (p) { }
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fClassName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParSpline */
static void G__setup_memvarMParSpline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParSpline));
   { MParSpline *p; p=(MParSpline*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MSpline3),-1,-1,4,"fSpline=",0,"Spline hold by this container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTask */
static void G__setup_memvarMTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MTask));
   { MTask *p; p=(MTask*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kAccStandard=%lldLL",(long long)MTask::kAccStandard).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kAccDontTime=%lldLL",(long long)MTask::kAccDontTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kAccDontReset=%lldLL",(long long)MTask::kAccDontReset).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fListOfBranches=",0,"! List of Branch names for auto enabeling scheme");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MFilter),-1,-1,4,"fFilter=",0,"Filter for conditional task execution");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fSerialNumber=",0,"Serial number having more than one detector of the same type");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsPreprocessed=",0,"! Indicates the success of the PreProcessing (set by MTaskList)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TStopwatch),-1,-1,4,"fStopwatch=",0,"! Count the execution time and number of executions");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumExecutions=",0,"! Number of executions (also counted by fStopwatch, but faster)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumExec0=",0,"! Total number of executions at PreProcess");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fAccelerator=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTaskList */
static void G__setup_memvarMTaskList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList));
   { MTaskList *p; p=(MTaskList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-2,4,"gsDefName=",0,"default name");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-2,4,"gsDefTitle=",0,"default title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fTasks=",0,"Container for the ordered list of different tasks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TList),-1,-1,4,"fTasksProcess=",0,"! Task which overload the Process function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MParList),-1,-1,4,"fParList=",0,"! The parameter list given in PreProcess");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumPasses=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumPass=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskListcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParList */
static void G__setup_memvarMParList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParList));
   { MParList *p; p=(MParList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TOrdCollection),-1,-1,4,"fContainer=",0,"Collection of Parameter and Data Containers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TOrdCollection),-1,-1,4,"fAutodelete=",0,"! All what this list contains is deleted in the destructor");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MParListcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MParListcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDoNotReset=%lldLL",(long long)MParList::kDoNotReset).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MParListcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIsProcessing=%lldLL",(long long)MParList::kIsProcessing).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParEnv */
static void G__setup_memvarMParEnv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEnv));
   { MParEnv *p; p=(MParEnv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MParContainer),-1,-1,4,"fCont=",0,"Pointer to the paremetr container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fClassName=",0,"Name of the Class fCont must inherit from");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsOwner=",0,"Flag whether MParEnv owns fCont");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParameterD */
static void G__setup_memvarMParameterD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterD));
   { MParameterD *p; p=(MParameterD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParameterDerr */
static void G__setup_memvarMParameterDerr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr));
   { MParameterDerr *p; p=(MParameterDerr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MParameterI */
static void G__setup_memvarMParameterI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterI));
   { MParameterI *p; p=(MParameterI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MInputStreamID */
static void G__setup_memvarMInputStreamID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID));
   { MInputStreamID *p; p=(MInputStreamID*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fStreamId=",0,"! which type of task should be processed?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MFilter */
static void G__setup_memvarMFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter));
   { MFilter *p; p=(MFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInverted=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTaskEnv */
static void G__setup_memvarMTaskEnv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv));
   { MTaskEnv *p; p=(MTaskEnv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MTask),-1,-1,4,"fTask=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskEnvcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTaskEnvcLcLdA),-1,-2,4,"kIsDummy=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTaskInteractive */
static void G__setup_memvarMTaskInteractive(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive));
   { MTaskInteractive *p; p=(MTaskInteractive*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TMethodCall),-1,-1,4,"fCall[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,49,0,0,-1,G__defined_typename("Int_t (*)(MParList*list)"),-1,4,"fPreProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,49,0,0,-1,G__defined_typename("Int_t (*)()"),-1,4,"fProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,49,0,0,-1,G__defined_typename("Int_t (*)()"),-1,4,"fPostProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,49,0,0,-1,G__defined_typename("Bool_t (*)(MParList*list)"),-1,4,"fReInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MProgressBar */
static void G__setup_memvarMProgressBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar));
   { MProgressBar *p; p=(MProgressBar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGList),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGHProgressBar),-1,-1,4,"fBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEvtLoop */
static void G__setup_memvarMEvtLoop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop));
   { MEvtLoop *p; p=(MEvtLoop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MParList),-1,-1,4,"fParList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MTaskList),-1,-1,4,"fTaskList=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TGProgressBar),-1,-1,4,"fProgress=",0,"!");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fNumEvents=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoopcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoopcLcLdA),-1,-2,4,"kPrivateDisplay=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoopcLcLStatistics_t),-1,-2,1,G__FastAllocString(2048).Format("kNoStatistics=%lldLL",(long long)MEvtLoop::kNoStatistics).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoopcLcLStatistics_t),-1,-2,1,G__FastAllocString(2048).Format("kStdStatistics=%lldLL",(long long)MEvtLoop::kStdStatistics).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MEvtLoopcLcLStatistics_t),-1,-2,1,G__FastAllocString(2048).Format("kFullStatistics=%lldLL",(long long)MEvtLoop::kFullStatistics).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGList */
static void G__setup_memvarMGList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList));
   { MGList *p; p=(MGList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MSearch */
static void G__setup_memvarMSearch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch));
   { MSearch *p; p=(MSearch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGList),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MIter */
static void G__setup_memvarMIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MIter));
   { MIter *p; p=(MIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TIterator),-1,-1,4,"fIterator=",0,"collection iterator");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MDirIter */
static void G__setup_memvarMDirIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MDirIter));
   { MDirIter *p; p=(MDirIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TObjArray),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TIter),-1,-1,4,"fNext=",0,"!");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fDirPtr=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TObject),-1,-1,4,"fCurrentPath=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MReadSocket */
static void G__setup_memvarMReadSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket));
   { MReadSocket *p; p=(MReadSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fBuffer=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fPort=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMtu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TTime),-1,-1,4,"fTimeout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TServerSocket),-1,-1,4,"fServSock=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TSocket),-1,-1,4,"fRxSocket=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGTask */
static void G__setup_memvarMGTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask));
   { MGTask *p; p=(MGTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame),-1,-1,4,"fFrame=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGGroupFrame */
static void G__setup_memvarMGGroupFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame));
   { MGGroupFrame *p; p=(MGGroupFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGTask),-1,-1,4,"fTask=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MGList),-1,-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MGMap */
static void G__setup_memvarMGMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MGMap));
   { MGMap *p; p=(MGMap*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MGMapcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MStatusArray */
static void G__setup_memvarMStatusArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray));
   { MStatusArray *p; p=(MStatusArray*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MStatusArraycLcLdA),-1,-2,4,"kMyCanDelete=1073741824LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArrayI */
static void G__setup_memvarMArrayI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   { MArrayI *p; p=(MArrayI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fArray=",0,"[fN] Array of fN chars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MLut */
static void G__setup_memvarMLut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut));
   { MLut *p; p=(MLut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinEntries=",0,"The minimum entries per row");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxEntries=",0,"The maximum entries per row");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxIndex=",0,"The maximum index fount in the lut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArray */
static void G__setup_memvarMArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArray));
   { MArray *p; p=(MArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fN=",0,"Number of array elements");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArrayB */
static void G__setup_memvarMArrayB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   { MArrayB *p; p=(MArrayB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("Byte_t"),-1,4,"fArray=",0,"[fN] Array of fN chars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArrayS */
static void G__setup_memvarMArrayS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   { MArrayS *p; p=(MArrayS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fArray=",0,"[fN] Array of fN chars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MArrayF */
static void G__setup_memvarMArrayF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   { MArrayF *p; p=(MArrayF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"fArray=",0,"[fN] Array of fN chars");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTime */
static void G__setup_memvarMTime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MTime));
   { MTime *p; p=(MTime*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(2048).Format("kHour=%lluULL",(unsigned long long)MTime::kHour).data(),0,"[ms] one hour");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(2048).Format("kDay=%lluULL",(unsigned long long)MTime::kDay).data(),0,"[ms] one day");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(2048).Format("kDaySec=%lluULL",(unsigned long long)MTime::kDaySec).data(),0,"[s] one day");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSunday=%lldLL",(long long)MTime::kSunday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMonday=%lldLL",(long long)MTime::kMonday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kTuesday=%lldLL",(long long)MTime::kTuesday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kWednesday=%lldLL",(long long)MTime::kWednesday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kThursday=%lldLL",(long long)MTime::kThursday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFriday=%lldLL",(long long)MTime::kFriday).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MTimecLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSaturday=%lldLL",(long long)MTime::kSaturday).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMjd=",0,"[d]  Day in the century        (Day of sun rise)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TTime),-1,-1,4,"fTime=",0,"[ms] Time of Day               (-11h<=x<13h)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNanoSec=",0,"[ns] NanoSec part of TimeOfDay (<1000000)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MClone */
static void G__setup_memvarMClone(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone));
   { MClone *p; p=(MClone*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BaseCintLN_TObject),-1,-1,4,"fObject=",0,"pointer to container which has to be cloned");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fObjName=",0,"given name to search for in the parameterlist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TObject),-1,-1,4,"fClone=",0,"pointer to the cloned object. deletion is handled by MClone");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceClone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MContinue */
static void G__setup_memvarMContinue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue));
   { MContinue *p; p=(MContinue*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_MTaskList),-1,-1,4,"fTaskList=",0,"! pointer to the present tasklist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRc=",0,"Return code returned in Process()");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MContinuecLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MContinuecLcLdA),-1,-2,4,"kFilterIsPrivate=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MContinuecLcLdA),-1,-2,4,"kAllowEmpty=65536LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPrint */
static void G__setup_memvarMPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint));
   { MPrint *p; p=(MPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BaseCintLN_TObject),-1,-1,4,"fObject=",0,"pointer to container which has to be printed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fObjName=",0,"given name to search for in the parameterlist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TString),-1,-1,4,"fOption=",0,"Print option");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MPrintcLcLdA),-1,-2,4,"kSkip=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MPrintcLcLdA),-1,-2,4,"kSeparator=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MThread */
static void G__setup_memvarMThread(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MThread));
   { MThread *p; p=(MThread*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TThread),-1,-1,4,"fThread=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumCleanups=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MObjLookup */
static void G__setup_memvarMObjLookup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseCintLN_MObjLookup));
   { MObjLookup *p; p=(MObjLookup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BaseCintLN_TExMap),-1,-1,4,"fMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TObject),-1,-1,4,"fDefault=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseCintLN_MObjLookupcLcLdA),-1,-2,4,"kIsOwner=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BaseCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBaseCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMARS(void) {
   /* MARS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MARS));
   G__memfunc_setup("CheckRootVer",1199,G__BaseCint_159_0_1, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (bool (*)())(&MARS::CheckRootVer) ), 0);
   G__memfunc_setup("GetPackageName",1357,G__BaseCint_159_0_2, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString (*)())(&MARS::GetPackageName) ), 0);
   G__memfunc_setup("GetPackageVersion",1714,G__BaseCint_159_0_3, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString (*)())(&MARS::GetPackageVersion) ), 0);
   G__memfunc_setup("GetRevision",1135,G__BaseCint_159_0_4, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString (*)())(&MARS::GetRevision) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUTF8(void) {
   /* UTF8 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_UTF8));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArgsEntry(void) {
   /* MArgsEntry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry));
   G__memfunc_setup("MArgsEntry",1004,G__BaseCint_161_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry), -1, 0, 1, 1, 1, 0, "C - - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_161_0_3, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArgsEntry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_161_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgsEntry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_161_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArgsEntry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_161_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArgsEntry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_161_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_161_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgsEntry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_161_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArgsEntry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_161_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgsEntry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_161_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArgsEntry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MArgsEntry", 1004, G__BaseCint_161_0_15, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry), -1, 0, 1, 1, 1, 0, "u 'MArgsEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MArgsEntry", 1130, G__BaseCint_161_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_161_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry), -1, 1, 1, 1, 1, 0, "u 'MArgsEntry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArgs(void) {
   /* MArgs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArgs));
   G__memfunc_setup("GetArgument",1123,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry), -1, 0, 1, 1, 4, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeOption",805,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_MArgsEntry), -1, 0, 1, 1, 4, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArgs",474,G__BaseCint_162_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArgs), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveRootArgs",1439,G__BaseCint_162_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__BaseCint_162_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloat",790,G__BaseCint_162_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__BaseCint_162_0_8, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntAndRemove",1484,G__BaseCint_162_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloatAndRemove",1687,G__BaseCint_162_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringAndRemove",1816,G__BaseCint_162_0_11, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntAndRemove",1484,G__BaseCint_162_0_12, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 10 - name i - 'Int_t' 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloatAndRemove",1687,G__BaseCint_162_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 10 - name d - 'Double_t' 0 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringAndRemove",1816,G__BaseCint_162_0_14, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 - name u 'TString' - 10 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Has",284,G__BaseCint_162_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOnly",702,G__BaseCint_162_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOption",917,G__BaseCint_162_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOnlyAndRemove",1599,G__BaseCint_162_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArgumentStr",1436,G__BaseCint_162_0_19, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArgumentInt",1422,G__BaseCint_162_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArgumentFloat",1625,G__BaseCint_162_0_21, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumArguments",1542,G__BaseCint_162_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumOptions",1340,G__BaseCint_162_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEntries",1322,G__BaseCint_162_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveArgument",1457,G__BaseCint_162_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCommandLine",1383,G__BaseCint_162_0_26, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCommandLine",1383,G__BaseCint_162_0_27, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (TString (*)(int, char**))(&MArgs::GetCommandLine) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_162_0_28, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArgs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_162_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_162_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArgs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_162_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArgs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_162_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_162_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_162_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArgs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_162_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArgs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_162_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArgs::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArgs", 600, G__BaseCint_162_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMString(void) {
   /* MString */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MString));
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_MString), -1, 1, 2, 1, 4, 0, 
"C - - 10 - fmt u 'va_list' - 1 - ap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MString",708,G__BaseCint_163_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MString), -1, 0, 1, 1, 1, 0, "C - - 10 '0' txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MString",708,G__BaseCint_163_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MString), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_163_0_4, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MString::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_163_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MString::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_163_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MString::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_163_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MString::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_163_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_163_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MString::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_163_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MString::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_163_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MString::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_163_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MString::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MString", 708, G__BaseCint_163_0_16, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MString), -1, 0, 1, 1, 1, 0, "u 'MString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MString", 834, G__BaseCint_163_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_163_0_18, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MString), -1, 1, 1, 1, 1, 0, "u 'MString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMMath(void) {
   /* MMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MMath));
   G__memfunc_setup("GaussProb",918,G__BaseCint_167_0_1, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 '1' sigma "
"d - 'Double_t' 0 '0' mean", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MMath::GaussProb) ), 0);
   G__memfunc_setup("GaussProb2D",1036,G__BaseCint_167_0_2, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 '1' sigma", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&MMath::GaussProb2D) ), 0);
   G__memfunc_setup("ReSort",607,G__BaseCint_167_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n S - 'Short_t' 0 - a "
"g - 'Bool_t' 0 'kFALSE' down", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t, Short_t*, Bool_t))(&MMath::ReSort) ), 0);
   G__memfunc_setup("ReSort",607,G__BaseCint_167_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n I - 'Int_t' 0 - a "
"g - 'Bool_t' 0 'kFALSE' down", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t, Int_t*, Bool_t))(&MMath::ReSort) ), 0);
   G__memfunc_setup("ReSort",607,G__BaseCint_167_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n F - 'Float_t' 0 - a "
"g - 'Bool_t' 0 'kFALSE' down", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t, Float_t*, Bool_t))(&MMath::ReSort) ), 0);
   G__memfunc_setup("ReSort",607,G__BaseCint_167_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n D - 'Double_t' 0 - a "
"g - 'Bool_t' 0 'kFALSE' down", (char*)NULL, (void*) G__func2void( (void (*)(Long64_t, Double_t*, Bool_t))(&MMath::ReSort) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_7, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n S - 'Short_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Short_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_8, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n I - 'Int_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Int_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n F - 'Float_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Float_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_10, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n D - 'Double_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Double_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_11, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n L - 'Long_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Long_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_12, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - n N - 'Long64_t' 10 - a "
"d - 'Double_t' 1 - med", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Long64_t*, Double_t&))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n S - 'Short_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Short_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n I - 'Int_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Int_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_15, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n F - 'Float_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Float_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_16, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n D - 'Double_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Double_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n L - 'Long_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Long_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("MedianDev",877,G__BaseCint_167_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - n N - 'Long64_t' 10 - a", (char*)NULL, (void*) G__func2void( (Double_t (*)(Long64_t, const Long64_t*))(&MMath::MedianDev) ), 0);
   G__memfunc_setup("Significance",1219,G__BaseCint_167_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&MMath::Significance) ), 0);
   G__memfunc_setup("SignificanceSym",1532,G__BaseCint_167_0_20, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&MMath::SignificanceSym) ), 0);
   G__memfunc_setup("SignificanceLiMa",1574,G__BaseCint_167_0_21, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b "
"d - 'Double_t' 0 '1' alpha", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MMath::SignificanceLiMa) ), 0);
   G__memfunc_setup("SignificanceLiMaSigned",2176,G__BaseCint_167_0_22, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b "
"d - 'Double_t' 0 '1' alpha", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MMath::SignificanceLiMaSigned) ), 0);
   G__memfunc_setup("SignificanceExc",1507,G__BaseCint_167_0_23, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b "
"d - 'Double_t' 0 '1' alpha", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MMath::SignificanceExc) ), 0);
   G__memfunc_setup("ErrorExc",810,G__BaseCint_167_0_24, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - b "
"d - 'Double_t' 0 '1' alpha", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MMath::ErrorExc) ), 0);
   G__memfunc_setup("ReducePrecision",1540,G__BaseCint_167_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 1 - val", (char*)NULL, (void*) G__func2void( (void (*)(Float_t&))(&MMath::ReducePrecision) ), 0);
   G__memfunc_setup("GetParab",774,G__BaseCint_167_0_26, 117, G__get_linked_tagnum(&G__BaseCintLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - x u 'TVector3' - 11 - y", (char*)NULL, (void*) G__func2void( (TVector3 (*)(const TVector3&, const TVector3&))(&MMath::GetParab) ), 0);
   G__memfunc_setup("InterpolParabLin",1622,G__BaseCint_167_0_27, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - vx u 'TVector3' - 11 - vy "
"d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(const TVector3&, const TVector3&, Double_t))(&MMath::InterpolParabLin) ), 0);
   G__memfunc_setup("InterpolParabLin",1622,G__BaseCint_167_0_28, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - vy d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(const TVector3&, Double_t))(&MMath::InterpolParabLin) ), 0);
   G__memfunc_setup("InterpolParabLog",1621,G__BaseCint_167_0_29, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - vx u 'TVector3' - 11 - vy "
"d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(const TVector3&, const TVector3&, Double_t))(&MMath::InterpolParabLog) ), 0);
   G__memfunc_setup("InterpolParabCos",1624,G__BaseCint_167_0_30, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - vx u 'TVector3' - 11 - vy "
"d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(const TVector3&, const TVector3&, Double_t))(&MMath::InterpolParabCos) ), 0);
   G__memfunc_setup("GetIntersectionPoint",2081,G__BaseCint_167_0_31, 117, G__get_linked_tagnum(&G__BaseCintLN_TVector2), -1, 0, 5, 1, 1, 0, 
"u 'TVector2' - 11 - x1 u 'TVector2' - 11 - y1 "
"u 'TVector2' - 11 - x2 u 'TVector2' - 11 - y2 "
"g - 'Bool_t' 1 - rc", (char*)NULL, (void*) G__func2void( (TVector2 (*)(const TVector2&, const TVector2&, const TVector2&, const TVector2&, Bool_t&))(&MMath::GetIntersectionPoint) ), 0);
   G__memfunc_setup("GetIntersectionPoint",2081,G__BaseCint_167_0_32, 117, G__get_linked_tagnum(&G__BaseCintLN_TVector2), -1, 0, 4, 1, 1, 0, 
"u 'TVector2' - 11 - x1 u 'TVector2' - 11 - y1 "
"u 'TVector2' - 11 - x2 u 'TVector2' - 11 - y2", (char*)NULL, (void*) G__func2void( (TVector2 (*)(const TVector2&, const TVector2&, const TVector2&, const TVector2&))(&MMath::GetIntersectionPoint) ), 0);
   G__memfunc_setup("SolvePol1",869,G__BaseCint_167_0_33, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - c d - 'Double_t' 0 - d "
"d - 'Double_t' 1 - x1", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&))(&MMath::SolvePol1) ), 0);
   G__memfunc_setup("SolvePol2",870,G__BaseCint_167_0_34, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - c d - 'Double_t' 0 - d "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - x2", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&, Double_t&))(&MMath::SolvePol2) ), 0);
   G__memfunc_setup("SolvePol2",870,G__BaseCint_167_0_35, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - b d - 'Double_t' 0 - c "
"d - 'Double_t' 0 - d d - 'Double_t' 1 - x1 "
"d - 'Double_t' 1 - x2", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t, Double_t&, Double_t&))(&MMath::SolvePol2) ), 0);
   G__memfunc_setup("SolvePol3",871,G__BaseCint_167_0_36, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - b d - 'Double_t' 0 - c "
"d - 'Double_t' 0 - d d - 'Double_t' 1 - x1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - x3", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&))(&MMath::SolvePol3) ), 0);
   G__memfunc_setup("SolvePol3",871,G__BaseCint_167_0_37, 105, -1, G__defined_typename("Int_t"), 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c d - 'Double_t' 0 - d "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - x2 "
"d - 'Double_t' 1 - x3", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&))(&MMath::SolvePol3) ), 0);
   G__memfunc_setup("LeastSqFitExpW1",1429,G__BaseCint_167_0_38, 117, G__get_linked_tagnum(&G__BaseCintLN_TArrayD), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (TArrayD (*)(Int_t, Double_t*, Double_t*))(&MMath::LeastSqFitExpW1) ), 0);
   G__memfunc_setup("LeastSqFitExp",1293,G__BaseCint_167_0_39, 117, G__get_linked_tagnum(&G__BaseCintLN_TArrayD), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (TArrayD (*)(Int_t, Double_t*, Double_t*))(&MMath::LeastSqFitExp) ), 0);
   G__memfunc_setup("LeastSqFitLog",1282,G__BaseCint_167_0_40, 117, G__get_linked_tagnum(&G__BaseCintLN_TArrayD), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (TArrayD (*)(Int_t, Double_t*, Double_t*))(&MMath::LeastSqFitLog) ), 0);
   G__memfunc_setup("LeastSqFitPowerLaw",1809,G__BaseCint_167_0_41, 117, G__get_linked_tagnum(&G__BaseCintLN_TArrayD), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (TArrayD (*)(Int_t, Double_t*, Double_t*))(&MMath::LeastSqFitPowerLaw) ), 0);
   G__memfunc_setup("ModF",358,G__BaseCint_167_0_42, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - dbl d - 'Double_t' 1 - frac", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t&))(&MMath::ModF) ), 0);
   G__memfunc_setup("Sqrt3",477,G__BaseCint_167_0_43, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MMath::Sqrt3) ), 0);
   G__memfunc_setup("Sgn",296,G__BaseCint_167_0_44, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MMath::Sgn) ), 0);
   G__memfunc_setup("Format",617,G__BaseCint_167_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - v d - 'Double_t' 1 - e", (char*)NULL, (void*) G__func2void( (void (*)(Double_t&, Double_t&))(&MMath::Format) ), 0);
   G__memfunc_setup("RndmExp",702,G__BaseCint_167_0_46, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - tau", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&MMath::RndmExp) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArrayD(void) {
   /* MArrayD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayD));
   G__memfunc_setup("MArrayD",656,G__BaseCint_190_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayD",656,G__BaseCint_190_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayD",656,G__BaseCint_190_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n D - 'Double_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayD",656,G__BaseCint_190_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 0, 1, 1, 1, 0, "u 'MArrayD' - 11 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_190_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 1, 1, 1, 1, 0, "u 'MArrayD' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adopt",504,G__BaseCint_190_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n D - 'Double_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_190_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - c h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__BaseCint_190_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__BaseCint_190_0_9, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_190_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_190_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__BaseCint_190_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n D - 'Double_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_190_0_14, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_190_0_15, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSum",597,G__BaseCint_190_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StripZeros",1061,G__BaseCint_190_0_17, 121, -1, -1, 0, 1, 3, 1, 0, "u 'TArrayD' - 1 - arr", (char*)NULL, (void*) G__func2void( (void (*)(TArrayD&))(&MArrayD::StripZeros) ), 0);
   G__memfunc_setup("StripZeros",1061,G__BaseCint_190_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_190_0_19, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArrayD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_190_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_190_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArrayD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_190_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArrayD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_190_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_190_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_190_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_190_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_190_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayD::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArrayD", 782, G__BaseCint_190_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSpline3(void) {
   /* MSpline3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MSpline3));
   G__memfunc_setup("ConvertSpline",1356,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGraph), -1, 0, 2, 1, 4, 8, 
"u 'TSpline' - 11 - s f - 'Float_t' 0 - freq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertGraph",1235,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGraph), -1, 0, 2, 1, 4, 8, 
"u 'TGraph' - 11 - s f - 'Float_t' 0 - freq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertFunc",1133,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayD), -1, 1, 2, 1, 4, 8, 
"u 'TF1' - 11 - f f - 'Float_t' 0 - freq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralBin",1103,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 8, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralBin",1103,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_6, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_7, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 4, 1, 1, 0, 
"u 'TGraph' - 11 - g C - - 10 '0' opt "
"d - 'Double_t' 0 '0' valbeg d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_8, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 5, 1, 1, 0, 
"u 'TGraph' - 11 - g d - 'Double_t' 0 - freq "
"C - - 10 '0' opt d - 'Double_t' 0 '0' valbeg "
"d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_9, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 5, 1, 1, 0, 
"u 'TSpline' - 11 - s d - 'Double_t' 0 - freq "
"C - - 10 '0' opt d - 'Double_t' 0 '0' valbeg "
"d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_10, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 10 - x D - 'Double_t' 10 - y "
"i - 'Int_t' 0 - n C - - 10 '0' opt "
"d - 'Double_t' 0 '0' valbeg d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_11, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 4, 1, 1, 0, 
"u 'TF1' - 11 - f C - - 10 '0' opt "
"d - 'Double_t' 0 '0' valbeg d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSpline3",747,G__BaseCint_191_0_12, 105, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 5, 1, 1, 0, 
"u 'TF1' - 11 - f d - 'Double_t' 0 - freq "
"C - - 10 '0' opt d - 'Double_t' 0 '0' valbeg "
"d - 'Double_t' 0 '0' valend", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Minimum value of abscissa", (void*) NULL, 1);
   G__memfunc_setup("GetXmax",702,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Maximum value of abscissa", (void*) NULL, 1);
   G__memfunc_setup("GetNp",478,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHistogram",1230,G__BaseCint_191_0_16, 85, G__get_linked_tagnum(&G__BaseCintLN_TH1), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__BaseCint_191_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integral",822,G__BaseCint_191_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegralSolidAngle",1816,G__BaseCint_191_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_191_0_20, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSpline3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_191_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSpline3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_191_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSpline3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_191_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSpline3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_191_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_191_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSpline3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_191_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSpline3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_191_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSpline3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_191_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSpline3::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MSpline3", 747, G__BaseCint_191_0_32, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 1, 1, 1, 0, "u 'MSpline3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MSpline3", 873, G__BaseCint_191_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReflection(void) {
   /* MReflection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MReflection));
   G__memfunc_setup("MReflection",1112,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BaseCintLN_MReflection), -1, 0, 9, 1, 4, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c d - 'Double_t' 0 - d "
"d - 'Double_t' 0 - e d - 'Double_t' 0 - f "
"d - 'Double_t' 0 - g d - 'Double_t' 0 - h "
"d - 'Double_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReflection",1112,G__BaseCint_227_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MReflection), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReflection",1112,G__BaseCint_227_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MReflection), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_227_0_5, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReflection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_227_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReflection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_227_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReflection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_227_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReflection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_227_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_227_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReflection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_227_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReflection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_227_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReflection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_227_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReflection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MReflection", 1112, G__BaseCint_227_0_17, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MReflection), -1, 0, 1, 1, 1, 0, "u 'MReflection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MReflection", 1238, G__BaseCint_227_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_227_0_19, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MReflection), -1, 1, 1, 1, 1, 0, "u 'MReflection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMQuaternion(void) {
   /* MQuaternion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MQuaternion));
   G__memfunc_setup("MQuaternion",1139,G__BaseCint_228_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MQuaternion), -1, 0, 1, 1, 1, 0, "u 'TQuaternion' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MQuaternion",1139,G__BaseCint_228_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - v d - 'Double_t' 0 '0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__BaseCint_228_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TRotation' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__BaseCint_228_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__BaseCint_228_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__BaseCint_228_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__BaseCint_228_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R2",132,G__BaseCint_228_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__BaseCint_228_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PropagateDz",1121,G__BaseCint_228_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MQuaternion' - 11 - w d - 'Double_t' 10 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PropagateZ",1021,G__BaseCint_228_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MQuaternion' - 11 - w d - 'Double_t' 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PropagateZ0",1069,G__BaseCint_228_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MQuaternion' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XYvector",836,G__BaseCint_228_0_13, 117, G__get_linked_tagnum(&G__BaseCintLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizeVector",1572,G__BaseCint_228_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_228_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MQuaternion::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_228_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MQuaternion::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_228_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MQuaternion::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_228_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MQuaternion::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_228_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_228_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MQuaternion::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_228_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MQuaternion::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_228_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MQuaternion::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_228_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MQuaternion::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MQuaternion", 1139, G__BaseCint_228_0_27, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MQuaternion), -1, 0, 1, 1, 1, 0, "u 'MQuaternion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MQuaternion", 1265, G__BaseCint_228_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_228_0_29, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MQuaternion), -1, 1, 1, 1, 1, 0, "u 'MQuaternion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEnv(void) {
   /* MEnv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MEnv));
   G__memfunc_setup("Compile",713,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 1, 4, 8, 
"u 'TString' - 0 - str C - - 10 - post", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadInclude",1088,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTEnvCompliant",1504,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MEnv",374,G__BaseCint_241_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MEnv), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' name C - - 10 '0' defname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__BaseCint_241_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Touch",515,G__BaseCint_241_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__BaseCint_241_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - dflt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValue",797,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - dflt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValue",797,G__BaseCint_241_0_11, 67, -1, -1, 0, 2, 1, 1, 1, 
"C - - 10 - name C - - 10 '\"\"' dflt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__BaseCint_241_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__BaseCint_241_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlign",779,G__BaseCint_241_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillStyle",1208,G__BaseCint_241_0_16, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineStyle",1209,G__BaseCint_241_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttributes",1351,G__BaseCint_241_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TObject' - 0 - obj "
"U 'TObject' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttLine",977,G__BaseCint_241_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name u 'TAttLine' - 1 - line "
"U 'TAttLine' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttText",1006,G__BaseCint_241_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name u 'TAttText' - 1 - text "
"U 'TAttText' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttFill",976,G__BaseCint_241_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name u 'TAttFill' - 1 - fill "
"U 'TAttFill' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttMarker",1195,G__BaseCint_241_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name u 'TAttMarker' - 1 - marker "
"U 'TAttMarker' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttPave",981,G__BaseCint_241_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name u 'TPave' - 1 - pave "
"U 'TPave' - 0 '0' dftl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__BaseCint_241_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlign",791,G__BaseCint_241_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - align", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillStyle",1220,G__BaseCint_241_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineStyle",1221,G__BaseCint_241_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerStyle",1439,G__BaseCint_241_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttributes",1363,G__BaseCint_241_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttLine",989,G__BaseCint_241_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'TAttLine' - 11 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttText",1018,G__BaseCint_241_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'TAttText' - 11 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttFill",988,G__BaseCint_241_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'TAttFill' - 11 - fill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttMarker",1207,G__BaseCint_241_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'TAttMarker' - 11 - marker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAttPave",993,G__BaseCint_241_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name u 'TPave' - 11 - pave", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEnv",562,G__BaseCint_241_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TEnv' - 11 - env g - 'Bool_t' 0 'kTRUE' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TakeEnv",686,G__BaseCint_241_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'MArgs' - 1 - args g - 'Bool_t' 0 'kFALSE' print "
"g - 'Bool_t' 0 'kTRUE' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__BaseCint_241_0_37, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname i 'EEnvLevel' - 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteFile",907,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filename i 'EEnvLevel' - 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteFile",907,G__BaseCint_241_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("PrintEnv",822,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i 'EEnvLevel' - 0 'kEnvAll' level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__BaseCint_241_0_43, 121, -1, -1, 0, 0, 1, 1, 8, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("PrintUntouched",1468,G__BaseCint_241_0_44, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumUntouched",1535,G__BaseCint_241_0_45, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_241_0_46, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MEnv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_241_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEnv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_241_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MEnv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_241_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MEnv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_241_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_241_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEnv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_241_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MEnv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_241_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEnv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_241_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MEnv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MEnv", 500, G__BaseCint_241_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMLogPlugin(void) {
   /* MLogPlugin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin));
   G__memfunc_setup("SetColor",811,G__BaseCint_289_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Underline",934,G__BaseCint_289_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBuffer",1125,G__BaseCint_289_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - str i - - 0 - len", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseCint_289_0_4, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MLogPlugin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_289_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogPlugin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_289_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MLogPlugin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_289_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MLogPlugin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_289_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_289_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogPlugin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_289_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLogPlugin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_289_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogPlugin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_289_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLogPlugin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MLogPlugin", 1116, G__BaseCint_289_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_289_0_17, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MLogPlugin), -1, 1, 1, 1, 1, 0, "u 'MLogPlugin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMLog(void) {
   /* MLog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MLog));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteBuffer",1125,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sync",445,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("overflow",884,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - i", "i=EOF means not a real overflow", (void*) NULL, 0);
   G__memfunc_setup("AllocateFile",1189,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeallocateFile",1390,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReallocateFile",1404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFlag",856,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'MLog::_flags' 'MLog::Flags_t' 0 - chk i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Output",657,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out i - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGuiLine",950,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 11 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorHandlerIgnore",1836,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 3, 4, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorHandlerPrint",1749,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 4, 0, 
"i - 'Int_t' 0 - level C - - 10 - location "
"C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorHandlerCol",1510,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 3, 4, 0, 
"i - 'Int_t' 0 - level g - 'Bool_t' 0 - abort "
"C - - 10 - location C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorHandlerAll",1505,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 3, 4, 0, 
"i - 'Int_t' 0 - level g - 'Bool_t' 0 - abort "
"C - - 10 - location C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLog",367,G__BaseCint_290_0_15, 105, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 0, 1, 1, 1, 0, "i - - 0 'eStdout' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLog",367,G__BaseCint_290_0_16, 105, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 0, 1, 1, 1, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLog",367,G__BaseCint_290_0_17, 105, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 0, 1, 1, 1, 0, "u 'TGTextView' - 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLog",367,G__BaseCint_290_0_18, 105, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 0, 2, 1, 1, 0, 
"C - - 10 - fname i - - 0 '-1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLog",367,G__BaseCint_290_0_19, 105, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 0, 1, 1, 1, 0, "u 'MLog' - 41 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Intro",524,G__BaseCint_290_0_20, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TString (*)())(&MLog::Intro) ), 0);
   G__memfunc_setup("RedirectErrorHandler",2042,G__BaseCint_290_0_21, 121, -1, -1, 0, 1, 3, 1, 0, "i 'MLog::ELogType' - 0 'kColor' typ", (char*)NULL, (void*) G__func2void( (void (*)(MLog::ELogType))(&MLog::RedirectErrorHandler) ), 0);
   G__memfunc_setup("LockUpdate",1004,G__BaseCint_290_0_22, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnLockUpdate",1199,G__BaseCint_290_0_23, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lock",393,G__BaseCint_290_0_24, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnLock",588,G__BaseCint_290_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableDirectGui",1479,G__BaseCint_290_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableDirectGui",1588,G__BaseCint_290_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateGui",904,G__BaseCint_290_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Underline",934,G__BaseCint_290_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugLevel",1291,G__BaseCint_290_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDebugLevel",1279,G__BaseCint_290_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputLevel",1461,G__BaseCint_290_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputLevel",1449,G__BaseCint_290_0_33, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputDevice",1549,G__BaseCint_290_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableOutputDevice",1832,G__BaseCint_290_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MLog::_flags' 'MLog::Flags_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableOutputDevice",1941,G__BaseCint_290_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MLog::_flags' 'MLog::Flags_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_290_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - sout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_290_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGTextView' - 0 - sout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNullOutput",1256,G__BaseCint_290_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOutputDeviceEnabled",2120,G__BaseCint_290_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputGui",1250,G__BaseCint_290_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGTextView' - 0 - sout i - - 0 '-1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFile",1341,G__BaseCint_290_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - sout i - - 0 '-1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFile",1341,G__BaseCint_290_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' f i - - 0 '-1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFile",1329,G__BaseCint_290_0_44, 117, G__get_linked_tagnum(&G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ofstream"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNullOutput",1368,G__BaseCint_290_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoColors",1115,G__BaseCint_290_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,G__BaseCint_290_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MArgs' - 1 - arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Usage",501,G__BaseCint_290_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,G__BaseCint_290_0_49, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 '\"\"' prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteEnv",820,G__BaseCint_290_0_50, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 '\"\"' prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Separator",945,G__BaseCint_290_0_51, 117, G__get_linked_tagnum(&G__BaseCintLN_MLog), -1, 1, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' str i - - 0 '0' outlvl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPlugin",888,G__BaseCint_290_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MLogPlugin' - 0 - plug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_290_0_53, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MLog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_290_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_290_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MLog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_290_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MLog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_290_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_290_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_290_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_290_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_290_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLog::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MLog", 493, G__BaseCint_290_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMLogHtml(void) {
   /* MLogHtml */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MLogHtml));
   G__memfunc_setup("MLogHtml",772,G__BaseCint_299_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MLogHtml), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLogHtml",772,G__BaseCint_299_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MLogHtml), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Underline",934,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetColor",811,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBuffer",1125,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - str i - - 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_299_0_6, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MLogHtml::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_299_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogHtml::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_299_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MLogHtml::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_299_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MLogHtml::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_299_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_299_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogHtml::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_299_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLogHtml::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_299_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLogHtml::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_299_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLogHtml::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MLogHtml", 772, G__BaseCint_299_0_18, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MLogHtml), -1, 0, 1, 1, 1, 0, "u 'MLogHtml' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MLogHtml", 898, G__BaseCint_299_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_299_0_20, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MLogHtml), -1, 1, 1, 1, 1, 0, "u 'MLogHtml' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMStatusDisplay(void) {
   /* MStatusDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay));
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - mp1 "
"l - 'Long_t' 0 - mp2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMenuBar",947,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddUserFrame",1171,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTabs",659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProgressBar",1395,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStatusBar",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMarsTab",947,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLogTab",834,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessageCommandMenu",2552,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "l - 'Long_t' 0 - mp1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessageCommand",2147,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"l - 'Long_t' 0 - submsg l - 'Long_t' 0 - mp1 "
"l - 'Long_t' 0 - mp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessageTextview",2308,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"l - 'Long_t' 0 - submsg l - 'Long_t' 0 - mp1 "
"l - 'Long_t' 0 - mp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessageUser",1859,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"l - 'Long_t' 0 - submsg l - 'Long_t' 0 - mp1 "
"l - 'Long_t' 0 - mp2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleConfigureNotify",2151,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'Event_t' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTabContainer",1498,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame), -1, 0, 1, 1, 4, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabTab",846,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGTabElement), -1, 0, 1, 1, 4, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'TTimer' - 0 '0' timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateTab",890,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TGCompositeFrame' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateMemory",1244,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveTab",901,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatusLine",1336,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - txt i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPopup",820,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGPopupMenu), -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawClonePad",1172,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'TCanvas' - 1 - newc u 'TCanvas' - 1 - oldc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasRange",1385,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"i - 'Int_t' 1 - from i - 'Int_t' 1 - to "
"i - 'Int_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'TObjArray' - 11 - list C - - 10 '0' tab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillArray",902,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'MStatusArray' - 1 - list i - 'Int_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddExtension",1222,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 1, 3, 1, 4, 9, 
"u 'TString' - 1 - name u 'TString' - 11 - ext "
"i - 'Int_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitWriteTab",1206,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - num u 'TString' - 1 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitWriteTab",1206,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitWriteDisplay",1653,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - num u 'TString' - 1 - name "
"u 'TString' - 11 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePSHeader",1359,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsImage",1062,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 - name "
"i 'TImage::EImageFileTypes' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsVGF",806,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 - name "
"u 'TString' - 10 - addon u 'TString' - 10 - ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PSToolsRange",1185,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"u 'TVirtualPS' - 1 - vps f - 'Float_t' 0 - w "
"f - 'Float_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PSToolsTextNDC",1326,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"u 'TVirtualPS' - 1 - vps d - 'Double_t' 0 - u "
"d - 'Double_t' 0 - v C - - 10 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDialog",1117,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 4, 1, 4, 0, 
"u 'TString' - 1 - p u 'TString' - 1 - c "
"u 'TString' - 1 - t C - - 10 '0' ext", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MStatusDisplay",1447,G__BaseCint_304_0_38, 105, G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '-1' w i - 'Int_t' 0 '-1' h "
"l - 'Long_t' 0 '1000' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTitle",814,G__BaseCint_304_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTitle",814,G__BaseCint_304_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - title g - 'Bool_t' 0 - replace", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasCanvas",888,G__BaseCint_304_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TCanvas' - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__BaseCint_304_0_45, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__BaseCint_304_0_46, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 1, 1, 1, 8, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullPad",968,G__BaseCint_304_0_47, 85, G__get_linked_tagnum(&G__BaseCintLN_TVirtualPad), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - canvas i - 'Int_t' 10 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CdCanvas",771,G__BaseCint_304_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTabForCanvas",1656,G__BaseCint_304_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectInCanvas",1771,G__BaseCint_304_0_50, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 3, 1, 1, 8, 
"C - - 10 - obj C - - 10 - base "
"C - - 10 - canv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectInCanvas",1771,G__BaseCint_304_0_51, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - - 10 - obj C - - 10 - canv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,G__BaseCint_304_0_52, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - - 10 - obj C - - 10 - base", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumTabs",986,G__BaseCint_304_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintContent",1256,G__BaseCint_304_0_56, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTab",544,G__BaseCint_304_0_57, 117, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 1, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRawTab",842,G__BaseCint_304_0_58, 85, G__get_linked_tagnum(&G__BaseCintLN_TGCompositeFrame), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgressBarPosition",2283,G__BaseCint_304_0_59, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - p g - 'Bool_t' 0 'kFALSE' upd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBar",565,G__BaseCint_304_0_60, 85, G__get_linked_tagnum(&G__BaseCintLN_TGProgressBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatusLine1",1385,G__BaseCint_304_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatusLine2",1386,G__BaseCint_304_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatusLine2",1386,G__BaseCint_304_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MParContainer' - 11 - cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_304_0_64, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoContextMenu",1635,G__BaseCint_304_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartUpdate",1137,G__BaseCint_304_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' millisec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopUpdate",1033,G__BaseCint_304_0_67, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpdateTime",1310,G__BaseCint_304_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__BaseCint_304_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogStream",1210,G__BaseCint_304_0_70, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MLog' - 0 - log g - 'Bool_t' 0 'kFALSE' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasWidth",1416,G__BaseCint_304_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasHeight",1505,G__BaseCint_304_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayWidth",1538,G__BaseCint_304_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayHeight",1627,G__BaseCint_304_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOptimumSize",1458,G__BaseCint_304_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplaySize",1437,G__BaseCint_304_0_76, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPS",742,G__BaseCint_304_0_77, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPDF",797,G__BaseCint_304_0_78, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsSVG",819,G__BaseCint_304_0_79, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPNG",808,G__BaseCint_304_0_80, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsGIF",793,G__BaseCint_304_0_81, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXPM",824,G__BaseCint_304_0_82, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsJPG",804,G__BaseCint_304_0_83, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsTIFF",876,G__BaseCint_304_0_84, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsBMP",802,G__BaseCint_304_0_85, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXML",820,G__BaseCint_304_0_86, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsC",646,G__BaseCint_304_0_87, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsRoot",999,G__BaseCint_304_0_88, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPlainRoot",1499,G__BaseCint_304_0_89, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,G__BaseCint_304_0_90, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsCSV",815,G__BaseCint_304_0_91, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name c - 'Char_t' 0 ''\\t'' delim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPS",688,G__BaseCint_304_0_92, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 - c C - 'Option_t' 10 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveAsPS",742,G__BaseCint_304_0_94, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name "
"u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPDF",797,G__BaseCint_304_0_95, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name "
"u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsSVG",819,G__BaseCint_304_0_96, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name "
"u 'TString' - 10 '\"\"' addon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPNG",808,G__BaseCint_304_0_97, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsGIF",793,G__BaseCint_304_0_98, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXPM",824,G__BaseCint_304_0_99, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsJPG",804,G__BaseCint_304_0_100, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsTIFF",876,G__BaseCint_304_0_101, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsBMP",802,G__BaseCint_304_0_102, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXML",820,G__BaseCint_304_0_103, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsC",646,G__BaseCint_304_0_104, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsRoot",999,G__BaseCint_304_0_105, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name "
"g - 'Bool_t' 0 'kFALSE' plain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsPlainRoot",1499,G__BaseCint_304_0_106, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,G__BaseCint_304_0_107, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsCSV",815,G__BaseCint_304_0_108, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - num u 'TString' - 0 '\"\"' name "
"c - 'Char_t' 0 ''\\t'' delim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPS",688,G__BaseCint_304_0_109, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - num C - - 10 '0' p "
"C - - 10 '0' cmd C - - 10 '0' tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintLog",815,G__BaseCint_304_0_110, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 '0' p C - - 10 '0' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveLogAsPS",1032,G__BaseCint_304_0_111, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,G__BaseCint_304_0_112, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__BaseCint_304_0_113, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 - fname C - - 10 '\"MStatusDisplay\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__BaseCint_304_0_114, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__BaseCint_304_0_115, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - num C - - 10 '\"MStatusDisplay\"' name "
"C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__BaseCint_304_0_116, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - tab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__BaseCint_304_0_117, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '\"MStatusDisplay\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' name i - 'Int_t' 0 '0' - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"C - - 10 '0' name i - 'Int_t' 0 '0' - "
"i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckStatus",1122,G__BaseCint_304_0_120, 105, G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplaycLcLStatus_t), G__defined_typename("MStatusDisplay::Status_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearStatus",1131,G__BaseCint_304_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPause",810,G__BaseCint_304_0_122, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLoopStep",1122,G__BaseCint_304_0_123, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lock",393,G__BaseCint_304_0_124, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnLock",588,G__BaseCint_304_0_125, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventInfo",910,G__BaseCint_304_0_126, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py U 'TObject' - 0 - selected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleEvent",1102,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEmbeddedCanvas",1670,G__BaseCint_304_0_128, 85, G__get_linked_tagnum(&G__BaseCintLN_TRootEmbeddedCanvas), -1, 0, 1, 3, 1, 0, "u 'TGCompositeFrame' - 1 - cf", (char*)NULL, (void*) G__func2void( (TRootEmbeddedCanvas* (*)(TGCompositeFrame&))(&MStatusDisplay::GetEmbeddedCanvas) ), 0);
   G__memfunc_setup("GetCanvas",892,G__BaseCint_304_0_129, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 1, 3, 1, 0, "u 'TGCompositeFrame' - 1 - f", (char*)NULL, (void*) G__func2void( (TCanvas* (*)(TGCompositeFrame&))(&MStatusDisplay::GetCanvas) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_304_0_130, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MStatusDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_304_0_131, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_304_0_132, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MStatusDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_304_0_133, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MStatusDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_304_0_137, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_304_0_138, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_304_0_139, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MStatusDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_304_0_140, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_304_0_141, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MStatusDisplay::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MStatusDisplay", 1573, G__BaseCint_304_0_142, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParContainer(void) {
   /* MParContainer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParContainer));
   G__memfunc_setup("GetConstructor",1478,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 1, 1, 4, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParContainer",1299,G__BaseCint_305_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' name C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParContainer",1299,G__BaseCint_305_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - name u 'TString' - 11 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParContainer",1299,G__BaseCint_305_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 1, 1, 1, 0, "u 'MParContainer' - 11 - named", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_305_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 1, 1, 1, 1, 0, "u 'MParContainer' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - named", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillBuffer",993,G__BaseCint_305_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 1 - buffer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDescriptor",1343,G__BaseCint_305_0_10, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 3, 1, 1, "u 'TObject' - 11 - o", (char*)NULL, (void*) G__func2void( (const TString (*)(const TObject&))(&MParContainer::GetDescriptor) ), 0);
   G__memfunc_setup("Overwrites",1082,G__BaseCint_305_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 4, 3, 1, 0, 
"U 'TClass' - 10 - base u 'TObject' - 11 - obj "
"C - - 10 - name U 'TClass' - 0 '0' cls", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TClass*, const TObject&, const char*, TClass*))(&MParContainer::Overwrites) ), 0);
   G__memfunc_setup("GetDescriptor",1343,G__BaseCint_305_0_12, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUniqueName",1304,G__BaseCint_305_0_13, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__BaseCint_305_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,G__BaseCint_305_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTitle",814,G__BaseCint_305_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' title", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof",624,G__BaseCint_305_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,G__BaseCint_305_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("New",298,G__BaseCint_305_0_26, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogStream",1210,G__BaseCint_305_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MLog' - 0 - lg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__BaseCint_305_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsReadyToSave",1283,G__BaseCint_305_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReadyToSave",1395,G__BaseCint_305_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSavedAsPrimitive",1820,G__BaseCint_305_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableGraphicalOutput",2147,G__BaseCint_305_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsGraphicalOutputEnabled",2435,G__BaseCint_305_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVariables",1221,G__BaseCint_305_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayD' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDisplay",1026,G__BaseCint_305_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamPrimitive",1573,G__BaseCint_305_0_36, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetterMethod",1228,G__BaseCint_305_0_37, 85, G__get_linked_tagnum(&G__BaseCintLN_TMethodCall), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataMember",978,G__BaseCint_305_0_38, 89, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteDataMember",1501,G__BaseCint_305_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - - 10 - member "
"d - 'Double_t' 0 '1' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteDataMember",1501,G__BaseCint_305_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TDataMember' - 10 - member "
"d - 'Double_t' 0 '1' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteDataMember",1501,G__BaseCint_305_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out U 'TList' - 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AsciiRead",869,G__BaseCint_305_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AsciiWrite",1012,G__BaseCint_305_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFits",935,G__BaseCint_305_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'fits' - 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,G__BaseCint_305_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNames",788,G__BaseCint_305_0_46, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNames",800,G__BaseCint_305_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TestEnv",713,G__BaseCint_305_0_48, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,G__BaseCint_305_0_49, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEnv",820,G__BaseCint_305_0_50, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,G__BaseCint_305_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TEnv' - 11 - env g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteEnv",820,G__BaseCint_305_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TEnv' - 1 - env g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnvDefined",1172,G__BaseCint_305_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"u 'TString' - 0 - postfix g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnvDefined",1172,G__BaseCint_305_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - name "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_55, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"u 'TString' - 0 - postfix i - 'Int_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_56, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"u 'TString' - 0 - postfix d - 'Double_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_57, 67, -1, -1, 0, 4, 1, 1, 9, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"u 'TString' - 0 - postfix C - - 10 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_58, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"i - 'Int_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_59, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"d - 'Double_t' 0 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue",1094,G__BaseCint_305_0_60, 67, -1, -1, 0, 3, 1, 1, 9, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"C - - 10 - dflt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue2",1144,G__BaseCint_305_0_61, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"u 'TString' - 11 - postfix i - 'Int_t' 0 - dflt "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue2",1144,G__BaseCint_305_0_62, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"u 'TString' - 11 - postfix d - 'Double_t' 0 - dflt "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue2",1144,G__BaseCint_305_0_63, 67, -1, -1, 0, 5, 1, 1, 9, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"u 'TString' - 11 - postfix C - - 10 - dflt "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvValue3",1145,G__BaseCint_305_0_64, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 4, 1, 1, 8, 
"u 'TEnv' - 11 - env u 'TString' - 11 - prefix "
"u 'TString' - 0 - id h - 'UInt_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNewObject",1185,G__BaseCint_305_0_65, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name C - - 10 - base", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNewObject",1185,G__BaseCint_305_0_66, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name U 'TClass' - 0 'MParContainer::Class()' base", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClass",790,G__BaseCint_305_0_67, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 2, 3, 1, 0, 
"C - - 10 - classname u 'TString' - 1 - msg", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, TString&))(&MParContainer::GetClass) ), 0);
   G__memfunc_setup("GetClass",790,G__BaseCint_305_0_68, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 2, 3, 1, 0, 
"C - - 10 - classname U 'MLog' - 0 '0' log", (char*)NULL, (void*) G__func2void( (TClass* (*)(const char*, MLog*))(&MParContainer::GetClass) ), 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_305_0_70, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParContainer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_305_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParContainer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_305_0_72, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParContainer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_305_0_73, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParContainer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_305_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_305_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParContainer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_305_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParContainer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_305_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParContainer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_305_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParContainer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParContainer", 1425, G__BaseCint_305_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParEmulated(void) {
   /* MParEmulated */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEmulated));
   G__memfunc_setup("GetMethodCall",1277,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TMethodCall), -1, 0, 3, 1, 4, 8, 
"C - - 10 - get i - 'Int_t' 0 - offset "
"U 'TVirtualCollectionProxy' - 0 '0' proxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParEmulated",1185,G__BaseCint_306_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParEmulated), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClassName",1187,G__BaseCint_306_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtr",598,G__BaseCint_306_0_4, 66, -1, G__defined_typename("Byte_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__BaseCint_306_0_5, 105, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt_t",798,G__BaseCint_306_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__BaseCint_306_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetULongLong",1173,G__BaseCint_306_0_8, 109, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPInt",667,G__BaseCint_306_0_9, 105, -1, -1, 0, 2, 1, 1, 8, 
"U 'TVirtualCollectionProxy' - 0 - proxy i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPInt_t",878,G__BaseCint_306_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"U 'TVirtualCollectionProxy' - 0 - proxy i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDouble",971,G__BaseCint_306_0_11, 100, -1, -1, 0, 2, 1, 1, 8, 
"U 'TVirtualCollectionProxy' - 0 - proxy i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPULongLong",1253,G__BaseCint_306_0_12, 109, -1, -1, 0, 2, 1, 1, 8, 
"U 'TVirtualCollectionProxy' - 0 - proxy i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetterMethod",1228,G__BaseCint_306_0_13, 85, G__get_linked_tagnum(&G__BaseCintLN_TMethodCall), -1, 0, 3, 1, 1, 8, 
"C - - 10 - name u 'TString' - 0 - cls "
"i - 'Int_t' 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetterMethod",1228,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TMethodCall), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__BaseCint_306_0_15, 121, -1, -1, 0, 4, 1, 1, 8, 
"u 'TPRegexp' - 1 - regex u 'TString' - 0 - classname "
"u 'TString' - 0 - prefix i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_306_0_17, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParEmulated::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_306_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEmulated::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_306_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParEmulated::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_306_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParEmulated::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_306_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_306_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEmulated::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_306_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParEmulated::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_306_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEmulated::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_306_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParEmulated::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParEmulated", 1311, G__BaseCint_306_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParSpline(void) {
   /* MParSpline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParSpline));
   G__memfunc_setup("ReadSpline",999,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 1, 1, 4, 8, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MParSpline",987,G__BaseCint_308_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MParSpline), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpline",907,G__BaseCint_308_0_4, 85, G__get_linked_tagnum(&G__BaseCintLN_MSpline3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__BaseCint_308_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__BaseCint_308_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__BaseCint_308_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__BaseCint_308_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eval",392,G__BaseCint_308_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__BaseCint_308_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TF1' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__BaseCint_308_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - func i - 'Int_t' 0 - n "
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G__BaseCint_308_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TSpline3' - 11 - spline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G__BaseCint_308_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - n D - 'Double_t' 10 - x "
"D - 'Double_t' 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G__BaseCint_308_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__BaseCint_308_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_308_0_19, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParSpline::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_308_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParSpline::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_308_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParSpline::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_308_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParSpline::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_308_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_308_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParSpline::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_308_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParSpline::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_308_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParSpline::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_308_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParSpline::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParSpline", 1113, G__BaseCint_308_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTask(void) {
   /* MTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MTask));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"C - - 10 - master C - - 10 - sub "
"h - 'UInt_t' 10 - first h - 'UInt_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"u 'TString' - 1 - master u 'TString' - 1 - sub "
"h - 'UInt_t' 10 - first h - 'UInt_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - master C - - 10 - sub "
"h - 'UInt_t' 10 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToBranchList",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"u 'TString' - 1 - master u 'TString' - 1 - sub "
"h - 'UInt_t' 10 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTask",480,G__BaseCint_310_0_10, 105, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTask",480,G__BaseCint_310_0_11, 105, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 1, 0, "u 'MTask' - 1 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBranches",1687,G__BaseCint_310_0_12, 85, G__get_linked_tagnum(&G__BaseCintLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Overwrites",1082,G__BaseCint_310_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"C - - 10 - name U 'TClass' - 0 '0' cls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__BaseCint_310_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MFilter' - 0 - filter", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFilter",902,G__BaseCint_310_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_MFilter), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilter",902,G__BaseCint_310_0_16, 85, G__get_linked_tagnum(&G__BaseCintLN_MFilter), -1, 0, 0, 1, 1, 0, "", "for MContinue only", (void*) NULL, 0);
   G__memfunc_setup("SetDisplay",1026,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAccelerator",1425,G__BaseCint_310_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 'kAccStandard' acc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAccelerator",1413,G__BaseCint_310_0_19, 98, -1, G__defined_typename("Byte_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasAccelerator",1409,G__BaseCint_310_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "b - 'Byte_t' 0 - acc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSerialNumber",1490,G__BaseCint_310_0_21, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 3, 1, 0, 
"C - - 10 - str h - 'UInt_t' 0 - num", (char*)NULL, (void*) G__func2void( (TString (*)(const char*, UInt_t))(&MTask::AddSerialNumber) ), 0);
   G__memfunc_setup("AddSerialNumber",1490,G__BaseCint_310_0_22, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 3, 1, 0, 
"u 'TString' - 11 - str h - 'UInt_t' 0 - num", (char*)NULL, (void*) G__func2void( (TString (*)(const TString&, UInt_t))(&MTask::AddSerialNumber) ), 0);
   G__memfunc_setup("AddSerialNumber",1490,G__BaseCint_310_0_23, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 8, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSerialNumber",1490,G__BaseCint_310_0_24, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 8, "u 'TString' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSerialNumber",1525,G__BaseCint_310_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSerialNumber",1513,G__BaseCint_310_0_26, 98, -1, G__defined_typename("Byte_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDescriptor",1343,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumExecutions",1655,G__BaseCint_310_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumExecutionsTotal",2171,G__BaseCint_310_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCpuTime",983,G__BaseCint_310_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealTime",1075,G__BaseCint_310_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatistics",1592,G__BaseCint_310_0_32, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 '0' lvl g - 'Bool_t' 0 'kFALSE' title "
"d - 'Double_t' 0 '0' time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSkipped",1245,G__BaseCint_310_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n C - - 10 - str", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,G__BaseCint_310_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CallPreProcess",1410,G__BaseCint_310_0_35, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CallProcess",1115,G__BaseCint_310_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CallPostProcess",1537,G__BaseCint_310_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_310_0_41, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_310_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_310_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_310_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_310_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_310_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_310_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_310_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_310_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MTask", 606, G__BaseCint_310_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTaskList(void) {
   /* MTaskList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskList));
   G__memfunc_setup("Remove",622,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'MTask' - 0 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckAddToList",1350,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"U 'MTask' - 0 - task U 'MTask' - 10 '0' where", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessTaskList",1550,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTaskList",892,G__BaseCint_311_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTaskList",892,G__BaseCint_311_0_6, 105, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 1, 1, 1, 0, "u 'MTaskList' - 11 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogStream",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MLog' - 0 - log", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDisplay",1026,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAccelerator",1425,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 'kAccStandard' acc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumPasses",1227,G__BaseCint_311_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' cnt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPass",999,G__BaseCint_311_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPasses",1215,G__BaseCint_311_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToListBefore",1467,G__BaseCint_311_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'MTask' - 0 - task U 'MTask' - 10 - where "
"C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToListAfter",1370,G__BaseCint_311_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'MTask' - 0 - task U 'MTask' - 10 - where "
"C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__BaseCint_311_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'MTask' - 0 - task C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__BaseCint_311_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TList' - 11 - list C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToListAfter",1370,G__BaseCint_311_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'TList' - 11 - list U 'MTask' - 10 - where "
"C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToListBefore",1467,G__BaseCint_311_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'TList' - 11 - list U 'MTask' - 10 - where "
"C - - 10 '\"All\"' tType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSerialNumber",1525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Replace",700,G__BaseCint_311_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MTask' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveFromList",1438,G__BaseCint_311_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MTask' - 0 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveFromList",1438,G__BaseCint_311_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TList' - 11 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindTask",788,G__BaseCint_311_0_25, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTask",788,G__BaseCint_311_0_26, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 1, 8, "U 'MTask' - 10 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTaskList",1200,G__BaseCint_311_0_27, 85, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 1, 1, 1, 0, "C - - 10 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTaskList",1200,G__BaseCint_311_0_28, 85, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 1, 1, 1, 0, "U 'MTask' - 10 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,G__BaseCint_311_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 '0' pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintStatistics",1592,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 '0' lvl g - 'Bool_t' 0 'kFALSE' title "
"d - 'Double_t' 0 '-1' time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOwner",823,G__BaseCint_311_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetList",700,G__BaseCint_311_0_36, 85, G__get_linked_tagnum(&G__BaseCintLN_TList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNames",788,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNames",800,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEnv",820,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator TIterator*",1876,G__BaseCint_311_0_42, 85, G__get_linked_tagnum(&G__BaseCintLN_TIterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_311_0_43, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTaskList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_311_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_311_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTaskList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_311_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTaskList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_311_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_311_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_311_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_311_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_311_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MTaskList", 1018, G__BaseCint_311_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParList(void) {
   /* MParList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParList));
   G__memfunc_setup("GetClassName",1175,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 3, 4, 0, "C - - 10 - classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectName",1272,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 3, 4, 0, 
"C - - 10 - classname C - - 10 - objname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParList",780,G__BaseCint_312_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MParList), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MParList",780,G__BaseCint_312_0_6, 105, G__get_linked_tagnum(&G__BaseCintLN_MParList), -1, 0, 3, 1, 1, 0, 
"u 'MParList' - 11 - ts C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__BaseCint_312_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'MParContainer' - 0 - obj U 'MParContainer' - 0 '0' where", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__BaseCint_312_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Replace",700,G__BaseCint_312_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'MParContainer' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Remove",622,G__BaseCint_312_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MParContainer' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogStream",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MLog' - 0 - log", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDisplay",1026,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,G__BaseCint_312_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name C - - 10 - classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,G__BaseCint_312_0_16, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"U 'TObject' - 10 - obj C - - 10 - classname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTask",788,G__BaseCint_312_0_17, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name C - - 10 '\"MTaskList\"' tlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTaskListWithTask",2015,G__BaseCint_312_0_18, 85, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTaskListWithTask",2015,G__BaseCint_312_0_19, 85, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 1, 1, 1, 8, "U 'MTask' - 10 - task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCreateObj",1264,G__BaseCint_312_0_20, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 2, 1, 1, 0, 
"C - - 10 - classname C - - 10 '0' objname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectList",1396,G__BaseCint_312_0_21, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 3, 1, 1, 8, 
"C - - 10 - name h - 'UInt_t' 0 - first "
"h - 'UInt_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectList",1396,G__BaseCint_312_0_22, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name h - 'UInt_t' 10 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCreateObjList",1676,G__BaseCint_312_0_23, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 4, 1, 1, 0, 
"C - - 10 - cname h - 'UInt_t' 0 - first "
"h - 'UInt_t' 10 - last C - - 10 '0' oname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCreateObjList",1676,G__BaseCint_312_0_24, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 3, 1, 1, 0, 
"C - - 10 - cname h - 'UInt_t' 10 - num "
"C - - 10 '0' oname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateObjList",1291,G__BaseCint_312_0_25, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 4, 3, 1, 0, 
"C - - 10 - cname h - 'UInt_t' 0 - first "
"h - 'UInt_t' 10 - last C - - 10 '0' oname", (char*)NULL, (void*) G__func2void( (TObjArray (*)(const char*, UInt_t, const UInt_t, const char*))(&MParList::CreateObjList) ), 0);
   G__memfunc_setup("CreateObjList",1291,G__BaseCint_312_0_26, 117, G__get_linked_tagnum(&G__BaseCintLN_TObjArray), -1, 0, 3, 3, 1, 0, 
"C - - 10 - cname h - 'UInt_t' 10 - num "
"C - - 10 '0' oname", (char*)NULL, (void*) G__func2void( (TObjArray (*)(const char*, const UInt_t, const char*))(&MParList::CreateObjList) ), 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReadyToSave",1395,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOwner",823,G__BaseCint_312_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOwner",711,G__BaseCint_312_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNames",788,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNames",800,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TObjArray' - 1 - arr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEnv",820,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator TIterator*",1876,G__BaseCint_312_0_39, 85, G__get_linked_tagnum(&G__BaseCintLN_TIterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_312_0_40, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_312_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_312_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_312_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_312_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_312_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_312_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_312_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_312_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParList", 906, G__BaseCint_312_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParEnv(void) {
   /* MParEnv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParEnv));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MParEnv",665,G__BaseCint_314_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParEnv), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCont",704,G__BaseCint_314_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MParContainer' - 0 '0' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCont",692,G__BaseCint_314_0_4, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClassName",1187,G__BaseCint_314_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '\"MParContainer\"' cls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_314_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParEnv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_314_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEnv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_314_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParEnv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_314_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParEnv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_314_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_314_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEnv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_314_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParEnv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_314_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParEnv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_314_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParEnv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParEnv", 791, G__BaseCint_314_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParameterD(void) {
   /* MParameterD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterD));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MParameterD",1074,G__BaseCint_315_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParameterD), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVal",591,G__BaseCint_315_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVal",579,G__BaseCint_315_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFits",935,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'fits' - 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtr",598,G__BaseCint_315_0_7, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_315_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParameterD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_315_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_315_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParameterD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_315_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParameterD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_315_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_315_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_315_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_315_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_315_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterD::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParameterD", 1200, G__BaseCint_315_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParameterDerr(void) {
   /* MParameterDerr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MParameterDerr",1403,G__BaseCint_316_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParameterDerr), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVal",591,G__BaseCint_316_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVal",591,G__BaseCint_316_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - v d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErr",585,G__BaseCint_316_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFits",935,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'fits' - 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_316_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParameterDerr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_316_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterDerr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_316_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParameterDerr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_316_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParameterDerr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_316_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_316_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterDerr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_316_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterDerr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_316_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterDerr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_316_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterDerr::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParameterDerr", 1529, G__BaseCint_316_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMParameterI(void) {
   /* MParameterI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MParameterI));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MParameterI",1079,G__BaseCint_317_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MParameterI), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVal",591,G__BaseCint_317_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVal",579,G__BaseCint_317_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFits",935,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'fits' - 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtr",598,G__BaseCint_317_0_7, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_317_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MParameterI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_317_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_317_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MParameterI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_317_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MParameterI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_317_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_317_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_317_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_317_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MParameterI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_317_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MParameterI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MParameterI", 1205, G__BaseCint_317_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMInputStreamID(void) {
   /* MInputStreamID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID));
   G__memfunc_setup("MInputStreamID",1366,G__BaseCint_318_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MInputStreamID), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasStreamId",1077,G__BaseCint_318_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStreamId",1081,G__BaseCint_318_0_3, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStreamId",1093,G__BaseCint_318_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__BaseCint_318_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MInputStreamID' - 1 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__BaseCint_318_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'MInputStreamID' - 1 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_318_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MInputStreamID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_318_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MInputStreamID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_318_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MInputStreamID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_318_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MInputStreamID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_318_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_318_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MInputStreamID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_318_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MInputStreamID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_318_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MInputStreamID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_318_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MInputStreamID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MInputStreamID", 1492, G__BaseCint_318_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMFilter(void) {
   /* MFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MFilter));
   G__memfunc_setup("IsExpressionTrue",1676,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRule",696,G__BaseCint_320_0_3, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataMember",1266,G__BaseCint_320_0_4, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsConditionTrue",1539,G__BaseCint_320_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInverted",1133,G__BaseCint_320_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInverted",1021,G__BaseCint_320_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSkipped",1245,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n C - - 10 - str", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_320_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_320_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_320_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_320_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_320_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_320_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_320_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_320_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_320_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MFilter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MFilter", 817, G__BaseCint_320_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTaskEnv(void) {
   /* MTaskEnv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv));
   G__memfunc_setup("GetTask",691,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 4, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEnv",820,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MTaskEnv",777,G__BaseCint_322_0_7, 105, G__get_linked_tagnum(&G__BaseCintLN_MTaskEnv), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOwner",823,G__BaseCint_322_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefault",1009,G__BaseCint_322_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTask' - 0 '0' task", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefault",1009,G__BaseCint_322_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTask",691,G__BaseCint_322_0_11, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_322_0_13, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTaskEnv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_322_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskEnv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_322_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTaskEnv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_322_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTaskEnv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_322_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_322_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskEnv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_322_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskEnv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_322_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskEnv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_322_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskEnv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MTaskEnv", 903, G__BaseCint_322_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTaskInteractive(void) {
   /* MTaskInteractive */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Return",640,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - no Y - - 0 '0' param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 4, 0, 
"Y - - 0 - fcn i - 'Int_t' 0 - no "
"C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Free",386,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - no", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTaskInteractive",1630,G__BaseCint_324_0_8, 105, G__get_linked_tagnum(&G__BaseCintLN_MTaskInteractive), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPreProcess",1330,G__BaseCint_324_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "1 - 'Int_t (*)(MParList*list)' 0 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcess",1035,G__BaseCint_324_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "1 - 'Int_t (*)()' 0 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPostProcess",1457,G__BaseCint_324_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "1 - 'Int_t (*)()' 0 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReInit",887,G__BaseCint_324_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "1 - 'Bool_t (*)(MParList*list)' 0 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPreProcess",1330,G__BaseCint_324_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcess",1035,G__BaseCint_324_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPostProcess",1457,G__BaseCint_324_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReInit",887,G__BaseCint_324_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - fcn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_324_0_17, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTaskInteractive::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_324_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskInteractive::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_324_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTaskInteractive::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_324_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTaskInteractive::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_324_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_324_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskInteractive::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_324_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskInteractive::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_324_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTaskInteractive::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_324_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTaskInteractive::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MTaskInteractive", 1756, G__BaseCint_324_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMProgressBar(void) {
   /* MProgressBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MProgressBar));
   G__memfunc_setup("MProgressBar",1207,G__BaseCint_327_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MProgressBar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBar",565,G__BaseCint_327_0_2, 85, G__get_linked_tagnum(&G__BaseCintLN_TGProgressBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_327_0_3, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MProgressBar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_327_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MProgressBar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_327_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MProgressBar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_327_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MProgressBar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_327_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_327_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MProgressBar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_327_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MProgressBar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_327_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MProgressBar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_327_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MProgressBar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MProgressBar", 1333, G__BaseCint_327_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEvtLoop(void) {
   /* MEvtLoop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop));
   G__memfunc_setup("HasDuplicateNames",1707,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'TString' - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasDuplicateNames",1707,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'TObjArray' - 1 - arr u 'TString' - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StreamPrimitive",1573,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessGuiEvents",1657,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - num i - 'Int_t' 0 - rc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MEvtLoop",790,G__BaseCint_328_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MEvtLoop), -1, 0, 1, 1, 1, 0, "C - - 10 '\"Evtloop\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParList",1003,G__BaseCint_328_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MParList' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParList",991,G__BaseCint_328_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_MParList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTaskList",1103,G__BaseCint_328_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_MTaskList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTask",788,G__BaseCint_328_0_9, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTask",788,G__BaseCint_328_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_MTask), -1, 0, 1, 1, 1, 8, "U 'MTask' - 10 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDisplay",1014,G__BaseCint_328_0_11, 85, G__get_linked_tagnum(&G__BaseCintLN_MStatusDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplay",1026,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrivateDisplay",1757,G__BaseCint_328_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", "Prevent status display from being cascaded in PreProcess", (void*) NULL, 0);
   G__memfunc_setup("SetOwner",823,G__BaseCint_328_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgressBar",1430,G__BaseCint_328_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGProgressBar' - 0 - bar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgressBar",1430,G__BaseCint_328_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MProgressBar' - 0 - bar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,G__BaseCint_328_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__BaseCint_328_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - maxcnt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostProcess",1157,G__BaseCint_328_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eventloop",956,G__BaseCint_328_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 '0' maxcnt i 'MEvtLoop::Statistics_t' - 0 'kStdStatistics' printstat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeMacro",880,G__BaseCint_328_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"evtloop.C\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '\"Evtloop\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"C - - 10 '\"Evtloop\"' name i - 'Int_t' 0 '0' option "
"i - 'Int_t' 0 '0' bufsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 '\"Evtloop\"' name i - 'Int_t' 0 '0' option "
"i - 'Int_t' 0 '0' bufsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,G__BaseCint_328_0_28, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 '\"\"' prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEnv",820,G__BaseCint_328_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"u 'TEnv' - 1 - env u 'TString' - 0 '\"\"' prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,G__BaseCint_328_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - config g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMemoryUsage",1422,G__BaseCint_328_0_32, 104, -1, G__defined_typename("UInt_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (UInt_t (*)())(&MEvtLoop::GetMemoryUsage) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_328_0_33, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MEvtLoop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_328_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEvtLoop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_328_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MEvtLoop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_328_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MEvtLoop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_328_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_328_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEvtLoop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_328_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MEvtLoop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_328_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MEvtLoop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_328_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MEvtLoop::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MEvtLoop", 916, G__BaseCint_328_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGList(void) {
   /* MGList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MGList));
   G__memfunc_setup("GetWidget",900,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TGWidget), -1, 0, 1, 1, 4, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsExisting",1031,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPicture",997,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TGPicture' - 0 - pic C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeletePictures",1442,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MGList",560,G__BaseCint_430_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MGList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPicture",1020,G__BaseCint_430_0_9, 85, G__get_linked_tagnum(&G__BaseCintLN_TGPicture), -1, 0, 1, 1, 1, 1, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPicture",1020,G__BaseCint_430_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TGPicture), -1, 0, 3, 1, 1, 1, 
"C - - 10 - name i - 'Int_t' 0 - width "
"i - 'Int_t' 0 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindWidget",997,G__BaseCint_430_0_11, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_430_0_12, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_430_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_430_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_430_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_430_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_430_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_430_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_430_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_430_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MGList", 686, G__BaseCint_430_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMSearch(void) {
   /* MSearch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MSearch));
   G__memfunc_setup("SendSearch",992,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MSearch",675,G__BaseCint_437_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MSearch), -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 10 - w i - 'Int_t' 0 '-1' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - mp1 "
"l - 'Long_t' 0 - mp2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_437_0_5, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MSearch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_437_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSearch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_437_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MSearch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_437_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MSearch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_437_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_437_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSearch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_437_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSearch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_437_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MSearch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_437_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MSearch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MSearch", 801, G__BaseCint_437_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMIter(void) {
   /* MIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MIter));
   G__memfunc_setup("MIter",481,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BaseCintLN_MIter), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MIter",481,G__BaseCint_438_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MIter), -1, 0, 2, 1, 1, 0, 
"U 'TCollection' - 10 - col g - 'Bool_t' 0 'kIterForward' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MIter",481,G__BaseCint_438_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MIter), -1, 0, 1, 1, 1, 0, "U 'TIterator' - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MIter",481,G__BaseCint_438_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MIter), -1, 0, 1, 1, 1, 0, "u 'MIter' - 11 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_438_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MIter), -1, 1, 1, 1, 1, 0, "u 'MIter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseCint_438_0_6, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__BaseCint_438_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_MParContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollection",1324,G__BaseCint_438_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_TCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOption",921,G__BaseCint_438_0_9, 67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_438_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_438_0_11, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_438_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_438_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_438_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BaseCint_438_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BaseCint_438_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BaseCint_438_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_438_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_438_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_438_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_438_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_438_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MIter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MIter", 607, G__BaseCint_438_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMDirIter(void) {
   /* MDirIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MDirIter));
   G__memfunc_setup("Open",402,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEntry",1008,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "u 'TString' - 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDir",475,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchFilter",1107,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"u 'TString' - 11 - name u 'TString' - 0 - filter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConcatFileName",1369,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 1, 4, 8, 
"C - - 10 - dir C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEntry",1055,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TObject' - 11 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDirIter",768,G__BaseCint_439_0_8, 105, G__get_linked_tagnum(&G__BaseCintLN_MDirIter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDirIter",768,G__BaseCint_439_0_9, 105, G__get_linked_tagnum(&G__BaseCintLN_MDirIter), -1, 0, 1, 1, 1, 0, "u 'MDirIter' - 11 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MDirIter",768,G__BaseCint_439_0_10, 105, G__get_linked_tagnum(&G__BaseCintLN_MDirIter), -1, 0, 3, 1, 1, 0, 
"C - - 10 - dir C - - 10 '\"\"' filter "
"i - 'Int_t' 0 '0' rec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadList",792,G__BaseCint_439_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - fname u 'TString' - 11 '\"\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__BaseCint_439_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDirectory",1214,G__BaseCint_439_0_13, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - dir C - - 10 '\"\"' filter "
"i - 'Int_t' 0 '0' recursive", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,G__BaseCint_439_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_439_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MDirIter' - 11 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_439_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__BaseCint_439_0_17, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' nocheck", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseCint_439_0_18, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' nocheck", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__BaseCint_439_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEntries",1322,G__BaseCint_439_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_439_0_22, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MDirIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_439_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDirIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_439_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MDirIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_439_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MDirIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_439_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_439_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDirIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_439_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDirIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_439_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MDirIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_439_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MDirIter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MDirIter", 894, G__BaseCint_439_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMReadSocket(void) {
   /* MReadSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MReadSocket));
   G__memfunc_setup("OpenServerSocket",1650,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenConnection",1442,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 - block", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("underflow",982,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sync",445,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReadSocket",1074,G__BaseCint_440_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MReadSocket), -1, 0, 2, 1, 1, 0, 
"i - - 0 '-1' port i - - 0 '1500' mtu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MReadSocket",1074,G__BaseCint_440_0_6, 105, G__get_linked_tagnum(&G__BaseCintLN_MReadSocket), -1, 0, 1, 1, 1, 0, "u 'MReadSocket' - 41 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__BaseCint_440_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - - 0 '-1' port g - 'Bool_t' 0 'kFALSE' block", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__BaseCint_440_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeout",1043,G__BaseCint_440_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - millisec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_440_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MReadSocket::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_440_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadSocket::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_440_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MReadSocket::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_440_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MReadSocket::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BaseCint_440_0_14, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BaseCint_440_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BaseCint_440_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_440_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_440_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadSocket::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_440_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadSocket::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_440_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MReadSocket::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_440_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MReadSocket::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MReadSocket", 1200, G__BaseCint_440_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGTask(void) {
   /* MGTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MGTask));
   G__memfunc_setup("CreateGuiElements",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'MGGroupFrame' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowGui",710,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HideGui",671,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindWidget",997,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 2, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MGTask",551,G__BaseCint_441_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MGTask), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallPreProcess",1410,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - plist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CallPostProcess",1537,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,G__BaseCint_441_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - msg i - 'Int_t' 0 - submsg "
"l - 'Long_t' 0 - param1 l - 'Long_t' 0 - param2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateGui",889,G__BaseCint_441_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGCompositeFrame' - 0 - f U 'TGLayoutHints' - 0 '0' layout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_441_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_441_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_441_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_441_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_441_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_441_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_441_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_441_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_441_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MGTask", 677, G__BaseCint_441_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGGroupFrame(void) {
   /* MGGroupFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame));
   G__memfunc_setup("MGGroupFrame",1164,G__BaseCint_442_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame), -1, 0, 7, 1, 1, 0, 
"U 'MGTask' - 0 - task U 'TGWindow' - 10 - p "
"U 'TGString' - 0 - title h - 'UInt_t' 0 'kVerticalFrame' options "
"k - 'GContext_t' 0 'GetDefaultGC()()' norm k - 'FontStruct_t' 0 'GetDefaultFontStruct()' font "
"k - 'ULong_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MGGroupFrame",1164,G__BaseCint_442_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MGGroupFrame), -1, 0, 7, 1, 1, 0, 
"U 'MGTask' - 0 - task U 'TGWindow' - 10 - p "
"C - - 10 - title h - 'UInt_t' 0 'kVerticalFrame' options "
"k - 'GContext_t' 0 'GetDefaultGC()()' norm k - 'FontStruct_t' 0 'GetDefaultFontStruct()' font "
"k - 'ULong_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToList",872,G__BaseCint_442_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindWidget",997,G__BaseCint_442_0_4, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - param1 "
"l - 'Long_t' 0 - param2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_442_0_6, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGGroupFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_442_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGGroupFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_442_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGGroupFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_442_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGGroupFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_442_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_442_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGGroupFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_442_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGGroupFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_442_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGGroupFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_442_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGGroupFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MGGroupFrame", 1290, G__BaseCint_442_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMGMap(void) {
   /* MGMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MGMap));
   G__memfunc_setup("MGMap",434,G__BaseCint_458_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MGMap), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' mapSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOwner",823,G__BaseCint_458_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_458_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - k U 'TString' - 0 '0' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,G__BaseCint_458_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawLine",790,G__BaseCint_458_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TObject' - 0 - o B - 'UChar_t' 0 - buf "
"i - - 0 - w i - - 0 - h "
"d - 'Double_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMarker",1008,G__BaseCint_458_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TObject' - 0 - o B - 'UChar_t' 0 - buf "
"i - - 0 - w i - - 0 - h "
"d - 'Double_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PickObject",990,G__BaseCint_458_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"u 'TString' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Color",511,G__BaseCint_458_0_13, 98, -1, G__defined_typename("UChar_t"), 0, 1, 3, 1, 0, "i - - 0 - col", (char*)NULL, (void*) G__func2void( (UChar_t (*)(int))(&MGMap::Color) ), 0);
   G__memfunc_setup("DrawCircle",992,G__BaseCint_458_0_14, 121, -1, -1, 0, 7, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y f - 'Float_t' 0 - r "
"b - 'UChar_t' 0 - col", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, UChar_t))(&MGMap::DrawCircle) ), 0);
   G__memfunc_setup("DrawHexagon",1112,G__BaseCint_458_0_15, 121, -1, -1, 0, 8, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y f - 'Float_t' 0 - r "
"b - 'UChar_t' 0 - col i - 'Int_t' 0 '1' style", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, UChar_t, Int_t))(&MGMap::DrawHexagon) ), 0);
   G__memfunc_setup("DrawLine",790,G__BaseCint_458_0_16, 121, -1, -1, 0, 9, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - x1 "
"f - 'Float_t' 0 - y1 f - 'Float_t' 0 - x2 "
"f - 'Float_t' 0 - y2 b - 'UChar_t' 0 - col "
"i - 'Int_t' 0 '1' style", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, Float_t, UChar_t, Int_t))(&MGMap::DrawLine) ), 0);
   G__memfunc_setup("DrawBox",695,G__BaseCint_458_0_17, 121, -1, -1, 0, 9, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - x1 "
"f - 'Float_t' 0 - y1 f - 'Float_t' 0 - x2 "
"f - 'Float_t' 0 - y2 b - 'UChar_t' 0 - col "
"i - 'Int_t' 0 '1' style", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, Float_t, UChar_t, Int_t))(&MGMap::DrawBox) ), 0);
   G__memfunc_setup("DrawDot",693,G__BaseCint_458_0_18, 121, -1, -1, 0, 6, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - cx "
"f - 'Float_t' 0 - cy b - 'UChar_t' 0 - col", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, UChar_t))(&MGMap::DrawDot) ), 0);
   G__memfunc_setup("DrawMultiply",1262,G__BaseCint_458_0_19, 121, -1, -1, 0, 7, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - cx "
"f - 'Float_t' 0 - cy f - 'Float_t' 0 - size "
"b - 'UChar_t' 0 - col", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, UChar_t))(&MGMap::DrawMultiply) ), 0);
   G__memfunc_setup("DrawCross",920,G__BaseCint_458_0_20, 121, -1, -1, 0, 7, 3, 1, 0, 
"B - 'UChar_t' 0 - buf i - - 0 - w "
"i - - 0 - h f - 'Float_t' 0 - cx "
"f - 'Float_t' 0 - cy f - 'Float_t' 0 - size "
"b - 'UChar_t' 0 - col", (char*)NULL, (void*) G__func2void( (void (*)(UChar_t*, int, int, Float_t, Float_t, Float_t, UChar_t))(&MGMap::DrawCross) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_458_0_21, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MGMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_458_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_458_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MGMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_458_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MGMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_458_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_458_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_458_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_458_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MGMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_458_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MGMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MGMap", 434, G__BaseCint_458_0_33, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MGMap), -1, 0, 1, 1, 1, 0, "u 'MGMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MGMap", 560, G__BaseCint_458_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_458_0_35, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MGMap), -1, 1, 1, 1, 1, 0, "u 'MGMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMStatusArray(void) {
   /* MStatusArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MStatusArray));
   G__memfunc_setup("SetCleanup",1012,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecursiveDelete",1547,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 8, 
"U 'TVirtualPad' - 0 - p c - - 10 '0' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanDelete",1169,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TCollection' - 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMyCanDelete",1367,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TCollection' - 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMyCanDelete",1582,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TCollection' - 10 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintObjectsInPad",1699,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"U 'TCollection' - 10 - list u 'TString' - 11 - name "
"i - 'Int_t' 0 '0' lvl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectInPad",1444,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 3, 1, 4, 8, 
"U 'TVirtualPad' - 0 - pad C - - 10 - object "
"U 'TClass' - 0 - base", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TCollection' - 0 - c U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MStatusArray",1232,G__BaseCint_460_0_9, 105, G__get_linked_tagnum(&G__BaseCintLN_MStatusArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MStatusArray",1232,G__BaseCint_460_0_10, 105, G__get_linked_tagnum(&G__BaseCintLN_MStatusArray), -1, 0, 1, 1, 1, 0, "u 'MStatusDisplay' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayIn",909,G__BaseCint_460_0_11, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' o", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("DisplayIn",909,G__BaseCint_460_0_12, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'MStatusDisplay' - 1 - d C - - 10 '0' tab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,G__BaseCint_460_0_13, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 0, 1, 1, 8, "", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("FindCanvas",989,G__BaseCint_460_0_14, 85, G__get_linked_tagnum(&G__BaseCintLN_TCanvas), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectInCanvas",1771,G__BaseCint_460_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 3, 1, 1, 8, 
"C - - 10 - object C - - 10 - base "
"C - - 10 - canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObjectInCanvas",1771,G__BaseCint_460_0_16, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - - 10 - object C - - 10 - canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__BaseCint_460_0_18, 121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 - o C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 - o i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - o C - - 10 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - o u 'TPRegexp' - 1 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,G__BaseCint_460_0_22, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - - 10 - object C - - 10 - base", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - object", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,G__BaseCint_460_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"C - - 10 '0' name i - 'Int_t' 0 '0' option "
"i - 'Int_t' 0 '0' bufsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' name i - 'Int_t' 0 '0' option "
"i - 'Int_t' 0 '0' bufsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableTH1Workaround",1856,G__BaseCint_460_0_28, 121, -1, -1, 0, 1, 1, 1, 8, "U 'TCollection' - 10 '0' list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_460_0_31, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MStatusArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_460_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_460_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MStatusArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_460_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MStatusArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_460_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_460_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_460_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MStatusArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_460_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MStatusArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_460_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MStatusArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MStatusArray", 1358, G__BaseCint_460_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArrayI(void) {
   /* MArrayI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayI));
   G__memfunc_setup("MArrayI",661,G__BaseCint_484_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayI",661,G__BaseCint_484_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayI",661,G__BaseCint_484_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n I - 'Int_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayI",661,G__BaseCint_484_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 0, 1, 1, 1, 0, "u 'MArrayI' - 11 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_484_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 1, 1, 1, 1, 0, "u 'MArrayI' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adopt",504,G__BaseCint_484_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n I - 'Int_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_484_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_484_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__BaseCint_484_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddUniq",678,G__BaseCint_484_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__BaseCint_484_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__BaseCint_484_0_12, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_484_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_484_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__BaseCint_484_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n I - 'Int_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_484_0_17, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_484_0_18, 105, -1, G__defined_typename("Int_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReSort",607,G__BaseCint_484_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' down", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_484_0_20, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArrayI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_484_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_484_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArrayI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_484_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArrayI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_484_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_484_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_484_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_484_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_484_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArrayI", 787, G__BaseCint_484_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMLut(void) {
   /* MLut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MLut));
   G__memfunc_setup("GetInverse",1020,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BaseCintLN_MLut), -1, 0, 1, 1, 4, 8, "g - 'Bool_t' 0 'kTRUE' uniq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MLut",386,G__BaseCint_485_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MLut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRow",600,G__BaseCint_485_0_4, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayI), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRows",1019,G__BaseCint_485_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxEntries",1312,G__BaseCint_485_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxIndex",1086,G__BaseCint_485_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasConstantLength",1736,G__BaseCint_485_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDefaultCol",1183,G__BaseCint_485_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDefaultRow",1209,G__BaseCint_485_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInverse",1032,G__BaseCint_485_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MLut' - 11 - lut g - 'Bool_t' 0 'kTRUE' uniq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__BaseCint_485_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' uniq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaultCol",1295,G__BaseCint_485_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaultRow",1321,G__BaseCint_485_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadStream",1000,G__BaseCint_485_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteStream",1143,G__BaseCint_485_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__BaseCint_485_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__BaseCint_485_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__BaseCint_485_0_21, 121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 - o C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 - o i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - o C - - 10 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 - o u 'TPRegexp' - 1 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_485_0_25, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MLut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_485_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_485_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MLut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_485_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MLut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_485_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_485_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_485_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_485_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MLut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_485_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MLut::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MLut", 512, G__BaseCint_485_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArray(void) {
   /* MArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArray));
   G__memfunc_setup("operator=",937,G__BaseCint_486_0_4, 117, G__get_linked_tagnum(&G__BaseCintLN_MArray), -1, 1, 1, 1, 1, 0, "u 'MArray' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__BaseCint_486_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__BaseCint_486_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__BaseCint_486_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_486_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_486_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_486_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_486_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_486_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_486_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_486_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_486_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArray", 714, G__BaseCint_486_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArrayB(void) {
   /* MArrayB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayB));
   G__memfunc_setup("MArrayB",654,G__BaseCint_487_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayB",654,G__BaseCint_487_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayB), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayB",654,G__BaseCint_487_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayB), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n B - 'Byte_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayB",654,G__BaseCint_487_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayB), -1, 0, 1, 1, 1, 0, "u 'MArrayB' - 11 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_487_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayB), -1, 1, 1, 1, 1, 0, "u 'MArrayB' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adopt",504,G__BaseCint_487_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n B - 'Byte_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_487_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - 'Byte_t' 0 - c h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_487_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"B - 'Byte_t' 0 - array h - 'UInt_t' 0 - i "
"h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__BaseCint_487_0_9, 98, -1, G__defined_typename("Byte_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__BaseCint_487_0_10, 66, -1, G__defined_typename("Byte_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_487_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_487_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'Byte_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__BaseCint_487_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n B - 'Byte_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_487_0_15, 98, -1, G__defined_typename("Byte_t"), 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_487_0_16, 98, -1, G__defined_typename("Byte_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_487_0_17, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArrayB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_487_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_487_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArrayB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_487_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArrayB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_487_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_487_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_487_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_487_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_487_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArrayB", 780, G__BaseCint_487_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArrayS(void) {
   /* MArrayS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayS));
   G__memfunc_setup("MArrayS",671,G__BaseCint_488_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayS",671,G__BaseCint_488_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayS), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayS",671,G__BaseCint_488_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayS), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n R - 'UShort_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayS",671,G__BaseCint_488_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayS), -1, 0, 1, 1, 1, 0, "u 'MArrayS' - 11 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_488_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayS), -1, 1, 1, 1, 1, 0, "u 'MArrayS' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adopt",504,G__BaseCint_488_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n R - 'UShort_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_488_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - c h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__BaseCint_488_0_8, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__BaseCint_488_0_9, 82, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_488_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_488_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__BaseCint_488_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n R - 'UShort_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_488_0_14, 114, -1, G__defined_typename("UShort_t"), 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_488_0_15, 114, -1, G__defined_typename("UShort_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_488_0_16, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArrayS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_488_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_488_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArrayS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_488_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArrayS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_488_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_488_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_488_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_488_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_488_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArrayS", 797, G__BaseCint_488_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMArrayF(void) {
   /* MArrayF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MArrayF));
   G__memfunc_setup("MArrayF",658,G__BaseCint_490_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayF",658,G__BaseCint_490_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayF), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayF",658,G__BaseCint_490_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayF), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n F - 'Float_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MArrayF",658,G__BaseCint_490_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MArrayF), -1, 0, 1, 1, 1, 0, "u 'MArrayF' - 11 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_490_0_5, 117, G__get_linked_tagnum(&G__BaseCintLN_MArrayF), -1, 1, 1, 1, 1, 0, "u 'MArrayF' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adopt",504,G__BaseCint_490_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n F - 'Float_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAt",446,G__BaseCint_490_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - c h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__BaseCint_490_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArray",799,G__BaseCint_490_0_9, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_490_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BaseCint_490_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set",300,G__BaseCint_490_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - n F - 'Float_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_490_0_14, 102, -1, G__defined_typename("Float_t"), 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_490_0_15, 102, -1, G__defined_typename("Float_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSum",597,G__BaseCint_490_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StripZeros",1061,G__BaseCint_490_0_17, 121, -1, -1, 0, 1, 3, 1, 0, "u 'TArrayF' - 1 - arr", (char*)NULL, (void*) G__func2void( (void (*)(TArrayF&))(&MArrayF::StripZeros) ), 0);
   G__memfunc_setup("StripZeros",1061,G__BaseCint_490_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_490_0_19, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MArrayF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_490_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_490_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MArrayF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_490_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MArrayF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_490_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_490_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_490_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_490_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MArrayF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_490_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MArrayF::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MArrayF", 784, G__BaseCint_490_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTime(void) {
   /* MTime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MTime));
   G__memfunc_setup("GetTime24",789,(G__InterfaceMethod) NULL, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTime",476,G__BaseCint_492_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTime",476,G__BaseCint_492_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 1, 1, 1, 0, "u 'timeval' - 11 - tm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTime",476,G__BaseCint_492_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mjd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTime",476,G__BaseCint_492_0_6, 105, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 8, 1, 1, 0, 
"r - 'UShort_t' 0 - y b - 'Byte_t' 0 - m "
"b - 'Byte_t' 0 - d b - 'Byte_t' 0 '13' h "
"b - 'Byte_t' 0 '0' min b - 'Byte_t' 0 '0' s "
"r - 'UShort_t' 0 '0' ms h - 'UInt_t' 0 '0' ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTime",476,G__BaseCint_492_0_7, 105, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 1, 1, 1, 0, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BaseCint_492_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__BaseCint_492_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Now",308,G__BaseCint_492_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__BaseCint_492_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"r - 'UShort_t' 0 - y b - 'Byte_t' 0 - m "
"b - 'Byte_t' 0 - d b - 'Byte_t' 0 '13' h "
"b - 'Byte_t' 0 '0' min b - 'Byte_t' 0 '0' s "
"r - 'UShort_t' 0 '0' ms h - 'UInt_t' 0 '0' ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__BaseCint_492_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'timeval' - 11 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetString",931,G__BaseCint_492_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSqlDateTime",1385,G__BaseCint_492_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSqlTimeStamp",1520,G__BaseCint_492_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCT1Time",899,G__BaseCint_492_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - mjd h - 'UInt_t' 0 - t1 "
"h - 'UInt_t' 0 - t0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorsikaTime",1415,G__BaseCint_492_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStringFmt",1226,G__BaseCint_492_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 - time C - - 10 - fmt "
"C - - 10 '0' loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBinary",913,G__BaseCint_492_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "H - 'UInt_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdMagicTime",1177,G__BaseCint_492_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"b - 'Byte_t' 0 - h b - 'Byte_t' 0 - m "
"b - 'Byte_t' 0 - s h - 'UInt_t' 0 - ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMjd",583,G__BaseCint_492_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - mjd k - 'ULong_t' 0 - ms "
"h - 'UInt_t' 0 '0' ns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMjd",583,G__BaseCint_492_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJD",442,G__BaseCint_492_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - jd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxisTime",1104,G__BaseCint_492_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMoonPeriod",1320,G__BaseCint_492_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagicPeriodStart",1918,G__BaseCint_492_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUnixTime",1119,G__BaseCint_492_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - sec m - 'ULong64_t' 0 '0' usec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEaster",912,G__BaseCint_492_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 '0' year", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJD",430,G__BaseCint_492_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMjd",571,G__BaseCint_492_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGmst",699,G__BaseCint_492_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__BaseCint_492_0_34, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringFmt",1214,G__BaseCint_492_0_35, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 2, 1, 1, 8, 
"C - - 10 '0' fmt C - - 10 '0' loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSqlDateTime",1373,G__BaseCint_492_0_36, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSqlTimeStamp",1508,G__BaseCint_492_0_37, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__BaseCint_492_0_38, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinary",901,G__BaseCint_492_0_39, 121, -1, -1, 0, 1, 1, 1, 8, "H - 'UInt_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDate",670,G__BaseCint_492_0_40, 121, -1, -1, 0, 3, 1, 1, 8, 
"r - 'UShort_t' 1 - y b - 'Byte_t' 1 - m "
"b - 'Byte_t' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDateOfSunrise",1596,G__BaseCint_492_0_41, 117, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDateOfSunrise",1596,G__BaseCint_492_0_42, 121, -1, -1, 0, 3, 1, 1, 8, 
"r - 'UShort_t' 1 - y b - 'Byte_t' 1 - m "
"b - 'Byte_t' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRootTime",1107,G__BaseCint_492_0_43, 117, G__get_linked_tagnum(&G__BaseCintLN_TTime), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRootDatime",1304,G__BaseCint_492_0_44, 117, G__get_linked_tagnum(&G__BaseCintLN_TDatime), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxisTime",1092,G__BaseCint_492_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMoonPhase",1194,G__BaseCint_492_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMoonPeriod",1308,G__BaseCint_492_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMagicPeriod",1380,G__BaseCint_492_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNightAsInt",1273,G__BaseCint_492_0_49, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__BaseCint_492_0_50, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", "[ms] Time of Day returned in the range [-11h, 13h)", (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__BaseCint_492_0_51, 121, -1, -1, 0, 4, 1, 1, 8, 
"b - 'Byte_t' 1 - h b - 'Byte_t' 1 - m "
"b - 'Byte_t' 1 - s r - 'UShort_t' 1 - ms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__BaseCint_492_0_52, 121, -1, -1, 0, 3, 1, 1, 8, 
"b - 'Byte_t' 1 - h b - 'Byte_t' 1 - m "
"b - 'Byte_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Year",401,G__BaseCint_492_0_53, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Month",518,G__BaseCint_492_0_54, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Day",286,G__BaseCint_492_0_55, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WeekDay",682,G__BaseCint_492_0_56, 98, -1, G__defined_typename("Byte_t"), 0, 0, 1, 1, 8, "", "{ return TMath::FloorNint(GetMjd()+3)%7; } // Return Day of the week: Sun=0, Mon=1, ..., Sat=6", (void*) NULL, 0);
   G__memfunc_setup("Hour",414,G__BaseCint_492_0_57, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Min",292,G__BaseCint_492_0_58, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sec",283,G__BaseCint_492_0_59, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MilliSec",786,G__BaseCint_492_0_60, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MicroSec",789,G__BaseCint_492_0_61, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NanoSec",679,G__BaseCint_492_0_62, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Week",396,G__BaseCint_492_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Week",396,G__BaseCint_492_0_64, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 1 - year", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DayOfYear",868,G__BaseCint_492_0_65, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMidnight",1008,G__BaseCint_492_0_66, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLeapYear",975,G__BaseCint_492_0_67, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBinary",993,G__BaseCint_492_0_68, 117, G__get_linked_tagnum(&G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - fin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteBinary",1136,G__BaseCint_492_0_69, 117, G__get_linked_tagnum(&G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AsciiRead",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - fin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AsciiWrite",1012,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator double",1543,G__BaseCint_492_0_72, 100, -1, -1, 0, 0, 1, 1, 8, "", "[s]", (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BaseCint_492_0_73, 100, -1, -1, 0, 0, 1, 1, 8, "", "[s]", (void*) NULL, 0);
   G__memfunc_setup("AsDouble",783,G__BaseCint_492_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMilliSeconds",1487,G__BaseCint_492_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Minus1ns",798,G__BaseCint_492_0_76, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plus1ns",694,G__BaseCint_492_0_77, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMean",685,G__BaseCint_492_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MTime' - 11 - t0 u 'MTime' - 11 - t1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMean",685,G__BaseCint_492_0_79, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - t0 d - 'Double_t' 0 - t1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__BaseCint_492_0_80, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__BaseCint_492_0_81, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<=",997,G__BaseCint_492_0_82, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__BaseCint_492_0_83, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__BaseCint_492_0_84, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__BaseCint_492_0_85, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MTime' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!",909,G__BaseCint_492_0_86, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEaster",900,G__BaseCint_492_0_87, 117, G__get_linked_tagnum(&G__BaseCintLN_MTime), -1, 0, 1, 3, 1, 0, "s - 'Short_t' 0 '-1' year", (char*)NULL, (void*) G__func2void( (MTime (*)(Short_t))(&MTime::GetEaster) ), 0);
   G__memfunc_setup("GetMjdWeek1",1016,G__BaseCint_492_0_88, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "s - 'Short_t' 0 - year", (char*)NULL, (void*) G__func2void( (Int_t (*)(Short_t))(&MTime::GetMjdWeek1) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_492_0_89, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTime::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_492_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTime::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_492_0_91, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTime::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_492_0_92, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTime::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_492_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_492_0_97, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTime::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_492_0_98, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTime::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_492_0_99, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTime::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_492_0_100, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTime::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MTime", 602, G__BaseCint_492_0_101, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMClone(void) {
   /* MClone */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MClone));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MClone",574,G__BaseCint_494_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MClone), -1, 0, 3, 1, 1, 0, 
"C - - 10 - obj C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MClone",574,G__BaseCint_494_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MClone), -1, 0, 3, 1, 1, 0, 
"U 'TObject' - 10 - obj C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClone",785,G__BaseCint_494_0_7, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__BaseCint_494_0_8, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceClone",1292,G__BaseCint_494_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_494_0_10, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MClone::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_494_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MClone::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_494_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MClone::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_494_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MClone::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_494_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_494_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MClone::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_494_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MClone::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_494_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MClone::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_494_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MClone::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MClone", 700, G__BaseCint_494_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMContinue(void) {
   /* MContinue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MContinue));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MContinue",914,G__BaseCint_495_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MContinue), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 10 '\"\"' rule C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MContinue",914,G__BaseCint_495_0_5, 105, G__get_linked_tagnum(&G__BaseCintLN_MContinue), -1, 0, 3, 1, 1, 0, 
"U 'MFilter' - 0 - f C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllowEmpty",1338,G__BaseCint_495_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllowEmpty",1226,G__BaseCint_495_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInverted",1133,G__BaseCint_495_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInverted",1021,G__BaseCint_495_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRc",481,G__BaseCint_495_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplay",1026,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MStatusDisplay' - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogStream",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'MLog' - 0 - lg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 'kFALSE' print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_495_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MContinue::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_495_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MContinue::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_495_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MContinue::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_495_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MContinue::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_495_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_495_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MContinue::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_495_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MContinue::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_495_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MContinue::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_495_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MContinue::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MContinue", 1040, G__BaseCint_495_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPrint(void) {
   /* MPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MPrint));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPrint",602,G__BaseCint_497_0_2, 105, G__get_linked_tagnum(&G__BaseCintLN_MPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPrint",602,G__BaseCint_497_0_3, 105, G__get_linked_tagnum(&G__BaseCintLN_MPrint), -1, 0, 4, 1, 1, 0, 
"C - - 10 - obj C - - 10 '\"\"' option "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPrint",602,G__BaseCint_497_0_4, 105, G__get_linked_tagnum(&G__BaseCintLN_MPrint), -1, 0, 4, 1, 1, 0, 
"U 'TObject' - 10 - obj C - - 10 '\"\"' option "
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,G__BaseCint_497_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableSkip",990,G__BaseCint_497_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' skip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BaseCint_497_0_9, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPrint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_497_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPrint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_497_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPrint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_497_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPrint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_497_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_497_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPrint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_497_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPrint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_497_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPrint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_497_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPrint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MPrint", 728, G__BaseCint_497_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMThread(void) {
   /* MThread */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MThread));
   G__memfunc_setup("CleanUp",680,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MapCleanUp",966,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "Y - - 0 - arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Thread",600,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MapThread",886,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 1, 3, 4, 0, "Y - - 0 - arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunThread",909,G__BaseCint_514_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 '0' arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CancelThread",1182,G__BaseCint_514_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 2 '0' ret", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThreadState",1401,G__BaseCint_514_0_9, 105, G__get_linked_tagnum(&G__BaseCintLN_TThreadcLcLEState), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThreadStateStr",1714,G__BaseCint_514_0_10, 117, G__get_linked_tagnum(&G__BaseCintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThreadId",1061,G__BaseCint_514_0_11, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsThreadRunning",1525,G__BaseCint_514_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsThreadCanceled",1571,G__BaseCint_514_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sleep",505,G__BaseCint_514_0_14, 121, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - us", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t))(&MThread::Sleep) ), 0);
   G__memfunc_setup("Class",502,G__BaseCint_514_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MThread::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_514_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MThread::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_514_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MThread::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_514_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MThread::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BaseCint_514_0_19, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BaseCint_514_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BaseCint_514_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_514_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_514_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MThread::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_514_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MThread::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_514_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MThread::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_514_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MThread::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MThread", 803, G__BaseCint_514_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMObjLookup(void) {
   /* MObjLookup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseCintLN_MObjLookup));
   G__memfunc_setup("MObjLookup",994,G__BaseCint_515_0_1, 105, G__get_linked_tagnum(&G__BaseCintLN_MObjLookup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_515_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"l - 'Long_t' 0 - key U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_515_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"l - 'Long_t' 0 - key C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BaseCint_515_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - key C - - 10 - name "
"C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObj",571,G__BaseCint_515_0_5, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "l - 'Long_t' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BaseCint_515_0_6, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 1, 1, 1, 8, "l - 'Long_t' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjName",956,G__BaseCint_515_0_7, 67, -1, -1, 0, 1, 1, 1, 9, "l - 'Long_t' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjTitle",1085,G__BaseCint_515_0_8, 67, -1, -1, 0, 1, 1, 1, 9, "l - 'Long_t' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__BaseCint_515_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOnwer",823,G__BaseCint_515_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefault",1009,G__BaseCint_515_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefault",997,G__BaseCint_515_0_12, 85, G__get_linked_tagnum(&G__BaseCintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__BaseCint_515_0_13, 117, G__get_linked_tagnum(&G__BaseCintLN_TExMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__BaseCint_515_0_14, 117, G__get_linked_tagnum(&G__BaseCintLN_TExMap), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BaseCint_515_0_15, 85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MObjLookup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BaseCint_515_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObjLookup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BaseCint_515_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MObjLookup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BaseCint_515_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MObjLookup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BaseCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseCint_515_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BaseCint_515_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObjLookup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseCint_515_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MObjLookup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BaseCint_515_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MObjLookup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseCint_515_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MObjLookup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MObjLookup", 994, G__BaseCint_515_0_27, (int) ('i'), G__get_linked_tagnum(&G__BaseCintLN_MObjLookup), -1, 0, 1, 1, 1, 0, "u 'MObjLookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MObjLookup", 1120, G__BaseCint_515_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BaseCint_515_0_29, (int) ('u'), G__get_linked_tagnum(&G__BaseCintLN_MObjLookup), -1, 1, 1, 1, 1, 0, "u 'MObjLookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBaseCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&kCONTINUE),105,0,1,-1,G__defined_typename("Int_t"),-1,1,"kCONTINUE=",0,(char*)NULL);
   G__memvar_setup((void*)(&kRad2Deg),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"kRad2Deg=",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gLog),117,0,0,G__get_linked_tagnum(&G__BaseCintLN_MLog),-1,-1,1,"gLog=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBaseCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
   G__memfunc_setup("operator<<", 996, G__BaseCint__0_629, 117, G__get_linked_tagnum(&G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out u 'MTime' - 11 - t", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__BaseCint__0_630, 117, G__get_linked_tagnum(&G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in u 'MTime' - 1 - t", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBaseCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BaseCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVirtualCollectionProxy = { "TVirtualCollectionProxy" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_ios_base = { "ios_base" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_basic_ioslEcharcOchar_traitslEchargRsPgR = { "basic_ios<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_basic_streambuflEcharcOchar_traitslEchargRsPgR = { "basic_streambuf<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_va_list = { "va_list" , 115 , -1 };
G__linked_taginfo G__BaseCintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TPRegexp = { "TPRegexp" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BaseCintLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MARS = { "MARS" , 110 , -1 };
G__linked_taginfo G__BaseCintLN_UTF8 = { "UTF8" , 110 , -1 };
G__linked_taginfo G__BaseCintLN_MArgsEntry = { "MArgsEntry" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArgs = { "MArgs" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MString = { "MString" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MMath = { "MMath" , 110 , -1 };
G__linked_taginfo G__BaseCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TSpline = { "TSpline" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TSpline3 = { "TSpline3" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArrayD = { "MArrayD" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MSpline3 = { "MSpline3" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TQuaternion = { "TQuaternion" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MReflection = { "MReflection" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MQuaternion = { "MQuaternion" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_EEnvLevel = { "EEnvLevel" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_TOrdCollection = { "TOrdCollection" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TPave = { "TPave" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MEnv = { "MEnv" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TServerSocket = { "TServerSocket" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TTime = { "TTime" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMutex = { "TMutex" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGTextView = { "TGTextView" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MLogPlugin = { "MLogPlugin" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MLog = { "MLog" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MLogcLcL_flags = { "MLog::_flags" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MLogcLcLELogBits = { "MLog::ELogBits" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MLogcLcLELogType = { "MLog::ELogType" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MLogcLcLdA = { "MLog::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MLogHtml = { "MLogHtml" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MLogHtmlcLcLdA = { "MLogHtml::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_fits = { "fits" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TDataMember = { "TDataMember" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MStatusDisplay = { "MStatusDisplay" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParEmulated = { "MParEmulated" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParContainercLcLdA = { "MParContainer::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MParSpline = { "MParSpline" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskList = { "MTaskList" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParListcLcLdA = { "MParList::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MParEnv = { "MParEnv" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParameterD = { "MParameterD" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParameterDerr = { "MParameterDerr" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MParameterI = { "MParameterI" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MFilter = { "MFilter" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskcLcLdA = { "MTask::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskEnv = { "MTaskEnv" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskEnvcLcLdA = { "MTaskEnv::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskInteractive = { "MTaskInteractive" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTaskListcLcLdA = { "MTaskList::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_TGProgressBar = { "TGProgressBar" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MProgressBar = { "MProgressBar" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MEvtLoop = { "MEvtLoop" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MEvtLoopcLcLdA = { "MEvtLoop::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MEvtLoopcLcLStatistics_t = { "MEvtLoop::Statistics_t" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__BaseCintLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGString = { "TGString" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGList = { "MGList" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGHProgressBar = { "TGHProgressBar" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MSearch = { "MSearch" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MIter = { "MIter" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MDirIter = { "MDirIter" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MReadSocket = { "MReadSocket" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGTask = { "MGTask" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGGroupFrame = { "MGGroupFrame" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGMenuBar = { "MGMenuBar" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TExMap = { "TExMap" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGMap = { "MGMap" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MGMapcLcLdA = { "MGMap::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MStatusArray = { "MStatusArray" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MStatusArraycLcLdA = { "MStatusArray::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_TImage = { "TImage" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TImagecLcLEImageFileTypes = { "TImage::EImageFileTypes" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_TVirtualPS = { "TVirtualPS" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TGTabElement = { "TGTabElement" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MStatusDisplaycLcLStatus_t = { "MStatusDisplay::Status_t" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MStatusDisplaycLcLdA = { "MStatusDisplay::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MArrayI = { "MArrayI" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MLut = { "MLut" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArray = { "MArray" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArrayB = { "MArrayB" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArrayS = { "MArrayS" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MArrayF = { "MArrayF" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_timeval = { "timeval" , 115 , -1 };
G__linked_taginfo G__BaseCintLN_MTime = { "MTime" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MTimecLcLdA = { "MTime::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MClone = { "MClone" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MContinue = { "MContinue" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MContinuecLcLdA = { "MContinue::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MPrint = { "MPrint" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MPrintcLcLdA = { "MPrint::$" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_TThreadcLcLEState = { "TThread::EState" , 101 , -1 };
G__linked_taginfo G__BaseCintLN_MThread = { "MThread" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MObjLookup = { "MObjLookup" , 99 , -1 };
G__linked_taginfo G__BaseCintLN_MObjLookupcLcLdA = { "MObjLookup::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBaseCint() {
  G__BaseCintLN_TClass.tagnum = -1 ;
  G__BaseCintLN_TBuffer.tagnum = -1 ;
  G__BaseCintLN_TMemberInspector.tagnum = -1 ;
  G__BaseCintLN_TObject.tagnum = -1 ;
  G__BaseCintLN_TNamed.tagnum = -1 ;
  G__BaseCintLN_TCollection.tagnum = -1 ;
  G__BaseCintLN_TString.tagnum = -1 ;
  G__BaseCintLN_TVirtualCollectionProxy.tagnum = -1 ;
  G__BaseCintLN_ios_base.tagnum = -1 ;
  G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseCintLN_basic_ioslEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseCintLN_basic_streambuflEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BaseCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseCintLN_va_list.tagnum = -1 ;
  G__BaseCintLN_TList.tagnum = -1 ;
  G__BaseCintLN_TObjArray.tagnum = -1 ;
  G__BaseCintLN_TTimer.tagnum = -1 ;
  G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BaseCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseCintLN_TPRegexp.tagnum = -1 ;
  G__BaseCintLN_TIterator.tagnum = -1 ;
  G__BaseCintLN_TIter.tagnum = -1 ;
  G__BaseCintLN_TSeqCollection.tagnum = -1 ;
  G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BaseCintLN_TDatime.tagnum = -1 ;
  G__BaseCintLN_TCanvas.tagnum = -1 ;
  G__BaseCintLN_TVirtualPad.tagnum = -1 ;
  G__BaseCintLN_MARS.tagnum = -1 ;
  G__BaseCintLN_UTF8.tagnum = -1 ;
  G__BaseCintLN_MArgsEntry.tagnum = -1 ;
  G__BaseCintLN_MArgs.tagnum = -1 ;
  G__BaseCintLN_MString.tagnum = -1 ;
  G__BaseCintLN_TVector2.tagnum = -1 ;
  G__BaseCintLN_TVector3.tagnum = -1 ;
  G__BaseCintLN_TArrayD.tagnum = -1 ;
  G__BaseCintLN_MMath.tagnum = -1 ;
  G__BaseCintLN_TAttLine.tagnum = -1 ;
  G__BaseCintLN_TAttFill.tagnum = -1 ;
  G__BaseCintLN_TAttMarker.tagnum = -1 ;
  G__BaseCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BaseCintLN_TH1.tagnum = -1 ;
  G__BaseCintLN_TF1.tagnum = -1 ;
  G__BaseCintLN_TSpline.tagnum = -1 ;
  G__BaseCintLN_TGraph.tagnum = -1 ;
  G__BaseCintLN_TSpline3.tagnum = -1 ;
  G__BaseCintLN_MArrayD.tagnum = -1 ;
  G__BaseCintLN_MSpline3.tagnum = -1 ;
  G__BaseCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BaseCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BaseCintLN_TRotation.tagnum = -1 ;
  G__BaseCintLN_TQuaternion.tagnum = -1 ;
  G__BaseCintLN_MReflection.tagnum = -1 ;
  G__BaseCintLN_MQuaternion.tagnum = -1 ;
  G__BaseCintLN_TEnv.tagnum = -1 ;
  G__BaseCintLN_EEnvLevel.tagnum = -1 ;
  G__BaseCintLN_TOrdCollection.tagnum = -1 ;
  G__BaseCintLN_TAttText.tagnum = -1 ;
  G__BaseCintLN_TPave.tagnum = -1 ;
  G__BaseCintLN_MEnv.tagnum = -1 ;
  G__BaseCintLN_TSocket.tagnum = -1 ;
  G__BaseCintLN_TServerSocket.tagnum = -1 ;
  G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__BaseCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__BaseCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseCintLN_TQObject.tagnum = -1 ;
  G__BaseCintLN_TTime.tagnum = -1 ;
  G__BaseCintLN_TMutex.tagnum = -1 ;
  G__BaseCintLN_TGTextView.tagnum = -1 ;
  G__BaseCintLN_MLogPlugin.tagnum = -1 ;
  G__BaseCintLN_MLog.tagnum = -1 ;
  G__BaseCintLN_MLogcLcL_flags.tagnum = -1 ;
  G__BaseCintLN_MLogcLcLELogBits.tagnum = -1 ;
  G__BaseCintLN_MLogcLcLELogType.tagnum = -1 ;
  G__BaseCintLN_MLogcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MLogHtml.tagnum = -1 ;
  G__BaseCintLN_MLogHtmlcLcLdA.tagnum = -1 ;
  G__BaseCintLN_fits.tagnum = -1 ;
  G__BaseCintLN_TDataMember.tagnum = -1 ;
  G__BaseCintLN_TMethodCall.tagnum = -1 ;
  G__BaseCintLN_MStatusDisplay.tagnum = -1 ;
  G__BaseCintLN_MParContainer.tagnum = -1 ;
  G__BaseCintLN_MParEmulated.tagnum = -1 ;
  G__BaseCintLN_MParContainercLcLdA.tagnum = -1 ;
  G__BaseCintLN_MParSpline.tagnum = -1 ;
  G__BaseCintLN_MTask.tagnum = -1 ;
  G__BaseCintLN_MTaskList.tagnum = -1 ;
  G__BaseCintLN_MParList.tagnum = -1 ;
  G__BaseCintLN_MParListcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MParEnv.tagnum = -1 ;
  G__BaseCintLN_MParameterD.tagnum = -1 ;
  G__BaseCintLN_MParameterDerr.tagnum = -1 ;
  G__BaseCintLN_MParameterI.tagnum = -1 ;
  G__BaseCintLN_MInputStreamID.tagnum = -1 ;
  G__BaseCintLN_TStopwatch.tagnum = -1 ;
  G__BaseCintLN_MFilter.tagnum = -1 ;
  G__BaseCintLN_MTaskcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MTaskEnv.tagnum = -1 ;
  G__BaseCintLN_MTaskEnvcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MTaskInteractive.tagnum = -1 ;
  G__BaseCintLN_MTaskListcLcLdA.tagnum = -1 ;
  G__BaseCintLN_TGProgressBar.tagnum = -1 ;
  G__BaseCintLN_MProgressBar.tagnum = -1 ;
  G__BaseCintLN_MEvtLoop.tagnum = -1 ;
  G__BaseCintLN_MEvtLoopcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MEvtLoopcLcLStatistics_t.tagnum = -1 ;
  G__BaseCintLN_Event_t.tagnum = -1 ;
  G__BaseCintLN_TGObject.tagnum = -1 ;
  G__BaseCintLN_TGWindow.tagnum = -1 ;
  G__BaseCintLN_TGPicture.tagnum = -1 ;
  G__BaseCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__BaseCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BaseCintLN_TGFrame.tagnum = -1 ;
  G__BaseCintLN_TGCompositeFrame.tagnum = -1 ;
  G__BaseCintLN_TGLayoutHints.tagnum = -1 ;
  G__BaseCintLN_TGString.tagnum = -1 ;
  G__BaseCintLN_TGMainFrame.tagnum = -1 ;
  G__BaseCintLN_TGTransientFrame.tagnum = -1 ;
  G__BaseCintLN_TGGroupFrame.tagnum = -1 ;
  G__BaseCintLN_MGList.tagnum = -1 ;
  G__BaseCintLN_TGHProgressBar.tagnum = -1 ;
  G__BaseCintLN_TGWidget.tagnum = -1 ;
  G__BaseCintLN_MSearch.tagnum = -1 ;
  G__BaseCintLN_MIter.tagnum = -1 ;
  G__BaseCintLN_MDirIter.tagnum = -1 ;
  G__BaseCintLN_MReadSocket.tagnum = -1 ;
  G__BaseCintLN_MGTask.tagnum = -1 ;
  G__BaseCintLN_MGGroupFrame.tagnum = -1 ;
  G__BaseCintLN_TGPopupMenu.tagnum = -1 ;
  G__BaseCintLN_MGMenuBar.tagnum = -1 ;
  G__BaseCintLN_TExMap.tagnum = -1 ;
  G__BaseCintLN_MGMap.tagnum = -1 ;
  G__BaseCintLN_MGMapcLcLdA.tagnum = -1 ;
  G__BaseCintLN_MStatusArray.tagnum = -1 ;
  G__BaseCintLN_MStatusArraycLcLdA.tagnum = -1 ;
  G__BaseCintLN_TImage.tagnum = -1 ;
  G__BaseCintLN_TImagecLcLEImageFileTypes.tagnum = -1 ;
  G__BaseCintLN_TVirtualPS.tagnum = -1 ;
  G__BaseCintLN_TGTab.tagnum = -1 ;
  G__BaseCintLN_TGStatusBar.tagnum = -1 ;
  G__BaseCintLN_TGTabElement.tagnum = -1 ;
  G__BaseCintLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__BaseCintLN_MStatusDisplaycLcLStatus_t.tagnum = -1 ;
  G__BaseCintLN_MStatusDisplaycLcLdA.tagnum = -1 ;
  G__BaseCintLN_MArrayI.tagnum = -1 ;
  G__BaseCintLN_MLut.tagnum = -1 ;
  G__BaseCintLN_MArray.tagnum = -1 ;
  G__BaseCintLN_MArrayB.tagnum = -1 ;
  G__BaseCintLN_MArrayS.tagnum = -1 ;
  G__BaseCintLN_TArrayF.tagnum = -1 ;
  G__BaseCintLN_MArrayF.tagnum = -1 ;
  G__BaseCintLN_timeval.tagnum = -1 ;
  G__BaseCintLN_MTime.tagnum = -1 ;
  G__BaseCintLN_MTimecLcLdA.tagnum = -1 ;
  G__BaseCintLN_MClone.tagnum = -1 ;
  G__BaseCintLN_MContinue.tagnum = -1 ;
  G__BaseCintLN_MContinuecLcLdA.tagnum = -1 ;
  G__BaseCintLN_MPrint.tagnum = -1 ;
  G__BaseCintLN_MPrintcLcLdA.tagnum = -1 ;
  G__BaseCintLN_TThread.tagnum = -1 ;
  G__BaseCintLN_TThreadcLcLEState.tagnum = -1 ;
  G__BaseCintLN_MThread.tagnum = -1 ;
  G__BaseCintLN_MObjLookup.tagnum = -1 ;
  G__BaseCintLN_MObjLookupcLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBaseCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TCollection);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TString);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVirtualCollectionProxy);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_ios_base);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_basic_ioslEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_basic_streambuflEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_va_list);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TList);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TTimer);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TPRegexp);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TIterator);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TIter);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TDatime);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVirtualPad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MARS),0,-1,0,(char*)NULL,G__setup_memvarMARS,G__setup_memfuncMARS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_UTF8),0,-1,0,(char*)NULL,G__setup_memvarUTF8,G__setup_memfuncUTF8);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArgsEntry),sizeof(MArgsEntry),-1,323584,(char*)NULL,G__setup_memvarMArgsEntry,G__setup_memfuncMArgsEntry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArgs),sizeof(MArgs),-1,323584,"Class to parse command line arguments",G__setup_memvarMArgs,G__setup_memfuncMArgs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MString),sizeof(MString),-1,295168,"Tool to make Form() thread safe against other TStrings for root prior 5.18.00",G__setup_memvarMString,G__setup_memfuncMString);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MMath),0,-1,0,(char*)NULL,G__setup_memvarMMath,G__setup_memfuncMMath);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TSpline);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TSpline3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArrayD),sizeof(MArrayD),-1,65280,"Array of Double_t",G__setup_memvarMArrayD,G__setup_memfuncMArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MSpline3),sizeof(MSpline3),-1,323840,"An extension of the TSpline3",G__setup_memvarMSpline3,G__setup_memfuncMSpline3);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TRotation);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TQuaternion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MReflection),sizeof(MReflection),-1,323584,"A TRotation derivative describing the reflection by the normal vector of the surface",G__setup_memvarMReflection,G__setup_memfuncMReflection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MQuaternion),sizeof(MQuaternion),-1,323584,(char*)NULL,G__setup_memvarMQuaternion,G__setup_memfuncMQuaternion);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_EEnvLevel);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TOrdCollection);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TAttText);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TPave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MEnv),sizeof(MEnv),-1,291072,"A slightly more advanced version of TEnv",G__setup_memvarMEnv,G__setup_memfuncMEnv);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TSocket);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TServerSocket);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TQObject);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TTime);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMutex);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGTextView);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogPlugin),sizeof(MLogPlugin),-1,290817,"Base for a logger plugin",G__setup_memvarMLogPlugin,G__setup_memfuncMLogPlugin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MLog),sizeof(MLog),-1,327424,"This is what we call 'The logging system'",G__setup_memvarMLog,G__setup_memfuncMLog);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogcLcL_flags);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogcLcLELogBits);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogcLcLELogType);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogHtml),sizeof(MLogHtml),-1,324864,"Logger Plugin for HTML",G__setup_memvarMLogHtml,G__setup_memfuncMLogHtml);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MLogHtmlcLcLdA);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_fits);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TDataMember);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TMethodCall);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MStatusDisplay),sizeof(MStatusDisplay),-1,324864,"Window for a status display",G__setup_memvarMStatusDisplay,G__setup_memfuncMStatusDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParContainer),sizeof(MParContainer),-1,327424,"The basis for all parameter containers",G__setup_memvarMParContainer,G__setup_memfuncMParContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParEmulated),sizeof(MParEmulated),-1,323840,"Storage container for emulated classes from files",G__setup_memvarMParEmulated,G__setup_memfuncMParEmulated);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MParContainercLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParSpline),sizeof(MParSpline),-1,324864,"Container to hold a MSpline3",G__setup_memvarMParSpline,G__setup_memfuncMParSpline);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MTask),sizeof(MTask),-1,325376,"Abstract base class for a task",G__setup_memvarMTask,G__setup_memfuncMTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskList),sizeof(MTaskList),-1,325376,"collection of tasks to be performed in the eventloop",G__setup_memvarMTaskList,G__setup_memfuncMTaskList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParList),sizeof(MParList),-1,325376,"list of parameter containers (MParContainer)",G__setup_memvarMParList,G__setup_memfuncMParList);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MParListcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParEnv),sizeof(MParEnv),-1,324864,"A wrapper container which allows to set a new container from the resource file",G__setup_memvarMParEnv,G__setup_memfuncMParEnv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParameterD),sizeof(MParameterD),-1,323840,"Container to hold a generalized parameters (double)",G__setup_memvarMParameterD,G__setup_memfuncMParameterD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParameterDerr),sizeof(MParameterDerr),-1,323840,"Container to hold a generalized parameters (double) and its Error",G__setup_memvarMParameterDerr,G__setup_memfuncMParameterDerr);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MParameterI),sizeof(MParameterI),-1,323840,"Container to hold a generalized parameters (integer)",G__setup_memvarMParameterI,G__setup_memfuncMParameterI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MInputStreamID),sizeof(MInputStreamID),-1,323840,"Assigns an Id to tasks or a task list",G__setup_memvarMInputStreamID,G__setup_memfuncMInputStreamID);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MFilter),sizeof(MFilter),-1,323841,"Abstract base class for the filters",G__setup_memvarMFilter,G__setup_memfuncMFilter);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskEnv),sizeof(MTaskEnv),-1,324864,"Task which can be setup from an environment file",G__setup_memvarMTaskEnv,G__setup_memfuncMTaskEnv);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskEnvcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskInteractive),sizeof(MTaskInteractive),-1,324864,"Interactive task",G__setup_memvarMTaskInteractive,G__setup_memfuncMTaskInteractive);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MTaskListcLcLdA);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGProgressBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MProgressBar),sizeof(MProgressBar),-1,324864,"A simple progress bar window for the Eventloop",G__setup_memvarMProgressBar,G__setup_memfuncMProgressBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MEvtLoop),sizeof(MEvtLoop),-1,324864,"Class to execute the tasks in a tasklist",G__setup_memvarMEvtLoop,G__setup_memfuncMEvtLoop);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MEvtLoopcLcLdA);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MEvtLoopcLcLStatistics_t);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_Event_t);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGObject);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGString);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGTransientFrame);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGGroupFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MGList),sizeof(MGList),-1,324864,(char*)NULL,G__setup_memvarMGList,G__setup_memfuncMGList);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGHProgressBar);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGWidget);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MSearch),sizeof(MSearch),-1,324608,"A simple progress bar window for the Eventloop",G__setup_memvarMSearch,G__setup_memfuncMSearch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MIter),sizeof(MIter),-1,298752,"Iterator wrapper",G__setup_memvarMIter,G__setup_memfuncMIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MDirIter),sizeof(MDirIter),-1,325376,"Iterator for files in several directories (with filters)",G__setup_memvarMDirIter,G__setup_memfuncMDirIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MReadSocket),sizeof(MReadSocket),-1,296704,"This is what we call 'The logging system'",G__setup_memvarMReadSocket,G__setup_memfuncMReadSocket);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MGTask),sizeof(MGTask),-1,324864,"Abstract base class for a task having a gui",G__setup_memvarMGTask,G__setup_memfuncMGTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MGGroupFrame),sizeof(MGGroupFrame),-1,324608,"An interface to widgets in a group frame (makes live easier)",G__setup_memvarMGGroupFrame,G__setup_memfuncMGGroupFrame);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MGMenuBar);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TExMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MGMap),sizeof(MGMap),-1,292096,"Special TExMap supporting enhanced drawing and bitmap drawing",G__setup_memvarMGMap,G__setup_memfuncMGMap);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MGMapcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MStatusArray),sizeof(MStatusArray),-1,324864,"Helper class for status display",G__setup_memvarMStatusArray,G__setup_memfuncMStatusArray);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MStatusArraycLcLdA);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TImage);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TImagecLcLEImageFileTypes);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TVirtualPS);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGTab);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TGTabElement);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MStatusDisplaycLcLStatus_t);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MStatusDisplaycLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArrayI),sizeof(MArrayI),-1,65280,"Array of Int_t",G__setup_memvarMArrayI,G__setup_memfuncMArrayI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MLut),sizeof(MLut),-1,291072,"A simple and fast easy-to-use look-up-table",G__setup_memvarMLut,G__setup_memfuncMLut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArray),sizeof(MArray),-1,65281,"Abstract array base class for TObject derived Arrays",G__setup_memvarMArray,G__setup_memfuncMArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArrayB),sizeof(MArrayB),-1,65280,"Array of Byte_t",G__setup_memvarMArrayB,G__setup_memfuncMArrayB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArrayS),sizeof(MArrayS),-1,65280,"Array of UShort_t",G__setup_memvarMArrayS,G__setup_memfuncMArrayS);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TArrayF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MArrayF),sizeof(MArrayF),-1,65280,"Array of Float_t",G__setup_memvarMArrayF,G__setup_memfuncMArrayF);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_timeval);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MTime),sizeof(MTime),-1,326400,"A generalized MARS time stamp",G__setup_memvarMTime,G__setup_memfuncMTime);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MTimecLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MClone),sizeof(MClone),-1,324608,"Task to clone (duplicate) an object in memory",G__setup_memvarMClone,G__setup_memfuncMClone);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MContinue),sizeof(MContinue),-1,324864,"Task returning kCONTINUE (or any other return code)",G__setup_memvarMContinue,G__setup_memfuncMContinue);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MContinuecLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MPrint),sizeof(MPrint),-1,323840,"Task to call Print() function",G__setup_memvarMPrint,G__setup_memfuncMPrint);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MPrintcLcLdA);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TThread);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_TThreadcLcLEState);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MThread),sizeof(MThread),-1,296193,"A simplified interface to TThread",G__setup_memvarMThread,G__setup_memfuncMThread);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BaseCintLN_MObjLookup),sizeof(MObjLookup),-1,292096,"A class providing a fast lookup table key(int)->TObject",G__setup_memvarMObjLookup,G__setup_memfuncMObjLookup);
   G__get_linked_tagnum_fwd(&G__BaseCintLN_MObjLookupcLcLdA);
}
extern "C" void G__cpp_setupBaseCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupBaseCint()");
  G__set_cpp_environmentBaseCint();
  G__cpp_setup_tagtableBaseCint();

  G__cpp_setup_inheritanceBaseCint();

  G__cpp_setup_typetableBaseCint();

  G__cpp_setup_memvarBaseCint();

  G__cpp_setup_memfuncBaseCint();
  G__cpp_setup_globalBaseCint();
  G__cpp_setup_funcBaseCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBaseCint();
  return;
}
class G__cpp_setup_initBaseCint {
  public:
    G__cpp_setup_initBaseCint() { G__add_setup_func("BaseCint",(G__incsetup)(&G__cpp_setupBaseCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBaseCint() { G__remove_setup_func("BaseCint"); }
};
G__cpp_setup_initBaseCint G__cpp_setup_initializerBaseCint;

