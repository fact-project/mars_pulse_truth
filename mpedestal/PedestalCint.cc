//
// File generated by rootcint at Mon Nov 28 11:06:21 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME PedestalCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PedestalCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MMcPedestalCopy_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MMcPedestalCopy(void *p = 0);
   static void *newArray_MMcPedestalCopy(Long_t size, void *p);
   static void delete_MMcPedestalCopy(void *p);
   static void deleteArray_MMcPedestalCopy(void *p);
   static void destruct_MMcPedestalCopy(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MMcPedestalCopy*)
   {
      ::MMcPedestalCopy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MMcPedestalCopy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MMcPedestalCopy", ::MMcPedestalCopy::Class_Version(), "./MMcPedestalCopy.h", 9,
                  typeid(::MMcPedestalCopy), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MMcPedestalCopy::Dictionary, isa_proxy, 4,
                  sizeof(::MMcPedestalCopy) );
      instance.SetNew(&new_MMcPedestalCopy);
      instance.SetNewArray(&newArray_MMcPedestalCopy);
      instance.SetDelete(&delete_MMcPedestalCopy);
      instance.SetDeleteArray(&deleteArray_MMcPedestalCopy);
      instance.SetDestructor(&destruct_MMcPedestalCopy);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MMcPedestalCopy*)
   {
      return GenerateInitInstanceLocal((::MMcPedestalCopy*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MMcPedestalCopy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MMcPedestalNSBAdd_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MMcPedestalNSBAdd(void *p = 0);
   static void *newArray_MMcPedestalNSBAdd(Long_t size, void *p);
   static void delete_MMcPedestalNSBAdd(void *p);
   static void deleteArray_MMcPedestalNSBAdd(void *p);
   static void destruct_MMcPedestalNSBAdd(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MMcPedestalNSBAdd*)
   {
      ::MMcPedestalNSBAdd *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MMcPedestalNSBAdd >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MMcPedestalNSBAdd", ::MMcPedestalNSBAdd::Class_Version(), "./MMcPedestalNSBAdd.h", 9,
                  typeid(::MMcPedestalNSBAdd), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MMcPedestalNSBAdd::Dictionary, isa_proxy, 4,
                  sizeof(::MMcPedestalNSBAdd) );
      instance.SetNew(&new_MMcPedestalNSBAdd);
      instance.SetNewArray(&newArray_MMcPedestalNSBAdd);
      instance.SetDelete(&delete_MMcPedestalNSBAdd);
      instance.SetDeleteArray(&deleteArray_MMcPedestalNSBAdd);
      instance.SetDestructor(&destruct_MMcPedestalNSBAdd);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MMcPedestalNSBAdd*)
   {
      return GenerateInitInstanceLocal((::MMcPedestalNSBAdd*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MMcPedestalNSBAdd*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedestalCam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedestalCam(void *p = 0);
   static void *newArray_MPedestalCam(Long_t size, void *p);
   static void delete_MPedestalCam(void *p);
   static void deleteArray_MPedestalCam(void *p);
   static void destruct_MPedestalCam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedestalCam*)
   {
      ::MPedestalCam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedestalCam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedestalCam", ::MPedestalCam::Class_Version(), "./MPedestalCam.h", 18,
                  typeid(::MPedestalCam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedestalCam::Dictionary, isa_proxy, 4,
                  sizeof(::MPedestalCam) );
      instance.SetNew(&new_MPedestalCam);
      instance.SetNewArray(&newArray_MPedestalCam);
      instance.SetDelete(&delete_MPedestalCam);
      instance.SetDeleteArray(&deleteArray_MPedestalCam);
      instance.SetDestructor(&destruct_MPedestalCam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedestalCam*)
   {
      return GenerateInitInstanceLocal((::MPedestalCam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedestalCam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedestalSubtractedEvt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedestalSubtractedEvt(void *p = 0);
   static void *newArray_MPedestalSubtractedEvt(Long_t size, void *p);
   static void delete_MPedestalSubtractedEvt(void *p);
   static void deleteArray_MPedestalSubtractedEvt(void *p);
   static void destruct_MPedestalSubtractedEvt(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedestalSubtractedEvt*)
   {
      ::MPedestalSubtractedEvt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedestalSubtractedEvt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedestalSubtractedEvt", ::MPedestalSubtractedEvt::Class_Version(), "./MPedestalSubtractedEvt.h", 20,
                  typeid(::MPedestalSubtractedEvt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedestalSubtractedEvt::Dictionary, isa_proxy, 4,
                  sizeof(::MPedestalSubtractedEvt) );
      instance.SetNew(&new_MPedestalSubtractedEvt);
      instance.SetNewArray(&newArray_MPedestalSubtractedEvt);
      instance.SetDelete(&delete_MPedestalSubtractedEvt);
      instance.SetDeleteArray(&deleteArray_MPedestalSubtractedEvt);
      instance.SetDestructor(&destruct_MPedestalSubtractedEvt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedestalSubtractedEvt*)
   {
      return GenerateInitInstanceLocal((::MPedestalSubtractedEvt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedestalSubtractedEvt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MExtractPedestal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MExtractPedestal(void *p);
   static void deleteArray_MExtractPedestal(void *p);
   static void destruct_MExtractPedestal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MExtractPedestal*)
   {
      ::MExtractPedestal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MExtractPedestal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MExtractPedestal", ::MExtractPedestal::Class_Version(), "./MExtractPedestal.h", 29,
                  typeid(::MExtractPedestal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MExtractPedestal::Dictionary, isa_proxy, 4,
                  sizeof(::MExtractPedestal) );
      instance.SetDelete(&delete_MExtractPedestal);
      instance.SetDeleteArray(&deleteArray_MExtractPedestal);
      instance.SetDestructor(&destruct_MExtractPedestal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MExtractPedestal*)
   {
      return GenerateInitInstanceLocal((::MExtractPedestal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MExtractPedestal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedestalPix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedestalPix(void *p = 0);
   static void *newArray_MPedestalPix(Long_t size, void *p);
   static void delete_MPedestalPix(void *p);
   static void deleteArray_MPedestalPix(void *p);
   static void destruct_MPedestalPix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedestalPix*)
   {
      ::MPedestalPix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedestalPix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedestalPix", ::MPedestalPix::Class_Version(), "./MPedestalPix.h", 9,
                  typeid(::MPedestalPix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedestalPix::Dictionary, isa_proxy, 4,
                  sizeof(::MPedestalPix) );
      instance.SetNew(&new_MPedestalPix);
      instance.SetNewArray(&newArray_MPedestalPix);
      instance.SetDelete(&delete_MPedestalPix);
      instance.SetDeleteArray(&deleteArray_MPedestalPix);
      instance.SetDestructor(&destruct_MPedestalPix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedestalPix*)
   {
      return GenerateInitInstanceLocal((::MPedestalPix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedestalPix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedCalcPedRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedCalcPedRun(void *p = 0);
   static void *newArray_MPedCalcPedRun(Long_t size, void *p);
   static void delete_MPedCalcPedRun(void *p);
   static void deleteArray_MPedCalcPedRun(void *p);
   static void destruct_MPedCalcPedRun(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedCalcPedRun*)
   {
      ::MPedCalcPedRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedCalcPedRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedCalcPedRun", ::MPedCalcPedRun::Class_Version(), "./MPedCalcPedRun.h", 12,
                  typeid(::MPedCalcPedRun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedCalcPedRun::Dictionary, isa_proxy, 4,
                  sizeof(::MPedCalcPedRun) );
      instance.SetNew(&new_MPedCalcPedRun);
      instance.SetNewArray(&newArray_MPedCalcPedRun);
      instance.SetDelete(&delete_MPedCalcPedRun);
      instance.SetDeleteArray(&deleteArray_MPedCalcPedRun);
      instance.SetDestructor(&destruct_MPedCalcPedRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedCalcPedRun*)
   {
      return GenerateInitInstanceLocal((::MPedCalcPedRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedCalcPedRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedCalcFromLoGain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedCalcFromLoGain(void *p = 0);
   static void *newArray_MPedCalcFromLoGain(Long_t size, void *p);
   static void delete_MPedCalcFromLoGain(void *p);
   static void deleteArray_MPedCalcFromLoGain(void *p);
   static void destruct_MPedCalcFromLoGain(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedCalcFromLoGain*)
   {
      ::MPedCalcFromLoGain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedCalcFromLoGain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedCalcFromLoGain", ::MPedCalcFromLoGain::Class_Version(), "./MPedCalcFromLoGain.h", 16,
                  typeid(::MPedCalcFromLoGain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedCalcFromLoGain::Dictionary, isa_proxy, 4,
                  sizeof(::MPedCalcFromLoGain) );
      instance.SetNew(&new_MPedCalcFromLoGain);
      instance.SetNewArray(&newArray_MPedCalcFromLoGain);
      instance.SetDelete(&delete_MPedCalcFromLoGain);
      instance.SetDeleteArray(&deleteArray_MPedCalcFromLoGain);
      instance.SetDestructor(&destruct_MPedCalcFromLoGain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedCalcFromLoGain*)
   {
      return GenerateInitInstanceLocal((::MPedCalcFromLoGain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedCalcFromLoGain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedPhotCam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedPhotCam(void *p = 0);
   static void *newArray_MPedPhotCam(Long_t size, void *p);
   static void delete_MPedPhotCam(void *p);
   static void deleteArray_MPedPhotCam(void *p);
   static void destruct_MPedPhotCam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedPhotCam*)
   {
      ::MPedPhotCam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedPhotCam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedPhotCam", ::MPedPhotCam::Class_Version(), "./MPedPhotCam.h", 19,
                  typeid(::MPedPhotCam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedPhotCam::Dictionary, isa_proxy, 4,
                  sizeof(::MPedPhotCam) );
      instance.SetNew(&new_MPedPhotCam);
      instance.SetNewArray(&newArray_MPedPhotCam);
      instance.SetDelete(&delete_MPedPhotCam);
      instance.SetDeleteArray(&deleteArray_MPedPhotCam);
      instance.SetDestructor(&destruct_MPedPhotCam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedPhotCam*)
   {
      return GenerateInitInstanceLocal((::MPedPhotCam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedPhotCam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedPhotCalc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedPhotCalc(void *p = 0);
   static void *newArray_MPedPhotCalc(Long_t size, void *p);
   static void delete_MPedPhotCalc(void *p);
   static void deleteArray_MPedPhotCalc(void *p);
   static void destruct_MPedPhotCalc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedPhotCalc*)
   {
      ::MPedPhotCalc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedPhotCalc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedPhotCalc", ::MPedPhotCalc::Class_Version(), "./MPedPhotCalc.h", 16,
                  typeid(::MPedPhotCalc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedPhotCalc::Dictionary, isa_proxy, 4,
                  sizeof(::MPedPhotCalc) );
      instance.SetNew(&new_MPedPhotCalc);
      instance.SetNewArray(&newArray_MPedPhotCalc);
      instance.SetDelete(&delete_MPedPhotCalc);
      instance.SetDeleteArray(&deleteArray_MPedPhotCalc);
      instance.SetDestructor(&destruct_MPedPhotCalc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedPhotCalc*)
   {
      return GenerateInitInstanceLocal((::MPedPhotCalc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedPhotCalc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedPhotPix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedPhotPix(void *p = 0);
   static void *newArray_MPedPhotPix(Long_t size, void *p);
   static void delete_MPedPhotPix(void *p);
   static void deleteArray_MPedPhotPix(void *p);
   static void destruct_MPedPhotPix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedPhotPix*)
   {
      ::MPedPhotPix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedPhotPix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedPhotPix", ::MPedPhotPix::Class_Version(), "./MPedPhotPix.h", 12,
                  typeid(::MPedPhotPix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedPhotPix::Dictionary, isa_proxy, 4,
                  sizeof(::MPedPhotPix) );
      instance.SetNew(&new_MPedPhotPix);
      instance.SetNewArray(&newArray_MPedPhotPix);
      instance.SetDelete(&delete_MPedPhotPix);
      instance.SetDeleteArray(&deleteArray_MPedPhotPix);
      instance.SetDestructor(&destruct_MPedPhotPix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedPhotPix*)
   {
      return GenerateInitInstanceLocal((::MPedPhotPix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedPhotPix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MHPedestalCor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHPedestalCor(void *p = 0);
   static void *newArray_MHPedestalCor(Long_t size, void *p);
   static void delete_MHPedestalCor(void *p);
   static void deleteArray_MHPedestalCor(void *p);
   static void destruct_MHPedestalCor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHPedestalCor*)
   {
      ::MHPedestalCor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHPedestalCor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHPedestalCor", ::MHPedestalCor::Class_Version(), "./MHPedestalCor.h", 15,
                  typeid(::MHPedestalCor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHPedestalCor::Dictionary, isa_proxy, 4,
                  sizeof(::MHPedestalCor) );
      instance.SetNew(&new_MHPedestalCor);
      instance.SetNewArray(&newArray_MHPedestalCor);
      instance.SetDelete(&delete_MHPedestalCor);
      instance.SetDeleteArray(&deleteArray_MHPedestalCor);
      instance.SetDestructor(&destruct_MHPedestalCor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHPedestalCor*)
   {
      return GenerateInitInstanceLocal((::MHPedestalCor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHPedestalCor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPedestalSubtract_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPedestalSubtract(void *p = 0);
   static void *newArray_MPedestalSubtract(Long_t size, void *p);
   static void delete_MPedestalSubtract(void *p);
   static void deleteArray_MPedestalSubtract(void *p);
   static void destruct_MPedestalSubtract(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPedestalSubtract*)
   {
      ::MPedestalSubtract *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPedestalSubtract >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPedestalSubtract", ::MPedestalSubtract::Class_Version(), "./MPedestalSubtract.h", 14,
                  typeid(::MPedestalSubtract), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPedestalSubtract::Dictionary, isa_proxy, 4,
                  sizeof(::MPedestalSubtract) );
      instance.SetNew(&new_MPedestalSubtract);
      instance.SetNewArray(&newArray_MPedestalSubtract);
      instance.SetDelete(&delete_MPedestalSubtract);
      instance.SetDeleteArray(&deleteArray_MPedestalSubtract);
      instance.SetDestructor(&destruct_MPedestalSubtract);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPedestalSubtract*)
   {
      return GenerateInitInstanceLocal((::MPedestalSubtract*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPedestalSubtract*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MMcPedestalCopy::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MMcPedestalCopy::Class_Name()
{
   return "MMcPedestalCopy";
}

//______________________________________________________________________________
const char *MMcPedestalCopy::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalCopy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MMcPedestalCopy::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalCopy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MMcPedestalCopy::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalCopy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MMcPedestalCopy::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalCopy*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MMcPedestalNSBAdd::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MMcPedestalNSBAdd::Class_Name()
{
   return "MMcPedestalNSBAdd";
}

//______________________________________________________________________________
const char *MMcPedestalNSBAdd::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalNSBAdd*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MMcPedestalNSBAdd::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalNSBAdd*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MMcPedestalNSBAdd::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalNSBAdd*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MMcPedestalNSBAdd::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MMcPedestalNSBAdd*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedestalCam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedestalCam::Class_Name()
{
   return "MPedestalCam";
}

//______________________________________________________________________________
const char *MPedestalCam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalCam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedestalCam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalCam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedestalCam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalCam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedestalCam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalCam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedestalSubtractedEvt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedestalSubtractedEvt::Class_Name()
{
   return "MPedestalSubtractedEvt";
}

//______________________________________________________________________________
const char *MPedestalSubtractedEvt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtractedEvt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedestalSubtractedEvt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtractedEvt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedestalSubtractedEvt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtractedEvt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedestalSubtractedEvt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtractedEvt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MExtractPedestal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MExtractPedestal::Class_Name()
{
   return "MExtractPedestal";
}

//______________________________________________________________________________
const char *MExtractPedestal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MExtractPedestal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MExtractPedestal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MExtractPedestal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MExtractPedestal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MExtractPedestal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MExtractPedestal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MExtractPedestal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedestalPix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedestalPix::Class_Name()
{
   return "MPedestalPix";
}

//______________________________________________________________________________
const char *MPedestalPix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalPix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedestalPix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalPix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedestalPix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalPix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedestalPix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalPix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedCalcPedRun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedCalcPedRun::Class_Name()
{
   return "MPedCalcPedRun";
}

//______________________________________________________________________________
const char *MPedCalcPedRun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcPedRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedCalcPedRun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcPedRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedCalcPedRun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcPedRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedCalcPedRun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcPedRun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedCalcFromLoGain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedCalcFromLoGain::Class_Name()
{
   return "MPedCalcFromLoGain";
}

//______________________________________________________________________________
const char *MPedCalcFromLoGain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcFromLoGain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedCalcFromLoGain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcFromLoGain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedCalcFromLoGain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcFromLoGain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedCalcFromLoGain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedCalcFromLoGain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedPhotCam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedPhotCam::Class_Name()
{
   return "MPedPhotCam";
}

//______________________________________________________________________________
const char *MPedPhotCam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedPhotCam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedPhotCam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedPhotCam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedPhotCalc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedPhotCalc::Class_Name()
{
   return "MPedPhotCalc";
}

//______________________________________________________________________________
const char *MPedPhotCalc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCalc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedPhotCalc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCalc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedPhotCalc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCalc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedPhotCalc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotCalc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedPhotPix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedPhotPix::Class_Name()
{
   return "MPedPhotPix";
}

//______________________________________________________________________________
const char *MPedPhotPix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotPix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedPhotPix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotPix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedPhotPix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotPix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedPhotPix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedPhotPix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MHPedestalCor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHPedestalCor::Class_Name()
{
   return "MHPedestalCor";
}

//______________________________________________________________________________
const char *MHPedestalCor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHPedestalCor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHPedestalCor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHPedestalCor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHPedestalCor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHPedestalCor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHPedestalCor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHPedestalCor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPedestalSubtract::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPedestalSubtract::Class_Name()
{
   return "MPedestalSubtract";
}

//______________________________________________________________________________
const char *MPedestalSubtract::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtract*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPedestalSubtract::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtract*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPedestalSubtract::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtract*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPedestalSubtract::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPedestalSubtract*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MMcPedestalCopy::Streamer(TBuffer &R__b)
{
   // Stream an object of class MMcPedestalCopy.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MMcPedestalCopy::Class(),this);
   } else {
      R__b.WriteClassBuffer(MMcPedestalCopy::Class(),this);
   }
}

//______________________________________________________________________________
void MMcPedestalCopy::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MMcPedestalCopy.
      TClass *R__cl = ::MMcPedestalCopy::IsA();
      if (R__cl || R__insp.IsA()) { }
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MMcPedestalCopy(void *p) {
      return  p ? new(p) ::MMcPedestalCopy : new ::MMcPedestalCopy;
   }
   static void *newArray_MMcPedestalCopy(Long_t nElements, void *p) {
      return p ? new(p) ::MMcPedestalCopy[nElements] : new ::MMcPedestalCopy[nElements];
   }
   // Wrapper around operator delete
   static void delete_MMcPedestalCopy(void *p) {
      delete ((::MMcPedestalCopy*)p);
   }
   static void deleteArray_MMcPedestalCopy(void *p) {
      delete [] ((::MMcPedestalCopy*)p);
   }
   static void destruct_MMcPedestalCopy(void *p) {
      typedef ::MMcPedestalCopy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MMcPedestalCopy

//______________________________________________________________________________
void MMcPedestalNSBAdd::Streamer(TBuffer &R__b)
{
   // Stream an object of class MMcPedestalNSBAdd.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MMcPedestalNSBAdd::Class(),this);
   } else {
      R__b.WriteClassBuffer(MMcPedestalNSBAdd::Class(),this);
   }
}

//______________________________________________________________________________
void MMcPedestalNSBAdd::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MMcPedestalNSBAdd.
      TClass *R__cl = ::MMcPedestalNSBAdd::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDnsbPixel", &fDnsbPixel);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MMcPedestalNSBAdd(void *p) {
      return  p ? new(p) ::MMcPedestalNSBAdd : new ::MMcPedestalNSBAdd;
   }
   static void *newArray_MMcPedestalNSBAdd(Long_t nElements, void *p) {
      return p ? new(p) ::MMcPedestalNSBAdd[nElements] : new ::MMcPedestalNSBAdd[nElements];
   }
   // Wrapper around operator delete
   static void delete_MMcPedestalNSBAdd(void *p) {
      delete ((::MMcPedestalNSBAdd*)p);
   }
   static void deleteArray_MMcPedestalNSBAdd(void *p) {
      delete [] ((::MMcPedestalNSBAdd*)p);
   }
   static void destruct_MMcPedestalNSBAdd(void *p) {
      typedef ::MMcPedestalNSBAdd current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MMcPedestalNSBAdd

//______________________________________________________________________________
void MPedPhotCalc::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedPhotCalc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedPhotCalc::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedPhotCalc::Class(),this);
   }
}

//______________________________________________________________________________
void MPedPhotCalc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedPhotCalc.
      TClass *R__cl = ::MPedPhotCalc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestals", &fPedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCerPhot", &fCerPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBadPixels", &fBadPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumx", &fSumx);
      R__insp.InspectMember(fSumx, "fSumx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumx2", &fSumx2);
      R__insp.InspectMember(fSumx2, "fSumx2.");
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedPhotCalc(void *p) {
      return  p ? new(p) ::MPedPhotCalc : new ::MPedPhotCalc;
   }
   static void *newArray_MPedPhotCalc(Long_t nElements, void *p) {
      return p ? new(p) ::MPedPhotCalc[nElements] : new ::MPedPhotCalc[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedPhotCalc(void *p) {
      delete ((::MPedPhotCalc*)p);
   }
   static void deleteArray_MPedPhotCalc(void *p) {
      delete [] ((::MPedPhotCalc*)p);
   }
   static void destruct_MPedPhotCalc(void *p) {
      typedef ::MPedPhotCalc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedPhotCalc

//______________________________________________________________________________
void MPedPhotCam::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedPhotCam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedPhotCam::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedPhotCam::Class(),this);
   }
}

//______________________________________________________________________________
void MPedPhotCam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedPhotCam.
      TClass *R__cl = ::MPedPhotCam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAreas", &fAreas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSectors", &fSectors);
      MParContainer::ShowMembers(R__insp);
      MCamEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedPhotCam(void *p) {
      return  p ? new(p) ::MPedPhotCam : new ::MPedPhotCam;
   }
   static void *newArray_MPedPhotCam(Long_t nElements, void *p) {
      return p ? new(p) ::MPedPhotCam[nElements] : new ::MPedPhotCam[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedPhotCam(void *p) {
      delete ((::MPedPhotCam*)p);
   }
   static void deleteArray_MPedPhotCam(void *p) {
      delete [] ((::MPedPhotCam*)p);
   }
   static void destruct_MPedPhotCam(void *p) {
      typedef ::MPedPhotCam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedPhotCam

//______________________________________________________________________________
void MPedPhotPix::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedPhotPix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedPhotPix::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedPhotPix::Class(),this);
   }
}

//______________________________________________________________________________
void MPedPhotPix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedPhotPix.
      TClass *R__cl = ::MPedPhotPix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMean", &fMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRms", &fRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvents", &fNumEvents);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedPhotPix(void *p) {
      return  p ? new(p) ::MPedPhotPix : new ::MPedPhotPix;
   }
   static void *newArray_MPedPhotPix(Long_t nElements, void *p) {
      return p ? new(p) ::MPedPhotPix[nElements] : new ::MPedPhotPix[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedPhotPix(void *p) {
      delete ((::MPedPhotPix*)p);
   }
   static void deleteArray_MPedPhotPix(void *p) {
      delete [] ((::MPedPhotPix*)p);
   }
   static void destruct_MPedPhotPix(void *p) {
      typedef ::MPedPhotPix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedPhotPix

//______________________________________________________________________________
void MExtractPedestal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MExtractPedestal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MExtractPedestal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MExtractPedestal::Class(),this);
   }
}

//______________________________________________________________________________
void MExtractPedestal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MExtractPedestal.
      TClass *R__cl = ::MExtractPedestal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedestalCamOut", &fNamePedestalCamOut);
      R__insp.InspectMember(fNamePedestalCamOut, "fNamePedestalCamOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedestalCamInter", &fNamePedestalCamInter);
      R__insp.InspectMember(fNamePedestalCamInter, "fNamePedestalCamInter.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRawEvtData", &fNameRawEvtData);
      R__insp.InspectMember(fNameRawEvtData, "fNameRawEvtData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRandomCalculation", &fRandomCalculation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntermediateStorage", &fIntermediateStorage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeom", &fGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestalsInter", &fPedestalsInter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestalsOut", &fPedestalsOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvt", &fRawEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtractor", &fExtractor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractWinFirst", &fExtractWinFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractWinSize", &fExtractWinSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtractWinLast", &fExtractWinLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckWinFirst", &fCheckWinFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCheckWinLast", &fCheckWinLast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSignalVar", &fMaxSignalVar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSignalAbs", &fMaxSignalAbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSpecialPixels", &fUseSpecialPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumx", &fSumx);
      R__insp.InspectMember(fSumx, "fSumx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumx2", &fSumx2);
      R__insp.InspectMember(fSumx2, "fSumx2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumAB0", &fSumAB0);
      R__insp.InspectMember(fSumAB0, "fSumAB0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumAB1", &fSumAB1);
      R__insp.InspectMember(fSumAB1, "fSumAB1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaSumx", &fAreaSumx);
      R__insp.InspectMember(fAreaSumx, "fAreaSumx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaSumx2", &fAreaSumx2);
      R__insp.InspectMember(fAreaSumx2, "fAreaSumx2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaSumAB0", &fAreaSumAB0);
      R__insp.InspectMember(fAreaSumAB0, "fAreaSumAB0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaSumAB1", &fAreaSumAB1);
      R__insp.InspectMember(fAreaSumAB1, "fAreaSumAB1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaFilled", &fAreaFilled);
      R__insp.InspectMember(fAreaFilled, "fAreaFilled.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAreaValid", &fAreaValid);
      R__insp.InspectMember(fAreaValid, "fAreaValid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorSumx", &fSectorSumx);
      R__insp.InspectMember(fSectorSumx, "fSectorSumx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorSumx2", &fSectorSumx2);
      R__insp.InspectMember(fSectorSumx2, "fSectorSumx2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorSumAB0", &fSectorSumAB0);
      R__insp.InspectMember(fSectorSumAB0, "fSectorSumAB0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorSumAB1", &fSectorSumAB1);
      R__insp.InspectMember(fSectorSumAB1, "fSectorSumAB1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorFilled", &fSectorFilled);
      R__insp.InspectMember(fSectorFilled, "fSectorFilled.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorValid", &fSectorValid);
      R__insp.InspectMember(fSectorValid, "fSectorValid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEventsUsed", &fNumEventsUsed);
      R__insp.InspectMember(fNumEventsUsed, "fNumEventsUsed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MExtractPedestal(void *p) {
      delete ((::MExtractPedestal*)p);
   }
   static void deleteArray_MExtractPedestal(void *p) {
      delete [] ((::MExtractPedestal*)p);
   }
   static void destruct_MExtractPedestal(void *p) {
      typedef ::MExtractPedestal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MExtractPedestal

//______________________________________________________________________________
void MPedCalcPedRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedCalcPedRun.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedCalcPedRun::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedCalcPedRun::Class(),this);
   }
}

//______________________________________________________________________________
void MPedCalcPedRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedCalcPedRun.
      TClass *R__cl = ::MPedCalcPedRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFirstPedRun", &fIsFirstPedRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsNotPedRun", &fIsNotPedRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigPattern", &fTrigPattern);
      MExtractPedestal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedCalcPedRun(void *p) {
      return  p ? new(p) ::MPedCalcPedRun : new ::MPedCalcPedRun;
   }
   static void *newArray_MPedCalcPedRun(Long_t nElements, void *p) {
      return p ? new(p) ::MPedCalcPedRun[nElements] : new ::MPedCalcPedRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedCalcPedRun(void *p) {
      delete ((::MPedCalcPedRun*)p);
   }
   static void deleteArray_MPedCalcPedRun(void *p) {
      delete [] ((::MPedCalcPedRun*)p);
   }
   static void destruct_MPedCalcPedRun(void *p) {
      typedef ::MPedCalcPedRun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedCalcPedRun

//______________________________________________________________________________
void MPedCalcFromLoGain::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedCalcFromLoGain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedCalcFromLoGain::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedCalcFromLoGain::Class(),this);
   }
}

//______________________________________________________________________________
void MPedCalcFromLoGain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedCalcFromLoGain.
      TClass *R__cl = ::MPedCalcFromLoGain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEventsDump", &fNumEventsDump);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumAreasDump", &fNumAreasDump);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSectorsDump", &fNumSectorsDump);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalUpdate", &fPedestalUpdate);
      MExtractPedestal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedCalcFromLoGain(void *p) {
      return  p ? new(p) ::MPedCalcFromLoGain : new ::MPedCalcFromLoGain;
   }
   static void *newArray_MPedCalcFromLoGain(Long_t nElements, void *p) {
      return p ? new(p) ::MPedCalcFromLoGain[nElements] : new ::MPedCalcFromLoGain[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedCalcFromLoGain(void *p) {
      delete ((::MPedCalcFromLoGain*)p);
   }
   static void deleteArray_MPedCalcFromLoGain(void *p) {
      delete [] ((::MPedCalcFromLoGain*)p);
   }
   static void destruct_MPedCalcFromLoGain(void *p) {
      typedef ::MPedCalcFromLoGain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedCalcFromLoGain

//______________________________________________________________________________
void MPedestalCam::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedestalCam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedestalCam::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedestalCam::Class(),this);
   }
}

//______________________________________________________________________________
void MPedestalCam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedestalCam.
      TClass *R__cl = ::MPedestalCam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fArray", &fArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAverageAreas", &fAverageAreas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAverageSectors", &fAverageSectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSlices", &fNumSlices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvents", &fNumEvents);
      MParContainer::ShowMembers(R__insp);
      MCamEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedestalCam(void *p) {
      return  p ? new(p) ::MPedestalCam : new ::MPedestalCam;
   }
   static void *newArray_MPedestalCam(Long_t nElements, void *p) {
      return p ? new(p) ::MPedestalCam[nElements] : new ::MPedestalCam[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedestalCam(void *p) {
      delete ((::MPedestalCam*)p);
   }
   static void deleteArray_MPedestalCam(void *p) {
      delete [] ((::MPedestalCam*)p);
   }
   static void destruct_MPedestalCam(void *p) {
      typedef ::MPedestalCam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedestalCam

//______________________________________________________________________________
void MPedestalPix::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedestalPix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedestalPix::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedestalPix::Class(),this);
   }
}

//______________________________________________________________________________
void MPedestalPix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedestalPix.
      TClass *R__cl = ::MPedestalPix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestal", &fPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalRms", &fPedestalRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalABoffset", &fPedestalABoffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvents", &fNumEvents);
      MParContainer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedestalPix(void *p) {
      return  p ? new(p) ::MPedestalPix : new ::MPedestalPix;
   }
   static void *newArray_MPedestalPix(Long_t nElements, void *p) {
      return p ? new(p) ::MPedestalPix[nElements] : new ::MPedestalPix[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedestalPix(void *p) {
      delete ((::MPedestalPix*)p);
   }
   static void deleteArray_MPedestalPix(void *p) {
      delete [] ((::MPedestalPix*)p);
   }
   static void destruct_MPedestalPix(void *p) {
      typedef ::MPedestalPix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedestalPix

//______________________________________________________________________________
void MPedestalSubtract::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedestalSubtract.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedestalSubtract::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedestalSubtract::Class(),this);
   }
}

//______________________________________________________________________________
void MPedestalSubtract::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedestalSubtract.
      TClass *R__cl = ::MPedestalSubtract::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunHeader", &fRunHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvt", &fRawEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestals", &fPedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedestalCam", &fNamePedestalCam);
      R__insp.InspectMember(fNamePedestalCam, "fNamePedestalCam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNamePedestalSubtractedEvt", &fNamePedestalSubtractedEvt);
      R__insp.InspectMember(fNamePedestalSubtractedEvt, "fNamePedestalSubtractedEvt.");
      MTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedestalSubtract(void *p) {
      return  p ? new(p) ::MPedestalSubtract : new ::MPedestalSubtract;
   }
   static void *newArray_MPedestalSubtract(Long_t nElements, void *p) {
      return p ? new(p) ::MPedestalSubtract[nElements] : new ::MPedestalSubtract[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedestalSubtract(void *p) {
      delete ((::MPedestalSubtract*)p);
   }
   static void deleteArray_MPedestalSubtract(void *p) {
      delete [] ((::MPedestalSubtract*)p);
   }
   static void destruct_MPedestalSubtract(void *p) {
      typedef ::MPedestalSubtract current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedestalSubtract

//______________________________________________________________________________
void MPedestalSubtractedEvt::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPedestalSubtractedEvt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MPedestalSubtractedEvt::Class(),this);
   } else {
      R__b.WriteClassBuffer(MPedestalSubtractedEvt::Class(),this);
   }
}

//______________________________________________________________________________
void MPedestalSubtractedEvt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPedestalSubtractedEvt.
      TClass *R__cl = ::MPedestalSubtractedEvt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSamples", &fSamples);
      R__insp.InspectMember(fSamples, "fSamples.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSamplesRaw", &fSamplesRaw);
      R__insp.InspectMember(fSamplesRaw, "fSamplesRaw.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSamples", &fNumSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumPixels", &fNumPixels);
      MParContainer::ShowMembers(R__insp);
      MCamEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPedestalSubtractedEvt(void *p) {
      return  p ? new(p) ::MPedestalSubtractedEvt : new ::MPedestalSubtractedEvt;
   }
   static void *newArray_MPedestalSubtractedEvt(Long_t nElements, void *p) {
      return p ? new(p) ::MPedestalSubtractedEvt[nElements] : new ::MPedestalSubtractedEvt[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPedestalSubtractedEvt(void *p) {
      delete ((::MPedestalSubtractedEvt*)p);
   }
   static void deleteArray_MPedestalSubtractedEvt(void *p) {
      delete [] ((::MPedestalSubtractedEvt*)p);
   }
   static void destruct_MPedestalSubtractedEvt(void *p) {
      typedef ::MPedestalSubtractedEvt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MPedestalSubtractedEvt

//______________________________________________________________________________
void MHPedestalCor::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHPedestalCor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHPedestalCor::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHPedestalCor::Class(),this);
   }
}

//______________________________________________________________________________
void MHPedestalCor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHPedestalCor.
      TClass *R__cl = ::MHPedestalCor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProf", &fProf);
      R__insp.InspectMember(fProf, "fProf.");
      MH::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHPedestalCor(void *p) {
      return  p ? new(p) ::MHPedestalCor : new ::MHPedestalCor;
   }
   static void *newArray_MHPedestalCor(Long_t nElements, void *p) {
      return p ? new(p) ::MHPedestalCor[nElements] : new ::MHPedestalCor[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHPedestalCor(void *p) {
      delete ((::MHPedestalCor*)p);
   }
   static void deleteArray_MHPedestalCor(void *p) {
      delete [] ((::MHPedestalCor*)p);
   }
   static void destruct_MHPedestalCor(void *p) {
      typedef ::MHPedestalCor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHPedestalCor

/********************************************************
* PedestalCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePedestalCint();

extern "C" void G__set_cpp_environmentPedestalCint() {
  G__cpp_reset_tagtablePedestalCint();
}
#include <new>
extern "C" int G__cpp_dllrevPedestalCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MMcPedestalCopy */
static int G__PedestalCint_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcPedestalCopy* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcPedestalCopy((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MMcPedestalCopy((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcPedestalCopy((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MMcPedestalCopy((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcPedestalCopy[n];
       } else {
         p = new((void*) gvp) MMcPedestalCopy[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcPedestalCopy;
       } else {
         p = new((void*) gvp) MMcPedestalCopy;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MMcPedestalCopy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalCopy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MMcPedestalCopy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMcPedestalCopy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MMcPedestalCopy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalCopy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcPedestalCopy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalCopy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcPedestalCopy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MMcPedestalCopy* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MMcPedestalCopy(*(MMcPedestalCopy*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MMcPedestalCopy G__TMMcPedestalCopy;
static int G__PedestalCint_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MMcPedestalCopy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MMcPedestalCopy*) (soff+(sizeof(MMcPedestalCopy)*i)))->~G__TMMcPedestalCopy();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MMcPedestalCopy*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MMcPedestalCopy*) (soff))->~G__TMMcPedestalCopy();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcPedestalCopy* dest = (MMcPedestalCopy*) G__getstructoffset();
   *dest = *(MMcPedestalCopy*) libp->para[0].ref;
   const MMcPedestalCopy& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MMcPedestalNSBAdd */
static int G__PedestalCint_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcPedestalNSBAdd* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcPedestalNSBAdd(
(const Float_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MMcPedestalNSBAdd(
(const Float_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcPedestalNSBAdd((const Float_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MMcPedestalNSBAdd((const Float_t) G__double(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MMcPedestalNSBAdd((const Float_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) MMcPedestalNSBAdd((const Float_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcPedestalNSBAdd[n];
       } else {
         p = new((void*) gvp) MMcPedestalNSBAdd[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MMcPedestalNSBAdd;
       } else {
         p = new((void*) gvp) MMcPedestalNSBAdd;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MMcPedestalNSBAdd::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalNSBAdd::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MMcPedestalNSBAdd::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MMcPedestalNSBAdd::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MMcPedestalNSBAdd*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalNSBAdd::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcPedestalNSBAdd::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MMcPedestalNSBAdd::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MMcPedestalNSBAdd::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MMcPedestalNSBAdd* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MMcPedestalNSBAdd(*(MMcPedestalNSBAdd*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MMcPedestalNSBAdd G__TMMcPedestalNSBAdd;
static int G__PedestalCint_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MMcPedestalNSBAdd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MMcPedestalNSBAdd*) (soff+(sizeof(MMcPedestalNSBAdd)*i)))->~G__TMMcPedestalNSBAdd();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MMcPedestalNSBAdd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MMcPedestalNSBAdd*) (soff))->~G__TMMcPedestalNSBAdd();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MMcPedestalNSBAdd* dest = (MMcPedestalNSBAdd*) G__getstructoffset();
   *dest = *(MMcPedestalNSBAdd*) libp->para[0].ref;
   const MMcPedestalNSBAdd& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedestalCam */
static int G__PedestalCint_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalCam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedestalCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalCam((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedestalCam((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalCam[n];
       } else {
         p = new((void*) gvp) MPedestalCam[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalCam;
       } else {
         p = new((void*) gvp) MPedestalCam;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((MPedestalCam*) G__getstructoffset())->GetAverageArea((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((const MPedestalCam*) G__getstructoffset())->GetAverageArea((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalCam*) G__getstructoffset())->GetNumAverageArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((MPedestalCam*) G__getstructoffset())->GetAverageSector((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((const MPedestalCam*) G__getstructoffset())->GetAverageSector((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalCam*) G__getstructoffset())->GetNumAverageSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalCam*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MPedestalCam*) G__getstructoffset())->GetNumSlices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MPedestalCam*) G__getstructoffset())->GetNumEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerArea(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1])
, (MBadPixelsCam*) G__int(libp->para[2]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerArea(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerArea(*(MGeomCam*) libp->para[0].ref);
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerSector(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1])
, (MBadPixelsCam*) G__int(libp->para[2]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerSector(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedPedPerSector(*(MGeomCam*) libp->para[0].ref);
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerArea(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1])
, (MBadPixelsCam*) G__int(libp->para[2]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerArea(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerArea(*(MGeomCam*) libp->para[0].ref);
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerSector(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1])
, (MBadPixelsCam*) G__int(libp->para[2]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerSector(*(MGeomCam*) libp->para[0].ref, (const UInt_t) G__int(libp->para[1]));
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TArrayF* pobj;
         TArrayF xobj = ((MPedestalCam*) G__getstructoffset())->GetAveragedRmsPerSector(*(MGeomCam*) libp->para[0].ref);
         pobj = new TArrayF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((MPedestalCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedestalPix& obj = ((const MPedestalCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalCam*) G__getstructoffset())->InitAverageAreas((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalCam*) G__getstructoffset())->InitAverageSectors((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalCam*) G__getstructoffset())->SetNumSlices((const ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalCam*) G__getstructoffset())->SetNumEvents((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedestalCam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalCam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedestalCam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedestalCam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalCam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalCam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalCam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalCam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_184_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalCam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_184_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedestalCam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedestalCam(*(MPedestalCam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedestalCam G__TMPedestalCam;
static int G__PedestalCint_184_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedestalCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedestalCam*) (soff+(sizeof(MPedestalCam)*i)))->~G__TMPedestalCam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedestalCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedestalCam*) (soff))->~G__TMPedestalCam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_184_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalCam* dest = (MPedestalCam*) G__getstructoffset();
   *dest = *(MPedestalCam*) libp->para[0].ref;
   const MPedestalCam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedestalSubtractedEvt */
static int G__PedestalCint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalSubtractedEvt* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalSubtractedEvt((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedestalSubtractedEvt((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalSubtractedEvt((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedestalSubtractedEvt((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalSubtractedEvt[n];
       } else {
         p = new((void*) gvp) MPedestalSubtractedEvt[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalSubtractedEvt;
       } else {
         p = new((void*) gvp) MPedestalSubtractedEvt;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MPedestalSubtractedEvt*) G__getstructoffset())->InitSamples((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MPedestalSubtractedEvt*) G__getstructoffset())->InitSamples((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 70, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSamples((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 70, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSamples());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 82, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSamplesRaw((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 82, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSamplesRaw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetNumSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetNumPixels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSaturation((const Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetMax((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetMax((const Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetMaxPos((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetMaxPos((const Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetMaxPos((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMax((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), *(UInt_t*) G__UIntref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMax((const Int_t) G__int(libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMaxPos((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMaxPos((const Int_t) G__int(libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMaxPos((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetRawMaxVal((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetStat((const Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetSaturation((const Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedestalSubtractedEvt*) G__getstructoffset())->GetIntegralRaw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedestalSubtractedEvt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtractedEvt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedestalSubtractedEvt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedestalSubtractedEvt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalSubtractedEvt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtractedEvt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalSubtractedEvt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtractedEvt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_189_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalSubtractedEvt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_189_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedestalSubtractedEvt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedestalSubtractedEvt(*(MPedestalSubtractedEvt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedestalSubtractedEvt G__TMPedestalSubtractedEvt;
static int G__PedestalCint_189_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedestalSubtractedEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedestalSubtractedEvt*) (soff+(sizeof(MPedestalSubtractedEvt)*i)))->~G__TMPedestalSubtractedEvt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedestalSubtractedEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedestalSubtractedEvt*) (soff))->~G__TMPedestalSubtractedEvt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_189_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalSubtractedEvt* dest = (MPedestalSubtractedEvt*) G__getstructoffset();
   *dest = *(MPedestalSubtractedEvt*) libp->para[0].ref;
   const MPedestalSubtractedEvt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MExtractPedestal */
static int G__PedestalCint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MExtractPedestal*) G__getstructoffset())->SetExtractWindow((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MExtractPedestal*) G__getstructoffset())->SetCheckRange((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MExtractPedestal*) G__getstructoffset())->SetCheckRange((UShort_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MExtractPedestal*) G__getstructoffset())->SetCheckRange());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MExtractPedestal*) G__getstructoffset())->SetRangeFromExtractor(*(MExtractor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetMaxSignalVar((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetMaxSignalVar();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetMaxSignalAbs((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetMaxSignalAbs();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetNamePedestalCamInter((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetNamePedestalCamInter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetNamePedestalCamOut((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetNamePedestalCamOut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetNameRawEvtData((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetNameRawEvtData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MExtractPedestal*) G__getstructoffset())->SetExtractor((MExtractTimeAndCharge*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MExtractPedestal*) G__getstructoffset())->SetPedestalsInter((MPedestalCam*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MExtractPedestal*) G__getstructoffset())->SetPedestalsOut((MPedestalCam*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetIntermediateStorage((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetIntermediateStorage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetUseSpecialPixels((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetUseSpecialPixels();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MExtractPedestal*) G__getstructoffset())->SetRandomCalculation((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MExtractPedestal*) G__getstructoffset())->SetRandomCalculation();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MExtractPedestal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MExtractPedestal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MExtractPedestal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MExtractPedestal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MExtractPedestal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MExtractPedestal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MExtractPedestal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MExtractPedestal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_191_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MExtractPedestal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MExtractPedestal G__TMExtractPedestal;
static int G__PedestalCint_191_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MExtractPedestal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MExtractPedestal*) (soff+(sizeof(MExtractPedestal)*i)))->~G__TMExtractPedestal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MExtractPedestal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MExtractPedestal*) (soff))->~G__TMExtractPedestal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_191_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MExtractPedestal* dest = (MExtractPedestal*) G__getstructoffset();
   *dest = *(MExtractPedestal*) libp->para[0].ref;
   const MExtractPedestal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedestalPix */
static int G__PedestalCint_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalPix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalPix[n];
     } else {
       p = new((void*) gvp) MPedestalPix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalPix;
     } else {
       p = new((void*) gvp) MPedestalPix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->InitUseHists();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->SetPedestal((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->SetPedestalRms((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->SetPedestalABoffset((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->SetNumEvents((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MPedestalPix*) G__getstructoffset())->Set((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1])
, (const Float_t) G__double(libp->para[2]), (const UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MPedestalPix*) G__getstructoffset())->Set((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1])
, (const Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MPedestalPix*) G__getstructoffset())->Set((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedestalPix*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedestalPix*) G__getstructoffset())->GetPedestalRms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedestalPix*) G__getstructoffset())->GetPedestalABoffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedestalPix*) G__getstructoffset())->GetPedestalError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedestalPix*) G__getstructoffset())->GetPedestalRmsError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MPedestalPix*) G__getstructoffset())->GetNumEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MPedestalPix*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedestalPix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalPix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedestalPix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedestalPix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalPix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalPix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalPix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalPix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalPix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedestalPix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedestalPix(*(MPedestalPix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedestalPix G__TMPedestalPix;
static int G__PedestalCint_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedestalPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedestalPix*) (soff+(sizeof(MPedestalPix)*i)))->~G__TMPedestalPix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedestalPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedestalPix*) (soff))->~G__TMPedestalPix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalPix* dest = (MPedestalPix*) G__getstructoffset();
   *dest = *(MPedestalPix*) libp->para[0].ref;
   const MPedestalPix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedCalcPedRun */
static int G__PedestalCint_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedCalcPedRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedCalcPedRun((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedCalcPedRun((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedCalcPedRun((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedCalcPedRun((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedCalcPedRun[n];
       } else {
         p = new((void*) gvp) MPedCalcPedRun[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedCalcPedRun;
       } else {
         p = new((void*) gvp) MPedCalcPedRun;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MPedCalcPedRun*) G__getstructoffset())->Finalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedCalcPedRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcPedRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedCalcPedRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedCalcPedRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedCalcPedRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcPedRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedCalcPedRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcPedRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedCalcPedRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedCalcPedRun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedCalcPedRun(*(MPedCalcPedRun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedCalcPedRun G__TMPedCalcPedRun;
static int G__PedestalCint_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedCalcPedRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedCalcPedRun*) (soff+(sizeof(MPedCalcPedRun)*i)))->~G__TMPedCalcPedRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedCalcPedRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedCalcPedRun*) (soff))->~G__TMPedCalcPedRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedCalcPedRun* dest = (MPedCalcPedRun*) G__getstructoffset();
   *dest = *(MPedCalcPedRun*) libp->para[0].ref;
   const MPedCalcPedRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedCalcFromLoGain */
static int G__PedestalCint_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedCalcFromLoGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedCalcFromLoGain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedCalcFromLoGain((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedCalcFromLoGain((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedCalcFromLoGain((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedCalcFromLoGain[n];
       } else {
         p = new((void*) gvp) MPedCalcFromLoGain[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedCalcFromLoGain;
       } else {
         p = new((void*) gvp) MPedCalcFromLoGain;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumEventsDump((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumEventsDump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumAreasDump((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumAreasDump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumSectorsDump((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumSectorsDump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumDump((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetNumDump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetPedestalUpdate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedCalcFromLoGain*) G__getstructoffset())->SetPedestalUpdate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedCalcFromLoGain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcFromLoGain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedCalcFromLoGain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedCalcFromLoGain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedCalcFromLoGain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcFromLoGain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedCalcFromLoGain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedCalcFromLoGain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_196_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedCalcFromLoGain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_196_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedCalcFromLoGain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedCalcFromLoGain(*(MPedCalcFromLoGain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedCalcFromLoGain G__TMPedCalcFromLoGain;
static int G__PedestalCint_196_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedCalcFromLoGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedCalcFromLoGain*) (soff+(sizeof(MPedCalcFromLoGain)*i)))->~G__TMPedCalcFromLoGain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedCalcFromLoGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedCalcFromLoGain*) (soff))->~G__TMPedCalcFromLoGain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_196_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedCalcFromLoGain* dest = (MPedCalcFromLoGain*) G__getstructoffset();
   *dest = *(MPedCalcFromLoGain*) libp->para[0].ref;
   const MPedCalcFromLoGain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedPhotCam */
static int G__PedestalCint_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotCam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedPhotCam((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotCam((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedPhotCam((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedPhotCam[n];
       } else {
         p = new((void*) gvp) MPedPhotCam[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedPhotCam;
       } else {
         p = new((void*) gvp) MPedPhotCam;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotCam* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MPedPhotCam(*(MPedestalCam*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MPedPhotCam(*(MPedestalCam*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedPhotCam*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((MPedPhotCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((const MPedPhotCam*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((MPedPhotCam*) G__getstructoffset())->GetArea((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((const MPedPhotCam*) G__getstructoffset())->GetArea((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedPhotCam*) G__getstructoffset())->GetNumAreas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((MPedPhotCam*) G__getstructoffset())->GetSector((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const MPedPhotPix& obj = ((const MPedPhotCam*) G__getstructoffset())->GetSector((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MPedPhotCam*) G__getstructoffset())->GetNumSectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MPedPhotCam*) G__getstructoffset())->ReCalc(*(MGeomCam*) libp->para[0].ref, (MBadPixelsCam*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MPedPhotCam*) G__getstructoffset())->ReCalc(*(MGeomCam*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedPhotCam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedPhotCam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedPhotCam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedPhotCam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotCam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_199_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotCam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_199_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedPhotCam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedPhotCam(*(MPedPhotCam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedPhotCam G__TMPedPhotCam;
static int G__PedestalCint_199_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedPhotCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedPhotCam*) (soff+(sizeof(MPedPhotCam)*i)))->~G__TMPedPhotCam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedPhotCam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedPhotCam*) (soff))->~G__TMPedPhotCam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_199_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotCam* dest = (MPedPhotCam*) G__getstructoffset();
   *dest = *(MPedPhotCam*) libp->para[0].ref;
   const MPedPhotCam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedPhotCalc */
static int G__PedestalCint_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotCalc* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedPhotCalc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotCalc((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedPhotCalc((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedPhotCalc[n];
       } else {
         p = new((void*) gvp) MPedPhotCalc[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedPhotCalc;
       } else {
         p = new((void*) gvp) MPedPhotCalc;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedPhotCalc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCalc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedPhotCalc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedPhotCalc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedPhotCalc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCalc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotCalc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotCalc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotCalc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedPhotCalc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedPhotCalc(*(MPedPhotCalc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedPhotCalc G__TMPedPhotCalc;
static int G__PedestalCint_202_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedPhotCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedPhotCalc*) (soff+(sizeof(MPedPhotCalc)*i)))->~G__TMPedPhotCalc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedPhotCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedPhotCalc*) (soff))->~G__TMPedPhotCalc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_202_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotCalc* dest = (MPedPhotCalc*) G__getstructoffset();
   *dest = *(MPedPhotCalc*) libp->para[0].ref;
   const MPedPhotCalc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedPhotPix */
static int G__PedestalCint_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotPix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotPix[n];
     } else {
       p = new((void*) gvp) MPedPhotPix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedPhotPix;
     } else {
       p = new((void*) gvp) MPedPhotPix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedPhotPix*) G__getstructoffset())->GetMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MPedPhotPix*) G__getstructoffset())->GetRms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MPedPhotPix*) G__getstructoffset())->GetNumEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedPhotPix*) G__getstructoffset())->SetRms((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MPedPhotPix*) G__getstructoffset())->Set((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MPedPhotPix*) G__getstructoffset())->Set((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MPedPhotPix*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedPhotPix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotPix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedPhotPix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedPhotPix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedPhotPix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotPix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotPix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedPhotPix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedPhotPix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedPhotPix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedPhotPix(*(MPedPhotPix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedPhotPix G__TMPedPhotPix;
static int G__PedestalCint_204_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedPhotPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedPhotPix*) (soff+(sizeof(MPedPhotPix)*i)))->~G__TMPedPhotPix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedPhotPix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedPhotPix*) (soff))->~G__TMPedPhotPix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_204_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedPhotPix* dest = (MPedPhotPix*) G__getstructoffset();
   *dest = *(MPedPhotPix*) libp->para[0].ref;
   const MPedPhotPix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MHPedestalCor */
static int G__PedestalCint_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHPedestalCor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPedestalCor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MHPedestalCor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHPedestalCor((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MHPedestalCor((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHPedestalCor[n];
       } else {
         p = new((void*) gvp) MHPedestalCor[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MHPedestalCor;
       } else {
         p = new((void*) gvp) MHPedestalCor;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHPedestalCor*) G__getstructoffset())->GetAutoCorrelation(*(TH2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MHPedestalCor*) G__getstructoffset())->GetAutoCorrelation(*(TMatrix*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrix* pobj;
         const TMatrix xobj = ((const MHPedestalCor*) G__getstructoffset())->GetAutoCorrelation();
         pobj = new TMatrix(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHPedestalCor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPedestalCor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHPedestalCor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHPedestalCor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHPedestalCor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPedestalCor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHPedestalCor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHPedestalCor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_289_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHPedestalCor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_289_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MHPedestalCor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MHPedestalCor(*(MHPedestalCor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHPedestalCor G__TMHPedestalCor;
static int G__PedestalCint_289_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHPedestalCor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHPedestalCor*) (soff+(sizeof(MHPedestalCor)*i)))->~G__TMHPedestalCor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHPedestalCor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHPedestalCor*) (soff))->~G__TMHPedestalCor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPedestalSubtract */
static int G__PedestalCint_290_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalSubtract* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalSubtract((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MPedestalSubtract((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPedestalSubtract((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MPedestalSubtract((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalSubtract[n];
       } else {
         p = new((void*) gvp) MPedestalSubtract[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MPedestalSubtract;
       } else {
         p = new((void*) gvp) MPedestalSubtract;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalSubtract*) G__getstructoffset())->SetPedestalCam((MPedestalCam*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedestalSubtract*) G__getstructoffset())->SetNamePedestalCam((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedestalSubtract*) G__getstructoffset())->SetNamePedestalCam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MPedestalSubtract*) G__getstructoffset())->SetNamePedestalSubtractedEvt((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MPedestalSubtract*) G__getstructoffset())->SetNamePedestalSubtractedEvt();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPedestalSubtract::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtract::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPedestalSubtract::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPedestalSubtract::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPedestalSubtract*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtract::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalSubtract::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPedestalSubtract::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PedestalCint_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPedestalSubtract::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PedestalCint_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPedestalSubtract* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPedestalSubtract(*(MPedestalSubtract*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPedestalSubtract G__TMPedestalSubtract;
static int G__PedestalCint_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPedestalSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPedestalSubtract*) (soff+(sizeof(MPedestalSubtract)*i)))->~G__TMPedestalSubtract();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPedestalSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPedestalSubtract*) (soff))->~G__TMPedestalSubtract();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PedestalCint_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPedestalSubtract* dest = (MPedestalSubtract*) G__getstructoffset();
   *dest = *(MPedestalSubtract*) libp->para[0].ref;
   const MPedestalSubtract& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MMcPedestalCopy */

/* MMcPedestalNSBAdd */

/* MPedestalCam */

/* MPedestalSubtractedEvt */

/* MExtractPedestal */

/* MPedestalPix */

/* MPedCalcPedRun */

/* MPedCalcFromLoGain */

/* MPedPhotCam */

/* MPedPhotCalc */

/* MPedPhotPix */

/* MHPedestalCor */

/* MPedestalSubtract */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPedestalCint {
 public:
  G__Sizep2memfuncPedestalCint(): p(&G__Sizep2memfuncPedestalCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPedestalCint::*p)();
};

size_t G__get_sizep2memfuncPedestalCint()
{
  G__Sizep2memfuncPedestalCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePedestalCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy))) {
     MMcPedestalCopy *G__Lderived;
     G__Lderived=(MMcPedestalCopy*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd))) {
     MMcPedestalNSBAdd *G__Lderived;
     G__Lderived=(MMcPedestalNSBAdd*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam))) {
     MPedestalCam *G__Lderived;
     G__Lderived=(MPedestalCam*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MCamEvent *G__Lpbase=(MCamEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),G__get_linked_tagnum(&G__PedestalCintLN_MCamEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt))) {
     MPedestalSubtractedEvt *G__Lderived;
     G__Lderived=(MPedestalSubtractedEvt*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MCamEvent *G__Lpbase=(MCamEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt),G__get_linked_tagnum(&G__PedestalCintLN_MCamEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal))) {
     MExtractPedestal *G__Lderived;
     G__Lderived=(MExtractPedestal*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix))) {
     MPedestalPix *G__Lderived;
     G__Lderived=(MPedestalPix*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun))) {
     MPedCalcPedRun *G__Lderived;
     G__Lderived=(MPedCalcPedRun*)0x1000;
     {
       MExtractPedestal *G__Lpbase=(MExtractPedestal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun),G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain))) {
     MPedCalcFromLoGain *G__Lderived;
     G__Lderived=(MPedCalcFromLoGain*)0x1000;
     {
       MExtractPedestal *G__Lpbase=(MExtractPedestal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain),G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam))) {
     MPedPhotCam *G__Lderived;
     G__Lderived=(MPedPhotCam*)0x1000;
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MCamEvent *G__Lpbase=(MCamEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam),G__get_linked_tagnum(&G__PedestalCintLN_MCamEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc))) {
     MPedPhotCalc *G__Lderived;
     G__Lderived=(MPedPhotCalc*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix))) {
     MPedPhotPix *G__Lderived;
     G__Lderived=(MPedPhotPix*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor))) {
     MHPedestalCor *G__Lderived;
     G__Lderived=(MHPedestalCor*)0x1000;
     {
       MH *G__Lpbase=(MH*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor),G__get_linked_tagnum(&G__PedestalCintLN_MH),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract))) {
     MPedestalSubtract *G__Lderived;
     G__Lderived=(MPedestalSubtract*)0x1000;
     {
       MTask *G__Lpbase=(MTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract),G__get_linked_tagnum(&G__PedestalCintLN_MTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MInputStreamID *G__Lpbase=(MInputStreamID*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract),G__get_linked_tagnum(&G__PedestalCintLN_MInputStreamID),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MParContainer *G__Lpbase=(MParContainer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract),G__get_linked_tagnum(&G__PedestalCintLN_MParContainer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract),G__get_linked_tagnum(&G__PedestalCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePedestalCint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PedestalCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PedestalCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PedestalCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PedestalCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("USample_t",114,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__PedestalCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrix",117,G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MMcPedestalCopy */
static void G__setup_memvarMMcPedestalCopy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy));
   { MMcPedestalCopy *p; p=(MMcPedestalCopy*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MMcPedestalNSBAdd */
static void G__setup_memvarMMcPedestalNSBAdd(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd));
   { MMcPedestalNSBAdd *p; p=(MMcPedestalNSBAdd*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDnsbPixel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedestalCam */
static void G__setup_memvarMPedestalCam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam));
   { MPedestalCam *p; p=(MPedestalCam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fArray=",0,"-> FIXME: Change TClonesArray away from a pointer?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fAverageAreas=",0,"-> Array of MPedestalPix, one per pixel area");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fAverageSectors=",0,"-> Array of MPedestalPix, one per camera sector");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumSlices=",0,"Total number of slices");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEvents=",0,"Number of events used for pedestal calculation (be careful, it has no predefined meaning!)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedestalSubtractedEvt */
static void G__setup_memvarMPedestalSubtractedEvt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt));
   { MPedestalSubtractedEvt *p; p=(MPedestalSubtractedEvt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayF),-1,-1,4,"fSamples=",0,"list of all samples with pedestal subtracted");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayS),-1,-1,4,"fSamplesRaw=",0,"list of all samples (raw)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumSamples=",0,"number of samples per pixel");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumPixels=",0,"number of pixels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MExtractPedestal */
static void G__setup_memvarMExtractPedestal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal));
   { MExtractPedestal *p; p=(MExtractPedestal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-2,4,"fgNamePedestalCam=",0,"! \"MPedestalCam\"");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-2,4,"fgNameRawEvtData=",0,"! \"MRawEvtData\"");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgCheckWinFirst=0ULL",0,"! First FADC slice to check for signal (currently set to: 0)");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgCheckWinLast=0ULL",0,"! Last FADC slice to check for signal  (currently set to: 29)");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgMaxSignalVar=0ULL",0,"! The maximum difference between the highest and lowest slice");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgMaxSignalAbs=0ULL",0,"! The maximum absolte slice");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-1,4,"fNamePedestalCamOut=",0,"Name of the outgoing 'MPedestalCam' container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-1,4,"fNamePedestalCamInter=",0,"Name of the intermediate 'MPedestalCam' container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-1,4,"fNameRawEvtData=",0,"Name of MRawEvtData");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRandomCalculation=",0,"Is pedestalextraction by extractor random?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIntermediateStorage=",0,"Is pedestal stored every event?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MGeomCam),-1,-1,2,"fGeom=",0,"! Camera geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),-1,-1,2,"fPedestalsInter=",0,"! Pedestals of all pixels in the camera (intermediate)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),-1,-1,2,"fPedestalsOut=",0,"! Pedestals of all pixels in the camera (outgoing)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MRawEvtData),-1,-1,2,"fRawEvt=",0,"! Raw event data (time slices)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MRawRunHeader),-1,-1,2,"fRunHeader=",0,"! RunHeader information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MExtractTimeAndCharge),-1,-1,2,"fExtractor=",0,"Possible Extractor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt),-1,-1,2,"fSignal=",0,"!");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fExtractWinFirst=",0,"First FADC slice to extract pedestal from");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fExtractWinSize=",0,"Number of slices to calculate the pedestal from");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fExtractWinLast=",0,"Last FADC slice to extract pedestal from ");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fCheckWinFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fCheckWinLast=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fMaxSignalVar=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fMaxSignalAbs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseSpecialPixels=",0,"Flag if the special pixels shall be treated");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSumx=",0,"sum of values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSumx2=",0,"sum of squared values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSumAB0=",0,"sum of ABFlag=0 slices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSumAB1=",0,"sum of ABFlag=1 slices");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fAreaSumx=",0,"averaged sum of values per area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fAreaSumx2=",0,"averaged sum of squared values per area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fAreaSumAB0=",0,"averaged sum of ABFlag=0 slices per area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fAreaSumAB1=",0,"averaged sum of ABFlag=1 slices per area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayI),-1,-1,2,"fAreaFilled=",0,"number of valid entries with area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayI),-1,-1,2,"fAreaValid=",0,"number of valid pixels  within area idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSectorSumx=",0,"averaged sum of values per sector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSectorSumx2=",0,"averaged sum of squared values per sector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSectorSumAB0=",0,"averaged sum of ABFlag=0 slices per sector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayD),-1,-1,2,"fSectorSumAB1=",0,"averaged sum of ABFlag=1 slices per sector ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayI),-1,-1,2,"fSectorFilled=",0,"number of valid entries with sector idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayI),-1,-1,2,"fSectorValid=",0,"number of valid pixels within sector idx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MArrayI),-1,-1,2,"fNumEventsUsed=",0,"Number of events used for pedestal calc for each pixel");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCounter=",0,"Counter for events processed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedestalPix */
static void G__setup_memvarMPedestalPix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix));
   { MPedestalPix *p; p=(MPedestalPix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestal=",0,"mean value of pedestal (PMT offset)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestalRms=",0,"root mean square / sigma  / standard deviation of pedestal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPedestalABoffset=",0,"the difference between odd slice pedestal mean and total mean");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEvents=",0,"number of times, the Process was executed (to estimate the error of pedestal)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedCalcPedRun */
static void G__setup_memvarMPedCalcPedRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun));
   { MPedCalcPedRun *p; p=(MPedCalcPedRun*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgExtractWinFirst=0ULL",0,"First FADC slice Hi-Gain (currently set to: 3)");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgExtractWinSize=0ULL",0,"Extraction Size Hi-Gain (currently set to: 14)");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"gkFirstRunWithFinalBits=0ULL",0,"First Run with pedestal trigger bit at place 3");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFirstPedRun=",0,"! Flag to tell if the first run out of many is used");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsNotPedRun=",0,"! Flag to tell if the current run is a pedestal run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MTriggerPattern),-1,-1,4,"fTrigPattern=",0,"! Trigger pattern decoded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedCalcFromLoGain */
static void G__setup_memvarMPedCalcFromLoGain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain));
   { MPedCalcFromLoGain *p; p=(MPedCalcFromLoGain*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgExtractWinFirst=0ULL",0,"First FADC slice to use for pedestal calculation (currently set to: 15)");
   G__memvar_setup((void*)G__PVOID,114,0,1,-1,G__defined_typename("UShort_t"),-2,4,"fgExtractWinSize=0ULL",0,"number of successive slices used to calculate pedestal (currently set to: 6)");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"fgNumDump=0ULL",0,"!");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEventsDump=",0,"Number of event after which MPedestalCam gets updated");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumAreasDump=",0,"Number of events after which averaged areas gets updated");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumSectorsDump=",0,"Number of events after which averaged sectors gets updated");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPedestalUpdate=",0,"Flag if the pedestal shall be updated after every fNumEventsDump");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedPhotCam */
static void G__setup_memvarMPedPhotCam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam));
   { MPedPhotCam *p; p=(MPedPhotCam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fArray=",0,"FIXME: Change TClonesArray away from a pointer?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fAreas=",0,"-> Array of MPedPhotPix, one per pixel area");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClonesArray),-1,-1,4,"fSectors=",0,"-> Array of MPedPhotPix, one per camera sector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedPhotCalc */
static void G__setup_memvarMPedPhotCalc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc));
   { MPedPhotCalc *p; p=(MPedPhotCalc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam),-1,-1,4,"fPedestals=",0,"Pedestals of all pixels in the camera");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MSignalCam),-1,-1,4,"fCerPhot=",0,"Calibrated Cherenkov events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MBadPixelsCam),-1,-1,4,"fBadPixels=",0,"Bad Pixels");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TArrayF),-1,-1,4,"fSumx=",0,"sum of values");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TArrayF),-1,-1,4,"fSumx2=",0,"sum of squared values");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedPhotPix */
static void G__setup_memvarMPedPhotPix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix));
   { MPedPhotPix *p; p=(MPedPhotPix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMean=",0,"[phot] mean value of pedestal (should be 0)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRms=",0,"[phot] rms of mean");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumEvents=",0,"[n] number of events used to calculate mean (0=n/a)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MHPedestalCor */
static void G__setup_memvarMHPedestalCor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor));
   { MHPedestalCor *p; p=(MHPedestalCor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-2,4,"gsDefName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-2,4,"gsDefTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TProfile),-1,-1,4,"fProf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPedestalSubtract */
static void G__setup_memvarMPedestalSubtract(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract));
   { MPedestalSubtract *p; p=(MPedestalSubtract*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNamePedestalCam=",0,"! \"MPedestalCam\"");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fgNamePedestalSubtractedEvt=",0,"! \"MPedestalSubtractedEvt\"");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MRawRunHeader),-1,-1,4,"fRunHeader=",0,"! Run Header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MRawEvtData),-1,-1,4,"fRawEvt=",0,"! Input Raw data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam),-1,-1,4,"fPedestals=",0,"! Pedestals of all pixels in the camera");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt),-1,-1,4,"fSignal=",0,"! Output container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-1,4,"fNamePedestalCam=",0,"Name of the 'MPedestalCam' container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TString),-1,-1,4,"fNamePedestalSubtractedEvt=",0,"Name of the 'MPedestalSubtractedEvt' container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PedestalCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPedestalCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMMcPedestalCopy(void) {
   /* MMcPedestalCopy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy));
   G__memfunc_setup("CheckRunType",1205,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MMcPedestalCopy",1482,G__PedestalCint_177_0_4, 105, G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_177_0_5, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MMcPedestalCopy::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_177_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalCopy::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_177_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MMcPedestalCopy::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_177_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MMcPedestalCopy::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_177_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_177_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalCopy::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_177_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcPedestalCopy::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_177_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalCopy::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_177_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcPedestalCopy::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MMcPedestalCopy", 1482, G__PedestalCint_177_0_17, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy), -1, 0, 1, 1, 1, 0, "u 'MMcPedestalCopy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MMcPedestalCopy", 1608, G__PedestalCint_177_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_177_0_19, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalCopy), -1, 1, 1, 1, 1, 0, "u 'MMcPedestalCopy' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMMcPedestalNSBAdd(void) {
   /* MMcPedestalNSBAdd */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd));
   G__memfunc_setup("CheckCamVersion",1493,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckRunType",1205,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDnsb",679,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 8, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MMcPedestalNSBAdd",1563,G__PedestalCint_178_0_5, 105, G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd), -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 10 '-1.0' difnsb C - - 10 '0' name "
"C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_178_0_6, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MMcPedestalNSBAdd::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_178_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalNSBAdd::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_178_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MMcPedestalNSBAdd::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_178_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MMcPedestalNSBAdd::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_178_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_178_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalNSBAdd::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_178_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcPedestalNSBAdd::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_178_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MMcPedestalNSBAdd::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_178_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MMcPedestalNSBAdd::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MMcPedestalNSBAdd", 1563, G__PedestalCint_178_0_18, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd), -1, 0, 1, 1, 1, 0, "u 'MMcPedestalNSBAdd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MMcPedestalNSBAdd", 1689, G__PedestalCint_178_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_178_0_20, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MMcPedestalNSBAdd), -1, 1, 1, 1, 1, 0, "u 'MMcPedestalNSBAdd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedestalCam(void) {
   /* MPedestalCam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam));
   G__memfunc_setup("PrintArr",818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "u 'TCollection' - 11 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPedestalCam",1168,G__PedestalCint_184_0_2, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - object", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetAverageArea",1364,G__PedestalCint_184_0_6, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageArea",1364,G__PedestalCint_184_0_7, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumAverageArea",1668,G__PedestalCint_184_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageSector",1611,G__PedestalCint_184_0_9, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageSector",1611,G__PedestalCint_184_0_10, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumAverageSector",1915,G__PedestalCint_184_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__PedestalCint_184_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSlices",1203,G__PedestalCint_184_0_13, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEvents",1221,G__PedestalCint_184_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAveragedPedPerArea",2040,G__PedestalCint_184_0_15, 117, G__get_linked_tagnum(&G__PedestalCintLN_TArrayF), -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom h - 'UInt_t' 10 '0' ai "
"U 'MBadPixelsCam' - 0 '0' bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAveragedPedPerSector",2287,G__PedestalCint_184_0_16, 117, G__get_linked_tagnum(&G__PedestalCintLN_TArrayF), -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom h - 'UInt_t' 10 '0' sec "
"U 'MBadPixelsCam' - 0 '0' bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAveragedRmsPerArea",2065,G__PedestalCint_184_0_17, 117, G__get_linked_tagnum(&G__PedestalCintLN_TArrayF), -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom h - 'UInt_t' 10 '0' ai "
"U 'MBadPixelsCam' - 0 '0' bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAveragedRmsPerSector",2312,G__PedestalCint_184_0_18, 117, G__get_linked_tagnum(&G__PedestalCintLN_TArrayF), -1, 0, 3, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom h - 'UInt_t' 10 '0' sec "
"U 'MBadPixelsCam' - 0 '0' bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PedestalCint_184_0_19, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PedestalCint_184_0_20, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'MGeomCam' - 11 - geom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSize",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitAverageAreas",1595,G__PedestalCint_184_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitAverageSectors",1842,G__PedestalCint_184_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumSlices",1215,G__PedestalCint_184_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumEvents",1233,G__PedestalCint_184_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixelContent",1533,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPixelContent",1643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PedestalCint_184_0_29, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedestalCam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_184_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalCam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_184_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedestalCam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_184_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedestalCam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_184_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_184_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalCam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_184_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalCam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_184_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalCam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_184_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalCam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedestalCam", 1168, G__PedestalCint_184_0_41, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam), -1, 0, 1, 1, 1, 0, "u 'MPedestalCam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedestalCam", 1294, G__PedestalCint_184_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_184_0_43, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalCam), -1, 1, 1, 1, 1, 0, "u 'MPedestalCam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedestalSubtractedEvt(void) {
   /* MPedestalSubtractedEvt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt));
   G__memfunc_setup("MPedestalSubtractedEvt",2239,G__PedestalCint_189_0_1, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSize",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSamples",1129,G__PedestalCint_189_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - samples h - 'UInt_t' 0 '0' pixels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSamples",1013,G__PedestalCint_189_0_4, 70, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 '0' pixel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSamplesRaw",1311,G__PedestalCint_189_0_5, 82, -1, G__defined_typename("USample_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 '0' pixel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSamples",1317,G__PedestalCint_189_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPixels",1221,G__PedestalCint_189_0_7, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSaturation",1354,G__PedestalCint_189_0_8, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - idx i - 'Int_t' 0 - limit "
"i - 'Int_t' 1 - first i - 'Int_t' 1 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMax",582,G__PedestalCint_189_0_9, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx i - 'Int_t' 10 - first "
"i - 'Int_t' 10 - last f - 'Float_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMax",582,G__PedestalCint_189_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx f - 'Float_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPos",888,G__PedestalCint_189_0_11, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx i - 'Int_t' 10 - first "
"i - 'Int_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPos",888,G__PedestalCint_189_0_12, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx f - 'Float_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPos",888,G__PedestalCint_189_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - pixidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMax",880,G__PedestalCint_189_0_14, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - idx i - 'Int_t' 10 - first "
"i - 'Int_t' 10 - last h - 'UInt_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMax",880,G__PedestalCint_189_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx h - 'UInt_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMaxPos",1186,G__PedestalCint_189_0_16, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx i - 'Int_t' 10 - first "
"i - 'Int_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMaxPos",1186,G__PedestalCint_189_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx h - 'UInt_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMaxPos",1186,G__PedestalCint_189_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - pixidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawMaxVal",1171,G__PedestalCint_189_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - idx i - 'Int_t' 10 - first "
"i - 'Int_t' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStat",700,G__PedestalCint_189_0_20, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - idx f - 'Float_t' 1 - mean "
"f - 'Float_t' 1 - rms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSaturation",1354,G__PedestalCint_189_0_21, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - pixidx i - 'Int_t' 0 - limit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntegralRaw",1408,G__PedestalCint_189_0_22, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - idx i - 'Int_t' 0 - first "
"i - 'Int_t' 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPixelContent",1533,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPixelContent",1643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PedestalCint_189_0_26, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedestalSubtractedEvt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_189_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtractedEvt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_189_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedestalSubtractedEvt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_189_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedestalSubtractedEvt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_189_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_189_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtractedEvt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_189_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalSubtractedEvt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_189_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtractedEvt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_189_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalSubtractedEvt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedestalSubtractedEvt", 2239, G__PedestalCint_189_0_38, (int) ('i'), 
G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt), -1, 0, 1, 1, 1, 0, "u 'MPedestalSubtractedEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedestalSubtractedEvt", 2365, G__PedestalCint_189_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_189_0_40, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtractedEvt), -1, 1, 1, 1, 1, 0, "u 'MPedestalSubtractedEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMExtractPedestal(void) {
   /* MExtractPedestal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal));
   G__memfunc_setup("CalcAreaResults",1502,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 10 - aidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSectorResults",1749,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 10 - sector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetArrays",1141,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calc",371,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CalcPixResults",1430,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - 'UInt_t' 10 - pixid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPixResult",1315,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSectorResult",1634,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAreaResult",1387,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPixel",885,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"u 'MRawEvtPixelIter' - 11 - pixel i - 'Int_t' 0 - offset "
"h - 'UInt_t' 0 'kFALSE' usespecialpixels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcExtractor",1327,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 2, 8, 
"u 'MRawEvtPixelIter' - 11 - pixel i - 'Int_t' 0 - offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSums",795,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 4, 1, 2, 8, 
"u 'MRawEvtPixelIter' - 11 - pixel i - 'Int_t' 0 - offset "
"h - 'UInt_t' 1 - ab0 h - 'UInt_t' 1 - ab1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckVariation",1419,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckExtractionWindow",2167,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - 'UInt_t' 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRangeFromExtractor",2153,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"u 'MExtractor' - 11 - ext g - 'Bool_t' 0 - logain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetExtractWindow",1663,G__PedestalCint_191_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - first r - 'UShort_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCheckRange",1271,G__PedestalCint_191_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 'fgCheckWinFirst' checkfirst r - 'UShort_t' 0 'fgCheckWinLast' checklast", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRangeFromExtractor",2153,G__PedestalCint_191_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'MExtractor' - 11 - ext", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetMaxSignalVar",1497,G__PedestalCint_191_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 '40' maxvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxSignalAbs",1478,G__PedestalCint_191_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 '250' maxabs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedestalCamInter",2290,G__PedestalCint_191_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 'fgNamePedestalCam' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedestalCamOut",2088,G__PedestalCint_191_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 'fgNamePedestalCam' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNameRawEvtData",1664,G__PedestalCint_191_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 'fgNameRawEvtData' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtractor",1256,G__PedestalCint_191_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MExtractTimeAndCharge' - 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalsInter",1747,G__PedestalCint_191_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MPedestalCam' - 0 - pedcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalsOut",1545,G__PedestalCint_191_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MPedestalCam' - 0 - pedcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntermediateStorage",2268,G__PedestalCint_191_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseSpecialPixels",1935,G__PedestalCint_191_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomCalculation",2044,G__PedestalCint_191_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_191_0_37, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MExtractPedestal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_191_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MExtractPedestal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_191_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MExtractPedestal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_191_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MExtractPedestal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_191_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_191_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MExtractPedestal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_191_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MExtractPedestal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_191_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MExtractPedestal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_191_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MExtractPedestal::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MExtractPedestal", 1752, G__PedestalCint_191_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_191_0_50, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MExtractPedestal), -1, 1, 1, 1, 1, 0, "u 'MExtractPedestal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedestalPix(void) {
   /* MPedestalPix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix));
   G__memfunc_setup("MPedestalPix",1200,G__PedestalCint_193_0_1, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - object", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitUseHists",1228,G__PedestalCint_193_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__PedestalCint_193_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalRms",1424,G__PedestalCint_193_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalABoffset",1896,G__PedestalCint_193_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumEvents",1233,G__PedestalCint_193_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__PedestalCint_193_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 10 - m f - 'Float_t' 10 - r "
"f - 'Float_t' 10 '0' offs h - 'UInt_t' 10 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__PedestalCint_193_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestalRms",1412,G__PedestalCint_193_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestalABoffset",1884,G__PedestalCint_193_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestalError",1628,G__PedestalCint_193_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestalRmsError",1934,G__PedestalCint_193_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEvents",1221,G__PedestalCint_193_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__PedestalCint_193_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_193_0_18, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedestalPix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_193_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalPix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_193_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedestalPix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_193_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedestalPix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_193_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_193_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalPix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_193_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalPix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_193_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalPix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_193_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalPix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedestalPix", 1200, G__PedestalCint_193_0_30, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 0, 1, 1, 1, 0, "u 'MPedestalPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedestalPix", 1326, G__PedestalCint_193_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_193_0_32, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalPix), -1, 1, 1, 1, 1, 0, "u 'MPedestalPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedCalcPedRun(void) {
   /* MPedCalcPedRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun));
   G__memfunc_setup("IsPedBitSet",1056,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calc",371,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MPedCalcPedRun",1319,G__PedestalCint_194_0_6, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRangeFromExtractor",2153,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'MExtractor' - 11 - ext", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__PedestalCint_194_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_194_0_11, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedCalcPedRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_194_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcPedRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_194_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedCalcPedRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_194_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedCalcPedRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_194_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_194_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcPedRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_194_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedCalcPedRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_194_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcPedRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_194_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedCalcPedRun::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedCalcPedRun", 1319, G__PedestalCint_194_0_23, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun), -1, 0, 1, 1, 1, 0, "u 'MPedCalcPedRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedCalcPedRun", 1445, G__PedestalCint_194_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_194_0_25, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcPedRun), -1, 1, 1, 1, 1, 0, "u 'MPedCalcPedRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedCalcFromLoGain(void) {
   /* MPedCalcFromLoGain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain));
   G__memfunc_setup("ReadEnv",677,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"u 'TEnv' - 11 - env u 'TString' - 0 - prefix "
"g - 'Bool_t' 0 - print", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calc",371,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MPedCalcFromLoGain",1703,G__PedestalCint_196_0_5, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumEventsDump",1639,G__PedestalCint_196_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'fgNumDump' dumpevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumAreasDump",1502,G__PedestalCint_196_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'fgNumDump' dumpevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumSectorsDump",1749,G__PedestalCint_196_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'fgNumDump' dumpevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumDump",1010,G__PedestalCint_196_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 'fgNumDump' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalUpdate",1729,G__PedestalCint_196_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRangeFromExtractor",2153,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'MExtractor' - 11 - ext", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PedestalCint_196_0_13, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedCalcFromLoGain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_196_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcFromLoGain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_196_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedCalcFromLoGain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_196_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedCalcFromLoGain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_196_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_196_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcFromLoGain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_196_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedCalcFromLoGain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_196_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedCalcFromLoGain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_196_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedCalcFromLoGain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedCalcFromLoGain", 1703, G__PedestalCint_196_0_25, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain), -1, 0, 1, 1, 1, 0, "u 'MPedCalcFromLoGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedCalcFromLoGain", 1829, G__PedestalCint_196_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_196_0_27, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedCalcFromLoGain), -1, 1, 1, 1, 1, 0, "u 'MPedCalcFromLoGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedPhotCam(void) {
   /* MPedPhotCam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam));
   G__memfunc_setup("InitArrays",1030,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitAreas",896,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSectors",1143,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPedPhotCam",1042,G__PedestalCint_199_0_4, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPedPhotCam",1042,G__PedestalCint_199_0_5, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam), -1, 0, 1, 1, 1, 0, "u 'MPedestalCam' - 11 - pcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'MGeomCam' - 11 - geom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSize",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", "HB", (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,G__PedestalCint_199_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PedestalCint_199_0_10, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PedestalCint_199_0_11, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArea",665,G__PedestalCint_199_0_12, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArea",665,G__PedestalCint_199_0_13, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumAreas",1084,G__PedestalCint_199_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSector",912,G__PedestalCint_199_0_15, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSector",912,G__PedestalCint_199_0_16, 117, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSectors",1331,G__PedestalCint_199_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReCalc",554,G__PedestalCint_199_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'MGeomCam' - 11 - geom U 'MBadPixelsCam' - 0 '0' bad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixelContent",1533,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPixelContent",1643,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PedestalCint_199_0_22, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedPhotCam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_199_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_199_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedPhotCam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_199_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedPhotCam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_199_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_199_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_199_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotCam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_199_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_199_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotCam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedPhotCam", 1042, G__PedestalCint_199_0_34, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam), -1, 0, 1, 1, 1, 0, "u 'MPedPhotCam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedPhotCam", 1168, G__PedestalCint_199_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_199_0_36, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCam), -1, 1, 1, 1, 1, 0, "u 'MPedPhotCam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedPhotCalc(void) {
   /* MPedPhotCalc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc));
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostProcess",1157,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MPedPhotCalc",1140,G__PedestalCint_202_0_5, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_202_0_6, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedPhotCalc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_202_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCalc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_202_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedPhotCalc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_202_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedPhotCalc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_202_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_202_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCalc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_202_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotCalc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_202_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotCalc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_202_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotCalc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedPhotCalc", 1140, G__PedestalCint_202_0_18, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc), -1, 0, 1, 1, 1, 0, "u 'MPedPhotCalc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedPhotCalc", 1266, G__PedestalCint_202_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_202_0_20, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotCalc), -1, 1, 1, 1, 1, 0, "u 'MPedPhotCalc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedPhotPix(void) {
   /* MPedPhotPix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix));
   G__memfunc_setup("MPedPhotPix",1074,G__PedestalCint_204_0_1, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMean",673,G__PedestalCint_204_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRms",594,G__PedestalCint_204_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEvents",1221,G__PedestalCint_204_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRms",606,G__PedestalCint_204_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__PedestalCint_204_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - m f - 'Float_t' 0 - r "
"h - 'UInt_t' 0 '1' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__PedestalCint_204_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_204_0_9, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedPhotPix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_204_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotPix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_204_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedPhotPix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_204_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedPhotPix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_204_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_204_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotPix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_204_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotPix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_204_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedPhotPix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_204_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedPhotPix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedPhotPix", 1074, G__PedestalCint_204_0_21, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 0, 1, 1, 1, 0, "u 'MPedPhotPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedPhotPix", 1200, G__PedestalCint_204_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_204_0_23, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedPhotPix), -1, 1, 1, 1, 1, 0, "u 'MPedPhotPix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMHPedestalCor(void) {
   /* MHPedestalCor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor));
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'MParContainer' - 10 - par d - 'Stat_t' 10 '1' w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MHPedestalCor",1259,G__PedestalCint_289_0_2, 105, G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAutoCorrelation",1851,G__PedestalCint_289_0_3, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TH2' - 1 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAutoCorrelation",1851,G__PedestalCint_289_0_4, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixT<float>' 'TMatrix' 1 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAutoCorrelation",1851,G__PedestalCint_289_0_5, 117, G__get_linked_tagnum(&G__PedestalCintLN_TMatrixTlEfloatgR), G__defined_typename("TMatrix"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PedestalCint_289_0_7, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHPedestalCor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_289_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPedestalCor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_289_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHPedestalCor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_289_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHPedestalCor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_289_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_289_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPedestalCor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_289_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHPedestalCor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_289_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHPedestalCor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_289_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHPedestalCor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MHPedestalCor", 1259, G__PedestalCint_289_0_19, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MHPedestalCor), -1, 0, 1, 1, 1, 0, "u 'MHPedestalCor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MHPedestalCor", 1385, G__PedestalCint_289_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPedestalSubtract(void) {
   /* MPedestalSubtract */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract));
   G__memfunc_setup("PreProcess",1030,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReInit",587,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'MParList' - 0 - pList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Memcpy",619,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"Y - - 0 - sample Y - - 0 - ptr "
"i - 'Int_t' 0 - cnt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPedestalSubtract",1735,G__PedestalCint_290_0_5, 105, G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestalCam",1391,G__PedestalCint_290_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MPedestalCam' - 0 - pedcam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedestalCam",1776,G__PedestalCint_290_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 'fgNamePedestalCam' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNamePedestalSubtractedEvt",2847,G__PedestalCint_290_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 'fgNamePedestalSubtractedEvt' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PedestalCint_290_0_9, 85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPedestalSubtract::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PedestalCint_290_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtract::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PedestalCint_290_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPedestalSubtract::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PedestalCint_290_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPedestalSubtract::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PedestalCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PedestalCint_290_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PedestalCint_290_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtract::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PedestalCint_290_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalSubtract::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PedestalCint_290_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPedestalSubtract::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PedestalCint_290_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPedestalSubtract::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MPedestalSubtract", 1735, G__PedestalCint_290_0_21, (int) ('i'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract), -1, 0, 1, 1, 1, 0, "u 'MPedestalSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPedestalSubtract", 1861, G__PedestalCint_290_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PedestalCint_290_0_23, (int) ('u'), G__get_linked_tagnum(&G__PedestalCintLN_MPedestalSubtract), -1, 1, 1, 1, 1, 0, "u 'MPedestalSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPedestalCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPedestalCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPedestalCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PedestalCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__PedestalCintLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MParContainer = { "MParContainer" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MInputStreamID = { "MInputStreamID" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MParList = { "MParList" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MTask = { "MTask" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MMcPedestalCopy = { "MMcPedestalCopy" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MMcPedestalNSBAdd = { "MMcPedestalNSBAdd" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MArrayD = { "MArrayD" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MArrayI = { "MArrayI" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MExtractor = { "MExtractor" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedestalCam = { "MPedestalCam" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MRawEvtData = { "MRawEvtData" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MRawRunHeader = { "MRawRunHeader" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MExtractTimeAndCharge = { "MExtractTimeAndCharge" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedestalSubtractedEvt = { "MPedestalSubtractedEvt" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MRawEvtPixelIter = { "MRawEvtPixelIter" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MExtractPedestal = { "MExtractPedestal" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MTriggerPattern = { "MTriggerPattern" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedestalPix = { "MPedestalPix" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedCalcPedRun = { "MPedCalcPedRun" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedCalcFromLoGain = { "MPedCalcFromLoGain" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedPhotCam = { "MPedPhotCam" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MSignalCam = { "MSignalCam" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MBadPixelsCam = { "MBadPixelsCam" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedPhotCalc = { "MPedPhotCalc" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MCamEvent = { "MCamEvent" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedPhotPix = { "MPedPhotPix" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MArrayF = { "MArrayF" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MH = { "MH" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MHPedestalCor = { "MHPedestalCor" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MPedestalSubtract = { "MPedestalSubtract" , 99 , -1 };
G__linked_taginfo G__PedestalCintLN_MArrayS = { "MArrayS" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePedestalCint() {
  G__PedestalCintLN_TClass.tagnum = -1 ;
  G__PedestalCintLN_TBuffer.tagnum = -1 ;
  G__PedestalCintLN_TMemberInspector.tagnum = -1 ;
  G__PedestalCintLN_TObject.tagnum = -1 ;
  G__PedestalCintLN_TCollection.tagnum = -1 ;
  G__PedestalCintLN_TString.tagnum = -1 ;
  G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__PedestalCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PedestalCintLN_TClonesArray.tagnum = -1 ;
  G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__PedestalCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__PedestalCintLN_TEnv.tagnum = -1 ;
  G__PedestalCintLN_MParContainer.tagnum = -1 ;
  G__PedestalCintLN_MInputStreamID.tagnum = -1 ;
  G__PedestalCintLN_MParList.tagnum = -1 ;
  G__PedestalCintLN_MTask.tagnum = -1 ;
  G__PedestalCintLN_MMcPedestalCopy.tagnum = -1 ;
  G__PedestalCintLN_MMcPedestalNSBAdd.tagnum = -1 ;
  G__PedestalCintLN_MArrayD.tagnum = -1 ;
  G__PedestalCintLN_MArrayI.tagnum = -1 ;
  G__PedestalCintLN_MGeomCam.tagnum = -1 ;
  G__PedestalCintLN_MExtractor.tagnum = -1 ;
  G__PedestalCintLN_MPedestalCam.tagnum = -1 ;
  G__PedestalCintLN_MRawEvtData.tagnum = -1 ;
  G__PedestalCintLN_MRawRunHeader.tagnum = -1 ;
  G__PedestalCintLN_MExtractTimeAndCharge.tagnum = -1 ;
  G__PedestalCintLN_MPedestalSubtractedEvt.tagnum = -1 ;
  G__PedestalCintLN_MRawEvtPixelIter.tagnum = -1 ;
  G__PedestalCintLN_MExtractPedestal.tagnum = -1 ;
  G__PedestalCintLN_MTriggerPattern.tagnum = -1 ;
  G__PedestalCintLN_MPedestalPix.tagnum = -1 ;
  G__PedestalCintLN_MPedCalcPedRun.tagnum = -1 ;
  G__PedestalCintLN_MPedCalcFromLoGain.tagnum = -1 ;
  G__PedestalCintLN_TArrayF.tagnum = -1 ;
  G__PedestalCintLN_MPedPhotCam.tagnum = -1 ;
  G__PedestalCintLN_MSignalCam.tagnum = -1 ;
  G__PedestalCintLN_MBadPixelsCam.tagnum = -1 ;
  G__PedestalCintLN_MPedPhotCalc.tagnum = -1 ;
  G__PedestalCintLN_MCamEvent.tagnum = -1 ;
  G__PedestalCintLN_MPedPhotPix.tagnum = -1 ;
  G__PedestalCintLN_TH2.tagnum = -1 ;
  G__PedestalCintLN_MArrayF.tagnum = -1 ;
  G__PedestalCintLN_TProfile.tagnum = -1 ;
  G__PedestalCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PedestalCintLN_MH.tagnum = -1 ;
  G__PedestalCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__PedestalCintLN_MHPedestalCor.tagnum = -1 ;
  G__PedestalCintLN_MPedestalSubtract.tagnum = -1 ;
  G__PedestalCintLN_MArrayS.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePedestalCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TCollection);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TString);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TEnv);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MParContainer);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MInputStreamID);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MParList);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MMcPedestalCopy),sizeof(MMcPedestalCopy),-1,323840,"Task which copies the pedestals from the MC into the standard container",G__setup_memvarMMcPedestalCopy,G__setup_memfuncMMcPedestalCopy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MMcPedestalNSBAdd),sizeof(MMcPedestalNSBAdd),-1,323840,"Task which adds the NSB fluctuations to the pedestals rms",G__setup_memvarMMcPedestalNSBAdd,G__setup_memfuncMMcPedestalNSBAdd);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MArrayD);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MArrayI);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MGeomCam);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MExtractor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedestalCam),sizeof(MPedestalCam),-1,324864,"Storage Container for all pedestal information of the camera",G__setup_memvarMPedestalCam,G__setup_memfuncMPedestalCam);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MRawEvtData);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MRawRunHeader);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MExtractTimeAndCharge);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedestalSubtractedEvt),sizeof(MPedestalSubtractedEvt),-1,323840,"Container to store the raw Event Data",G__setup_memvarMPedestalSubtractedEvt,G__setup_memfuncMPedestalSubtractedEvt);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MRawEvtPixelIter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MExtractPedestal),sizeof(MExtractPedestal),-1,323842,"Base class for pedestal extractors",G__setup_memvarMExtractPedestal,G__setup_memfuncMExtractPedestal);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MTriggerPattern);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedestalPix),sizeof(MPedestalPix),-1,323840,"Storage Container for Pedestal information of one pixel",G__setup_memvarMPedestalPix,G__setup_memfuncMPedestalPix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedCalcPedRun),sizeof(MPedCalcPedRun),-1,323840,"Task to calculate pedestals from pedestal runs",G__setup_memvarMPedCalcPedRun,G__setup_memfuncMPedCalcPedRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedCalcFromLoGain),sizeof(MPedCalcFromLoGain),-1,323840,"Task to calculate pedestals from data runs",G__setup_memvarMPedCalcFromLoGain,G__setup_memfuncMPedCalcFromLoGain);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TArrayF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedPhotCam),sizeof(MPedPhotCam),-1,324864,"Storage Container for all pedestal information of the camera (in units of photons)",G__setup_memvarMPedPhotCam,G__setup_memfuncMPedPhotCam);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MSignalCam);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MBadPixelsCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedPhotCalc),sizeof(MPedPhotCalc),-1,323840,"Task to calculate pedestals in units of photons",G__setup_memvarMPedPhotCalc,G__setup_memfuncMPedPhotCalc);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MCamEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedPhotPix),sizeof(MPedPhotPix),-1,291072,"Storage Container for Pedestal information of one pixel in units of photons",G__setup_memvarMPedPhotPix,G__setup_memfuncMPedPhotPix);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TH2);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MArrayF);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MH);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MHPedestalCor),sizeof(MHPedestalCor),-1,323840,"Histogram to get signal auto correlation",G__setup_memvarMHPedestalCor,G__setup_memfuncMHPedestalCor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PedestalCintLN_MPedestalSubtract),sizeof(MPedestalSubtract),-1,323840,"Class to subtract pedestal including AB-noise",G__setup_memvarMPedestalSubtract,G__setup_memfuncMPedestalSubtract);
   G__get_linked_tagnum_fwd(&G__PedestalCintLN_MArrayS);
}
extern "C" void G__cpp_setupPedestalCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupPedestalCint()");
  G__set_cpp_environmentPedestalCint();
  G__cpp_setup_tagtablePedestalCint();

  G__cpp_setup_inheritancePedestalCint();

  G__cpp_setup_typetablePedestalCint();

  G__cpp_setup_memvarPedestalCint();

  G__cpp_setup_memfuncPedestalCint();
  G__cpp_setup_globalPedestalCint();
  G__cpp_setup_funcPedestalCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPedestalCint();
  return;
}
class G__cpp_setup_initPedestalCint {
  public:
    G__cpp_setup_initPedestalCint() { G__add_setup_func("PedestalCint",(G__incsetup)(&G__cpp_setupPedestalCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPedestalCint() { G__remove_setup_func("PedestalCint"); }
};
G__cpp_setup_initPedestalCint G__cpp_setup_initializerPedestalCint;

