//
// File generated by rootcint at Mon Nov 28 11:07:13 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME GuiCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GuiCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MHexagon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MHexagon(void *p = 0);
   static void *newArray_MHexagon(Long_t size, void *p);
   static void delete_MHexagon(void *p);
   static void deleteArray_MHexagon(void *p);
   static void destruct_MHexagon(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MHexagon*)
   {
      ::MHexagon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MHexagon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MHexagon", ::MHexagon::Class_Version(), "./MHexagon.h", 31,
                  typeid(::MHexagon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MHexagon::Dictionary, isa_proxy, 4,
                  sizeof(::MHexagon) );
      instance.SetNew(&new_MHexagon);
      instance.SetNewArray(&newArray_MHexagon);
      instance.SetDelete(&delete_MHexagon);
      instance.SetDeleteArray(&deleteArray_MHexagon);
      instance.SetDestructor(&destruct_MHexagon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MHexagon*)
   {
      return GenerateInitInstanceLocal((::MHexagon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MHexagon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MCamEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MCamEvent(void *p);
   static void deleteArray_MCamEvent(void *p);
   static void destruct_MCamEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MCamEvent*)
   {
      ::MCamEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MCamEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MCamEvent", ::MCamEvent::Class_Version(), "./MCamEvent.h", 11,
                  typeid(::MCamEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MCamEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MCamEvent) );
      instance.SetDelete(&delete_MCamEvent);
      instance.SetDeleteArray(&deleteArray_MCamEvent);
      instance.SetDestructor(&destruct_MCamEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MCamEvent*)
   {
      return GenerateInitInstanceLocal((::MCamEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MCamEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MHexagon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MHexagon::Class_Name()
{
   return "MHexagon";
}

//______________________________________________________________________________
const char *MHexagon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MHexagon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MHexagon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MHexagon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MHexagon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MCamEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCamEvent::Class_Name()
{
   return "MCamEvent";
}

//______________________________________________________________________________
const char *MCamEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MCamEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCamEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MCamEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCamEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MCamEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCamEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MCamEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MHexagon::Streamer(TBuffer &R__b)
{
   // Stream an object of class MHexagon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MHexagon::Class(),this);
   } else {
      R__b.WriteClassBuffer(MHexagon::Class(),this);
   }
}

//______________________________________________________________________________
void MHexagon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MHexagon.
      TClass *R__cl = ::MHexagon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD", &fD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      TObject::ShowMembers(R__insp);
      TAttLine::ShowMembers(R__insp);
      TAttFill::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MHexagon(void *p) {
      return  p ? new(p) ::MHexagon : new ::MHexagon;
   }
   static void *newArray_MHexagon(Long_t nElements, void *p) {
      return p ? new(p) ::MHexagon[nElements] : new ::MHexagon[nElements];
   }
   // Wrapper around operator delete
   static void delete_MHexagon(void *p) {
      delete ((::MHexagon*)p);
   }
   static void deleteArray_MHexagon(void *p) {
      delete [] ((::MHexagon*)p);
   }
   static void destruct_MHexagon(void *p) {
      typedef ::MHexagon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MHexagon

//______________________________________________________________________________
void MCamEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MCamEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MCamEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MCamEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MCamEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MCamEvent.
      TClass *R__cl = ::MCamEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MCamEvent(void *p) {
      delete ((::MCamEvent*)p);
   }
   static void deleteArray_MCamEvent(void *p) {
      delete [] ((::MCamEvent*)p);
   }
   static void destruct_MCamEvent(void *p) {
      typedef ::MCamEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MCamEvent

/********************************************************
* GuiCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGuiCint();

extern "C" void G__set_cpp_environmentGuiCint() {
  G__cpp_reset_tagtableGuiCint();
}
#include <new>
extern "C" int G__cpp_dllrevGuiCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MHexagon */
static int G__GuiCint_166_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagon[n];
     } else {
       p = new((void*) gvp) MHexagon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagon;
     } else {
       p = new((void*) gvp) MHexagon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GuiCintLN_MHexagon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagon* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagon(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) MHexagon(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MHexagon(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) MHexagon(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GuiCintLN_MHexagon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MHexagon(*(MHexagon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MHexagon(*(MHexagon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GuiCintLN_MHexagon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MHexagon*) G__getstructoffset())->DistancetoPrimitive((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHexagon*) G__getstructoffset())->DrawHexagon((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHexagon*) G__getstructoffset())->DrawHexagon((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MHexagon*) G__getstructoffset())->PaintHexagon((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MHexagon*) G__getstructoffset())->PaintHexagon((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagon*) G__getstructoffset())->SavePrimitive(*(ofstream*) libp->para[0].ref, (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MHexagon*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MHexagon*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MHexagon*) G__getstructoffset())->GetD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MHexagon*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MHexagon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MHexagon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MHexagon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MHexagon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MHexagon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_166_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MHexagon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MHexagon G__TMHexagon;
static int G__GuiCint_166_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MHexagon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MHexagon*) (soff+(sizeof(MHexagon)*i)))->~G__TMHexagon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MHexagon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MHexagon*) (soff))->~G__TMHexagon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GuiCint_166_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MHexagon* dest = (MHexagon*) G__getstructoffset();
   *dest = *(MHexagon*) libp->para[0].ref;
   const MHexagon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MCamEvent */
static int G__GuiCint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const MCamEvent*) G__getstructoffset())->GetPixelContent(*(Double_t*) G__Doubleref(&libp->para[0]), (Int_t) G__int(libp->para[1])
, *(MGeomCam*) libp->para[2].ref, (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const MCamEvent*) G__getstructoffset())->GetPixelContent(*(Double_t*) G__Doubleref(&libp->para[0]), (Int_t) G__int(libp->para[1])
, *(MGeomCam*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MCamEvent*) G__getstructoffset())->DrawPixelContent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCamEvent*) G__getstructoffset())->Init(*(MGeomCam*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCamEvent*) G__getstructoffset())->InitSize((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraMean(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraMean(*(MGeomCam*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraMedian(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraMedian(*(MGeomCam*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraRMS(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MCamEvent*) G__getstructoffset())->GetCameraRMS(*(MGeomCam*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TArrayD* pobj;
         const TArrayD xobj = ((const MCamEvent*) G__getstructoffset())->GetCameraStat(*(MGeomCam*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const TArrayD* pobj;
         const TArrayD xobj = ((const MCamEvent*) G__getstructoffset())->GetCameraStat(*(MGeomCam*) libp->para[0].ref);
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MCamEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCamEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MCamEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MCamEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MCamEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCamEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCamEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCamEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCamEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCamEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCamEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GuiCint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCamEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MCamEvent G__TMCamEvent;
static int G__GuiCint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MCamEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MCamEvent*) (soff+(sizeof(MCamEvent)*i)))->~G__TMCamEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MCamEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MCamEvent*) (soff))->~G__TMCamEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GuiCint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCamEvent* dest = (MCamEvent*) G__getstructoffset();
   *dest = *(MCamEvent*) libp->para[0].ref;
   const MCamEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MHexagon */

/* MCamEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGuiCint {
 public:
  G__Sizep2memfuncGuiCint(): p(&G__Sizep2memfuncGuiCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGuiCint::*p)();
};

size_t G__get_sizep2memfuncGuiCint()
{
  G__Sizep2memfuncGuiCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGuiCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GuiCintLN_MHexagon))) {
     MHexagon *G__Lderived;
     G__Lderived=(MHexagon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GuiCintLN_MHexagon),G__get_linked_tagnum(&G__GuiCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GuiCintLN_MHexagon),G__get_linked_tagnum(&G__GuiCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GuiCintLN_MHexagon),G__get_linked_tagnum(&G__GuiCintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGuiCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MHexagon */
static void G__setup_memvarMHexagon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GuiCintLN_MHexagon));
   { MHexagon *p; p=(MHexagon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"fgCos60=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"fgSin60=",0,(char*)NULL);
   G__memvar_setup((void*)(&MHexagon::fgDx),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"fgDx[6]=",0,"X coordinate of the six edges");
   G__memvar_setup((void*)(&MHexagon::fgDy),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"fgDy[6]=",0,"Y coordinate of the six edges");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX=",0,"X coordinate  of center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY=",0,"Y coordinate  of center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fD=",0,"diameter D or better distance between opposite sides");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi=",0,"Rotation angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GuiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MCamEvent */
static void G__setup_memvarMCamEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GuiCintLN_MCamEvent));
   { MCamEvent *p; p=(MCamEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GuiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGuiCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMHexagon(void) {
   /* MHexagon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GuiCintLN_MHexagon));
   G__memfunc_setup("MHexagon",791,G__GuiCint_166_0_1, 105, G__get_linked_tagnum(&G__GuiCintLN_MHexagon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHexagon",791,G__GuiCint_166_0_2, 105, G__get_linked_tagnum(&G__GuiCintLN_MHexagon), -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - d f - 'Float_t' 0 '0' phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MHexagon",791,G__GuiCint_166_0_3, 105, G__get_linked_tagnum(&G__GuiCintLN_MHexagon), -1, 0, 1, 1, 1, 0, "u 'MHexagon' - 11 - hexagon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - hexagon", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__GuiCint_166_0_5, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"f - 'Float_t' 0 - conv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawHexagon",1112,G__GuiCint_166_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - d f - 'Float_t' 0 '0' phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' Option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' Option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintHexagon",1222,G__GuiCint_166_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - d f - 'Float_t' 0 '0' phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' Option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,G__GuiCint_166_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX",376,G__GuiCint_166_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__GuiCint_166_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__GuiCint_166_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__GuiCint_166_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GuiCint_166_0_18, 85, G__get_linked_tagnum(&G__GuiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MHexagon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GuiCint_166_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GuiCint_166_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MHexagon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GuiCint_166_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MHexagon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GuiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GuiCint_166_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GuiCint_166_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GuiCint_166_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GuiCint_166_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MHexagon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GuiCint_166_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MHexagon::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MHexagon", 917, G__GuiCint_166_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GuiCint_166_0_31, (int) ('u'), G__get_linked_tagnum(&G__GuiCintLN_MHexagon), -1, 1, 1, 1, 1, 0, "u 'MHexagon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMCamEvent(void) {
   /* MCamEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GuiCintLN_MCamEvent));
   G__memfunc_setup("GetPixelContent",1533,G__GuiCint_170_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - val i - 'Int_t' 0 - idx "
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DrawPixelContent",1643,G__GuiCint_170_0_2, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Init",404,G__GuiCint_170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MGeomCam' - 11 - geom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSize",815,G__GuiCint_170_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - -", "Used by MGeomApply see Init()", (void*) NULL, 1);
   G__memfunc_setup("GetCameraMean",1258,G__GuiCint_170_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCameraMedian",1463,G__GuiCint_170_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCameraRMS",1115,G__GuiCint_170_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCameraStat",1285,G__GuiCint_170_0_8, 117, G__get_linked_tagnum(&G__GuiCintLN_TArrayD), -1, 0, 2, 1, 1, 8, 
"u 'MGeomCam' - 11 - cam i - 'Int_t' 0 '0' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GuiCint_170_0_9, 85, G__get_linked_tagnum(&G__GuiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MCamEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GuiCint_170_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCamEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GuiCint_170_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MCamEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GuiCint_170_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MCamEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GuiCint_170_0_13, 85, G__get_linked_tagnum(&G__GuiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GuiCint_170_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GuiCint_170_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GuiCint_170_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GuiCint_170_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCamEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GuiCint_170_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCamEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GuiCint_170_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCamEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GuiCint_170_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCamEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MCamEvent", 990, G__GuiCint_170_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GuiCint_170_0_22, (int) ('u'), G__get_linked_tagnum(&G__GuiCintLN_MCamEvent), -1, 1, 1, 1, 1, 0, "u 'MCamEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGuiCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGuiCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGuiCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GuiCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__GuiCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_MHexagon = { "MHexagon" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_MGeomCam = { "MGeomCam" , 99 , -1 };
G__linked_taginfo G__GuiCintLN_MCamEvent = { "MCamEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGuiCint() {
  G__GuiCintLN_TClass.tagnum = -1 ;
  G__GuiCintLN_TBuffer.tagnum = -1 ;
  G__GuiCintLN_TMemberInspector.tagnum = -1 ;
  G__GuiCintLN_TObject.tagnum = -1 ;
  G__GuiCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__GuiCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__GuiCintLN_TAttLine.tagnum = -1 ;
  G__GuiCintLN_TAttFill.tagnum = -1 ;
  G__GuiCintLN_MHexagon.tagnum = -1 ;
  G__GuiCintLN_TArrayD.tagnum = -1 ;
  G__GuiCintLN_MGeomCam.tagnum = -1 ;
  G__GuiCintLN_MCamEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGuiCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TAttFill);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GuiCintLN_MHexagon),sizeof(MHexagon),-1,324352,"A hexagon for MAGIC",G__setup_memvarMHexagon,G__setup_memfuncMHexagon);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__GuiCintLN_MGeomCam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GuiCintLN_MCamEvent),sizeof(MCamEvent),-1,263170,"A camera event",G__setup_memvarMCamEvent,G__setup_memfuncMCamEvent);
}
extern "C" void G__cpp_setupGuiCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupGuiCint()");
  G__set_cpp_environmentGuiCint();
  G__cpp_setup_tagtableGuiCint();

  G__cpp_setup_inheritanceGuiCint();

  G__cpp_setup_typetableGuiCint();

  G__cpp_setup_memvarGuiCint();

  G__cpp_setup_memfuncGuiCint();
  G__cpp_setup_globalGuiCint();
  G__cpp_setup_funcGuiCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGuiCint();
  return;
}
class G__cpp_setup_initGuiCint {
  public:
    G__cpp_setup_initGuiCint() { G__add_setup_func("GuiCint",(G__incsetup)(&G__cpp_setupGuiCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGuiCint() { G__remove_setup_func("GuiCint"); }
};
G__cpp_setup_initGuiCint G__cpp_setup_initializerGuiCint;

